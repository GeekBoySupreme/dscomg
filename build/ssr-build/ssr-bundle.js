module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "0" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		1: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] !== 0) {
/******/ 			var chunk = require("./" + ({}[chunkId]||chunkId) + ".chunk." + {"0":"a8fe8"}[chunkId] + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 		}
/******/ 		return Promise.resolve();
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// uncatched error handler for webpack runtime
/******/ 	__webpack_require__.oe = function(err) {
/******/ 		process.nextTick(function() {
/******/ 			throw err; // catch this error by using System.import().catch()
/******/ 		});
/******/ 	};
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "JkW7");
/******/ })
/************************************************************************/
/******/ ({

/***/ "+XMp":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Snackbar = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _get2 = _interopRequireDefault(__webpack_require__("J5U+"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _snackbar = __webpack_require__("DzRl");

var _preact = __webpack_require__("KM04");

var _MaterialComponent2 = _interopRequireDefault(__webpack_require__("uc5p"));

// TODO: Is that needed?
function shallowDiffers(a, b) {
  for (var i in a) {
    if (!(i in b)) {
      return true;
    }
  }

  for (var _i in b) {
    // noinspection JSUnfilteredForInLoop
    if (a[_i] !== b[_i]) {
      return true;
    }
  }

  return false;
}

var Snackbar =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Snackbar, _MaterialComponent);

  function Snackbar() {
    var _this;

    (0, _classCallCheck2.default)(this, Snackbar);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Snackbar).apply(this, arguments));
    _this.componentName = 'snackbar';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(Snackbar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _snackbar.MDCSnackbar(this.control);

        if (this.props.dismissesOnAction === undefined || this.props.dismissesOnAction === null) {
          this.MDComponent.dismissesOnAction = true;
        } else {
          this.MDComponent.dismissesOnAction = this.props.dismissesOnAction;
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(props, state) {
      return shallowDiffers(this.props, props) || shallowDiffers(this.state, state);
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", _extends({
        "aria-live": "assertive",
        "aria-atomic": "true",
        "aria-hidden": "true",
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-snackbar__text"
      }), (0, _preact.h)("div", {
        className: "mdc-snackbar__action-wrapper"
      }, (0, _preact.h)("button", {
        type: "button",
        className: "mdc-snackbar__action-button"
      })));
    }
  }]);
  return Snackbar;
}(_MaterialComponent2.default);

exports.Snackbar = Snackbar;
var _default = Snackbar;
exports.default = _default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "/QC5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribers", function() { return subscribers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentUrl", function() { return getCurrentUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "route", function() { return route; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Route", function() { return Route; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return Link; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__("KM04");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_preact__);


var EMPTY$1 = {};

function assign(obj, props) {
	// eslint-disable-next-line guard-for-in
	for (var i in props) {
		obj[i] = props[i];
	}
	return obj;
}

function exec(url, route, opts) {
	var reg = /(?:\?([^#]*))?(#.*)?$/,
	    c = url.match(reg),
	    matches = {},
	    ret;
	if (c && c[1]) {
		var p = c[1].split('&');
		for (var i = 0; i < p.length; i++) {
			var r = p[i].split('=');
			matches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));
		}
	}
	url = segmentize(url.replace(reg, ''));
	route = segmentize(route || '');
	var max = Math.max(url.length, route.length);
	for (var i$1 = 0; i$1 < max; i$1++) {
		if (route[i$1] && route[i$1].charAt(0) === ':') {
			var param = route[i$1].replace(/(^\:|[+*?]+$)/g, ''),
			    flags = (route[i$1].match(/[+*?]+$/) || EMPTY$1)[0] || '',
			    plus = ~flags.indexOf('+'),
			    star = ~flags.indexOf('*'),
			    val = url[i$1] || '';
			if (!val && !star && (flags.indexOf('?') < 0 || plus)) {
				ret = false;
				break;
			}
			matches[param] = decodeURIComponent(val);
			if (plus || star) {
				matches[param] = url.slice(i$1).map(decodeURIComponent).join('/');
				break;
			}
		} else if (route[i$1] !== url[i$1]) {
			ret = false;
			break;
		}
	}
	if (opts.default !== true && ret === false) {
		return false;
	}
	return matches;
}

function pathRankSort(a, b) {
	return a.rank < b.rank ? 1 : a.rank > b.rank ? -1 : a.index - b.index;
}

// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.
function prepareVNodeForRanking(vnode, index) {
	vnode.index = index;
	vnode.rank = rankChild(vnode);
	return vnode.attributes;
}

function segmentize(url) {
	return url.replace(/(^\/+|\/+$)/g, '').split('/');
}

function rankSegment(segment) {
	return segment.charAt(0) == ':' ? 1 + '*+?'.indexOf(segment.charAt(segment.length - 1)) || 4 : 5;
}

function rank(path) {
	return segmentize(path).map(rankSegment).join('');
}

function rankChild(vnode) {
	return vnode.attributes.default ? 0 : rank(vnode.attributes.path);
}

var customHistory = null;

var ROUTERS = [];

var subscribers = [];

var EMPTY = {};

function isPreactElement(node) {
	return node.__preactattr_ != null || typeof Symbol !== 'undefined' && node[Symbol.for('preactattr')] != null;
}

function setUrl(url, type) {
	if (type === void 0) type = 'push';

	if (customHistory && customHistory[type]) {
		customHistory[type](url);
	} else if (typeof history !== 'undefined' && history[type + 'State']) {
		history[type + 'State'](null, null, url);
	}
}

function getCurrentUrl() {
	var url;
	if (customHistory && customHistory.location) {
		url = customHistory.location;
	} else if (customHistory && customHistory.getCurrentLocation) {
		url = customHistory.getCurrentLocation();
	} else {
		url = typeof location !== 'undefined' ? location : EMPTY;
	}
	return "" + (url.pathname || '') + (url.search || '');
}

function route(url, replace) {
	if (replace === void 0) replace = false;

	if (typeof url !== 'string' && url.url) {
		replace = url.replace;
		url = url.url;
	}

	// only push URL into history if we can handle it
	if (canRoute(url)) {
		setUrl(url, replace ? 'replace' : 'push');
	}

	return routeTo(url);
}

/** Check if the given URL can be handled by any router instances. */
function canRoute(url) {
	for (var i = ROUTERS.length; i--;) {
		if (ROUTERS[i].canRoute(url)) {
			return true;
		}
	}
	return false;
}

/** Tell all router instances to handle the given URL.  */
function routeTo(url) {
	var didRoute = false;
	for (var i = 0; i < ROUTERS.length; i++) {
		if (ROUTERS[i].routeTo(url) === true) {
			didRoute = true;
		}
	}
	for (var i$1 = subscribers.length; i$1--;) {
		subscribers[i$1](url);
	}
	return didRoute;
}

function routeFromLink(node) {
	// only valid elements
	if (!node || !node.getAttribute) {
		return;
	}

	var href = node.getAttribute('href'),
	    target = node.getAttribute('target');

	// ignore links with targets and non-path URLs
	if (!href || !href.match(/^\//g) || target && !target.match(/^_?self$/i)) {
		return;
	}

	// attempt to route, if no match simply cede control to browser
	return route(href);
}

function handleLinkClick(e) {
	if (e.button == 0) {
		routeFromLink(e.currentTarget || e.target || this);
		return prevent(e);
	}
}

function prevent(e) {
	if (e) {
		if (e.stopImmediatePropagation) {
			e.stopImmediatePropagation();
		}
		if (e.stopPropagation) {
			e.stopPropagation();
		}
		e.preventDefault();
	}
	return false;
}

function delegateLinkHandler(e) {
	// ignore events the browser takes care of already:
	if (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button !== 0) {
		return;
	}

	var t = e.target;
	do {
		if (String(t.nodeName).toUpperCase() === 'A' && t.getAttribute('href') && isPreactElement(t)) {
			if (t.hasAttribute('native')) {
				return;
			}
			// if link is handled by the router, prevent browser defaults
			if (routeFromLink(t)) {
				return prevent(e);
			}
		}
	} while (t = t.parentNode);
}

var eventListenersInitialized = false;

function initEventListeners() {
	if (eventListenersInitialized) {
		return;
	}

	if (typeof addEventListener === 'function') {
		if (!customHistory) {
			addEventListener('popstate', function () {
				routeTo(getCurrentUrl());
			});
		}
		addEventListener('click', delegateLinkHandler);
	}
	eventListenersInitialized = true;
}

var Router = function (Component$$1) {
	function Router(props) {
		Component$$1.call(this, props);
		if (props.history) {
			customHistory = props.history;
		}

		this.state = {
			url: props.url || getCurrentUrl()
		};

		initEventListeners();
	}

	if (Component$$1) Router.__proto__ = Component$$1;
	Router.prototype = Object.create(Component$$1 && Component$$1.prototype);
	Router.prototype.constructor = Router;

	Router.prototype.shouldComponentUpdate = function shouldComponentUpdate(props) {
		if (props.static !== true) {
			return true;
		}
		return props.url !== this.props.url || props.onChange !== this.props.onChange;
	};

	/** Check if the given URL can be matched against any children */
	Router.prototype.canRoute = function canRoute(url) {
		return this.getMatchingChildren(this.props.children, url, false).length > 0;
	};

	/** Re-render children with a new URL to match against. */
	Router.prototype.routeTo = function routeTo(url) {
		this._didRoute = false;
		this.setState({ url: url });

		// if we're in the middle of an update, don't synchronously re-route.
		if (this.updating) {
			return this.canRoute(url);
		}

		this.forceUpdate();
		return this._didRoute;
	};

	Router.prototype.componentWillMount = function componentWillMount() {
		ROUTERS.push(this);
		this.updating = true;
	};

	Router.prototype.componentDidMount = function componentDidMount() {
		var this$1 = this;

		if (customHistory) {
			this.unlisten = customHistory.listen(function (location) {
				this$1.routeTo("" + (location.pathname || '') + (location.search || ''));
			});
		}
		this.updating = false;
	};

	Router.prototype.componentWillUnmount = function componentWillUnmount() {
		if (typeof this.unlisten === 'function') {
			this.unlisten();
		}
		ROUTERS.splice(ROUTERS.indexOf(this), 1);
	};

	Router.prototype.componentWillUpdate = function componentWillUpdate() {
		this.updating = true;
	};

	Router.prototype.componentDidUpdate = function componentDidUpdate() {
		this.updating = false;
	};

	Router.prototype.getMatchingChildren = function getMatchingChildren(children, url, invoke) {
		return children.filter(prepareVNodeForRanking).sort(pathRankSort).map(function (vnode) {
			var matches = exec(url, vnode.attributes.path, vnode.attributes);
			if (matches) {
				if (invoke !== false) {
					var newProps = { url: url, matches: matches };
					assign(newProps, matches);
					delete newProps.ref;
					delete newProps.key;
					return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["cloneElement"])(vnode, newProps);
				}
				return vnode;
			}
		}).filter(Boolean);
	};

	Router.prototype.render = function render(ref, ref$1) {
		var children = ref.children;
		var onChange = ref.onChange;
		var url = ref$1.url;

		var active = this.getMatchingChildren(children, url, true);

		var current = active[0] || null;
		this._didRoute = !!current;

		var previous = this.previousUrl;
		if (url !== previous) {
			this.previousUrl = url;
			if (typeof onChange === 'function') {
				onChange({
					router: this,
					url: url,
					previous: previous,
					active: active,
					current: current
				});
			}
		}

		return current;
	};

	return Router;
}(__WEBPACK_IMPORTED_MODULE_0_preact__["Component"]);

var Link = function Link(props) {
	return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])('a', assign({ onClick: handleLinkClick }, props));
};

var Route = function Route(props) {
	return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])(props.component, props);
};

Router.subscribers = subscribers;
Router.getCurrentUrl = getCurrentUrl;
Router.route = route;
Router.Router = Router;
Router.Route = Route;
Router.Link = Link;

/* harmony default export */ __webpack_exports__["default"] = (Router);
//# sourceMappingURL=preact-router.es.js.map

/***/ }),

/***/ "/aYh":
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__("UJE0");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;

/***/ }),

/***/ "0421":
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__("b9XL");

var assertThisInitialized = __webpack_require__("E7HD");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "0fcM":
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "4EMW":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* unused harmony export DataSnapshot */
/* unused harmony export Database */
/* unused harmony export OnDisconnect */
/* unused harmony export Query */
/* unused harmony export Reference */
/* unused harmony export ServerValue */
/* unused harmony export enableLogging */
/* unused harmony export registerDatabase */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__("VxYX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__("vCxL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_util__ = __webpack_require__("8Kxm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__firebase_logger__ = __webpack_require__("TUpU");
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Wraps a DOM Storage object and:
 * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.
 * - prefixes names with "firebase:" to avoid collisions with app data.
 *
 * We automatically (see storage.js) create two such wrappers, one for sessionStorage,
 * and one for localStorage.
 *
 * @constructor
 */var DOMStorageWrapper=/** @class */function(){/**
     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)
     */function DOMStorageWrapper(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.
this.prefix_='firebase:';}/**
     * @param {string} key The key to save the value under
     * @param {?Object} value The value being stored, or null to remove the key.
     */DOMStorageWrapper.prototype.set=function(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(value));}};/**
     * @param {string} key
     * @return {*} The value that was stored under this key, or null
     */DOMStorageWrapper.prototype.get=function(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["w" /* jsonEval */])(storedVal);}};/**
     * @param {string} key
     */DOMStorageWrapper.prototype.remove=function(key){this.domStorage_.removeItem(this.prefixedName_(key));};/**
     * @param {string} name
     * @return {string}
     */DOMStorageWrapper.prototype.prefixedName_=function(name){return this.prefix_+name;};DOMStorageWrapper.prototype.toString=function(){return this.domStorage_.toString();};return DOMStorageWrapper;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An in-memory storage implementation that matches the API of DOMStorageWrapper
 * (TODO: create interface for both to implement).
 *
 * @constructor
 */var MemoryStorage=/** @class */function(){function MemoryStorage(){this.cache_={};this.isInMemoryStorage=true;}MemoryStorage.prototype.set=function(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}};MemoryStorage.prototype.get=function(key){if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(this.cache_,key)){return this.cache_[key];}return null;};MemoryStorage.prototype.remove=function(key){delete this.cache_[key];};return MemoryStorage;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.
 * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change
 * to reflect this type
 *
 * @param {string} domStorageName Name of the underlying storage object
 *   (e.g. 'localStorage' or 'sessionStorage').
 * @return {?} Turning off type information until a common interface is defined.
 */var createStoragefor=function createStoragefor(domStorageName){try{// NOTE: just accessing "localStorage" or "window['localStorage']" may throw a security exception,
// so it must be inside the try/catch.
if(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works
var domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.
// TODO: log?
return new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var logClient=new __WEBPACK_IMPORTED_MODULE_3__firebase_logger__["b" /* Logger */]('@firebase/database');/**
 * Environment variable for enabling interaction with the Firebase Realtime Database
 * emulator. If set, the module will present the endpoint with a fake "owner" credential
 * (see EmulatorAuthTokenProvider) instead of one belonging to a real account.
 *
 * The expected format for this variable is '<HOST>:<PORT>'. The transfer protocol must be
 * omitted and will default to 'http'.
 */var FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';/**
 * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).
 * @type {function(): number} Generated ID.
 */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**
 * Sha1 hash of the input string
 * @param {!string} str The string to hash
 * @return {!string} The resulting hash
 */var sha1=function sha1(str){var utf8Bytes=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["B" /* stringToByteArray */])(str);var sha1=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["e" /* Sha1 */]();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return __WEBPACK_IMPORTED_MODULE_2__firebase_util__["h" /* base64 */].encodeByteArray(sha1Bytes);};/**
 * @param {...*} var_args
 * @return {string}
 * @private
 */var buildLogMessage_=function buildLogMessage_(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='';for(var i=0;i<var_args.length;i++){if(Array.isArray(var_args[i])||var_args[i]&&typeof var_args[i]==='object'&&typeof var_args[i].length==='number'){message+=buildLogMessage_.apply(null,var_args[i]);}else if(typeof var_args[i]==='object'){message+=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(var_args[i]);}else{message+=var_args[i];}message+=' ';}return message;};/**
 * Use this for all debug messages in Firebase.
 * @type {?function(string)}
 */var logger=null;/**
 * Flag to check for log availability on first log message
 * @type {boolean}
 * @private
 */var firstLog_=true;/**
 * The implementation of Firebase.enableLogging (defined here to break dependencies)
 * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger
 * @param {boolean=} persistent Whether or not to persist logging settings across refreshes
 */var enableLogging=function enableLogging(logger_,persistent){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!persistent||logger_===true||logger_===false,"Can't turn on custom loggers persistently.");if(logger_===true){logClient.logLevel=__WEBPACK_IMPORTED_MODULE_3__firebase_logger__["a" /* LogLevel */].VERBOSE;logger=logClient.log.bind(logClient);if(persistent)SessionStorage.set('logging_enabled',true);}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};/**
 *
 * @param {...(string|Arguments)} var_args
 */var log=function log(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true)enableLogging(true);}if(logger){var message=buildLogMessage_.apply(null,var_args);logger(message);}};/**
 * @param {!string} prefix
 * @return {function(...[*])}
 */var logWrapper=function logWrapper(prefix){return function(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}log.apply(void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])([prefix],var_args));};};/**
 * @param {...string} var_args
 */var error=function error(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])(var_args));logClient.error(message);};/**
 * @param {...string} var_args
 */var fatal=function fatal(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message="FIREBASE FATAL ERROR: "+buildLogMessage_.apply(void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])(var_args));logClient.error(message);throw new Error(message);};/**
 * @param {...*} var_args
 */var warn=function warn(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])(var_args));logClient.warn(message);};/**
 * Logs a warning if the containing page uses https. Called when a call to new Firebase
 * does not use https.
 */var warnIfPageIsSecure=function warnIfPageIsSecure(){// Be very careful accessing browser globals. Who knows what may or may not exist.
if(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**
 * Returns true if data is NaN, or +/- Infinity.
 * @param {*} data
 * @return {boolean}
 */var isInvalidJSONNumber=function isInvalidJSONNumber(data){return typeof data==='number'&&(data!=data||// NaN
data==Number.POSITIVE_INFINITY||data==Number.NEGATIVE_INFINITY);};/**
 * @param {function()} fn
 */var executeWhenDOMReady=function executeWhenDOMReady(fn){if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which
// fire before onload), but fall back to onload.
var called_1=false;var wrappedFn_1=function wrappedFn_1(){if(!document.body){setTimeout(wrappedFn_1,Math.floor(10));return;}if(!called_1){called_1=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn_1,false);// fallback to onload.
window.addEventListener('load',wrappedFn_1,false);}else if(document.attachEvent){// IE.
document.attachEvent('onreadystatechange',function(){if(document.readyState==='complete')wrappedFn_1();});// fallback to onload.
window.attachEvent('onload',wrappedFn_1);// jQuery has an extra hack for IE that we could employ (based on
// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.
// I'm hoping we don't need it.
}}};/**
 * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names
 * @type {!string}
 */var MIN_NAME='[MIN_NAME]';/**
 * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names
 * @type {!string}
 */var MAX_NAME='[MAX_NAME]';/**
 * Compares valid Firebase key names, plus min and max name
 * @param {!string} a
 * @param {!string} b
 * @return {!number}
 */var nameCompare=function nameCompare(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt==0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**
 * @param {!string} a
 * @param {!string} b
 * @return {!number} comparison result.
 */var stringCompare=function stringCompare(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};/**
 * @param {string} key
 * @param {Object} obj
 * @return {*}
 */var requireKey=function requireKey(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(obj));}};/**
 * @param {*} obj
 * @return {string}
 */var ObjectToUniqueKey=function ObjectToUniqueKey(obj){if(typeof obj!=='object'||obj===null)return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(obj);var keys=[];for(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.
keys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0)key+=',';key+=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**
 * Splits a string into a number of smaller segments of maximum size
 * @param {!string} str The string
 * @param {!number} segsize The maximum number of chars in the string.
 * @return {Array.<string>} The string, split into appropriately-sized chunks
 */var splitStringBySize=function splitStringBySize(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**
 * Apply a function to each (key, value) pair in an object or
 * apply a function to each (index, value) pair in an array
 * @param obj The object or array to iterate over
 * @param fn The function to apply
 */function each(obj,fn){for(var key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**
 * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)
 * I made one modification at the end and removed the NaN / Infinity
 * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.
 * @param {!number} v A double
 * @return {string}
 */var doubleToIEEE754String=function doubleToIEEE754String(v){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL
var ebits=11,fbits=52;var bias=(1<<ebits-1)-1,s,e,f,ln,i,bits,str;// Compute sign, exponent, fraction
// Skip NaN / Infinity handling --MJL.
if(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized
ln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized
e=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction
bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();str=bits.join('');// Return the data as a hex string. --MJL
var hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1)hexByte='0'+hexByte;hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**
 * Used to detect if we're in a Chrome content script (which executes in an
 * isolated environment where long-polling doesn't work).
 * @return {boolean}
 */var isChromeExtensionContentScript=function isChromeExtensionContentScript(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**
 * Used to detect if we're in a Windows 8 Store app.
 * @return {boolean}
 */var isWindowsStoreApp=function isWindowsStoreApp(){// Check for the presence of a couple WinRT globals
return typeof Windows==='object'&&typeof Windows.UI==='object';};/**
 * Converts a server error code to a Javascript Error
 * @param {!string} code
 * @param {!Query} query
 * @return {Error}
 */var errorForServerCode=function errorForServerCode(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code=='permission_denied'){reason="Client doesn't have permission to access the desired data.";}else if(code=='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query.path.toString()+': '+reason);error.code=code.toUpperCase();return error;};/**
 * Used to test for integer-looking strings
 * @type {RegExp}
 * @private
 */var INTEGER_REGEXP_=new RegExp('^-?\\d{1,10}$');/**
 * If the string contains a 32-bit integer, return it.  Else return null.
 * @param {!string} str
 * @return {?number}
 */var tryParseInt=function tryParseInt(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=-2147483648&&intVal<=2147483647){return intVal;}}return null;};/**
 * Helper to run some code but catch any exceptions and re-throw them later.
 * Useful for preventing user callbacks from breaking internal code.
 *
 * Re-throwing the exception from a setTimeout is a little evil, but it's very
 * convenient (we don't have to try to figure out when is a safe point to
 * re-throw it), and the behavior seems reasonable:
 *
 * * If you aren't pausing on exceptions, you get an error in the console with
 *   the correct stack trace.
 * * If you're pausing on all exceptions, the debugger will pause on your
 *   exception and then again when we rethrow it.
 * * If you're only pausing on uncaught exceptions, the debugger will only pause
 *   on us re-throwing it.
 *
 * @param {!function()} fn The code to guard.
 */var exceptionGuard=function exceptionGuard(fn){try{fn();}catch(e){// Re-throw exception when it's safe.
setTimeout(function(){// It used to be that "throw e" would result in a good console error with
// relevant context, but as of Chrome 39, you just get the firebase.js
// file/line number where we re-throw it, which is useless. So we log
// e.stack explicitly.
var stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**
 * @return {boolean} true if we think we're currently being crawled.
 */var beingCrawled=function beingCrawled(){var userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we
// believe to support JavaScript/AJAX rendering.
// NOTE: Google Webmaster Tools doesn't really belong, but their "This is how a visitor to your website
// would have seen the page" is flaky if we don't treat it as a crawler.
return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**
 * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.
 *
 * It is removed with clearTimeout() as normal.
 *
 * @param {Function} fn Function to run.
 * @param {number} time Milliseconds to wait before running.
 * @return {number|Object} The setTimeout() return value.
 */var setTimeoutNonBlocking=function setTimeoutNonBlocking(fn,time){var timeout=setTimeout(fn,time);if(typeof timeout==='object'&&timeout['unref']){timeout['unref']();}return timeout;};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An immutable object representing a parsed path.  It's immutable so that you
 * can pass them around to other functions without worrying about them changing
 * it.
 */var Path=/** @class */function(){/**
     * @param {string|Array.<string>} pathOrString Path string to parse,
     *      or another path, or the raw tokens array
     * @param {number=} pieceNum
     */function Path(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.
var copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}Object.defineProperty(Path,"Empty",{/**
         * Singleton to represent an empty path
         *
         * @const
         */get:function get(){return new Path('');},enumerable:true,configurable:true});Path.prototype.getFront=function(){if(this.pieceNum_>=this.pieces_.length)return null;return this.pieces_[this.pieceNum_];};/**
     * @return {number} The number of segments in this path
     */Path.prototype.getLength=function(){return this.pieces_.length-this.pieceNum_;};/**
     * @return {!Path}
     */Path.prototype.popFront=function(){var pieceNum=this.pieceNum_;if(pieceNum<this.pieces_.length){pieceNum++;}return new Path(this.pieces_,pieceNum);};/**
     * @return {?string}
     */Path.prototype.getBack=function(){if(this.pieceNum_<this.pieces_.length)return this.pieces_[this.pieces_.length-1];return null;};Path.prototype.toString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!=='')pathString+='/'+this.pieces_[i];}return pathString||'/';};Path.prototype.toUrlEncodedString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!=='')pathString+='/'+encodeURIComponent(String(this.pieces_[i]));}return pathString||'/';};/**
     * Shallow copy of the parts of the path.
     *
     * @param {number=} begin
     * @return {!Array<string>}
     */Path.prototype.slice=function(begin){if(begin===void 0){begin=0;}return this.pieces_.slice(this.pieceNum_+begin);};/**
     * @return {?Path}
     */Path.prototype.parent=function(){if(this.pieceNum_>=this.pieces_.length)return null;var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length-1;i++){pieces.push(this.pieces_[i]);}return new Path(pieces,0);};/**
     * @param {string|!Path} childPathObj
     * @return {!Path}
     */Path.prototype.child=function(childPathObj){var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length;i++){pieces.push(this.pieces_[i]);}if(childPathObj instanceof Path){for(var i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{var childPieces=childPathObj.split('/');for(var i=0;i<childPieces.length;i++){if(childPieces[i].length>0)pieces.push(childPieces[i]);}}return new Path(pieces,0);};/**
     * @return {boolean} True if there are no segments in this path
     */Path.prototype.isEmpty=function(){return this.pieceNum_>=this.pieces_.length;};/**
     * @param {!Path} outerPath
     * @param {!Path} innerPath
     * @return {!Path} The path from outerPath to innerPath
     */Path.relativePath=function(outerPath,innerPath){var outer=outerPath.getFront(),inner=innerPath.getFront();if(outer===null){return innerPath;}else if(outer===inner){return Path.relativePath(outerPath.popFront(),innerPath.popFront());}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}};/**
     * @param {!Path} left
     * @param {!Path} right
     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.
     */Path.comparePaths=function(left,right){var leftKeys=left.slice();var rightKeys=right.slice();for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0)return cmp;}if(leftKeys.length===rightKeys.length)return 0;return leftKeys.length<rightKeys.length?-1:1;};/**
     *
     * @param {Path} other
     * @return {boolean} true if paths are the same.
     */Path.prototype.equals=function(other){if(this.getLength()!==other.getLength()){return false;}for(var i=this.pieceNum_,j=other.pieceNum_;i<=this.pieces_.length;i++,j++){if(this.pieces_[i]!==other.pieces_[j]){return false;}}return true;};/**
     *
     * @param {!Path} other
     * @return {boolean} True if this path is a parent (or the same as) other
     */Path.prototype.contains=function(other){var i=this.pieceNum_;var j=other.pieceNum_;if(this.getLength()>other.getLength()){return false;}while(i<this.pieces_.length){if(this.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;};return Path;}();// end Path
/**
 * Dynamic (mutable) path used to count path lengths.
 *
 * This class is used to efficiently check paths for valid
 * length (in UTF8 bytes) and depth (used in path validation).
 *
 * Throws Error exception if path is ever invalid.
 *
 * The definition of a path always begins with '/'.
 */var ValidationPath=/** @class */function(){/**
     * @param {!Path} path Initial Path.
     * @param {string} errorPrefix_ Prefix for any error messages.
     */function ValidationPath(path,errorPrefix_){this.errorPrefix_=errorPrefix_;/** @type {!Array<string>} */this.parts_=path.slice();/** @type {number} Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["A" /* stringLength */])(this.parts_[i]);}this.checkValid_();}Object.defineProperty(ValidationPath,"MAX_PATH_DEPTH",{/** @const {number} Maximum key depth. */get:function get(){return 32;},enumerable:true,configurable:true});Object.defineProperty(ValidationPath,"MAX_PATH_LENGTH_BYTES",{/** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */get:function get(){return 768;},enumerable:true,configurable:true});/** @param {string} child */ValidationPath.prototype.push=function(child){// Count the needed '/'
if(this.parts_.length>0){this.byteLength_+=1;}this.parts_.push(child);this.byteLength_+=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["A" /* stringLength */])(child);this.checkValid_();};ValidationPath.prototype.pop=function(){var last=this.parts_.pop();this.byteLength_-=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["A" /* stringLength */])(last);// Un-count the previous '/'
if(this.parts_.length>0){this.byteLength_-=1;}};ValidationPath.prototype.checkValid_=function(){if(this.byteLength_>ValidationPath.MAX_PATH_LENGTH_BYTES){throw new Error(this.errorPrefix_+'has a key path longer than '+ValidationPath.MAX_PATH_LENGTH_BYTES+' bytes ('+this.byteLength_+').');}if(this.parts_.length>ValidationPath.MAX_PATH_DEPTH){throw new Error(this.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+ValidationPath.MAX_PATH_DEPTH+') or object contains a cycle '+this.toErrorString());}};/**
     * String for use in error messages - uses '.' notation for path.
     *
     * @return {string}
     */ValidationPath.prototype.toErrorString=function(){if(this.parts_.length==0){return'';}return"in property '"+this.parts_.join('.')+"'";};return ValidationPath;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';var FORGE_DOMAIN='firebaseio.com';var LAST_SESSION_PARAM='ls';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A class that holds metadata about a Repo object
 *
 * @constructor
 */var RepoInfo=/** @class */function(){/**
     * @param {string} host Hostname portion of the url for the repo
     * @param {boolean} secure Whether or not this repo is accessed over ssl
     * @param {string} namespace The namespace represented by the repo
     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).
     * @param {string=} persistenceKey Override the default session persistence storage key
     */function RepoInfo(host,secure,namespace,webSocketOnly,persistenceKey,includeNamespaceInQueryParams){if(persistenceKey===void 0){persistenceKey='';}if(includeNamespaceInQueryParams===void 0){includeNamespaceInQueryParams=false;}this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this.host=host.toLowerCase();this.domain=this.host.substr(this.host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this.host;}RepoInfo.prototype.needsQueryParam=function(){return this.host!==this.internalHost||this.isCustomHost()||this.includeNamespaceInQueryParams;};RepoInfo.prototype.isCacheableHost=function(){return this.internalHost.substr(0,2)==='s-';};RepoInfo.prototype.isDemoHost=function(){return this.domain==='firebaseio-demo.com';};RepoInfo.prototype.isCustomHost=function(){return this.domain!=='firebaseio.com'&&this.domain!=='firebaseio-demo.com';};RepoInfo.prototype.updateHost=function(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this.host,this.internalHost);}}};/**
     * Returns the websocket URL for this repo
     * @param {string} type of connection
     * @param {Object} params list
     * @return {string} The URL for this repo
     */RepoInfo.prototype.connectionURL=function(type,params){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(typeof type==='string','typeof type must == string');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(typeof params==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(this.secure?'wss://':'ws://')+this.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(this.secure?'https://':'http://')+this.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(this.needsQueryParam()){params['ns']=this.namespace;}var pairs=[];each(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');};/** @return {string} */RepoInfo.prototype.toString=function(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;};/** @return {string} */RepoInfo.prototype.toURLString=function(){return(this.secure?'https://':'http://')+this.host;};return RepoInfo;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param {!string} pathString
 * @return {string}
 */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**
 * @param {!string} queryString
 * @return {!{[key:string]:string}} key value hash
 */function decodeQuery(queryString){var e_1,_a;var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(queryString.split('&')),_c=_b.next();!_c.done;_c=_b.next()){var segment=_c.value;if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn("Invalid query segment '"+segment+"' in query '"+queryString+"'");}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return results;}/**
 *
 * @param {!string} dataURL
 * @return {{repoInfo: !RepoInfo, path: !Path}}
 */var parseRepoInfo=function parseRepoInfo(dataURL){var parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.
if((!namespace||namespace=='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,webSocketOnly,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!=parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};/**
 *
 * @param {!string} dataURL
 * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}
 */var parseDatabaseURL=function parseDatabaseURL(dataURL){// Default to empty strings in the event of a malformed string.
var host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.
var secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.
if(typeof dataURL==='string'){// Parse scheme.
var colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.
var slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd
pathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.
colonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=dataURL.length;}var parts=host.split('.');if(parts.length===3){// Normalize namespaces to lowercase to share storage / connection.
domain=parts[1];subdomain=parts[0].toLowerCase();// We interpret the subdomain of a 3 component URL as the namespace name.
namespace=subdomain;}else if(parts.length===2){domain=parts[0];}else if(parts[0].slice(0,colonInd).toLowerCase()==='localhost'){domain='localhost';}// Always treat the value of the `ns` as the namespace name if it is present.
if('ns'in queryParams){namespace=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString,namespace:namespace};};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * True for invalid Firebase keys
 * @type {RegExp}
 * @private
 */var INVALID_KEY_REGEX_=/[\[\].#$\/\u0000-\u001F\u007F]/;/**
 * True for invalid Firebase paths.
 * Allows '/' in paths.
 * @type {RegExp}
 * @private
 */var INVALID_PATH_REGEX_=/[\[\].#$\u0000-\u001F\u007F]/;/**
 * Maximum number of characters to allow in leaf value
 * @type {number}
 * @private
 */var MAX_LEAF_SIZE_=10*1024*1024;/**
 * @param {*} key
 * @return {boolean}
 */var isValidKey=function isValidKey(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};/**
 * @param {string} pathString
 * @return {boolean}
 */var isValidPathString=function isValidPathString(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};/**
 * @param {string} pathString
 * @return {boolean}
 */var isValidRootPathString=function isValidRootPathString(pathString){if(pathString){// Allow '/.info/' at the beginning.
pathString=pathString.replace(/^\/*\.info(\/|$)/,'/');}return isValidPathString(pathString);};/**
 * @param {*} priority
 * @return {boolean}
 */var isValidPriority=function isValidPriority(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(priority,'.sv');};/**
 * Pre-validate a datum passed as an argument to Firebase function.
 *
 * @param {string} fnName
 * @param {number} argumentNumber
 * @param {*} data
 * @param {!Path} path
 * @param {boolean} optional
 */var validateFirebaseDataArg=function validateFirebaseDataArg(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined)return;validateFirebaseData(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional),data,path);};/**
 * Validate a data object client-side before sending to server.
 *
 * @param {string} errorPrefix
 * @param {*} data
 * @param {!Path|!ValidationPath} path_
 */var validateFirebaseData=function validateFirebaseData(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+path.toErrorString());}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+path.toErrorString()+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+path.toErrorString());}// Check max leaf size, but try to avoid the utf8 conversion if we can.
if(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["A" /* stringLength */])(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+path.toErrorString()+" ('"+data.substring(0,50)+"...')");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON
// to save extra walking of large objects.
if(data&&typeof data==='object'){var hasDotValue_1=false;var hasActualChild_1=false;each(data,function(key,value){if(key==='.value'){hasDotValue_1=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild_1=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+path.toErrorString()+'.  Keys must be non-empty strings '+'and can\'t contain ".", "#", "$", "/", "[", or "]"');}}path.push(key);validateFirebaseData(errorPrefix,value,path);path.pop();});if(hasDotValue_1&&hasActualChild_1){throw new Error(errorPrefix+' contains ".value" child '+path.toErrorString()+' in addition to actual children.');}}};/**
 * Pre-validate paths passed in the firebase function.
 *
 * @param {string} errorPrefix
 * @param {Array<!Path>} mergePaths
 */var validateFirebaseMergePaths=function validateFirebaseMergePaths(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=curPath.slice();for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\'t contain ".", "#", "$", "/", "[", or "]"');}}}// Check that update keys are not descendants of each other.
// We rely on the property that sorting guarantees that ancestors come
// right before descendants.
mergePaths.sort(Path.comparePaths);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&prevPath.contains(curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**
 * pre-validate an object passed as an argument to firebase function (
 * must be an object - e.g. for firebase.update()).
 *
 * @param {string} fnName
 * @param {number} argumentNumber
 * @param {*} data
 * @param {!Path} path
 * @param {boolean} optional
 */var validateFirebaseMergeDataArg=function validateFirebaseMergeDataArg(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined)return;var errorPrefix$1=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional);if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}var mergePaths=[];each(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,path.child(curPath));if(curPath.getBack()==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+"contains an invalid value for '"+curPath.toString()+"', which must be a valid "+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};var validatePriority=function validatePriority(fnName,argumentNumber,priority,optional){if(optional&&priority===undefined)return;if(isInvalidJSONNumber(priority))throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');// Special case to allow importing data with a .sv.
if(!isValidPriority(priority))throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');};var validateEventType=function validateEventType(fnName,argumentNumber,eventType,optional){if(optional&&eventType===undefined)return;switch(eventType){case'value':case'child_added':case'child_removed':case'child_changed':case'child_moved':break;default:throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'must be a valid event type = "value", "child_added", "child_removed", '+'"child_changed", or "child_moved".');}};var validateKey=function validateKey(fnName,argumentNumber,key,optional){if(optional&&key===undefined)return;if(!isValidKey(key))throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'was an invalid key = "'+key+'".  Firebase keys must be non-empty strings and '+'can\'t contain ".", "#", "$", "/", "[", or "]").');};var validatePathString=function validatePathString(fnName,argumentNumber,pathString,optional){if(optional&&pathString===undefined)return;if(!isValidPathString(pathString))throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'was an invalid path = "'+pathString+'". Paths must be non-empty strings and '+'can\'t contain ".", "#", "$", "[", or "]"');};var validateRootPathString=function validateRootPathString(fnName,argumentNumber,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.
pathString=pathString.replace(/^\/*\.info(\/|$)/,'/');}validatePathString(fnName,argumentNumber,pathString,optional);};var validateWritablePath=function validateWritablePath(fnName,path){if(path.getFront()==='.info'){throw new Error(fnName+" failed = Can't modify data under /.info/");}};var validateUrl=function validateUrl(fnName,argumentNumber,parsedUrl){// TODO = Validate server better.
var pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,false)+'must be a valid firebase URL and '+'the path can\'t contain ".", "#", "$", "[", or "]".');}};var validateBoolean=function validateBoolean(fnName,argumentNumber,bool,optional){if(optional&&bool===undefined)return;if(typeof bool!=='boolean')throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,argumentNumber,optional)+'must be a boolean.');};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @constructor
 */var OnDisconnect=/** @class */function(){/**
     * @param {!Repo} repo_
     * @param {!Path} path_
     */function OnDisconnect(repo_,path_){this.repo_=repo_;this.path_=path_;}/**
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */OnDisconnect.prototype.cancel=function(onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('OnDisconnect.cancel',0,1,arguments.length);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('OnDisconnect.cancel',1,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo_.onDisconnectCancel(this.path_,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */OnDisconnect.prototype.remove=function(onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('OnDisconnect.remove',0,1,arguments.length);validateWritablePath('OnDisconnect.remove',this.path_);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('OnDisconnect.remove',1,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo_.onDisconnectSet(this.path_,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {*} value
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */OnDisconnect.prototype.set=function(value,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('OnDisconnect.set',1,2,arguments.length);validateWritablePath('OnDisconnect.set',this.path_);validateFirebaseDataArg('OnDisconnect.set',1,value,this.path_,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('OnDisconnect.set',2,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo_.onDisconnectSet(this.path_,value,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {*} value
     * @param {number|string|null} priority
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */OnDisconnect.prototype.setWithPriority=function(value,priority,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('OnDisconnect.setWithPriority',2,3,arguments.length);validateWritablePath('OnDisconnect.setWithPriority',this.path_);validateFirebaseDataArg('OnDisconnect.setWithPriority',1,value,this.path_,false);validatePriority('OnDisconnect.setWithPriority',2,priority,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('OnDisconnect.setWithPriority',3,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo_.onDisconnectSetWithPriority(this.path_,value,priority,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {!Object} objectToMerge
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */OnDisconnect.prototype.update=function(objectToMerge,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('OnDisconnect.update',1,2,arguments.length);validateWritablePath('OnDisconnect.update',this.path_);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the '+'existing data, or an Object with integer keys if you really do want to only update some of the children.');}validateFirebaseMergeDataArg('OnDisconnect.update',1,objectToMerge,this.path_,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('OnDisconnect.update',2,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo_.onDisconnectUpdate(this.path_,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};return OnDisconnect;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var TransactionResult=/** @class */function(){/**
     * A type for the resolve value of Firebase.transaction.
     * @constructor
     * @dict
     * @param {boolean} committed
     * @param {DataSnapshot} snapshot
     */function TransactionResult(committed,snapshot){this.committed=committed;this.snapshot=snapshot;}// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users
TransactionResult.prototype.toJSON=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('TransactionResult.toJSON',0,1,arguments.length);return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Fancy ID generator that creates 20-character string identifiers with the
 * following properties:
 *
 * 1. They're based on timestamp so that they sort *after* any existing ids.
 * 2. They contain 72-bits of random data after the timestamp so that IDs won't
 *    collide with other clients' IDs.
 * 3. They sort *lexicographically* (so the timestamp is converted to characters
 *    that will sort properly).
 * 4. They're monotonically increasing. Even if you generate more than one in
 *    the same timestamp, the latter ones will sort after the former ones. We do
 *    this by using the previous random bits but "incrementing" them by 1 (only
 *    in the case of a timestamp collision).
 */var nextPushId=function(){// Modeled after base64 web-safe chars, but ordered by ASCII.
var PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';// Timestamp of last push, used to prevent local collisions if you push twice
// in one ms.
var lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and
// appended to the timestamp to prevent collisions with other clients. We
// store the last characters we generated because in the event of a collision,
// we'll use those same characters except "incremented" by one.
var lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose
// the upper bits.
now=Math.floor(now/64);}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random
// number, except incremented by 1.
for(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(id.length===20,'nextPushId: Length should be 20.');return id;};}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 *
 * @param {!string} name
 * @param {!Node} node
 * @constructor
 * @struct
 */var NamedNode=/** @class */function(){function NamedNode(name,node){this.name=name;this.node=node;}/**
     *
     * @param {!string} name
     * @param {!Node} node
     * @return {NamedNode}
     */NamedNode.Wrap=function(name,node){return new NamedNode(name,node);};return NamedNode;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 *
 * @constructor
 */var Index=/** @class */function(){function Index(){}/**
     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for
     * this index
     */Index.prototype.getCompare=function(){return this.compare.bind(this);};/**
     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,
     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.
     *
     * @param {!Node} oldNode
     * @param {!Node} newNode
     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode
     */Index.prototype.indexedValueChanged=function(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;};/**
     * @return {!NamedNode} a node wrapper that will sort equal to or less than
     * any other node wrapper, using this index
     */Index.prototype.minPost=function(){return NamedNode.MIN;};return Index;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var __EMPTY_NODE;var KeyIndex=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(KeyIndex,_super);function KeyIndex(){return _super!==null&&_super.apply(this,arguments)||this;}Object.defineProperty(KeyIndex,"__EMPTY_NODE",{get:function get(){return __EMPTY_NODE;},set:function set(val){__EMPTY_NODE=val;},enumerable:true,configurable:true});/**
     * @inheritDoc
     */KeyIndex.prototype.compare=function(a,b){return nameCompare(a.name,b.name);};/**
     * @inheritDoc
     */KeyIndex.prototype.isDefinedOn=function(node){// We could probably return true here (since every node has a key), but it's never called
// so just leaving unimplemented for now.
throw Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["g" /* assertionError */])('KeyIndex.isDefinedOn not expected to be called.');};/**
     * @inheritDoc
     */KeyIndex.prototype.indexedValueChanged=function(oldNode,newNode){return false;// The key for a node never changes.
};/**
     * @inheritDoc
     */KeyIndex.prototype.minPost=function(){return NamedNode.MIN;};/**
     * @inheritDoc
     */KeyIndex.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but
// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.
return new NamedNode(MAX_NAME,__EMPTY_NODE);};/**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */KeyIndex.prototype.makePost=function(indexValue,name){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.
return new NamedNode(indexValue,__EMPTY_NODE);};/**
     * @return {!string} String representation for inclusion in a query spec
     */KeyIndex.prototype.toString=function(){return'.key';};return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var MAX_NODE;function setMaxNode(val){MAX_NODE=val;}/**
 * @param {(!string|!number)} priority
 * @return {!string}
 */var priorityHashText=function priorityHashText(priority){if(typeof priority==='number')return'number:'+doubleToIEEE754String(priority);else return'string:'+priority;};/**
 * Validates that a priority snapshot Node is valid.
 *
 * @param {!Node} priorityNode
 */var validatePriorityNode=function validatePriorityNode(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(typeof val==='string'||typeof val==='number'||typeof val==='object'&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(val,'.sv'),'Priority must be a string or number.');}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(priorityNode===MAX_NODE||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.
Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(priorityNode===MAX_NODE||priorityNode.getPriority().isEmpty(),"Priority nodes can't have a priority of their own.");};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var __childrenNodeConstructor;/**
 * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It
 * implements Node and stores the value of the node (a string,
 * number, or boolean) accessible via getValue().
 */var LeafNode=/** @class */function(){/**
     * @implements {Node}
     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.
     *                                         The object type is possible in the event of a deferred value
     * @param {!Node=} priorityNode_ The priority of this node.
     */function LeafNode(value_,priorityNode_){if(priorityNode_===void 0){priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE;}this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.value_!==undefined&&this.value_!==null,"LeafNode shouldn't be created with null/undefined value.");validatePriorityNode(this.priorityNode_);}Object.defineProperty(LeafNode,"__childrenNodeConstructor",{get:function get(){return __childrenNodeConstructor;},set:function set(val){__childrenNodeConstructor=val;},enumerable:true,configurable:true});/** @inheritDoc */LeafNode.prototype.isLeafNode=function(){return true;};/** @inheritDoc */LeafNode.prototype.getPriority=function(){return this.priorityNode_;};/** @inheritDoc */LeafNode.prototype.updatePriority=function(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);};/** @inheritDoc */LeafNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child
if(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/** @inheritDoc */LeafNode.prototype.getChild=function(path){if(path.isEmpty()){return this;}else if(path.getFront()==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/**
     * @inheritDoc
     */LeafNode.prototype.hasChild=function(){return false;};/** @inheritDoc */LeafNode.prototype.getPredecessorChildName=function(childName,childNode){return null;};/** @inheritDoc */LeafNode.prototype.updateImmediateChild=function(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}};/** @inheritDoc */LeafNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(front!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(),newChildNode));}};/** @inheritDoc */LeafNode.prototype.isEmpty=function(){return false;};/** @inheritDoc */LeafNode.prototype.numChildren=function(){return 0;};/** @inheritDoc */LeafNode.prototype.forEachChild=function(index,action){return false;};/**
     * @inheritDoc
     */LeafNode.prototype.val=function(exportFormat){if(exportFormat&&!this.getPriority().isEmpty())return{'.value':this.getValue(),'.priority':this.getPriority().val()};else return this.getValue();};/** @inheritDoc */LeafNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty())toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';var type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;};/**
     * Returns the value of the leaf node.
     * @return {Object|string|number|boolean} The value of the node.
     */LeafNode.prototype.getValue=function(){return this.value_;};/**
     * @inheritDoc
     */LeafNode.prototype.compareTo=function(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}};/**
     * Comparison specifically for two leaf nodes
     * @param {!LeafNode} otherLeaf
     * @return {!number}
     * @private
     */LeafNode.prototype.compareToLeafNode_=function(otherLeaf){var otherLeafType=typeof otherLeaf.value_;var thisLeafType=typeof this.value_;var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(otherIndex>=0,'Unknown leaf type: '+otherLeafType);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values
if(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...
return 0;}else{// Note that this works because true > false, all others are number or string comparisons
if(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}};/**
     * @inheritDoc
     */LeafNode.prototype.withIndex=function(){return this;};/**
     * @inheritDoc
     */LeafNode.prototype.isIndexed=function(){return true;};/**
     * @inheritDoc
     */LeafNode.prototype.equals=function(other){/**
         * @inheritDoc
         */if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}};/**
     * The sort order for comparing leaf nodes of different types. If two leaf nodes have
     * the same type, the comparison falls back to their value
     * @type {Array.<!string>}
     * @const
     */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];return LeafNode;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var nodeFromJSON;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON=val;}function setMaxNode$1(val){MAX_NODE$1=val;}/**
 * @constructor
 * @extends {Index}
 * @private
 */var PriorityIndex=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(PriorityIndex,_super);function PriorityIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**
     * @inheritDoc
     */PriorityIndex.prototype.compare=function(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**
     * @inheritDoc
     */PriorityIndex.prototype.isDefinedOn=function(node){return!node.getPriority().isEmpty();};/**
     * @inheritDoc
     */PriorityIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());};/**
     * @inheritDoc
     */PriorityIndex.prototype.minPost=function(){return NamedNode.MIN;};/**
     * @inheritDoc
     */PriorityIndex.prototype.maxPost=function(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));};/**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */PriorityIndex.prototype.makePost=function(indexValue,name){var priorityNode=nodeFromJSON(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));};/**
     * @return {!string} String representation for inclusion in a query spec
     */PriorityIndex.prototype.toString=function(){return'.priority';};return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An iterator over an LLRBNode.
 */var SortedMapIterator=/** @class */function(){/**
     * @template K, V, T
     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.
     * @param {?K} startKey
     * @param {function(K, K): number} comparator
     * @param {boolean} isReverse_ Whether or not to iterate in reverse
     * @param {(function(K, V):T)=} resultGenerator_
     */function SortedMapIterator(node,startKey,comparator,isReverse_,resultGenerator_){if(resultGenerator_===void 0){resultGenerator_=null;}this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;/** @private
         * @type {Array.<!LLRBNode>}
         */this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse
if(isReverse_)cmp*=-1;if(cmp<0){// This node is less than our start key. ignore it
if(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;
this.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one
this.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){if(this.nodeStack_.length===0)return null;var node=this.nodeStack_.pop();var result;if(this.resultGenerator_)result=this.resultGenerator_(node.key,node.value);else result={key:node.key,value:node.value};if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack_.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack_.length===0)return null;var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}};return SortedMapIterator;}();/**
 * Represents a node in a Left-leaning Red-Black tree.
 */var LLRBNode=/** @class */function(){/**
     * @template K, V
     * @param {!K} key Key associated with this node.
     * @param {!V} value Value associated with this node.
     * @param {?boolean} color Whether this node is red.
     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.
     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.
     */function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**
     * Returns a copy of the current node, optionally replacing pieces of it.
     *
     * @param {?K} key New key for the node, or null.
     * @param {?V} value New value for the node, or null.
     * @param {?boolean} color New color for the node, or null.
     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.
     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.
     * @return {!LLRBNode} The node copy.
     */LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};/**
     * @return {number} The total number of nodes in the tree.
     */LLRBNode.prototype.count=function(){return this.left.count()+1+this.right.count();};/**
     * @return {boolean} True if the tree is empty.
     */LLRBNode.prototype.isEmpty=function(){return false;};/**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V):*} action Callback function to be called for each
     *   node.  If it returns true, traversal is aborted.
     * @return {*} The first truthy value returned by action, or the last falsey
     *   value returned by action
     */LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||action(this.key,this.value)||this.right.inorderTraversal(action);};/**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param {function(!Object, !Object)} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {*} True if traversal was aborted.
     */LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};/**
     * @return {!Object} The minimum node in the tree.
     * @private
     */LLRBNode.prototype.min_=function(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}};/**
     * @return {!K} The maximum key in the tree.
     */LLRBNode.prototype.minKey=function(){return this.min_().key;};/**
     * @return {!K} The maximum key in the tree.
     */LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};/**
     *
     * @param {!Object} key Key to insert.
     * @param {!Object} value Value to insert.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode} New tree, with the key/value added.
     */LLRBNode.prototype.insert=function(key,value,comparator){var cmp,n;n=this;cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();};/**
     * @private
     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.
     */LLRBNode.prototype.removeMin_=function(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_())n=n.moveRedLeft_();n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();};/**
     * @param {!Object} key The key of the item to remove.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.
     */LLRBNode.prototype.remove=function(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_())n=n.rotateRight_();if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();};/**
     * @private
     * @return {boolean} Whether this is a RED node.
     */LLRBNode.prototype.isRed_=function(){return this.color;};/**
     * @private
     * @return {!LLRBNode} New tree after performing any needed rotations.
     */LLRBNode.prototype.fixUp_=function(){var n=this;if(n.right.isRed_()&&!n.left.isRed_())n=n.rotateLeft_();if(n.left.isRed_()&&n.left.left.isRed_())n=n.rotateRight_();if(n.left.isRed_()&&n.right.isRed_())n=n.colorFlip_();return n;};/**
     * @private
     * @return {!LLRBNode} New tree, after moveRedLeft.
     */LLRBNode.prototype.moveRedLeft_=function(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;};/**
     * @private
     * @return {!LLRBNode} New tree, after moveRedRight.
     */LLRBNode.prototype.moveRedRight_=function(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;};/**
     * @private
     * @return {!LLRBNode} New tree, after rotateLeft.
     */LLRBNode.prototype.rotateLeft_=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};/**
     * @private
     * @return {!LLRBNode} New tree, after rotateRight.
     */LLRBNode.prototype.rotateRight_=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};/**
     * @private
     * @return {!LLRBNode} New tree, after colorFlip.
     */LLRBNode.prototype.colorFlip_=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};/**
     * For testing.
     *
     * @private
     * @return {boolean} True if all is well.
     */LLRBNode.prototype.checkMaxDepth_=function(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;};/**
     * @private
     * @return {number} Not sure what this returns exactly. :-).
     */LLRBNode.prototype.check_=function(){var blackDepth;if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}};LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();/**
 * Represents an empty node (a leaf node in the Red-Black Tree).
 */var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){}/**
     * Returns a copy of the current node.
     *
     * @return {!LLRBEmptyNode} The node copy.
     */LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};/**
     * Returns a copy of the tree, with the specified key/value added.
     *
     * @param {!K} key Key to be added.
     * @param {!V} value Value to be added.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode} New tree, with item added.
     */LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value,null);};/**
     * Returns a copy of the tree, with the specified key removed.
     *
     * @param {!K} key The key to remove.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBEmptyNode} New tree, with item removed.
     */LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};/**
     * @return {number} The total number of nodes in the tree.
     */LLRBEmptyNode.prototype.count=function(){return 0;};/**
     * @return {boolean} True if the tree is empty.
     */LLRBEmptyNode.prototype.isEmpty=function(){return true;};/**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V):*} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {boolean} True if traversal was aborted.
     */LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};/**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V)} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {boolean} True if traversal was aborted.
     */LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};/**
     * @return {null}
     */LLRBEmptyNode.prototype.minKey=function(){return null;};/**
     * @return {null}
     */LLRBEmptyNode.prototype.maxKey=function(){return null;};/**
     * @private
     * @return {number} Not sure what this returns exactly. :-).
     */LLRBEmptyNode.prototype.check_=function(){return 0;};/**
     * @private
     * @return {boolean} Whether this node is red.
     */LLRBEmptyNode.prototype.isRed_=function(){return false;};return LLRBEmptyNode;}();/**
 * An immutable sorted map implementation, based on a Left-leaning Red-Black
 * tree.
 */var SortedMap=/** @class */function(){/**
     * @template K, V
     * @param {function(K, K):number} comparator_ Key comparator.
     * @param {LLRBNode=} root_ (Optional) Root node for the map.
     */function SortedMap(comparator_,root_){if(root_===void 0){root_=SortedMap.EMPTY_NODE;}this.comparator_=comparator_;this.root_=root_;}/**
     * Returns a copy of the map, with the specified key/value added or replaced.
     * (TODO: We should perhaps rename this method to 'put')
     *
     * @param {!K} key Key to be added.
     * @param {!V} value Value to be added.
     * @return {!SortedMap.<K, V>} New map, with item added.
     */SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**
     * Returns a copy of the map, with the specified key removed.
     *
     * @param {!K} key The key to remove.
     * @return {!SortedMap.<K, V>} New map, with item removed.
     */SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**
     * Returns the value of the node with the given key, or null.
     *
     * @param {!K} key The key to look up.
     * @return {?V} The value of the node with the given key, or null if the
     * key doesn't exist.
     */SortedMap.prototype.get=function(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};/**
     * Returns the key of the item *before* the specified key, or null if key is the first item.
     * @param {K} key The key to find the predecessor of
     * @return {?K} The predecessor key.
     */SortedMap.prototype.getPredecessorKey=function(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.
}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');};/**
     * @return {boolean} True if the map is empty.
     */SortedMap.prototype.isEmpty=function(){return this.root_.isEmpty();};/**
     * @return {number} The total number of nodes in the map.
     */SortedMap.prototype.count=function(){return this.root_.count();};/**
     * @return {?K} The minimum key in the map.
     */SortedMap.prototype.minKey=function(){return this.root_.minKey();};/**
     * @return {?K} The maximum key in the map.
     */SortedMap.prototype.maxKey=function(){return this.root_.maxKey();};/**
     * Traverses the map in key order and calls the specified action function
     * for each key/value pair.
     *
     * @param {function(!K, !V):*} action Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @return {*} The first truthy value returned by action, or the last falsey
     *   value returned by action
     */SortedMap.prototype.inorderTraversal=function(action){return this.root_.inorderTraversal(action);};/**
     * Traverses the map in reverse key order and calls the specified action function
     * for each key/value pair.
     *
     * @param {function(!Object, !Object)} action Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @return {*} True if the traversal was aborted.
     */SortedMap.prototype.reverseTraversal=function(action){return this.root_.reverseTraversal(action);};/**
     * Returns an iterator over the SortedMap.
     * @template T
     * @param {(function(K, V):T)=} resultGenerator
     * @return {SortedMapIterator.<K, V, T>} The iterator.
     */SortedMap.prototype.getIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);};SortedMap.prototype.getIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);};SortedMap.prototype.getReverseIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);};SortedMap.prototype.getReverseIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);};/**
     * Always use the same empty node, to reduce memory.
     * @const
     */SortedMap.EMPTY_NODE=new LLRBEmptyNode();return SortedMap;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var LOG_2=Math.log(2);/**
 * @constructor
 */var Base12Num=/** @class */function(){/**
     * @param {number} length
     */function Base12Num(length){var logBase2=function logBase2(num){return parseInt(Math.log(num)/LOG_2,10);};var bitMask=function bitMask(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}/**
     * @return {boolean}
     */Base12Num.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage
var result=!(this.bits_&0x1<<this.current_);this.current_--;return result;};return Base12Num;}();/**
 * Takes a list of child nodes and constructs a SortedSet using the given comparison
 * function
 *
 * Uses the algorithm described in the paper linked here:
 * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458
 *
 * @template K, V
 * @param {Array.<!NamedNode>} childList Unsorted list of children
 * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used
 * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's
 *                                                        type is not NamedNode
 * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map
 * @return {SortedMap.<K, V>}
 */var buildChildSet=function buildChildSet(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function buildBalancedTree(low,high){var length=high-low;var namedNode;var key;if(length==0){return null;}else if(length==1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{var middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function buildFrom12Array(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function buildPennant(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function attachPennant(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))
var chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2
buildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);return new SortedMap(mapSortFn||cmp,root);};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var _defaultIndexMap;var fallbackObject={};var IndexMap=/** @class */function(){function IndexMap(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}Object.defineProperty(IndexMap,"Default",{/**
         * The default IndexMap for nodes without a priority
         */get:function get(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;},enumerable:true,configurable:true});IndexMap.prototype.get=function(indexKey){var sortedMap=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(this.indexes_,indexKey);if(!sortedMap)throw new Error('No index defined for '+indexKey);if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the
// regular child map
return null;}};IndexMap.prototype.hasIndex=function(indexDefinition){return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(this.indexSet_,indexDefinition.toString());};IndexMap.prototype.addIndex=function(indexDefinition,existingChildren){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(indexDefinition!==KEY_INDEX,"KeyIndex always exists and isn't meant to be added to the IndexMap.");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["a" /* __assign */])({},this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["a" /* __assign */])({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);};/**
     * Ensure that this node is properly tracked in any indexes that we're maintaining
     */IndexMap.prototype.addToIndexes=function(namedNode,existingChildren){var _this=this;var newIndexes=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["x" /* map */])(this.indexes_,function(indexedChildren,indexName){var index=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(_this.indexSet_,indexName);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything
if(index.isDefinedOn(namedNode.node)){// We need to build this index
var childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!=namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback
return fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);};/**
     * Create a new IndexMap instance with the given value removed
     */IndexMap.prototype.removeFromIndexes=function(namedNode,existingChildren){var newIndexes=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["x" /* map */])(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case
return indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child
return indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);};return IndexMap;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// TODO: For memory savings, don't store priorityNode_ if it's empty.
var EMPTY_NODE;/**
 * ChildrenNode is a class for storing internal nodes in a DataSnapshot
 * (i.e. nodes with children).  It implements Node and stores the
 * list of children in the children property, sorted by child name.
 *
 * @constructor
 * @implements {Node}
 */var ChildrenNode=/** @class */function(){/**
     *
     * @param {!SortedMap.<string, !Node>} children_ List of children
     * of this node..
     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).
     * @param {!IndexMap} indexMap_
     */function ChildrenNode(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**
         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use
         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own
         * class instead of an empty ChildrenNode.
         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}Object.defineProperty(ChildrenNode,"EMPTY_NODE",{get:function get(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));},enumerable:true,configurable:true});/** @inheritDoc */ChildrenNode.prototype.isLeafNode=function(){return false;};/** @inheritDoc */ChildrenNode.prototype.getPriority=function(){return this.priorityNode_||EMPTY_NODE;};/** @inheritDoc */ChildrenNode.prototype.updatePriority=function(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes
return this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}};/** @inheritDoc */ChildrenNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child
if(childName==='.priority'){return this.getPriority();}else{var child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}};/** @inheritDoc */ChildrenNode.prototype.getChild=function(path){var front=path.getFront();if(front===null)return this;return this.getImmediateChild(front).getChild(path.popFront());};/** @inheritDoc */ChildrenNode.prototype.hasChild=function(childName){return this.children_.get(childName)!==null;};/** @inheritDoc */ChildrenNode.prototype.updateImmediateChild=function(childName,newChildNode){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren=void 0,newIndexMap=void 0,newPriority=void 0;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}};/** @inheritDoc */ChildrenNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(path.getFront()!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(path.popFront(),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}};/** @inheritDoc */ChildrenNode.prototype.isEmpty=function(){return this.children_.isEmpty();};/** @inheritDoc */ChildrenNode.prototype.numChildren=function(){return this.children_.count();};/** @inheritDoc */ChildrenNode.prototype.val=function(exportFormat){if(this.isEmpty())return null;var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.
var array=[];for(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}};/** @inheritDoc */ChildrenNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash_1='';if(!this.getPriority().isEmpty())toHash_1+='priority:'+priorityHashText(this.getPriority().val())+':';this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!=='')toHash_1+=':'+key+':'+childHash;});this.lazyHash_=toHash_1===''?'':sha1(toHash_1);}return this.lazyHash_;};/** @inheritDoc */ChildrenNode.prototype.getPredecessorChildName=function(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}};/**
     * @param {!Index} indexDefinition
     * @return {?string}
     */ChildrenNode.prototype.getFirstChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}};/**
     * @param {!Index} indexDefinition
     * @return {?NamedNode}
     */ChildrenNode.prototype.getFirstChild=function(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}};/**
     * Given an index, return the key name of the largest value we have, according to that index
     * @param {!Index} indexDefinition
     * @return {?string}
     */ChildrenNode.prototype.getLastChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}};/**
     * @param {!Index} indexDefinition
     * @return {?NamedNode}
     */ChildrenNode.prototype.getLastChild=function(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}};/**
     * @inheritDoc
     */ChildrenNode.prototype.forEachChild=function(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}};/**
     * @param {!Index} indexDefinition
     * @return {SortedMapIterator}
     */ChildrenNode.prototype.getIterator=function(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);};/**
     *
     * @param {!NamedNode} startPost
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */ChildrenNode.prototype.getIteratorFrom=function(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}};/**
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */ChildrenNode.prototype.getReverseIterator=function(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);};/**
     * @param {!NamedNode} endPost
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */ChildrenNode.prototype.getReverseIteratorFrom=function(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}};/**
     * @inheritDoc
     */ChildrenNode.prototype.compareTo=function(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE$2){return-1;}else{// Must be another node with children.
return 0;}};/**
     * @inheritDoc
     */ChildrenNode.prototype.withIndex=function(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}};/**
     * @inheritDoc
     */ChildrenNode.prototype.isIndexed=function(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);};/**
     * @inheritDoc
     */ChildrenNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}};/**
     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used
     * instead.
     *
     * @private
     * @param {!Index} indexDefinition
     * @return {?SortedMap.<NamedNode, Node>}
     */ChildrenNode.prototype.resolveIndex_=function(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}};/**
     * @private
     * @type {RegExp}
     */ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\d*)$/;return ChildrenNode;}();/**
 * @constructor
 * @extends {ChildrenNode}
 * @private
 */var MaxNode=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(MaxNode,_super);function MaxNode(){return _super.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default)||this;}MaxNode.prototype.compareTo=function(other){if(other===this){return 0;}else{return 1;}};MaxNode.prototype.equals=function(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself
return other===this;};MaxNode.prototype.getPriority=function(){return this;};MaxNode.prototype.getImmediateChild=function(childName){return ChildrenNode.EMPTY_NODE;};MaxNode.prototype.isEmpty=function(){return false;};return MaxNode;}(ChildrenNode);/**
 * Marker that will sort higher than any other snapshot.
 * @type {!MAX_NODE}
 * @const
 */var MAX_NODE$2=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE$2)}});/**
 * Reference Extensions
 */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode(MAX_NODE$2);setMaxNode$1(MAX_NODE$2);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var USE_HINZE=true;/**
 * Constructs a snapshot node representing the passed JSON and returns it.
 * @param {*} json JSON to create a node for.
 * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the
 * passed JSON contains a .priority property.
 * @return {!Node}
 */function nodeFromJSON$1(json,priority){if(priority===void 0){priority=null;}if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects
if(typeof json!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON$1(priority));}if(!(json instanceof Array)&&USE_HINZE){var children_1=[];var childrenHavePriority_1=false;var hinzeJsonObj=json;each(hinzeJsonObj,function(key,child){if(key.substring(0,1)!=='.'){// Ignore metadata nodes
var childNode=nodeFromJSON$1(child);if(!childNode.isEmpty()){childrenHavePriority_1=childrenHavePriority_1||!childNode.getPriority().isEmpty();children_1.push(new NamedNode(key,childNode));}}});if(children_1.length==0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children_1,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority_1){var sortedChildSet=buildChildSet(children_1,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON$1(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON$1(priority),IndexMap.Default);}}else{var node_1=ChildrenNode.EMPTY_NODE;each(json,function(key,childData){if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.
var childNode=nodeFromJSON$1(childData);if(childNode.isLeafNode()||!childNode.isEmpty())node_1=node_1.updateImmediateChild(key,childNode);}}});return node_1.updatePriority(nodeFromJSON$1(priority));}}setNodeFromJSON(nodeFromJSON$1);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @constructor
 * @extends {Index}
 * @private
 */var ValueIndex=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(ValueIndex,_super);function ValueIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**
     * @inheritDoc
     */ValueIndex.prototype.compare=function(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**
     * @inheritDoc
     */ValueIndex.prototype.isDefinedOn=function(node){return true;};/**
     * @inheritDoc
     */ValueIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.equals(newNode);};/**
     * @inheritDoc
     */ValueIndex.prototype.minPost=function(){return NamedNode.MIN;};/**
     * @inheritDoc
     */ValueIndex.prototype.maxPost=function(){return NamedNode.MAX;};/**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */ValueIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);return new NamedNode(name,valueNode);};/**
     * @return {!string} String representation for inclusion in a query spec
     */ValueIndex.prototype.toString=function(){return'.value';};return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param {!Path} indexPath
 * @constructor
 * @extends {Index}
 */var PathIndex=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(PathIndex,_super);function PathIndex(indexPath_){var _this=_super.call(this)||this;_this.indexPath_=indexPath_;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!indexPath_.isEmpty()&&indexPath_.getFront()!=='.priority',"Can't create PathIndex with empty path or .priority key");return _this;}/**
     * @param {!Node} snap
     * @return {!Node}
     * @protected
     */PathIndex.prototype.extractChild=function(snap){return snap.getChild(this.indexPath_);};/**
     * @inheritDoc
     */PathIndex.prototype.isDefinedOn=function(node){return!node.getChild(this.indexPath_).isEmpty();};/**
     * @inheritDoc
     */PathIndex.prototype.compare=function(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**
     * @inheritDoc
     */PathIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);};/**
     * @inheritDoc
     */PathIndex.prototype.maxPost=function(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE$2);return new NamedNode(MAX_NAME,node);};/**
     * @inheritDoc
     */PathIndex.prototype.toString=function(){return this.indexPath_.slice().join('/');};return PathIndex;}(Index);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Class representing a firebase data snapshot.  It wraps a SnapshotNode and
 * surfaces the public methods (val, forEach, etc.) we want to expose.
 */var DataSnapshot=/** @class */function(){/**
     * @param {!Node} node_ A SnapshotNode to wrap.
     * @param {!Reference} ref_ The ref of the location this snapshot came from.
     * @param {!Index} index_ The iteration order for this snapshot
     */function DataSnapshot(node_,ref_,index_){this.node_=node_;this.ref_=ref_;this.index_=index_;}/**
     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is
     * empty.
     *
     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
     */DataSnapshot.prototype.val=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.val',0,0,arguments.length);return this.node_.val();};/**
     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting
     * the entire node contents.
     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
     */DataSnapshot.prototype.exportVal=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.exportVal',0,0,arguments.length);return this.node_.val(true);};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users
DataSnapshot.prototype.toJSON=function(){// Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content
Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.toJSON',0,1,arguments.length);return this.exportVal();};/**
     * Returns whether the snapshot contains a non-null value.
     *
     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.
     */DataSnapshot.prototype.exists=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.exists',0,0,arguments.length);return!this.node_.isEmpty();};/**
     * Returns a DataSnapshot of the specified child node's contents.
     *
     * @param {!string} childPathString Path to a child.
     * @return {!DataSnapshot} DataSnapshot for child node.
     */DataSnapshot.prototype.child=function(childPathString){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.child',0,1,arguments.length);// Ensure the childPath is a string (can be a number)
childPathString=String(childPathString);validatePathString('DataSnapshot.child',1,childPathString,false);var childPath=new Path(childPathString);var childRef=this.ref_.child(childPath);return new DataSnapshot(this.node_.getChild(childPath),childRef,PRIORITY_INDEX);};/**
     * Returns whether the snapshot contains a child at the specified path.
     *
     * @param {!string} childPathString Path to a child.
     * @return {boolean} Whether the child exists.
     */DataSnapshot.prototype.hasChild=function(childPathString){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.hasChild',1,1,arguments.length);validatePathString('DataSnapshot.hasChild',1,childPathString,false);var childPath=new Path(childPathString);return!this.node_.getChild(childPath).isEmpty();};/**
     * Returns the priority of the object, or null if no priority was set.
     *
     * @return {string|number|null} The priority.
     */DataSnapshot.prototype.getPriority=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.getPriority',0,0,arguments.length);// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)
return this.node_.getPriority().val();};/**
     * Iterates through child nodes and calls the specified action for each one.
     *
     * @param {function(!DataSnapshot)} action Callback function to be called
     * for each child.
     * @return {boolean} True if forEach was canceled by action returning true for
     * one of the child nodes.
     */DataSnapshot.prototype.forEach=function(action){var _this=this;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.forEach',1,1,arguments.length);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('DataSnapshot.forEach',1,action,false);if(this.node_.isLeafNode())return false;var childrenNode=this.node_;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...
return!!childrenNode.forEachChild(this.index_,function(key,node){return action(new DataSnapshot(node,_this.ref_.child(key),PRIORITY_INDEX));});};/**
     * Returns whether this DataSnapshot has children.
     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.
     */DataSnapshot.prototype.hasChildren=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.hasChildren',0,0,arguments.length);if(this.node_.isLeafNode())return false;else return!this.node_.isEmpty();};Object.defineProperty(DataSnapshot.prototype,"key",{get:function get(){return this.ref_.getKey();},enumerable:true,configurable:true});/**
     * Returns the number of children for this DataSnapshot.
     * @return {number} The number of children that this DataSnapshot contains.
     */DataSnapshot.prototype.numChildren=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.numChildren',0,0,arguments.length);return this.node_.numChildren();};/**
     * @return {Reference} The Firebase reference for the location this snapshot's data came from.
     */DataSnapshot.prototype.getRef=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('DataSnapshot.ref',0,0,arguments.length);return this.ref_;};Object.defineProperty(DataSnapshot.prototype,"ref",{get:function get(){return this.getRef();},enumerable:true,configurable:true});return DataSnapshot;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Encapsulates the data needed to raise an event
 * @implements {Event}
 */var DataEvent=/** @class */function(){/**
     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed
     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided
     * @param {!DataSnapshot} snapshot The data backing the event
     * @param {?string=} prevName Optional, the name of the previous child for child_* events.
     */function DataEvent(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}/**
     * @inheritDoc
     */DataEvent.prototype.getPath=function(){var ref=this.snapshot.getRef();if(this.eventType==='value'){return ref.path;}else{return ref.getParent().path;}};/**
     * @inheritDoc
     */DataEvent.prototype.getEventType=function(){return this.eventType;};/**
     * @inheritDoc
     */DataEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**
     * @inheritDoc
     */DataEvent.prototype.toString=function(){return this.getPath().toString()+':'+this.eventType+':'+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(this.snapshot.exportVal());};return DataEvent;}();var CancelEvent=/** @class */function(){/**
     * @param {EventRegistration} eventRegistration
     * @param {Error} error
     * @param {!Path} path
     */function CancelEvent(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}/**
     * @inheritDoc
     */CancelEvent.prototype.getPath=function(){return this.path;};/**
     * @inheritDoc
     */CancelEvent.prototype.getEventType=function(){return'cancel';};/**
     * @inheritDoc
     */CancelEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**
     * @inheritDoc
     */CancelEvent.prototype.toString=function(){return this.path.toString()+':cancel';};return CancelEvent;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Represents registration for 'value' events.
 */var ValueEventRegistration=/** @class */function(){/**
     * @param {?function(!DataSnapshot)} callback_
     * @param {?function(Error)} cancelCallback_
     * @param {?Object} context_
     */function ValueEventRegistration(callback_,cancelCallback_,context_){this.callback_=callback_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**
     * @inheritDoc
     */ValueEventRegistration.prototype.respondsTo=function(eventType){return eventType==='value';};/**
     * @inheritDoc
     */ValueEventRegistration.prototype.createEvent=function(change,query){var index=query.getQueryParams().getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,query.getRef(),index));};/**
     * @inheritDoc
     */ValueEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_1=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event
cancelCB_1.call(ctx,eventData.error);};}else{var cb_1=this.callback_;return function(){cb_1.call(ctx,eventData.snapshot);};}};/**
     * @inheritDoc
     */ValueEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**
     * @inheritDoc
     */ValueEventRegistration.prototype.matches=function(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callback_||!this.callback_){// If no callback specified, we consider it to match any callback.
return true;}else{return other.callback_===this.callback_&&other.context_===this.context_;}};/**
     * @inheritDoc
     */ValueEventRegistration.prototype.hasAnyCallback=function(){return this.callback_!==null;};return ValueEventRegistration;}();/**
 * Represents the registration of 1 or more child_xxx events.
 *
 * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you
 * register a group of callbacks together in the future.
 *
 * @constructor
 * @implements {EventRegistration}
 */var ChildEventRegistration=/** @class */function(){/**
     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_
     * @param {?function(Error)} cancelCallback_
     * @param {Object=} context_
     */function ChildEventRegistration(callbacks_,cancelCallback_,context_){this.callbacks_=callbacks_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**
     * @inheritDoc
     */ChildEventRegistration.prototype.respondsTo=function(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(this.callbacks_,eventToCheck);};/**
     * @inheritDoc
     */ChildEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**
     * @inheritDoc
     */ChildEventRegistration.prototype.createEvent=function(change,query){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(change.childName!=null,'Child events should have a childName.');var ref=query.getRef().child(/** @type {!string} */change.childName);var index=query.getQueryParams().getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,ref,index),change.prevName);};/**
     * @inheritDoc
     */ChildEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_2=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event
cancelCB_2.call(ctx,eventData.error);};}else{var cb_2=this.callbacks_[eventData.eventType];return function(){cb_2.call(ctx,eventData.snapshot,eventData.prevName);};}};/**
     * @inheritDoc
     */ChildEventRegistration.prototype.matches=function(other){var _this=this;if(other instanceof ChildEventRegistration){if(!this.callbacks_||!other.callbacks_){return true;}else if(this.context_===other.context_){var otherKeys=Object.keys(other.callbacks_);var thisKeys=Object.keys(this.callbacks_);var otherCount=otherKeys.length;var thisCount=thisKeys.length;if(otherCount===thisCount){// If count is 1, do an exact match on eventType, if either is defined but null, it's a match.
// If event types don't match, not a match
// If count is not 1, exact match across all
if(otherCount===1){var otherKey=otherKeys[0];var thisKey=thisKeys[0];return thisKey===otherKey&&(!other.callbacks_[otherKey]||!this.callbacks_[thisKey]||other.callbacks_[otherKey]===this.callbacks_[thisKey]);}else{// Exact match on each key.
return thisKeys.every(function(eventType){return other.callbacks_[eventType]===_this.callbacks_[eventType];});}}}}return false;};/**
     * @inheritDoc
     */ChildEventRegistration.prototype.hasAnyCallback=function(){return this.callbacks_!==null;};return ChildEventRegistration;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var __referenceConstructor;/**
 * A Query represents a filter to be applied to a firebase location.  This object purely represents the
 * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.
 *
 * Since every Firebase reference is a query, Firebase inherits from this object.
 */var Query=/** @class */function(){function Query(repo,path,queryParams_,orderByCalled_){this.repo=repo;this.path=path;this.queryParams_=queryParams_;this.orderByCalled_=orderByCalled_;}Object.defineProperty(Query,"__referenceConstructor",{get:function get(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(__referenceConstructor,'Reference.ts has not been loaded');return __referenceConstructor;},set:function set(val){__referenceConstructor=val;},enumerable:true,configurable:true});/**
     * Validates start/end values for queries.
     * @param {!QueryParams} params
     * @private
     */Query.validateQueryEndpoints_=function(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), endAt(),'+'or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!=MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!=MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');}}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be '+'an object.');}}};/**
     * Validates that limit* has been called with the correct combination of parameters
     * @param {!QueryParams} params
     * @private
     */Query.validateLimit_=function(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");}};/**
     * Validates that no other order by call has been made
     * @param {!string} fnName
     * @private
     */Query.prototype.validateNoPreviousOrderByCall_=function(fnName){if(this.orderByCalled_===true){throw new Error(fnName+": You can't combine multiple orderBy calls.");}};/**
     * @return {!QueryParams}
     */Query.prototype.getQueryParams=function(){return this.queryParams_;};/**
     * @return {!Reference}
     */Query.prototype.getRef=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.ref',0,0,arguments.length);// This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.
// However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this
// method gets called.
return new Query.__referenceConstructor(this.repo,this.path);};/**
     * @param {!string} eventType
     * @param {!function(DataSnapshot, string=)} callback
     * @param {(function(Error)|Object)=} cancelCallbackOrContext
     * @param {Object=} context
     * @return {!function(DataSnapshot, string=)}
     */Query.prototype.on=function(eventType,callback,cancelCallbackOrContext,context){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.on',2,4,arguments.length);validateEventType('Query.on',1,eventType,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Query.on',2,callback,false);var ret=Query.getCancelAndContextArgs_('Query.on',cancelCallbackOrContext,context);if(eventType==='value'){this.onValueEvent(callback,ret.cancel,ret.context);}else{var callbacks={};callbacks[eventType]=callback;this.onChildEvent(callbacks,ret.cancel,ret.context);}return callback;};/**
     * @param {!function(!DataSnapshot)} callback
     * @param {?function(Error)} cancelCallback
     * @param {?Object} context
     * @protected
     */Query.prototype.onValueEvent=function(callback,cancelCallback,context){var container=new ValueEventRegistration(callback,cancelCallback||null,context||null);this.repo.addEventCallbackForQuery(this,container);};/**
     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks
     * @param {?function(Error)} cancelCallback
     * @param {?Object} context
     * @protected
     */Query.prototype.onChildEvent=function(callbacks,cancelCallback,context){var container=new ChildEventRegistration(callbacks,cancelCallback,context);this.repo.addEventCallbackForQuery(this,container);};/**
     * @param {string=} eventType
     * @param {(function(!DataSnapshot, ?string=))=} callback
     * @param {Object=} context
     */Query.prototype.off=function(eventType,callback,context){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.off',0,3,arguments.length);validateEventType('Query.off',1,eventType,true);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Query.off',2,callback,true);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["F" /* validateContextObject */])('Query.off',3,context,true);var container=null;var callbacks=null;if(eventType==='value'){var valueCallback=callback||null;container=new ValueEventRegistration(valueCallback,null,context||null);}else if(eventType){if(callback){callbacks={};callbacks[eventType]=callback;}container=new ChildEventRegistration(callbacks,null,context||null);}this.repo.removeEventCallbackForQuery(this,container);};/**
     * Attaches a listener, waits for the first event, and then removes the listener
     * @param {!string} eventType
     * @param {!function(!DataSnapshot, string=)} userCallback
     * @param failureCallbackOrContext
     * @param context
     * @return {!firebase.Promise}
     */Query.prototype.once=function(eventType,userCallback,failureCallbackOrContext,context){var _this=this;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.once',1,4,arguments.length);validateEventType('Query.once',1,eventType,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Query.once',2,userCallback,true);var ret=Query.getCancelAndContextArgs_('Query.once',failureCallbackOrContext,context);// TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)
// TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change
// because the API currently expects callbacks will be called synchronously if the data is cached, but this is
// against the Promise specification.
var firstCall=true;var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();// A dummy error handler in case a user wasn't expecting promises
deferred.promise.catch(function(){});var onceCallback=function onceCallback(snapshot){// NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)
// triggers multiple events (e.g. child_added or child_changed).
if(firstCall){firstCall=false;_this.off(eventType,onceCallback);if(userCallback){userCallback.bind(ret.context)(snapshot);}deferred.resolve(snapshot);}};this.on(eventType,onceCallback,/*cancel=*/function(err){_this.off(eventType,onceCallback);if(ret.cancel)ret.cancel.bind(ret.context)(err);deferred.reject(err);});return deferred.promise;};/**
     * Set a limit and anchor it to the start of the window.
     * @param {!number} limit
     * @return {!Query}
     */Query.prototype.limitToFirst=function(limit){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.limitToFirst',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToFirst: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToFirst(limit),this.orderByCalled_);};/**
     * Set a limit and anchor it to the end of the window.
     * @param {!number} limit
     * @return {!Query}
     */Query.prototype.limitToLast=function(limit){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.limitToLast',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToLast: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToLast: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToLast(limit),this.orderByCalled_);};/**
     * Given a child path, return a new query ordered by the specified grandchild path.
     * @param {!string} path
     * @return {!Query}
     */Query.prototype.orderByChild=function(path){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.orderByChild',1,1,arguments.length);if(path==='$key'){throw new Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');}else if(path==='$priority'){throw new Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');}else if(path==='$value'){throw new Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');}validatePathString('Query.orderByChild',1,path,false);this.validateNoPreviousOrderByCall_('Query.orderByChild');var parsedPath=new Path(path);if(parsedPath.isEmpty()){throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=this.queryParams_.orderBy(index);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**
     * Return a new query ordered by the KeyIndex
     * @return {!Query}
     */Query.prototype.orderByKey=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.orderByKey',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByKey');var newParams=this.queryParams_.orderBy(KEY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**
     * Return a new query ordered by the PriorityIndex
     * @return {!Query}
     */Query.prototype.orderByPriority=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.orderByPriority',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByPriority');var newParams=this.queryParams_.orderBy(PRIORITY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**
     * Return a new query ordered by the ValueIndex
     * @return {!Query}
     */Query.prototype.orderByValue=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.orderByValue',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByValue');var newParams=this.queryParams_.orderBy(VALUE_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**
     * @param {number|string|boolean|null} value
     * @param {?string=} name
     * @return {!Query}
     */Query.prototype.startAt=function(value,name){if(value===void 0){value=null;}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.startAt',0,2,arguments.length);validateFirebaseDataArg('Query.startAt',1,value,this.path,true);validateKey('Query.startAt',2,name,true);var newParams=this.queryParams_.startAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasStart()){throw new Error('Query.startAt: Starting point was already set (by another call to startAt '+'or equalTo).');}// Calling with no params tells us to start at the beginning.
if(value===undefined){value=null;name=null;}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**
     * @param {number|string|boolean|null} value
     * @param {?string=} name
     * @return {!Query}
     */Query.prototype.endAt=function(value,name){if(value===void 0){value=null;}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.endAt',0,2,arguments.length);validateFirebaseDataArg('Query.endAt',1,value,this.path,true);validateKey('Query.endAt',2,name,true);var newParams=this.queryParams_.endAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasEnd()){throw new Error('Query.endAt: Ending point was already set (by another call to endAt or '+'equalTo).');}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**
     * Load the selection of children with exactly the specified value, and, optionally,
     * the specified name.
     * @param {number|string|boolean|null} value
     * @param {string=} name
     * @return {!Query}
     */Query.prototype.equalTo=function(value,name){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.equalTo',1,2,arguments.length);validateFirebaseDataArg('Query.equalTo',1,value,this.path,false);validateKey('Query.equalTo',2,name,true);if(this.queryParams_.hasStart()){throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or '+'equalTo).');}if(this.queryParams_.hasEnd()){throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or '+'equalTo).');}return this.startAt(value,name).endAt(value,name);};/**
     * @return {!string} URL for this location.
     */Query.prototype.toString=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.toString',0,0,arguments.length);return this.repo.toString()+this.path.toUrlEncodedString();};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users.
Query.prototype.toJSON=function(){// An optional spacer argument is unnecessary for a string.
Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.toJSON',0,1,arguments.length);return this.toString();};/**
     * An object representation of the query parameters used by this Query.
     * @return {!Object}
     */Query.prototype.queryObject=function(){return this.queryParams_.getQueryObject();};/**
     * @return {!string}
     */Query.prototype.queryIdentifier=function(){var obj=this.queryObject();var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;};/**
     * Return true if this query and the provided query are equivalent; otherwise, return false.
     * @param {Query} other
     * @return {boolean}
     */Query.prototype.isEqual=function(other){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Query.isEqual',1,1,arguments.length);if(!(other instanceof Query)){var error='Query.isEqual failed: First argument must be an instance of firebase.database.Query.';throw new Error(error);}var sameRepo=this.repo===other.repo;var samePath=this.path.equals(other.path);var sameQueryIdentifier=this.queryIdentifier()===other.queryIdentifier();return sameRepo&&samePath&&sameQueryIdentifier;};/**
     * Helper used by .on and .once to extract the context and or cancel arguments.
     * @param {!string} fnName The function name (on or once)
     * @param {(function(Error)|Object)=} cancelOrContext
     * @param {Object=} context
     * @return {{cancel: ?function(Error), context: ?Object}}
     * @private
     */Query.getCancelAndContextArgs_=function(fnName,cancelOrContext,context){var ret={cancel:null,context:null};if(cancelOrContext&&context){ret.cancel=cancelOrContext;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])(fnName,3,ret.cancel,true);ret.context=context;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["F" /* validateContextObject */])(fnName,4,ret.context,true);}else if(cancelOrContext){// we have either a cancel callback or a context.
if(typeof cancelOrContext==='object'&&cancelOrContext!==null){// it's a context!
ret.context=cancelOrContext;}else if(typeof cancelOrContext==='function'){ret.cancel=cancelOrContext;}else{throw new Error(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["n" /* errorPrefix */])(fnName,3,true)+' must either be a cancel callback or a context object.');}}return ret;};Object.defineProperty(Query.prototype,"ref",{get:function get(){return this.getRef();},enumerable:true,configurable:true});return Query;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Helper class to store a sparse set of snapshots.
 */var SparseSnapshotTree=/** @class */function(){function SparseSnapshotTree(){this.value=null;this.children=new Map();}/**
     * Gets the node stored at the given path if one exists.
     *
     * @param path Path to look up snapshot for.
     * @return The retrieved node, or null.
     */SparseSnapshotTree.prototype.find=function(path){if(this.value!=null){return this.value.getChild(path);}else if(!path.isEmpty()&&this.children.size>0){var childKey=path.getFront();path=path.popFront();if(this.children.has(childKey)){var childTree=this.children.get(childKey);return childTree.find(path);}else{return null;}}else{return null;}};/**
     * Stores the given node at the specified path. If there is already a node
     * at a shallower path, it merges the new data into that snapshot node.
     *
     * @param path Path to look up snapshot for.
     * @param data The new data, or null.
     */SparseSnapshotTree.prototype.remember=function(path,data){if(path.isEmpty()){this.value=data;this.children.clear();}else if(this.value!==null){this.value=this.value.updateChild(path,data);}else{var childKey=path.getFront();if(!this.children.has(childKey)){this.children.set(childKey,new SparseSnapshotTree());}var child=this.children.get(childKey);path=path.popFront();child.remember(path,data);}};/**
     * Purge the data at path from the cache.
     *
     * @param path Path to look up snapshot for.
     * @return True if this node should now be removed.
     */SparseSnapshotTree.prototype.forget=function(path){if(path.isEmpty()){this.value=null;this.children.clear();return true;}else{if(this.value!==null){if(this.value.isLeafNode()){// We're trying to forget a node that doesn't exist
return false;}else{var value=this.value;this.value=null;var self_1=this;value.forEachChild(PRIORITY_INDEX,function(key,tree){self_1.remember(new Path(key),tree);});return this.forget(path);}}else if(this.children.size>0){var childKey=path.getFront();path=path.popFront();if(this.children.has(childKey)){var safeToRemove=this.children.get(childKey).forget(path);if(safeToRemove){this.children.delete(childKey);}}return this.children.size===0;}else{return true;}}};/**
     * Recursively iterates through all of the stored tree and calls the
     * callback on each one.
     *
     * @param prefixPath Path to look up node for.
     * @param func The function to invoke for each tree.
     */SparseSnapshotTree.prototype.forEachTree=function(prefixPath,func){if(this.value!==null){func(prefixPath,this.value);}else{this.forEachChild(function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);tree.forEachTree(path,func);});}};/**
     * Iterates through each immediate child and triggers the callback.
     *
     * @param func The function to invoke for each child.
     */SparseSnapshotTree.prototype.forEachChild=function(func){this.children.forEach(function(tree,key){func(key,tree);});};return SparseSnapshotTree;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Generate placeholders for deferred values.
 * @param {?Object} values
 * @return {!Object}
 */var generateWithValues=function generateWithValues(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**
 * Value to use when firing local events. When writing server values, fire
 * local events with an approximate value, otherwise return value as-is.
 * @param {(Object|string|number|boolean)} value
 * @param {!Object} serverValues
 * @return {!(string|number|boolean)}
 */var resolveDeferredValue=function resolveDeferredValue(value,serverValues){if(!value||typeof value!=='object'){return value;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])('.sv'in value,'Unexpected leaf node or priority contents');return serverValues[value['.sv']];}};/**
 * Recursively replace all deferred values and priorities in the tree with the
 * specified generated replacement values.
 * @param {!SparseSnapshotTree} tree
 * @param {!Object} serverValues
 * @return {!SparseSnapshotTree}
 */var resolveDeferredValueTree=function resolveDeferredValueTree(tree,serverValues){var resolvedTree=new SparseSnapshotTree();tree.forEachTree(new Path(''),function(path,node){resolvedTree.remember(path,resolveDeferredValueSnapshot(node,serverValues));});return resolvedTree;};/**
 * Recursively replace all deferred values and priorities in the node with the
 * specified generated replacement values.  If there are no server values in the node,
 * it'll be returned as-is.
 * @param {!Node} node
 * @param {!Object} serverValues
 * @return {!Node}
 */var resolveDeferredValueSnapshot=function resolveDeferredValueSnapshot(node,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredValue(rawPri,serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredValue(leafNode.getValue(),serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON$1(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValueSnapshot(childNode,serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 *
 * @enum
 */var OperationType;(function(OperationType){OperationType[OperationType["OVERWRITE"]=0]="OVERWRITE";OperationType[OperationType["MERGE"]=1]="MERGE";OperationType[OperationType["ACK_USER_WRITE"]=2]="ACK_USER_WRITE";OperationType[OperationType["LISTEN_COMPLETE"]=3]="LISTEN_COMPLETE";})(OperationType||(OperationType={}));/**
 * @param {boolean} fromUser
 * @param {boolean} fromServer
 * @param {?string} queryId
 * @param {boolean} tagged
 * @constructor
 */var OperationSource=/** @class */function(){function OperationSource(fromUser,fromServer,queryId,tagged){this.fromUser=fromUser;this.fromServer=fromServer;this.queryId=queryId;this.tagged=tagged;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!tagged||fromServer,'Tagged queries must be from server.');}/**
     * @const
     * @type {!OperationSource}
     */OperationSource.User=new OperationSource(/*fromUser=*/true,false,null,/*tagged=*/false);/**
     * @const
     * @type {!OperationSource}
     */OperationSource.Server=new OperationSource(false,/*fromServer=*/true,null,/*tagged=*/false);/**
     * @param {string} queryId
     * @return {!OperationSource}
     */OperationSource.forServerTaggedQuery=function(queryId){return new OperationSource(false,/*fromServer=*/true,queryId,/*tagged=*/true);};return OperationSource;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var AckUserWrite=/** @class */function(){/**
     *
     * @param {!Path} path
     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.
     * @param {!boolean} revert
     */function AckUserWrite(/**@inheritDoc */path,/**@inheritDoc */affectedTree,/**@inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=OperationSource.User;}/**
     * @inheritDoc
     */AckUserWrite.prototype.operationForChild=function(childName){if(!this.path.isEmpty()){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.path.getFront()===childName,'operationForChild called for unrelated child.');return new AckUserWrite(this.path.popFront(),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.
return this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(Path.Empty,childTree,this.revert);}};return AckUserWrite;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var emptyChildrenSingleton;/**
 * Singleton empty children collection.
 *
 * @const
 * @type {!SortedMap.<string, !ImmutableTree.<?>>}
 */var EmptyChildren=function EmptyChildren(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**
 * A tree with immutable elements.
 */var ImmutableTree=/** @class */function(){/**
     * @template T
     * @param {?T} value
     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children
     */function ImmutableTree(value,children){if(children===void 0){children=EmptyChildren();}this.value=value;this.children=children;}/**
     * @template T
     * @param {!Object.<string, !T>} obj
     * @return {!ImmutableTree.<!T>}
     */ImmutableTree.fromObject=function(obj){var tree=ImmutableTree.Empty;each(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;};/**
     * True if the value is empty and there are no children
     * @return {boolean}
     */ImmutableTree.prototype.isEmpty=function(){return this.value===null&&this.children.isEmpty();};/**
     * Given a path and predicate, return the first node and the path to that node
     * where the predicate returns true.
     *
     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects
     * on the way back out, it may be better to pass down a pathSoFar obj.
     *
     * @param {!Path} relativePath The remainder of the path
     * @param {function(T):boolean} predicate The predicate to satisfy to return a
     *   node
     * @return {?{path:!Path, value:!T}}
     */ImmutableTree.prototype.findRootMostMatchingPathAndValue=function(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:Path.Empty,value:this.value};}else{if(relativePath.isEmpty()){return null;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child!==null){var childExistingPathAndValue=child.findRootMostMatchingPathAndValue(relativePath.popFront(),predicate);if(childExistingPathAndValue!=null){var fullPath=new Path(front).child(childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}};/**
     * Find, if it exists, the shortest subpath of the given path that points a defined
     * value in the tree
     * @param {!Path} relativePath
     * @return {?{path: !Path, value: !T}}
     */ImmutableTree.prototype.findRootMostValueAndPath=function(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});};/**
     * @param {!Path} relativePath
     * @return {!ImmutableTree.<T>} The subtree at the given path
     */ImmutableTree.prototype.subtree=function(relativePath){if(relativePath.isEmpty()){return this;}else{var front=relativePath.getFront();var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(relativePath.popFront());}else{return ImmutableTree.Empty;}}};/**
     * Sets a value at the specified path.
     *
     * @param {!Path} relativePath Path to set value at.
     * @param {?T} toSet Value to set.
     * @return {!ImmutableTree.<T>} Resulting tree.
     */ImmutableTree.prototype.set=function(relativePath,toSet){if(relativePath.isEmpty()){return new ImmutableTree(toSet,this.children);}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.set(relativePath.popFront(),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}};/**
     * Removes the value at the specified path.
     *
     * @param {!Path} relativePath Path to value to remove.
     * @return {!ImmutableTree.<T>} Resulting tree.
     */ImmutableTree.prototype.remove=function(relativePath){if(relativePath.isEmpty()){if(this.children.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(null,this.children);}}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){var newChild=child.remove(relativePath.popFront());var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}};/**
     * Gets a value from the tree.
     *
     * @param {!Path} relativePath Path to get value for.
     * @return {?T} Value at path, or null.
     */ImmutableTree.prototype.get=function(relativePath){if(relativePath.isEmpty()){return this.value;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){return child.get(relativePath.popFront());}else{return null;}}};/**
     * Replace the subtree at the specified path with the given new tree.
     *
     * @param {!Path} relativePath Path to replace subtree for.
     * @param {!ImmutableTree} newTree New tree.
     * @return {!ImmutableTree} Resulting tree.
     */ImmutableTree.prototype.setTree=function(relativePath,newTree){if(relativePath.isEmpty()){return newTree;}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.setTree(relativePath.popFront(),newTree);var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}};/**
     * Performs a depth first fold on this tree. Transforms a tree into a single
     * value, given a function that operates on the path to a node, an optional
     * current value, and a map of child names to folded subtrees
     * @template V
     * @param {function(Path, ?T, Object.<string, V>):V} fn
     * @return {V}
     */ImmutableTree.prototype.fold=function(fn){return this.fold_(Path.Empty,fn);};/**
     * Recursive helper for public-facing fold() method
     * @template V
     * @param {!Path} pathSoFar
     * @param {function(Path, ?T, Object.<string, V>):V} fn
     * @return {V}
     * @private
     */ImmutableTree.prototype.fold_=function(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathSoFar.child(childKey),fn);});return fn(pathSoFar,this.value,accum);};/**
     * Find the first matching value on the given path. Return the result of applying f to it.
     * @template V
     * @param {!Path} path
     * @param {!function(!Path, !T):?V} f
     * @return {?V}
     */ImmutableTree.prototype.findOnPath=function(path,f){return this.findOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.findOnPath_=function(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathToFollow.isEmpty()){return null;}else{var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathToFollow.popFront(),pathSoFar.child(front),f);}else{return null;}}}};/**
     *
     * @param {!Path} path
     * @param {!function(!Path, !T)} f
     * @returns {!ImmutableTree.<T>}
     */ImmutableTree.prototype.foreachOnPath=function(path,f){return this.foreachOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.foreachOnPath_=function(pathToFollow,currentRelativePath,f){if(pathToFollow.isEmpty()){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathToFollow.popFront(),currentRelativePath.child(front),f);}else{return ImmutableTree.Empty;}}};/**
     * Calls the given function for each node in the tree that has a value.
     *
     * @param {function(!Path, !T)} f A function to be called with
     *   the path from the root of the tree to a node, and the value at that node.
     *   Called in depth-first order.
     */ImmutableTree.prototype.foreach=function(f){this.foreach_(Path.Empty,f);};ImmutableTree.prototype.foreach_=function(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(currentRelativePath.child(childName),f);});if(this.value){f(currentRelativePath,this.value);}};/**
     *
     * @param {function(string, !T)} f
     */ImmutableTree.prototype.foreachChild=function(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});};ImmutableTree.Empty=new ImmutableTree(null);return ImmutableTree;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @constructor
 * @implements {Operation}
 */var ListenComplete=/** @class */function(){function ListenComplete(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}ListenComplete.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new ListenComplete(this.source,Path.Empty);}else{return new ListenComplete(this.source,this.path.popFront());}};return ListenComplete;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @param {!Node} snap
 * @constructor
 * @implements {Operation}
 */var Overwrite=/** @class */function(){function Overwrite(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}Overwrite.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new Overwrite(this.source,Path.Empty,this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,this.path.popFront(),this.snap);}};return Overwrite;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @param {!ImmutableTree.<!Node>} children
 * @constructor
 * @implements {Operation}
 */var Merge=/** @class */function(){function Merge(/**@inheritDoc */source,/**@inheritDoc */path,/**@inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}/**
     * @inheritDoc
     */Merge.prototype.operationForChild=function(childName){if(this.path.isEmpty()){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected
return null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.
return new Overwrite(this.source,Path.Empty,childTree.value);}else{// This is a merge at a deeper level
return new Merge(this.source,Path.Empty,childTree);}}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.path.getFront()===childName,"Can't get a merge for a child not on the path of the operation");return new Merge(this.source,this.path.popFront(),this.children);}};/**
     * @inheritDoc
     */Merge.prototype.toString=function(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';};return Merge;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully
 * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.
 * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks
 * whether a node potentially had children removed due to a filter.
 */var CacheNode=/** @class */function(){/**
     * @param {!Node} node_
     * @param {boolean} fullyInitialized_
     * @param {boolean} filtered_
     */function CacheNode(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**
     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client
     * @return {boolean}
     */CacheNode.prototype.isFullyInitialized=function(){return this.fullyInitialized_;};/**
     * Returns whether this node is potentially missing children due to a filter applied to the node
     * @return {boolean}
     */CacheNode.prototype.isFiltered=function(){return this.filtered_;};/**
     * @param {!Path} path
     * @return {boolean}
     */CacheNode.prototype.isCompleteForPath=function(path){if(path.isEmpty()){return this.isFullyInitialized()&&!this.filtered_;}var childKey=path.getFront();return this.isCompleteForChild(childKey);};/**
     * @param {!string} key
     * @return {boolean}
     */CacheNode.prototype.isCompleteForChild=function(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);};/**
     * @return {!Node}
     */CacheNode.prototype.getNode=function(){return this.node_;};return CacheNode;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Stores the data we have cached for a view.
 *
 * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).
 *
 * @constructor
 */var ViewCache=/** @class */function(){/**
     *
     * @param {!CacheNode} eventCache_
     * @param {!CacheNode} serverCache_
     */function ViewCache(eventCache_,serverCache_){this.eventCache_=eventCache_;this.serverCache_=serverCache_;}/**
     * @param {!Node} eventSnap
     * @param {boolean} complete
     * @param {boolean} filtered
     * @return {!ViewCache}
     */ViewCache.prototype.updateEventSnap=function(eventSnap,complete,filtered){return new ViewCache(new CacheNode(eventSnap,complete,filtered),this.serverCache_);};/**
     * @param {!Node} serverSnap
     * @param {boolean} complete
     * @param {boolean} filtered
     * @return {!ViewCache}
     */ViewCache.prototype.updateServerSnap=function(serverSnap,complete,filtered){return new ViewCache(this.eventCache_,new CacheNode(serverSnap,complete,filtered));};/**
     * @return {!CacheNode}
     */ViewCache.prototype.getEventCache=function(){return this.eventCache_;};/**
     * @return {?Node}
     */ViewCache.prototype.getCompleteEventSnap=function(){return this.eventCache_.isFullyInitialized()?this.eventCache_.getNode():null;};/**
     * @return {!CacheNode}
     */ViewCache.prototype.getServerCache=function(){return this.serverCache_;};/**
     * @return {?Node}
     */ViewCache.prototype.getCompleteServerSnap=function(){return this.serverCache_.isFullyInitialized()?this.serverCache_.getNode():null;};/**
     * @const
     * @type {ViewCache}
     */ViewCache.Empty=new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false),new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false));return ViewCache;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @constructor
 * @struct
 * @param {!string} type The event type
 * @param {!Node} snapshotNode The data
 * @param {string=} childName The name for this child, if it's a child event
 * @param {Node=} oldSnap Used for intermediate processing of child changed events
 * @param {string=} prevName The name for the previous child, if applicable
 */var Change=/** @class */function(){function Change(type,snapshotNode,childName,oldSnap,prevName){this.type=type;this.snapshotNode=snapshotNode;this.childName=childName;this.oldSnap=oldSnap;this.prevName=prevName;}/**
     * @param {!Node} snapshot
     * @return {!Change}
     */Change.valueChange=function(snapshot){return new Change(Change.VALUE,snapshot);};/**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */Change.childAddedChange=function(childKey,snapshot){return new Change(Change.CHILD_ADDED,snapshot,childKey);};/**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */Change.childRemovedChange=function(childKey,snapshot){return new Change(Change.CHILD_REMOVED,snapshot,childKey);};/**
     * @param {string} childKey
     * @param {!Node} newSnapshot
     * @param {!Node} oldSnapshot
     * @return {!Change}
     */Change.childChangedChange=function(childKey,newSnapshot,oldSnapshot){return new Change(Change.CHILD_CHANGED,newSnapshot,childKey,oldSnapshot);};/**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */Change.childMovedChange=function(childKey,snapshot){return new Change(Change.CHILD_MOVED,snapshot,childKey);};//event types
/** Event type for a child added */Change.CHILD_ADDED='child_added';/** Event type for a child removed */Change.CHILD_REMOVED='child_removed';/** Event type for a child changed */Change.CHILD_CHANGED='child_changed';/** Event type for a child moved */Change.CHILD_MOVED='child_moved';/** Event type for a value change */Change.VALUE='value';return Change;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Doesn't really filter nodes but applies an index to the node and keeps track of any changes
 *
 * @constructor
 * @implements {NodeFilter}
 * @param {!Index} index
 */var IndexedFilter=/** @class */function(){function IndexedFilter(index_){this.index_=index_;}IndexedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.
if(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.
// In this case, affectedPath will appear null in both the old and new snapshots.  So we need
// to avoid treating these cases as "nothing changed."
if(oldChild.isEmpty()==newChild.isEmpty()){// Nothing changed.
// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.
//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');
return snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,oldChild));}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(Change.childAddedChange(key,newChild));}else{optChangeAccumulator.trackChildChange(Change.childChangedChange(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed
return snap.updateImmediateChild(key,newChild).withIndex(this.index_);}};/**
     * @inheritDoc
     */IndexedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(Change.childChangedChange(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(Change.childAddedChange(key,childNode));}});}}return newSnap.withIndex(this.index_);};/**
     * @inheritDoc
     */IndexedFilter.prototype.updatePriority=function(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}};/**
     * @inheritDoc
     */IndexedFilter.prototype.filtersNodes=function(){return false;};/**
     * @inheritDoc
     */IndexedFilter.prototype.getIndexedFilter=function(){return this;};/**
     * @inheritDoc
     */IndexedFilter.prototype.getIndex=function(){return this.index_;};return IndexedFilter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ChildChangeAccumulator=/** @class */function(){function ChildChangeAccumulator(){this.changeMap=new Map();}ChildChangeAccumulator.prototype.trackChildChange=function(change){var type=change.type;var childKey=change.childName;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(type==Change.CHILD_ADDED||type==Change.CHILD_CHANGED||type==Change.CHILD_REMOVED,'Only child changes supported for tracking');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=this.changeMap.get(childKey);if(oldChange){var oldType=oldChange.type;if(type==Change.CHILD_ADDED&&oldType==Change.CHILD_REMOVED){this.changeMap.set(childKey,Change.childChangedChange(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type==Change.CHILD_REMOVED&&oldType==Change.CHILD_ADDED){this.changeMap.delete(childKey);}else if(type==Change.CHILD_REMOVED&&oldType==Change.CHILD_CHANGED){this.changeMap.set(childKey,Change.childRemovedChange(childKey,oldChange.oldSnap));}else if(type==Change.CHILD_CHANGED&&oldType==Change.CHILD_ADDED){this.changeMap.set(childKey,Change.childAddedChange(childKey,change.snapshotNode));}else if(type==Change.CHILD_CHANGED&&oldType==Change.CHILD_CHANGED){this.changeMap.set(childKey,Change.childChangedChange(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["g" /* assertionError */])('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}};ChildChangeAccumulator.prototype.getChanges=function(){return Array.from(this.changeMap.values());};return ChildChangeAccumulator;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An implementation of CompleteChildSource that never returns any additional children
 *
 * @private
 * @constructor
 * @implements CompleteChildSource
 */var NoCompleteChildSource_=/** @class */function(){function NoCompleteChildSource_(){}/**
     * @inheritDoc
     */NoCompleteChildSource_.prototype.getCompleteChild=function(childKey){return null;};/**
     * @inheritDoc
     */NoCompleteChildSource_.prototype.getChildAfterChild=function(index,child,reverse){return null;};return NoCompleteChildSource_;}();/**
 * Singleton instance.
 * @const
 * @type {!CompleteChildSource}
 */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**
 * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or
 * old event caches available to calculate complete children.
 *
 *
 * @implements CompleteChildSource
 */var WriteTreeCompleteChildSource=/** @class */function(){/**
     * @param {!WriteTreeRef} writes_
     * @param {!ViewCache} viewCache_
     * @param {?Node} optCompleteServerCache_
     */function WriteTreeCompleteChildSource(writes_,viewCache_,optCompleteServerCache_){if(optCompleteServerCache_===void 0){optCompleteServerCache_=null;}this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}/**
     * @inheritDoc
     */WriteTreeCompleteChildSource.prototype.getCompleteChild=function(childKey){var node=this.viewCache_.getEventCache();if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.getServerCache();return this.writes_.calcCompleteChild(childKey,serverNode);}};/**
     * @inheritDoc
     */WriteTreeCompleteChildSource.prototype.getChildAfterChild=function(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:this.viewCache_.getCompleteServerSnap();var nodes=this.writes_.calcIndexedSlice(completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}};return WriteTreeCompleteChildSource;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @constructor
 * @struct
 */var ProcessorResult=/** @class */function(){/**
     * @param {!ViewCache} viewCache
     * @param {!Array.<!Change>} changes
     */function ProcessorResult(viewCache,changes){this.viewCache=viewCache;this.changes=changes;}return ProcessorResult;}();/**
 * @constructor
 */var ViewProcessor=/** @class */function(){/**
     * @param {!NodeFilter} filter_
     */function ViewProcessor(filter_){this.filter_=filter_;}/**
     * @param {!ViewCache} viewCache
     */ViewProcessor.prototype.assertIndexed=function(viewCache){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),'Event snap not indexed');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),'Server snap not indexed');};/**
     * @param {!ViewCache} oldViewCache
     * @param {!Operation} operation
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @return {!ProcessorResult}
     */ViewProcessor.prototype.applyOperation=function(oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=this.applyUserOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the
// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered
// again
filterServerNode=overwrite.source.tagged||oldViewCache.getServerCache().isFiltered()&&!overwrite.path.isEmpty();newViewCache=this.applyServerOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=this.applyUserMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered
filterServerNode=merge.source.tagged||oldViewCache.getServerCache().isFiltered();newViewCache=this.applyServerMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=this.ackUserWrite_(oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=this.revertUserWrite_(oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=this.listenComplete_(oldViewCache,operation.path,writesCache,accumulator);}else{throw Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["g" /* assertionError */])('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();ViewProcessor.maybeAddValueEvent_(oldViewCache,newViewCache,changes);return new ProcessorResult(newViewCache,changes);};/**
     * @param {!ViewCache} oldViewCache
     * @param {!ViewCache} newViewCache
     * @param {!Array.<!Change>} accumulator
     * @private
     */ViewProcessor.maybeAddValueEvent_=function(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.getEventCache();if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=oldViewCache.getCompleteEventSnap();if(accumulator.length>0||!oldViewCache.getEventCache().isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(/** @type {!Node} */oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(Change.valueChange(/** @type {!Node} */newViewCache.getCompleteEventSnap()));}}};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} changePath
     * @param {!WriteTreeRef} writesCache
     * @param {!CompleteChildSource} source
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.generateEventCacheAfterServerEvent_=function(viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.getEventCache();if(writesCache.shadowingWrite(changePath)!=null){// we have a shadowing write, ignore changes
return viewCache;}else{var newEventCache=void 0,serverNode=void 0;if(changePath.isEmpty()){// TODO: figure out how this plays with "sliding ack windows"
Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(viewCache.getServerCache().isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.getServerCache().isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or
// we might end up raising events for incomplete children. If the server data is filtered deep
// writes cannot be guaranteed to be complete
var serverCache=viewCache.getCompleteServerSnap();var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writesCache.calcCompleteEventChildren(completeChildren);newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeEventChildren,accumulator);}else{var completeNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeNode,accumulator);}}else{var childKey=changePath.getFront();if(childKey=='.priority'){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(changePath.getLength()==1,"Can't have a priority with additional path components");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.getServerCache().getNode();// we might have overwrites for this priority
var updatedPriority=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=this.filter_.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node
newEventCache=oldEventSnap.getNode();}}else{var childChangePath=changePath.popFront();// update child
var newEventChild=void 0;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.getServerCache().getNode();var eventChildUpdate=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child
newEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());}if(newEventChild!=null){newEventCache=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change
newEventCache=oldEventSnap.getNode();}}}return viewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized()||changePath.isEmpty(),this.filter_.filtersNodes());}};/**
     * @param {!ViewCache} oldViewCache
     * @param {!Path} changePath
     * @param {!Node} changedSnap
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {boolean} filterServerNode
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.applyServerOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.getServerCache();var newServerCache;var serverFilter=filterServerNode?this.filter_:this.filter_.getIndexedFilter();if(changePath.isEmpty()){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update
var newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=changePath.getFront();if(!oldServerSnap.isCompleteForPath(changePath)&&changePath.getLength()>1){// We don't update incomplete nodes with updates intended for other listeners
return oldViewCache;}var childChangePath=changePath.popFront();var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey=='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=oldViewCache.updateServerSnap(newServerCache,oldServerSnap.isFullyInitialized()||changePath.isEmpty(),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return this.generateEventCacheAfterServerEvent_(newViewCache,changePath,writesCache,source,accumulator);};/**
     * @param {!ViewCache} oldViewCache
     * @param {!Path} changePath
     * @param {!Node} changedSnap
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.applyUserOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.getEventCache();var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(changePath.isEmpty()){newEventCache=this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(),changedSnap,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventCache,true,this.filter_.filtersNodes());}else{var childKey=changePath.getFront();if(childKey==='.priority'){newEventCache=this.filter_.updatePriority(oldViewCache.getEventCache().getNode(),changedSnap);newViewCache=oldViewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=changePath.popFront();var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild=void 0;if(childChangePath.isEmpty()){// Child overwrite, we can replace the child
newChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(childChangePath.getBack()==='.priority'&&childNode.getChild(childChangePath.parent()).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the
// server will send down the priority in the update, so ignore for now
newChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available
newChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventSnap,oldEventSnap.isFullyInitialized(),this.filter_.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;};/**
     * @param {!ViewCache} viewCache
     * @param {string} childKey
     * @return {boolean}
     * @private
     */ViewProcessor.cacheHasChild_=function(viewCache,childKey){return viewCache.getEventCache().isCompleteForChild(childKey);};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {ImmutableTree.<!Node>} changedChildren
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.applyUserMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,accumulator){var _this=this;// HACK: In the case of a limit query, there may be some changes that bump things out of the
// window leaving room for new items.  It's important we process these changes first, so we
// iterate the changes twice, first processing any that affect items currently in view.
// TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
// and event snap.  I'm not sure if this will result in edge cases when a child is in one but
// not the other.
var curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(!ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;};/**
     * @param {!Node} node
     * @param {ImmutableTree.<!Node>} merge
     * @return {!Node}
     * @private
     */ViewProcessor.prototype.applyMerge_=function(node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!ImmutableTree.<!Node>} changedChildren
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache
     * @param {boolean} filterServerNode
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.applyServerMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){var _this=this;// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and
// wait for the complete data update coming soon.
if(viewCache.getServerCache().getNode().isEmpty()&&!viewCache.getServerCache().isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the
// window leaving room for new items.  It's important we process these changes first, so we
// iterate the changes twice, first processing any that affect items currently in view.
// TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
// and event snap.  I'm not sure if this will result in edge cases when a child is in one but
// not the other.
var curViewCache=viewCache;var viewMergeTree;if(path.isEmpty()){viewMergeTree=changedChildren;}else{viewMergeTree=ImmutableTree.Empty.setTree(path,changedChildren);}var serverNode=viewCache.getServerCache().getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.getServerCache().isCompleteForChild(childKey)&&childMergeTree.value==null;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childMergeTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} ackPath
     * @param {!ImmutableTree<!boolean>} affectedTree
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.ackUserWrite_=function(viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writesCache.shadowingWrite(ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered
var filterServerNode=viewCache.getServerCache().isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update
// now that it won't be shadowed.
var serverCache=viewCache.getServerCache();if(affectedTree.value!=null){// This is an overwrite.
if(ackPath.isEmpty()&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return this.applyServerOverwrite_(viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(ackPath.isEmpty()){// This is a goofy edge case where we are acking data at this location but don't have full data.  We
// should just re-apply whatever we have in our cache as a merge.
var changedChildren_1=ImmutableTree.Empty;serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren_1=changedChildren_1.set(new Path(name),node);});return this.applyServerMerge_(viewCache,ackPath,changedChildren_1,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.
var changedChildren_2=ImmutableTree.Empty;affectedTree.foreach(function(mergePath,value){var serverCachePath=ackPath.child(mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren_2=changedChildren_2.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return this.applyServerMerge_(viewCache,ackPath,changedChildren_2,writesCache,completeCache,filterServerNode,accumulator);}};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!WriteTreeRef} writesCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.listenComplete_=function(viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.getServerCache();var newViewCache=viewCache.updateServerSnap(oldServerNode.getNode(),oldServerNode.isFullyInitialized()||path.isEmpty(),oldServerNode.isFiltered());return this.generateEventCacheAfterServerEvent_(newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);};/**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeServerCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */ViewProcessor.prototype.revertUserWrite_=function(viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writesCache.shadowingWrite(path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.getEventCache().getNode();var newEventCache=void 0;if(path.isEmpty()||path.getFront()==='.priority'){var newNode=void 0;if(viewCache.getServerCache().isFullyInitialized()){newNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());}else{var serverChildren=viewCache.getServerCache().getNode();Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writesCache.calcCompleteEventChildren(serverChildren);}newNode=newNode;newEventCache=this.filter_.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=path.getFront();var newChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());if(newChild==null&&viewCache.getServerCache().isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=this.filter_.updateChild(oldEventCache,childKey,newChild,path.popFront(),source,accumulator);}else if(viewCache.getEventCache().getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any
newEventCache=this.filter_.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,path.popFront(),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.getServerCache().isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node
complete=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());if(complete.isLeafNode()){newEventCache=this.filter_.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.getServerCache().isFullyInitialized()||writesCache.shadowingWrite(Path.Empty)!=null;return viewCache.updateEventSnap(newEventCache,complete,this.filter_.filtersNodes());}};return ViewProcessor;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An EventGenerator is used to convert "raw" changes (Change) as computed by the
 * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()
 * for details.
 *
 * @constructor
 */var EventGenerator=/** @class */function(){/**
     *
     * @param {!Query} query_
     */function EventGenerator(query_){this.query_=query_;/**
         * @private
         * @type {!Index}
         */this.index_=this.query_.getQueryParams().getIndex();}/**
     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of
     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.
     *
     * Notes:
     *  - child_moved events will be synthesized at this time for any child_changed events that affect
     *    our index.
     *  - prevName will be calculated based on the index ordering.
     *
     * @param {!Array.<!Change>} changes
     * @param {!Node} eventCache
     * @param {!Array.<!EventRegistration>} eventRegistrations
     * @return {!Array.<!Event>}
     */EventGenerator.prototype.generateEventsForChanges=function(changes,eventCache,eventRegistrations){var _this=this;var events=[];var moves=[];changes.forEach(function(change){if(change.type===Change.CHILD_CHANGED&&_this.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(Change.childMovedChange(change.childName,change.snapshotNode));}});this.generateEventsForType_(events,Change.CHILD_REMOVED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_ADDED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_MOVED,moves,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_CHANGED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.VALUE,changes,eventRegistrations,eventCache);return events;};/**
     * Given changes of a single change type, generate the corresponding events.
     *
     * @param {!Array.<!Event>} events
     * @param {!string} eventType
     * @param {!Array.<!Change>} changes
     * @param {!Array.<!EventRegistration>} registrations
     * @param {!Node} eventCache
     * @private
     */EventGenerator.prototype.generateEventsForType_=function(events,eventType,changes,registrations,eventCache){var _this=this;var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(this.compareChanges_.bind(this));filteredChanges.forEach(function(change){var materializedChange=_this.materializeSingleChange_(change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,_this.query_));}});});};/**
     * @param {!Change} change
     * @param {!Node} eventCache
     * @return {!Change}
     * @private
     */EventGenerator.prototype.materializeSingleChange_=function(change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(/** @type {!string} */change.childName,change.snapshotNode,this.index_);return change;}};/**
     * @param {!Change} a
     * @param {!Change} b
     * @return {number}
     * @private
     */EventGenerator.prototype.compareChanges_=function(a,b){if(a.childName==null||b.childName==null){throw Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["g" /* assertionError */])('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return this.index_.compare(aWrapped,bWrapped);};return EventGenerator;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A view represents a specific location and query that has 1 or more event registrations.
 *
 * It does several things:
 *  - Maintains the list of event registrations for this location/query.
 *  - Maintains a cache of the data visible for this location/query.
 *  - Applies new operations (via applyOperation), updates the cache, and based on the event
 *    registrations returns the set of events to be raised.
 * @constructor
 */var View=/** @class */function(){/**
     *
     * @param {!Query} query_
     * @param {!ViewCache} initialViewCache
     */function View(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];var params=this.query_.getQueryParams();var indexFilter=new IndexedFilter(params.getIndex());var filter=params.getNodeFilter();/**
         * @type {ViewProcessor}
         * @private
         */this.processor_=new ViewProcessor(filter);var initialServerCache=initialViewCache.getServerCache();var initialEventCache=initialViewCache.getEventCache();// Don't filter server node with other filter than index, wait for tagged listen
var serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());/**
         * @type {!ViewCache}
         * @private
         */this.viewCache_=new ViewCache(newEventCache,newServerCache);/**
         * @type {!EventGenerator}
         * @private
         */this.eventGenerator_=new EventGenerator(this.query_);}/**
     * @return {!Query}
     */View.prototype.getQuery=function(){return this.query_;};/**
     * @return {?Node}
     */View.prototype.getServerCache=function(){return this.viewCache_.getServerCache().getNode();};/**
     * @param {!Path} path
     * @return {?Node}
     */View.prototype.getCompleteServerCache=function(path){var cache=this.viewCache_.getCompleteServerSnap();if(cache){// If this isn't a "loadsAllData" view, then cache isn't actually a complete cache and
// we need to see if it contains the child we're interested in.
if(this.query_.getQueryParams().loadsAllData()||!path.isEmpty()&&!cache.getImmediateChild(path.getFront()).isEmpty()){return cache.getChild(path);}}return null;};/**
     * @return {boolean}
     */View.prototype.isEmpty=function(){return this.eventRegistrations_.length===0;};/**
     * @param {!EventRegistration} eventRegistration
     */View.prototype.addEventRegistration=function(eventRegistration){this.eventRegistrations_.push(eventRegistration);};/**
     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.
     */View.prototype.removeEventRegistration=function(eventRegistration,cancelError){var cancelEvents=[];if(cancelError){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(eventRegistration==null,'A cancel should cancel all event registrations.');var path_1=this.query_.path;this.eventRegistrations_.forEach(function(registration){cancelError/** @type {!Error} */=cancelError;var maybeEvent=registration.createCancelEvent(cancelError,path_1);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<this.eventRegistrations_.length;++i){var existing=this.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one
remaining=remaining.concat(this.eventRegistrations_.slice(i+1));break;}}this.eventRegistrations_=remaining;}else{this.eventRegistrations_=[];}return cancelEvents;};/**
     * Applies the given Operation, updates our cache, and returns the appropriate events.
     *
     * @param {!Operation} operation
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeServerCache
     * @return {!Array.<!Event>}
     */View.prototype.applyOperation=function(operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.viewCache_.getCompleteServerSnap(),'We should always have a full cache before handling merges');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.viewCache_.getCompleteEventSnap(),'Missing event cache, even though we have a server cache');}var oldViewCache=this.viewCache_;var result=this.processor_.applyOperation(oldViewCache,operation,writesCache,completeServerCache);this.processor_.assertIndexed(result.viewCache);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(result.viewCache.getServerCache().isFullyInitialized()||!oldViewCache.getServerCache().isFullyInitialized(),'Once a server snap is complete, it should never go back');this.viewCache_=result.viewCache;return this.generateEventsForChanges_(result.changes,result.viewCache.getEventCache().getNode(),null);};/**
     * @param {!EventRegistration} registration
     * @return {!Array.<!Event>}
     */View.prototype.getInitialEvents=function(registration){var eventSnap=this.viewCache_.getEventCache();var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(Change.childAddedChange(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(Change.valueChange(eventSnap.getNode()));}return this.generateEventsForChanges_(initialChanges,eventSnap.getNode(),registration);};/**
     * @private
     * @param {!Array.<!Change>} changes
     * @param {!Node} eventCache
     * @param {EventRegistration=} eventRegistration
     * @return {!Array.<!Event>}
     */View.prototype.generateEventsForChanges_=function(changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:this.eventRegistrations_;return this.eventGenerator_.generateEventsForChanges(changes,eventCache,registrations);};return View;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var __referenceConstructor$1;/**
 * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to
 * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes
 * and user writes (set, transaction, update).
 *
 * It's responsible for:
 *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).
 *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,
 *    applyUserOverwrite, etc.)
 */var SyncPoint=/** @class */function(){function SyncPoint(){/**
         * The Views being tracked at this location in the tree, stored as a map where the key is a
         * queryId and the value is the View for that query.
         *
         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).
         */this.views=new Map();}Object.defineProperty(SyncPoint,"__referenceConstructor",{get:function get(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(__referenceConstructor$1,'Reference.ts has not been loaded');return __referenceConstructor$1;},set:function set(val){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!__referenceConstructor$1,'__referenceConstructor has already been defined');__referenceConstructor$1=val;},enumerable:true,configurable:true});SyncPoint.prototype.isEmpty=function(){return this.views.size===0;};SyncPoint.prototype.applyOperation=function(operation,writesCache,optCompleteServerCache){var e_1,_a;var queryId=operation.source.queryId;if(queryId!==null){var view=this.views.get(queryId);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(view!=null,'SyncTree gave us an op for an invalid query.');return view.applyOperation(operation,writesCache,optCompleteServerCache);}else{var events=[];try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;events=events.concat(view.applyOperation(operation,writesCache,optCompleteServerCache));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return events;}};/**
     * Add an event callback for the specified query.
     *
     * @param {!Query} query
     * @param {!EventRegistration} eventRegistration
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache Complete server cache, if we have it.
     * @param {boolean} serverCacheComplete
     * @return {!Array.<!Event>} Events to raise.
     */SyncPoint.prototype.addEventRegistration=function(query,eventRegistration,writesCache,serverCache,serverCacheComplete){var queryId=query.queryIdentifier();var view=this.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node
var eventCache=writesCache.calcCompleteEventCache(serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writesCache.calcCompleteEventChildren(serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=new ViewCache(new CacheNode(/** @type {!Node} */eventCache,eventCacheComplete,false),new CacheNode(/** @type {!Node} */serverCache,serverCacheComplete,false));view=new View(query,viewCache);this.views.set(queryId,view);}// This is guaranteed to exist now, we just created anything that was missing
view.addEventRegistration(eventRegistration);return view.getInitialEvents(eventRegistration);};/**
     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.
     *
     * If query is the default query, we'll check all views for the specified eventRegistration.
     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).
     *
     * @param {!Query} query
     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events
     */SyncPoint.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var e_2,_a;var queryId=query.queryIdentifier();var removed=[];var cancelEvents=[];var hadCompleteView=this.hasCompleteView();if(queryId==='default'){try{// When you do ref.off(...), we search all views for the registration to remove.
for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.views.entries()),_c=_b.next();!_c.done;_c=_b.next()){var _d=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["e" /* __read */])(_c.value,2),viewQueryId=_d[0],view=_d[1];cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){this.views.delete(viewQueryId);// We'll deal with complete views later.
if(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}else{// remove the callback from the specific view.
var view=this.views.get(queryId);if(view){cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){this.views.delete(queryId);// We'll deal with complete views later.
if(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}}}if(hadCompleteView&&!this.hasCompleteView()){// We removed our last complete view.
removed.push(new SyncPoint.__referenceConstructor(query.repo,query.path));}return{removed:removed,events:cancelEvents};};SyncPoint.prototype.getQueryViews=function(){var e_3,_a;var result=[];try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(!view.getQuery().getQueryParams().loadsAllData()){result.push(view);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}return result;};/**
     * @param path The path to the desired complete snapshot
     * @return A complete cache, if it exists
     */SyncPoint.prototype.getCompleteServerCache=function(path){var e_4,_a;var serverCache=null;try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;serverCache=serverCache||view.getCompleteServerCache(path);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_4)throw e_4.error;}}return serverCache;};SyncPoint.prototype.viewForQuery=function(query){var params=query.getQueryParams();if(params.loadsAllData()){return this.getCompleteView();}else{var queryId=query.queryIdentifier();return this.views.get(queryId);}};SyncPoint.prototype.viewExistsForQuery=function(query){return this.viewForQuery(query)!=null;};SyncPoint.prototype.hasCompleteView=function(){return this.getCompleteView()!=null;};SyncPoint.prototype.getCompleteView=function(){var e_5,_a;try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(view.getQuery().getQueryParams().loadsAllData()){return view;}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_5)throw e_5.error;}}return null;};return SyncPoint;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with
 * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write
 * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write
 * to reflect the write added.
 */var CompoundWrite=/** @class */function(){function CompoundWrite(writeTree_){this.writeTree_=writeTree_;}CompoundWrite.prototype.addWrite=function(path,node){if(path.isEmpty()){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=Path.relativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(this.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var newWriteTree=this.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}};CompoundWrite.prototype.addWrites=function(path,updates){var newWrite=this;each(updates,function(childKey,node){newWrite=newWrite.addWrite(path.child(childKey),node);});return newWrite;};/**
     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher
     * location, which must be removed by calling this method with that path.
     *
     * @param path The path at which a write and all deeper writes should be removed
     * @return {!CompoundWrite} The new CompoundWrite with the removed path
     */CompoundWrite.prototype.removeWrite=function(path){if(path.isEmpty()){return CompoundWrite.Empty;}else{var newWriteTree=this.writeTree_.setTree(path,ImmutableTree.Empty);return new CompoundWrite(newWriteTree);}};/**
     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be
     * considered "complete".
     *
     * @param path The path to check for
     * @return Whether there is a complete write at that path
     */CompoundWrite.prototype.hasCompleteWrite=function(path){return this.getCompleteNode(path)!=null;};/**
     * Returns a node for a path if and only if the node is a "complete" overwrite at that path. This will not aggregate
     * writes from deeper paths, but will return child nodes from a more shallow path.
     *
     * @param path The path to get a complete write
     * @return The node if complete at that path, or null otherwise.
     */CompoundWrite.prototype.getCompleteNode=function(path){var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path,path));}else{return null;}};/**
     * Returns all children that are guaranteed to be a complete overwrite.
     *
     * @return A list of all complete children.
     */CompoundWrite.prototype.getCompleteChildren=function(){var children=[];var node=this.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.
if(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{this.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;};CompoundWrite.prototype.childCompoundWrite=function(path){if(path.isEmpty()){return this;}else{var shadowingNode=this.getCompleteNode(path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(this.writeTree_.subtree(path));}}};/**
     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.
     * @return Whether this CompoundWrite is empty
     */CompoundWrite.prototype.isEmpty=function(){return this.writeTree_.isEmpty();};/**
     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the
     * node
     * @param node The node to apply this CompoundWrite to
     * @return The node with all writes applied
     */CompoundWrite.prototype.apply=function(node){return applySubtreeWrite(Path.Empty,this.writeTree_,node);};CompoundWrite.Empty=new CompoundWrite(new ImmutableTree(null));return CompoundWrite;}();function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here
return node.updateChild(relativePath,writeTree.value);}else{var priorityWrite_1=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget
// to apply priorities to empty nodes that are later filled
Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite_1=childTree.value;}else{node=applySubtreeWrite(relativePath.child(childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty
if(!node.getChild(relativePath).isEmpty()&&priorityWrite_1!==null){node=node.updateChild(relativePath.child('.priority'),priorityWrite_1);}return node;}}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them
 * with underlying server data (to create "event cache" data).  Pending writes are added with addOverwrite()
 * and addMerge(), and removed with removeWrite().
 *
 * @constructor
 */var WriteTree=/** @class */function(){function WriteTree(){/**
         * A tree tracking the result of applying all visible writes.  This does not include transactions with
         * applyLocally=false or writes that are completely shadowed by other writes.
         *
         * @type {!CompoundWrite}
         * @private
         */this.visibleWrites_=CompoundWrite.Empty;/**
         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary
         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also
         * used by transactions).
         *
         * @type {!Array.<!WriteRecord>}
         * @private
         */this.allWrites_=[];this.lastWriteId_=-1;}/**
     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.
     *
     * @param {!Path} path
     * @return {!WriteTreeRef}
     */WriteTree.prototype.childWrites=function(path){return new WriteTreeRef(path,this);};/**
     * Record a new overwrite from user code.
     *
     * @param {!Path} path
     * @param {!Node} snap
     * @param {!number} writeId
     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches
     */WriteTree.prototype.addOverwrite=function(path,snap,writeId,visible){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(writeId>this.lastWriteId_,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}this.allWrites_.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){this.visibleWrites_=this.visibleWrites_.addWrite(path,snap);}this.lastWriteId_=writeId;};/**
     * Record a new merge from user code.
     *
     * @param {!Path} path
     * @param {!Object.<string, !Node>} changedChildren
     * @param {!number} writeId
     */WriteTree.prototype.addMerge=function(path,changedChildren,writeId){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(writeId>this.lastWriteId_,'Stacking an older merge on top of newer ones');this.allWrites_.push({path:path,children:changedChildren,writeId:writeId,visible:true});this.visibleWrites_=this.visibleWrites_.addWrites(path,changedChildren);this.lastWriteId_=writeId;};/**
     * @param {!number} writeId
     * @return {?WriteRecord}
     */WriteTree.prototype.getWrite=function(writeId){for(var i=0;i<this.allWrites_.length;i++){var record=this.allWrites_[i];if(record.writeId===writeId){return record;}}return null;};/**
     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates
     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.
     *
     * @param {!number} writeId
     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise
     * events as a result).
     */WriteTree.prototype.removeWrite=function(writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied
// out of order.
//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;
//assert(validClear, "Either we don't have this write, or it's the first one in the queue");
var _this=this;var idx=this.allWrites_.findIndex(function(s){return s.writeId===writeId;});Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=this.allWrites_[idx];this.allWrites_.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=this.allWrites_.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=this.allWrites_[i];if(currentWrite.visible){if(i>=idx&&this.recordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.
removedWriteWasVisible=false;}else if(writeToRemove.path.contains(currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).
removedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.
this.resetTree_();return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.
if(writeToRemove.snap){this.visibleWrites_=this.visibleWrites_.removeWrite(writeToRemove.path);}else{var children=writeToRemove.children;each(children,function(childName){_this.visibleWrites_=_this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));});}return true;}};/**
     * Return a complete snapshot for the given path if there's visible write data at that path, else null.
     * No server data is considered.
     *
     * @param {!Path} path
     * @return {?Node}
     */WriteTree.prototype.getCompleteWriteData=function(path){return this.visibleWrites_.getCompleteNode(path);};/**
     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden
     * writes), attempt to calculate a complete snapshot for the given path
     *
     * @param {!Path} treePath
     * @param {?Node} completeServerCache
     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded
     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
     * @return {?Node}
     */WriteTree.prototype.calcCompleteEventCache=function(treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=this.visibleWrites_.getCompleteNode(treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=this.visibleWrites_.childCompoundWrite(treePath);if(subMerge.isEmpty()){return completeServerCache;}else if(completeServerCache==null&&!subMerge.hasCompleteWrite(Path.Empty)){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow
return null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return subMerge.apply(layeredCache);}}}else{var merge=this.visibleWrites_.childCompoundWrite(treePath);if(!includeHiddenWrites&&merge.isEmpty()){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null
if(!includeHiddenWrites&&completeServerCache==null&&!merge.hasCompleteWrite(Path.Empty)){return null;}else{var filter=function filter(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(write.path.contains(treePath)||treePath.contains(write.path));};var mergeAtPath=WriteTree.layerTree_(this.allWrites_,filter,treePath);var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return mergeAtPath.apply(layeredCache);}}}};/**
     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.
     * Used when creating new views, to pre-fill their complete event children snapshot.
     *
     * @param {!Path} treePath
     * @param {?ChildrenNode} completeServerChildren
     * @return {!ChildrenNode}
     */WriteTree.prototype.calcCompleteEventChildren=function(treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=this.visibleWrites_.getCompleteNode(treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.
topLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this
// We know we don't have a top-level set, so just enumerate existing children
var merge_1=this.visibleWrites_.childCompoundWrite(treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=merge_1.childCompoundWrite(new Path(childName)).apply(childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set
merge_1.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have
// Note that we can return an empty snap if we have a defined delete
var merge=this.visibleWrites_.childCompoundWrite(treePath);merge.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}};/**
     * Given that the underlying server data has updated, determine what, if anything, needs to be
     * applied to the event cache.
     *
     * Possibilities:
     *
     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
     *
     * 2. Some write is completely shadowing. No events to be raised
     *
     * 3. Is partially shadowed. Events
     *
     * Either existingEventSnap or existingServerSnap must exist
     *
     * @param {!Path} treePath
     * @param {!Path} childPath
     * @param {?Node} existingEventSnap
     * @param {?Node} existingServerSnap
     * @return {?Node}
     */WriteTree.prototype.calcEventCacheAfterServerOverwrite=function(treePath,childPath,existingEventSnap,existingServerSnap){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=treePath.child(childPath);if(this.visibleWrites_.hasCompleteWrite(path)){// At this point we can probably guarantee that we're in case 2, meaning no events
// May need to check visibility while doing the findRootMostValueAndPath call
return null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.
var childMerge=this.visibleWrites_.childCompoundWrite(path);if(childMerge.isEmpty()){// We're not shadowing at all. Case 1
return existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap
// However this is tricky to find out, since user updates don't necessary change the server
// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server
// adds nodes, but doesn't change any existing writes. It is therefore not enough to
// only check if the updates change the serverNode.
// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?
return childMerge.apply(existingServerSnap.getChild(childPath));}}};/**
     * Returns a complete child for a given server snap after applying all user writes or null if there is no
     * complete child for this ChildKey.
     *
     * @param {!Path} treePath
     * @param {!string} childKey
     * @param {!CacheNode} existingServerSnap
     * @return {?Node}
     */WriteTree.prototype.calcCompleteChild=function(treePath,childKey,existingServerSnap){var path=treePath.child(childKey);var shadowingNode=this.visibleWrites_.getCompleteNode(path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=this.visibleWrites_.childCompoundWrite(path);return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}};/**
     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
     * a higher path, this will return the child of that write relative to the write and this path.
     * Returns null if there is no write at this path.
     */WriteTree.prototype.shadowingWrite=function(path){return this.visibleWrites_.getCompleteNode(path);};/**
     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
     * the window, but may now be in the window.
     */WriteTree.prototype.calcIndexedSlice=function(treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=this.visibleWrites_.childCompoundWrite(treePath);var shadowingNode=merge.getCompleteNode(Path.Empty);if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=merge.apply(completeServerData);}else{// no children to iterate on
return[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}};WriteTree.prototype.recordContainsPath_=function(writeRecord,path){if(writeRecord.snap){return writeRecord.path.contains(path);}else{for(var childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&writeRecord.path.child(childName).contains(path)){return true;}}return false;}};/**
     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots
     */WriteTree.prototype.resetTree_=function(){this.visibleWrites_=WriteTree.layerTree_(this.allWrites_,WriteTree.DefaultFilter_,Path.Empty);if(this.allWrites_.length>0){this.lastWriteId_=this.allWrites_[this.allWrites_.length-1].writeId;}else{this.lastWriteId_=-1;}};/**
     * The default filter used when constructing the tree. Keep everything that's visible.
     */WriteTree.DefaultFilter_=function(write){return write.visible;};/**
     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of
     * event data at that path.
     */WriteTree.layerTree_=function(writes,filter,treeRoot){var compoundWrite=CompoundWrite.Empty;for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:
// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction
// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction
if(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrite(relativePath,write.snap);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);compoundWrite=compoundWrite.addWrite(Path.Empty,write.snap.getChild(relativePath));}}else if(write.children){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrites(relativePath,write.children);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);if(relativePath.isEmpty()){compoundWrite=compoundWrite.addWrites(Path.Empty,write.children);}else{var child=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(write.children,relativePath.getFront());if(child){// There exists a child in this node that matches the root path
var deepNode=child.getChild(relativePath.popFront());compoundWrite=compoundWrite.addWrite(Path.Empty,deepNode);}}}}else{throw Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["g" /* assertionError */])('WriteRecord should have .snap or .children');}}}return compoundWrite;};return WriteTree;}();/**
 * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods
 * just proxy to the underlying WriteTree.
 *
 * @constructor
 */var WriteTreeRef=/** @class */function(){/**
     * @param {!Path} path
     * @param {!WriteTree} writeTree
     */function WriteTreeRef(path,writeTree){this.treePath_=path;this.writeTree_=writeTree;}/**
     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used
     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node
     * can lead to a more expensive calculation.
     *
     * @param {?Node} completeServerCache
     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.
     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
     * @return {?Node}
     */WriteTreeRef.prototype.calcCompleteEventCache=function(completeServerCache,writeIdsToExclude,includeHiddenWrites){return this.writeTree_.calcCompleteEventCache(this.treePath_,completeServerCache,writeIdsToExclude,includeHiddenWrites);};/**
     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a
     * mix of the given server data and write data.
     *
     * @param {?ChildrenNode} completeServerChildren
     * @return {!ChildrenNode}
     */WriteTreeRef.prototype.calcCompleteEventChildren=function(completeServerChildren){return this.writeTree_.calcCompleteEventChildren(this.treePath_,completeServerChildren);};/**
     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,
     * if anything, needs to be applied to the event cache.
     *
     * Possibilities:
     *
     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
     *
     * 2. Some write is completely shadowing. No events to be raised
     *
     * 3. Is partially shadowed. Events should be raised
     *
     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert
     *
     * @param {!Path} path
     * @param {?Node} existingEventSnap
     * @param {?Node} existingServerSnap
     * @return {?Node}
     */WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite=function(path,existingEventSnap,existingServerSnap){return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_,path,existingEventSnap,existingServerSnap);};/**
     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
     * a higher path, this will return the child of that write relative to the write and this path.
     * Returns null if there is no write at this path.
     *
     * @param {!Path} path
     * @return {?Node}
     */WriteTreeRef.prototype.shadowingWrite=function(path){return this.writeTree_.shadowingWrite(this.treePath_.child(path));};/**
     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
     * the window, but may now be in the window
     *
     * @param {?Node} completeServerData
     * @param {!NamedNode} startPost
     * @param {!number} count
     * @param {boolean} reverse
     * @param {!Index} index
     * @return {!Array.<!NamedNode>}
     */WriteTreeRef.prototype.calcIndexedSlice=function(completeServerData,startPost,count,reverse,index){return this.writeTree_.calcIndexedSlice(this.treePath_,completeServerData,startPost,count,reverse,index);};/**
     * Returns a complete child for a given server snap after applying all user writes or null if there is no
     * complete child for this ChildKey.
     *
     * @param {!string} childKey
     * @param {!CacheNode} existingServerCache
     * @return {?Node}
     */WriteTreeRef.prototype.calcCompleteChild=function(childKey,existingServerCache){return this.writeTree_.calcCompleteChild(this.treePath_,childKey,existingServerCache);};/**
     * Return a WriteTreeRef for a child.
     *
     * @param {string} childName
     * @return {!WriteTreeRef}
     */WriteTreeRef.prototype.child=function(childName){return new WriteTreeRef(this.treePath_.child(childName),this.writeTree_);};return WriteTreeRef;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * SyncTree is the central class for managing event callback registration, data caching, views
 * (query processing), and event generation.  There are typically two SyncTree instances for
 * each Repo, one for the normal Firebase data, and one for the .info data.
 *
 * It has a number of responsibilities, including:
 *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).
 *  - Applying and caching data changes for user set(), transaction(), and update() calls
 *    (applyUserOverwrite(), applyUserMerge()).
 *  - Applying and caching data changes for server data changes (applyServerOverwrite(),
 *    applyServerMerge()).
 *  - Generating user-facing events for server and user changes (all of the apply* methods
 *    return the set of events that need to be raised as a result).
 *  - Maintaining the appropriate set of server listens to ensure we are always subscribed
 *    to the correct set of paths and queries to satisfy the current set of user event
 *    callbacks (listens are started/stopped using the provided listenProvider).
 *
 * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual
 * events are returned to the caller rather than raised synchronously.
 *
 * @constructor
 */var SyncTree=/** @class */function(){/**
     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening
     *   to server data.
     */function SyncTree(listenProvider_){this.listenProvider_=listenProvider_;/**
         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.
         */this.syncPointTree_=ImmutableTree.Empty;/**
         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).
         */this.pendingWriteTree_=new WriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();}/**
     * Apply the data changes for a user-generated set() or transaction() call.
     *
     * @return Events to raise.
     */SyncTree.prototype.applyUserOverwrite=function(path,newData,writeId,visible){// Record pending write.
this.pendingWriteTree_.addOverwrite(path,newData,writeId,visible);if(!visible){return[];}else{return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User,path,newData));}};/**
     * Apply the data from a user-generated update() call
     *
     * @return Events to raise.
     */SyncTree.prototype.applyUserMerge=function(path,changedChildren,writeId){// Record pending merge.
this.pendingWriteTree_.addMerge(path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.User,path,changeTree));};/**
     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().
     *
     * @param revert True if the given write failed and needs to be reverted
     * @return Events to raise.
     */SyncTree.prototype.ackUserWrite=function(writeId,revert){if(revert===void 0){revert=false;}var write=this.pendingWriteTree_.getWrite(writeId);var needToReevaluate=this.pendingWriteTree_.removeWrite(writeId);if(!needToReevaluate){return[];}else{var affectedTree_1=ImmutableTree.Empty;if(write.snap!=null){// overwrite
affectedTree_1=affectedTree_1.set(Path.Empty,true);}else{each(write.children,function(pathString,node){affectedTree_1=affectedTree_1.set(new Path(pathString),node);});}return this.applyOperationToSyncPoints_(new AckUserWrite(write.path,affectedTree_1,revert));}};/**
     * Apply new server data for the specified path..
     *
     * @return Events to raise.
     */SyncTree.prototype.applyServerOverwrite=function(path,newData){return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server,path,newData));};/**
     * Apply new server data to be merged in at the specified path.
     *
     * @return Events to raise.
     */SyncTree.prototype.applyServerMerge=function(path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server,path,changeTree));};/**
     * Apply a listen complete for a query
     *
     * @return Events to raise.
     */SyncTree.prototype.applyListenComplete=function(path){return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server,path));};/**
     * Apply new server data for the specified tagged query.
     *
     * @return Events to raise.
     */SyncTree.prototype.applyTaggedQueryOverwrite=function(path,snap,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey!=null){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new Overwrite(OperationSource.forServerTaggedQuery(queryId),relativePath,snap);return this.applyTaggedOperation_(queryPath,op);}else{// Query must have been removed already
return[];}};/**
     * Apply server data to be merged in for the specified tagged query.
     *
     * @return Events to raise.
     */SyncTree.prototype.applyTaggedQueryMerge=function(path,changedChildren,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(OperationSource.forServerTaggedQuery(queryId),relativePath,changeTree);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update
return[];}};/**
     * Apply a listen complete for a tagged query
     *
     * @return Events to raise.
     */SyncTree.prototype.applyTaggedListenComplete=function(path,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new ListenComplete(OperationSource.forServerTaggedQuery(queryId),relativePath);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update
return[];}};/**
     * Add an event callback for the specified query.
     *
     * @return Events to raise.
     */SyncTree.prototype.addEventRegistration=function(query,eventRegistration){var path=query.path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.
// Consider optimizing this once there's a better understanding of what actual behavior will be.
this.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=Path.relativePath(pathToSyncPoint,path);serverCache=serverCache||sp.getCompleteServerCache(relativePath);foundAncestorDefaultView=foundAncestorDefaultView||sp.hasCompleteView();});var syncPoint=this.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();this.syncPointTree_=this.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPoint.hasCompleteView();serverCache=serverCache||syncPoint.getCompleteServerCache(Path.Empty);}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=this.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=childSyncPoint.getCompleteServerCache(Path.Empty);if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPoint.viewExistsForQuery(query);if(!viewAlreadyExists&&!query.getQueryParams().loadsAllData()){// We need to track a tag for this query
var queryKey=SyncTree.makeQueryKey_(query);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!this.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');var tag=SyncTree.getNextQueryTag_();this.queryToTagMap.set(queryKey,tag);this.tagToQueryMap.set(tag,queryKey);}var writesCache=this.pendingWriteTree_.childWrites(path);var events=syncPoint.addEventRegistration(query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view/** @type !View */=syncPoint.viewForQuery(query);events=events.concat(this.setupListener_(query,view));}return events;};/**
     * Remove event callback(s).
     *
     * If query is the default query, we'll check all queries for the specified eventRegistration.
     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.
     *
     * @param eventRegistration If null, all callbacks are removed.
     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return Cancel events, if cancelError was provided.
     */SyncTree.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var _this=this;// Find the syncPoint first. Then deal with whether or not it has matching listeners
var path=query.path;var maybeSyncPoint=this.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without
// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and
// not loadsAllData().
if(maybeSyncPoint&&(query.queryIdentifier()==='default'||maybeSyncPoint.viewExistsForQuery(query))){/**
             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}
             */var removedAndEvents=maybeSyncPoint.removeEventRegistration(query,eventRegistration,cancelError);if(maybeSyncPoint.isEmpty()){this.syncPointTree_=this.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process
// We may also not have removed a default listener, in which case all of the descendant listeners should already be
// properly set up.
//
// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of
// queryId === 'default'
var removingDefault=-1!==removed.findIndex(function(query){return query.getQueryParams().loadsAllData();});var covered=this.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return parentSyncPoint.hasCompleteView();});if(removingDefault&&!covered){var subtree=this.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the
// removal
if(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send
var newViews=this.collectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.
for(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.getQuery();var listener=this.createListenerForView_(view);this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery),this.tagForQuery_(newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query
// The above block has us covered in terms of making sure we're set up on listens lower in the tree.
// Also, note that if we have a cancelError, it's already been removed at the provider level.
if(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one
// default. Otherwise, we need to iterate through and cancel each individual query
if(removingDefault){// We don't tag default listeners
var defaultTag=null;this.listenProvider_.stopListening(SyncTree.queryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=_this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));_this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens
this.removeTags_(removed);}return cancelEvents;};/**
     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above
     * it, but as this is only used by transaction code, that should always be the case anyways.
     *
     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.
     *
     * @param path The path to the data we want
     * @param writeIdsToExclude A specific set to be excluded
     */SyncTree.prototype.calcCompleteEventCache=function(path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=this.pendingWriteTree_;var serverCache=this.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=Path.relativePath(pathSoFar,path);var serverCache=syncPoint.getCompleteServerCache(relativePath);if(serverCache){return serverCache;}});return writeTree.calcCompleteEventCache(path,serverCache,writeIdsToExclude,includeHiddenSets);};/**
     * This collapses multiple unfiltered views into a single view, since we only need a single
     * listener for them.
     */SyncTree.prototype.collectDistinctViewsForSubTree_=function(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){var completeView=maybeChildSyncPoint.getCompleteView();return[completeView];}else{// No complete view here, flatten any deeper listens into an array
var views_1=[];if(maybeChildSyncPoint){views_1=maybeChildSyncPoint.getQueryViews();}each(childMap,function(_key,childViews){views_1=views_1.concat(childViews);});return views_1;}});};SyncTree.prototype.removeTags_=function(queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery.getQueryParams().loadsAllData()){// We should have a tag for this
var removedQueryKey=SyncTree.makeQueryKey_(removedQuery);var removedQueryTag=this.queryToTagMap.get(removedQueryKey);this.queryToTagMap.delete(removedQueryKey);this.tagToQueryMap.delete(removedQueryTag);}}};/**
     * Normalizes a query to a query we send the server for listening
     *
     * @return The normalized query
     */SyncTree.queryForListening_=function(query){if(query.getQueryParams().loadsAllData()&&!query.getQueryParams().isDefault()){// We treat queries that load all data as default queries
// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits
// from Query
return query.getRef();}else{return query;}};/**
     * For a given new listen, manage the de-duplication of outstanding subscriptions.
     *
     * @return This method can return events to support synchronous data sources
     */SyncTree.prototype.setupListener_=function(query,view){var path=query.path;var tag=this.tagForQuery_(query);var listener=this.createListenerForView_(view);var events=this.listenProvider_.startListening(SyncTree.queryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=this.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we
// may need to shadow other listens as well.
if(tag){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!subtree.value.hasCompleteView(),"If we're adding a query, it shouldn't be shadowed");}else{// Shadow everything at or below this location, this is a default listener.
var queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!relativePath.isEmpty()&&maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){return[maybeChildSyncPoint.getCompleteView().getQuery()];}else{// No default listener here, flatten any deeper queries into an array
var queries_1=[];if(maybeChildSyncPoint){queries_1=queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function(view){return view.getQuery();}));}each(childMap,function(_key,childQueries){queries_1=queries_1.concat(childQueries);});return queries_1;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop),this.tagForQuery_(queryToStop));}}return events;};SyncTree.prototype.createListenerForView_=function(view){var _this=this;var query=view.getQuery();var tag=this.tagForQuery_(query);return{hashFn:function hashFn(){var cache=view.getServerCache()||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function onComplete(status){if(status==='ok'){if(tag){return _this.applyTaggedListenComplete(query.path,tag);}else{return _this.applyListenComplete(query.path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.
// Note that this may need to be scoped to just this listener if we change permissions on filtered children
var error=errorForServerCode(status,query);return _this.removeEventRegistration(query,/*eventRegistration*/null,error);}}};};/**
     * Given a query, computes a "queryKey" suitable for use in our queryToTagMap_.
     */SyncTree.makeQueryKey_=function(query){return query.path.toString()+'$'+query.queryIdentifier();};/**
     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.
     */SyncTree.parseQueryKey_=function(queryKey){var splitIndex=queryKey.indexOf('$');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};};/**
     * Return the query associated with the given tag, if we have one
     */SyncTree.prototype.queryKeyForTag_=function(tag){return this.tagToQueryMap.get(tag);};/**
     * Return the tag associated with the given query.
     */SyncTree.prototype.tagForQuery_=function(query){var queryKey=SyncTree.makeQueryKey_(query);return this.queryToTagMap.get(queryKey);};/**
     * Static accessor for query tags.
     */SyncTree.getNextQueryTag_=function(){return SyncTree.nextQueryTag_++;};/**
     * A helper method to apply tagged operations
     */SyncTree.prototype.applyTaggedOperation_=function(queryPath,operation){var syncPoint=this.syncPointTree_.get(queryPath);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(syncPoint,"Missing sync point for query tag that we're tracking");var writesCache=this.pendingWriteTree_.childWrites(queryPath);return syncPoint.applyOperation(operation,writesCache,/*serverCache=*/null);};/**
     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.
     *
     * NOTES:
     * - Descendant SyncPoints will be visited first (since we raise events depth-first).
  
     * - We call applyOperation() on each SyncPoint passing three things:
     *   1. A version of the Operation that has been made relative to the SyncPoint location.
     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.
     *   3. A snapshot Node with cached server data, if we have it.
  
     * - We concatenate all of the events returned by each SyncPoint and return the result.
     */SyncTree.prototype.applyOperationToSyncPoints_=function(operation){return this.applyOperationHelper_(operation,this.syncPointTree_,/*serverCache=*/null,this.pendingWriteTree_.childWrites(Path.Empty));};/**
     * Recursive helper for applyOperationToSyncPoints_
     */SyncTree.prototype.applyOperationHelper_=function(operation,syncPointTree,serverCache,writesCache){if(operation.path.isEmpty()){return this.applyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.
if(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];var childName=operation.path.getFront();var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);events=events.concat(this.applyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;}};/**
     * Recursive helper for applyOperationToSyncPoints_
     */SyncTree.prototype.applyOperationDescendantsHelper_=function(operation,syncPointTree,serverCache,writesCache){var _this=this;var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.
if(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(_this.applyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;};/**
     * Static tracker for next query tag.
     */SyncTree.nextQueryTag_=1;return SyncTree;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Mutable object which basically just stores a reference to the "latest" immutable snapshot.
 *
 * @constructor
 */var SnapshotHolder=/** @class */function(){function SnapshotHolder(){this.rootNode_=ChildrenNode.EMPTY_NODE;}SnapshotHolder.prototype.getNode=function(path){return this.rootNode_.getChild(path);};SnapshotHolder.prototype.updateSnapshot=function(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);};return SnapshotHolder;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Abstraction around FirebaseApp's token fetching capabilities.
 */var FirebaseAuthTokenProvider=/** @class */function(){function FirebaseAuthTokenProvider(app_){this.app_=app_;}FirebaseAuthTokenProvider.prototype.getToken=function(forceRefresh){return this.app_['INTERNAL']['getToken'](forceRefresh).then(null,// .catch
function(error){// TODO: Need to figure out all the cases this is raised and whether
// this makes sense.
if(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});};FirebaseAuthTokenProvider.prototype.addTokenChangeListener=function(listener){// TODO: We might want to wrap the listener and call it with no args to
// avoid a leaky abstraction, but that makes removing the listener harder.
this.app_['INTERNAL']['addAuthTokenListener'](listener);};FirebaseAuthTokenProvider.prototype.removeTokenChangeListener=function(listener){this.app_['INTERNAL']['removeAuthTokenListener'](listener);};FirebaseAuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Provided authentication credentials for the app named "'+this.app_.name+'" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.app_.options){errorMessage+='Make sure the "credential" property provided to initializeApp() '+'is authorized to access the specified "databaseURL" and is from the correct '+'project.';}else if('serviceAccount'in this.app_.options){errorMessage+='Make sure the "serviceAccount" property provided to initializeApp() '+'is authorized to access the specified "databaseURL" and is from the correct '+'project.';}else{errorMessage+='Make sure the "apiKey" and "databaseURL" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);};return FirebaseAuthTokenProvider;}();/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var EmulatorAuthToken=/** @class */function(){function EmulatorAuthToken(accessToken){this.accessToken=accessToken;}return EmulatorAuthToken;}();var EmulatorAuthTokenProvider=/** @class */function(){function EmulatorAuthTokenProvider(app_){this.app_=app_;}EmulatorAuthTokenProvider.prototype.getToken=function(forceRefresh){return Promise.resolve(new EmulatorAuthToken('owner'));};EmulatorAuthTokenProvider.prototype.addTokenChangeListener=function(listener){};EmulatorAuthTokenProvider.prototype.removeTokenChangeListener=function(listener){};EmulatorAuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Database emulator unexpectedly rejected fake "owner" credentials.';warn(errorMessage);};return EmulatorAuthTokenProvider;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Tracks a collection of stats.
 *
 * @constructor
 */var StatsCollection=/** @class */function(){function StatsCollection(){this.counters_={};}StatsCollection.prototype.incrementCounter=function(name,amount){if(amount===void 0){amount=1;}if(!Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(this.counters_,name))this.counters_[name]=0;this.counters_[name]+=amount;};StatsCollection.prototype.get=function(){return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["l" /* deepCopy */])(this.counters_);};return StatsCollection;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var StatsManager=/** @class */function(){function StatsManager(){}StatsManager.getCollection=function(repoInfo){var hashString=repoInfo.toString();if(!this.collections_[hashString]){this.collections_[hashString]=new StatsCollection();}return this.collections_[hashString];};StatsManager.getOrCreateReporter=function(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!this.reporters_[hashString]){this.reporters_[hashString]=creatorFunction();}return this.reporters_[hashString];};StatsManager.collections_={};StatsManager.reporters_={};return StatsManager;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns the delta from the previous call to get stats.
 *
 * @param collection_ The collection to "listen" to.
 * @constructor
 */var StatsListener=/** @class */function(){function StatsListener(collection_){this.collection_=collection_;this.last_=null;}StatsListener.prototype.get=function(){var newStats=this.collection_.get();var delta=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["a" /* __assign */])({},newStats);if(this.last_){each(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;};return StatsListener;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably
// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10
// seconds to try to ensure the Firebase connection is established / settled.
var FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.
var REPORT_STATS_INTERVAL=5*60*1000;/**
 * @constructor
 */var StatsReporter=/** @class */function(){/**
     * @param collection
     * @param server_
     */function StatsReporter(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}StatsReporter.prototype.includeStat=function(stat){this.statsToReport_[stat]=true;};StatsReporter.prototype.reportStats_=function(){var _this=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;each(stats,function(stat,value){if(value>0&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(_this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.
setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));};return StatsReporter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * The event queue serves a few purposes:
 * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more
 *    events being queued.
 * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,
 *    raiseQueuedEvents() is called again, the "inner" call will pick up raising events where the "outer" call
 *    left off, ensuring that the events are still raised synchronously and in order.
 * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued
 *    events are raised synchronously.
 *
 * NOTE: This can all go away if/when we move to async events.
 *
 * @constructor
 */var EventQueue=/** @class */function(){function EventQueue(){/**
         * @private
         * @type {!Array.<EventList>}
         */this.eventLists_=[];/**
         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.
         * @private
         * @type {!number}
         */this.recursionDepth_=0;}/**
     * @param {!Array.<Event>} eventDataList The new events to queue.
     */EventQueue.prototype.queueEvents=function(eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.
var currList=null;for(var i=0;i<eventDataList.length;i++){var eventData=eventDataList[i];var eventPath=eventData.getPath();if(currList!==null&&!eventPath.equals(currList.getPath())){this.eventLists_.push(currList);currList=null;}if(currList===null){currList=new EventList(eventPath);}currList.add(eventData);}if(currList){this.eventLists_.push(currList);}};/**
     * Queues the specified events and synchronously raises all events (including previously queued ones)
     * for the specified path.
     *
     * It is assumed that the new events are all for the specified path.
     *
     * @param {!Path} path The path to raise events for.
     * @param {!Array.<Event>} eventDataList The new events to raise.
     */EventQueue.prototype.raiseEventsAtPath=function(path,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.equals(path);});};/**
     * Queues the specified events and synchronously raises all events (including previously queued ones) for
     * locations related to the specified change path (i.e. all ancestors and descendants).
     *
     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.
     *
     * @param {!Path} changedPath The path to raise events for.
     * @param {!Array.<!Event>} eventDataList The events to raise
     */EventQueue.prototype.raiseEventsForChangedPath=function(changedPath,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.contains(changedPath)||changedPath.contains(eventPath);});};/**
     * @param {!function(!Path):boolean} predicate
     * @private
     */EventQueue.prototype.raiseQueuedEventsMatchingPredicate_=function(predicate){this.recursionDepth_++;var sentAll=true;for(var i=0;i<this.eventLists_.length;i++){var eventList=this.eventLists_[i];if(eventList){var eventPath=eventList.getPath();if(predicate(eventPath)){this.eventLists_[i].raise();this.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){this.eventLists_=[];}this.recursionDepth_--;};return EventQueue;}();/**
 * @param {!Path} path
 * @constructor
 */var EventList=/** @class */function(){function EventList(path_){this.path_=path_;/**
         * @type {!Array.<Event>}
         * @private
         */this.events_=[];}/**
     * @param {!Event} eventData
     */EventList.prototype.add=function(eventData){this.events_.push(eventData);};/**
     * Iterates through the list and raises each event
     */EventList.prototype.raise=function(){for(var i=0;i<this.events_.length;i++){var eventData=this.events_[i];if(eventData!==null){this.events_[i]=null;var eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}};/**
     * @return {!Path}
     */EventList.prototype.getPath=function(){return this.path_;};return EventList;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Base class to be used if you want to emit events. Call the constructor with
 * the set of allowed event names.
 */var EventEmitter=/** @class */function(){/**
     * @param {!Array.<string>} allowedEvents_
     */function EventEmitter(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**
     * To be called by derived classes to trigger events.
     * @param {!string} eventType
     * @param {...*} var_args
     */EventEmitter.prototype.trigger=function(eventType){var var_args=[];for(var _i=1;_i<arguments.length;_i++){var_args[_i-1]=arguments[_i];}if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.
var listeners=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])(this.listeners_[eventType]);for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,var_args);}}};EventEmitter.prototype.on=function(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}};EventEmitter.prototype.off=function(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}};EventEmitter.prototype.validateEventType_=function(eventType){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);};return EventEmitter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @extends {EventEmitter}
 */var VisibilityMonitor=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(VisibilityMonitor,_super);function VisibilityMonitor(){var _this=_super.call(this,['visible'])||this;var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support
visibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers
// without page visibility support or in cases where we are never visible
// (e.g. chrome extension), we act as if we are visible, i.e. don't delay
// reconnects
_this.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this.visible_){_this.visible_=visible;_this.trigger('visible',visible);}},false);}return _this;}VisibilityMonitor.getInstance=function(){return new VisibilityMonitor();};/**
     * @param {!string} eventType
     * @return {Array.<boolean>}
     */VisibilityMonitor.prototype.getInitialEvent=function(eventType){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];};return VisibilityMonitor;}(EventEmitter);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Monitors online state (as reported by window.online/offline events).
 *
 * The expectation is that this could have many false positives (thinks we are online
 * when we're not), but no false negatives.  So we can safely use it to determine when
 * we definitely cannot reach the internet.
 *
 * @extends {EventEmitter}
 */var OnlineMonitor=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(OnlineMonitor,_super);function OnlineMonitor(){var _this=_super.call(this,['online'])||this;_this.online_=true;// We've had repeated complaints that Cordova apps can get stuck "offline", e.g.
// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810
// It would seem that the 'online' event does not always fire consistently. So we disable it
// for Cordova.
if(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["r" /* isMobileCordova */])()){window.addEventListener('online',function(){if(!_this.online_){_this.online_=true;_this.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this.online_){_this.online_=false;_this.trigger('online',false);}},false);}return _this;}OnlineMonitor.getInstance=function(){return new OnlineMonitor();};/**
     * @param {!string} eventType
     * @return {Array.<boolean>}
     */OnlineMonitor.prototype.getInitialEvent=function(eventType){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(eventType==='online','Unknown event type: '+eventType);return[this.online_];};/**
     * @return {boolean}
     */OnlineMonitor.prototype.currentlyOnline=function(){return this.online_;};return OnlineMonitor;}(EventEmitter);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * This class ensures the packets from the server arrive in order
 * This class takes data from the server and ensures it gets passed into the callbacks in order.
 * @constructor
 */var PacketReceiver=/** @class */function(){/**
     * @param onMessage_
     */function PacketReceiver(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}PacketReceiver.prototype.closeAfter=function(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}};/**
     * Each message from the server comes with a response number, and an array of data. The responseNumber
     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all
     * browsers will respond in the same order as the requests we sent
     * @param {number} requestNum
     * @param {Array} data
     */PacketReceiver.prototype.handleResponse=function(requestNum,data){var _this=this;this.pendingResponses[requestNum]=data;var _loop_1=function _loop_1(){var toProcess=this_1.pendingResponses[this_1.currentResponseNum];delete this_1.pendingResponses[this_1.currentResponseNum];var _loop_2=function _loop_2(i){if(toProcess[i]){exceptionGuard(function(){_this.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop_2(i);}if(this_1.currentResponseNum===this_1.closeAfterResponse){if(this_1.onClose){this_1.onClose();this_1.onClose=null;}return"break";}this_1.currentResponseNum++;};var this_1=this;while(this.pendingResponses[this.currentResponseNum]){var state_1=_loop_1();if(state_1==="break")break;}};return PacketReceiver;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// URL query parameters associated with longpolling
var FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.
//TODO: Perf: the maximum length actually differs from browser to browser.
// We should check what browser we're on and set accordingly.
var MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=
var MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**
 * Keepalive period
 * send a fresh request at minimum every 25 seconds. Opera has a maximum request
 * length of 30 seconds that we can't exceed.
 * @const
 * @type {number}
 */var KEEPALIVE_REQUEST_INTERVAL=25000;/**
 * How long to wait before aborting a long-polling connection attempt.
 * @const
 * @type {number}
 */var LP_CONNECT_TIMEOUT=30000;/**
 * This class manages a single long-polling connection.
 *
 * @constructor
 * @implements {Transport}
 */var BrowserPollConnection=/** @class */function(){/**
     * @param {string} connId An identifier for this connection, used for logging
     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.
     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing
     *                                         transport session
     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a
     *                                     connection previously
     */function BrowserPollConnection(connId,repoInfo,transportSessionId,lastSessionId){this.connId=connId;this.repoInfo=repoInfo;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=StatsManager.getCollection(repoInfo);this.urlFn=function(params){return repoInfo.connectionURL(LONG_POLLING,params);};}/**
     *
     * @param {function(Object)} onMessage Callback when messages arrive
     * @param {function()} onDisconnect Callback with connection lost.
     */BrowserPollConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this.log_('Timed out trying to connect.');// Make sure we clear the host cache
_this.onClosed_();_this.connectTimeoutTimer_=null;},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.
executeWhenDOMReady(function(){if(_this.isClosed_)return;//Set up a callback that gets triggered once a connection is set up.
_this.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["e" /* __read */])(args,5),command=_a[0],arg1=_a[1],arg2=_a[2],arg3=_a[3],arg4=_a[4];_this.incrementIncomingBytes_(args);if(!_this.scriptTagHolder)return;// we closed the connection.
if(_this.connectTimeoutTimer_){clearTimeout(_this.connectTimeoutTimer_);_this.connectTimeoutTimer_=null;}_this.everConnected_=true;if(command==FIREBASE_LONGPOLL_START_PARAM){_this.id=arg1;_this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable
if(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us
// through our already open polls), so don't send any more.
_this.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive
// all of the responses up to this one before closing
_this.myPacketOrderer.closeAfter(arg1,function(){_this.onClosed_();});}else{_this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["e" /* __read */])(args,2),pN=_a[0],data=_a[1];_this.incrementIncomingBytes_(args);_this.myPacketOrderer.handleResponse(pN,data);},function(){_this.onClosed_();},_this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results
//from cache.
var urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this.scriptTagHolder.uniqueCallbackIdentifier)urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this.scriptTagHolder.uniqueCallbackIdentifier;urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this.transportSessionId;}if(_this.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this.lastSessionId;}if(typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this.urlFn(urlParams);_this.log_('Connecting via long-poll to '+connectURL);_this.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});};/**
     * Call this when a handshake has completed successfully and we want to consider the connection established
     */BrowserPollConnection.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);};/**
     * Forces long polling to be considered as a potential transport
     */BrowserPollConnection.forceAllow=function(){BrowserPollConnection.forceAllow_=true;};/**
     * Forces longpolling to not be considered as a potential transport
     */BrowserPollConnection.forceDisallow=function(){BrowserPollConnection.forceDisallow_=true;};// Static method, use string literal so it can be accessed in a generic way
BrowserPollConnection.isAvailable=function(){if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in
// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).
return!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}};/**
     * No-op for polling
     */BrowserPollConnection.prototype.markConnectionHealthy=function(){};/**
     * Stops polling and cleans up the iframe
     * @private
     */BrowserPollConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.
if(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}};/**
     * Triggered when this transport is closed
     * @private
     */BrowserPollConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}};/**
     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server
     * that we've left.
     */BrowserPollConnection.prototype.close=function(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}};/**
     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then
     * broken into chunks (since URLs have a small maximum length).
     * @param {!Object} data The JSON data to transmit.
     */BrowserPollConnection.prototype.send=function(data){var dataStr=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data
var base64data=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["i" /* base64Encode */])(dataStr);//We can only fit a certain amount in each URL, so we need to split this request
//up into multiple pieces if it doesn't fit in one request.
var dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number
//of segments so that we can reassemble the packet on the server.
for(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}};/**
     * This is how we notify the server that we're leaving.
     * We aren't able to send requests with DHTML on a window close event, but we can
     * trigger XHR requests in some browsers (everything but Opera basically).
     * @param {!string} id
     * @param {!string} pw
     */BrowserPollConnection.prototype.addDisconnectPingFrame=function(id,pw){if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])())return;this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);};/**
     * Used to track the bytes received by this client
     * @param {*} args
     * @private
     */BrowserPollConnection.prototype.incrementIncomingBytes_=function(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.
var bytesReceived=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);};return BrowserPollConnection;}();/*********************************************************************************************
 * A wrapper around an iframe that is used as a long-polling script holder.
 * @constructor
 *********************************************************************************************/var FirebaseIFrameScriptHolder=/** @class */function(){/**
     * @param commandCB - The callback to be called when control commands are recevied from the server.
     * @param onMessageCB - The callback to be triggered when responses arrive from the server.
     * @param onDisconnect - The callback to be triggered when this tag holder is closed
     * @param urlFn - A function that provides the URL of the endpoint to send data to.
     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause
//problems in some browsers.
this.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.
this.pendingSegs=[];//A serial number. We use this for two things:
// 1) A way to ensure the browser doesn't cache responses to polls
// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The
//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute
//    JSONP code in the order it was added to the iframe.
this.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're "closing down" the connection (e.g. we're switching transports but there's still
// incoming data from the server that we're waiting for).
this.sendNewPolls=true;if(!Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the
//iframes where we put the long-polling script tags. We have two callbacks:
//   1) Command Callback - Triggered for control issues, like starting a connection.
//   2) Message Callback - Triggered when new data arrives.
this.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.
this.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.
var script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient
// for ie9, but ie8 needs to do it again in the document itself.
if(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain="'+currentDomain+'";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**
     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can
     * actually use.
     * @private
     * @return {Element}
     */FirebaseIFrameScriptHolder.createIFrame_=function(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe
if(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the
// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute
// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.
var a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.
log('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src="javascript:void((function(){document.open();document.domain='"+domain+"';document.close();})())";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this
// never gets hit.
throw'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.
if(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari
}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer
}else if(iframe.document){iframe.doc=iframe.document;//others?
}return iframe;};/**
     * Cancel all outstanding queries and remove the frame.
     */FirebaseIFrameScriptHolder.prototype.close=function(){var _this=this;//Mark this iframe as dead, so no new requests are sent.
this.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the
//window, or IE will continue loading and executing the script tags we've already added, which
//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.
this.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this.myIFrame!==null){document.body.removeChild(_this.myIFrame);_this.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.
var onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}};/**
     * Actually start the long-polling session by adding the first script tag(s) to the iframe.
     * @param {!string} id - The ID of this connection
     * @param {!string} pw - The password for this connection
     */FirebaseIFrameScriptHolder.prototype.startLongPoll=function(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.
while(this.newRequest_()){}};/**
     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't
     * too many outstanding requests and we are still alive.
     *
     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if
     * needed.
     */FirebaseIFrameScriptHolder.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data
// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically
// close the old request.
if(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url
this.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.
var curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.
var nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.
var theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}};/**
     * Queue a packet for transmission to the server.
     * @param segnum - A sequential id for this packet segment used for reassembly
     * @param totalsegs - The total number of segments in this packet
     * @param data - The data for this segment.
     */FirebaseIFrameScriptHolder.prototype.enqueueSegment=function(segnum,totalsegs,data){//add this to the queue of segments to send.
this.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless
//startLongPoll hasn't been called yet.
if(this.alive){this.newRequest_();}};/**
     * Add a script tag for a regular long-poll request.
     * @param {!string} url - The URL of the script tag.
     * @param {!number} serial - The serial number of the request.
     * @private
     */FirebaseIFrameScriptHolder.prototype.addLongPollTag_=function(url,serial){var _this=this;//remember that we sent this request.
this.outstandingRequests.add(serial);var doNewRequest=function doNewRequest(){_this.outstandingRequests.delete(serial);_this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll
// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.
var keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function readyStateCB(){// Request completed.  Cancel the keepalive.
clearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.
doNewRequest();};this.addTag(url,readyStateCB);};/**
     * Add an arbitrary script tag to the iframe.
     * @param {!string} url - The URL for the script tag source.
     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.
     */FirebaseIFrameScriptHolder.prototype.addTag=function(url,loadCB){var _this=this;if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){this.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll
if(!_this.sendNewPolls)return;var newScript_1=_this.myIFrame.doc.createElement('script');newScript_1.type='text/javascript';newScript_1.async=true;newScript_1.src=url;newScript_1.onload=newScript_1.onreadystatechange=function(){var rstate=newScript_1.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){newScript_1.onload=newScript_1.onreadystatechange=null;if(newScript_1.parentNode){newScript_1.parentNode.removeChild(newScript_1);}loadCB();}};newScript_1.onerror=function(){log('Long-poll script failed to load: '+url);_this.sendNewPolls=false;_this.close();};_this.myIFrame.doc.body.appendChild(newScript_1);}catch(e){// TODO: we should make this error visible somehow
}},Math.floor(1));}};return FirebaseIFrameScriptHolder;}();/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** The semver (www.semver.org) version of the SDK. */var SDK_VERSION='';// SDK_VERSION should be set before any database instance is created
function setSDKVersion(version){SDK_VERSION=version;}/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**
 * Create a new websocket connection with the given callbacks.
 * @constructor
 * @implements {Transport}
 */var WebSocketConnection=/** @class */function(){/**
     * @param {string} connId identifier for this transport
     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
     *                                         session
     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
     */function WebSocketConnection(connId,repoInfo,transportSessionId,lastSessionId){this.connId=connId;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=StatsManager.getCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId);}/**
     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
     *                                         session
     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
     * @return {string} connection url
     * @private
     */WebSocketConnection.connectionURL_=function(repoInfo,transportSessionId,lastSessionId){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()&&typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}return repoInfo.connectionURL(WEBSOCKET,urlParams);};/**
     *
     * @param onMessage Callback when messages arrive
     * @param onDisconnect Callback with connection lost.
     */WebSocketConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.
PersistentStorage.set('previous_websocket_failure',true);try{if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){var device=__WEBPACK_IMPORTED_MODULE_2__firebase_util__["a" /* CONSTANTS */].NODE_ADMIN?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>
var options={headers:{'User-Agent':"Firebase/"+PROTOCOL_VERSION+"/"+SDK_VERSION+"/"+process.platform+"/"+device}};// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.
var env=process['env'];var proxy=this.connURL.indexOf('wss://')==0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{this.mySock=new WebSocketImpl(this.connURL);}}catch(e){this.log_('Error instantiating WebSocket.');var error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();return;}this.mySock.onopen=function(){_this.log_('Websocket connected.');_this.everConnected_=true;};this.mySock.onclose=function(){_this.log_('Websocket connection was disconnected.');_this.mySock=null;_this.onClosed_();};this.mySock.onmessage=function(m){_this.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this.log_('WebSocket error.  Closing connection.');var error=e.message||e.data;if(error){_this.log_(error);}_this.onClosed_();};};/**
     * No-op for websockets, we don't need to do anything once the connection is confirmed as open
     */WebSocketConnection.prototype.start=function(){};WebSocketConnection.forceDisallow=function(){WebSocketConnection.forceDisallow_=true;};WebSocketConnection.isAvailable=function(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;};/**
     * Returns true if we previously failed to connect with this transport.
     * @return {boolean}
     */WebSocketConnection.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,
// we default to assuming that it previously failed to be safe.
return PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;};WebSocketConnection.prototype.markConnectionHealthy=function(){PersistentStorage.remove('previous_websocket_failure');};WebSocketConnection.prototype.appendFrame_=function(data){this.frames.push(data);if(this.frames.length==this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["w" /* jsonEval */])(fullMess);//handle the message
this.onMessage(jsonMess);}};/**
     * @param {number} frameCount The number of frames we are expecting from the server
     * @private
     */WebSocketConnection.prototype.handleNewFrameCount_=function(frameCount){this.totalFrames=frameCount;this.frames=[];};/**
     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1
     * @param {!String} data
     * @return {?String} Any remaining data to be process, or null if there is none
     * @private
     */WebSocketConnection.prototype.extractFrameCount_=function(data){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced
// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508
if(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;};/**
     * Process a websocket frame that has arrived from the server.
     * @param mess The frame data
     */WebSocketConnection.prototype.handleIncomingFrame=function(mess){if(this.mySock===null)return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.
var data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering
this.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it
var remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}};/**
     * Send a message to the server
     * @param {Object} data The JSON object to transmit
     */WebSocketConnection.prototype.send=function(data){this.resetKeepAlive();var dataStr=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request
//up into multiple pieces if it doesn't fit in one request.
var dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header
if(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.
for(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}};WebSocketConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}};WebSocketConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener
if(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}};/**
     * External-facing close handler.
     * Close the websocket and kill the connection.
     */WebSocketConnection.prototype.close=function(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}};/**
     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after
     * the last activity.
     */WebSocketConnection.prototype.resetKeepAlive=function(){var _this=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op
if(_this.mySock){_this.sendString_('0');}_this.resetKeepAlive();},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));};/**
     * Send a string over the websocket.
     *
     * @param {string} str String to send.
     * @private
     */WebSocketConnection.prototype.sendString_=function(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()
// calls for some unknown reason.  We treat these as an error and disconnect.
// See https://app.asana.com/0/58926111402292/68021340250410
try{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}};/**
     * Number of response before we consider the connection "healthy."
     * @type {number}
     */WebSocketConnection.responsesRequiredToBeHealthy=2;/**
     * Time to wait for the connection te become healthy before giving up.
     * @type {number}
     */WebSocketConnection.healthyTimeout=30000;return WebSocketConnection;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Currently simplistic, this class manages what transport a Connection should use at various stages of its
 * lifecycle.
 *
 * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if
 * they are available.
 * @constructor
 */var TransportManager=/** @class */function(){/**
     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to
     */function TransportManager(repoInfo){this.initTransports_(repoInfo);}Object.defineProperty(TransportManager,"ALL_TRANSPORTS",{/**
         * @const
         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}
         */get:function get(){return[BrowserPollConnection,WebSocketConnection];},enumerable:true,configurable:true});/**
     * @param {!RepoInfo} repoInfo
     * @private
     */TransportManager.prototype.initTransports_=function(repoInfo){var e_1,_a;var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable)warn("wss:// URL used, but browser isn't known to support websockets.  Trying anyway.");isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports=this.transports_=[];try{for(var _b=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(TransportManager.ALL_TRANSPORTS),_c=_b.next();!_c.done;_c=_b.next()){var transport=_c.value;if(transport&&transport['isAvailable']()){transports.push(transport);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}};/**
     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the
     * initial transport to use
     */TransportManager.prototype.initialTransport=function(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}};/**
     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next
     * transport, or null
     */TransportManager.prototype.upgradeTransport=function(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}};return TransportManager;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Abort upgrade attempt if it takes longer than 60s.
var UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to "validate" the transport by exchanging a few requests and responses.
// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.
var DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)
// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout
// but we've sent/received enough bytes, we don't cancel the connection.
var BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**
 * Creates a new real-time connection to the server using whichever method works
 * best in the current browser.
 *
 * @constructor
 */var Connection=/** @class */function(){/**
     * @param {!string} id - an id for this connection
     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to
     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives
     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.
     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost
     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.
     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server
     */function Connection(id,repoInfo_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**
     * Starts a connection attempt
     * @private
     */Connection.prototype.start_=function(){var _this=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,undefined,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we
// can consider the transport healthy.
this.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*
         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.
         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.
         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should
         * still have the context of your originating frame.
         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it
_this.conn_&&_this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeout_ms=conn['healthyTimeout']||0;if(healthyTimeout_ms>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this.healthyTimeout_=null;if(!_this.isHealthy_){if(_this.conn_&&_this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has received '+_this.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this.isHealthy_=true;_this.conn_.markConnectionHealthy();}else if(_this.conn_&&_this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has sent '+_this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to
// the server.
}else{_this.log_('Closing unhealthy connection after timeout.');_this.close();}}},Math.floor(healthyTimeout_ms));}};/**
     * @return {!string}
     * @private
     */Connection.prototype.nextTransportId_=function(){return'c:'+this.id+':'+this.connectionCount++;};Connection.prototype.disconnReceiver_=function(conn){var _this=this;return function(everConnected){if(conn===_this.conn_){_this.onConnectionLost_(everConnected);}else if(conn===_this.secondaryConn_){_this.log_('Secondary connection lost.');_this.onSecondaryConnectionLost_();}else{_this.log_('closing an old connection');}};};Connection.prototype.connReceiver_=function(conn){var _this=this;return function(message){if(_this.state_!=2/* DISCONNECTED */){if(conn===_this.rx_){_this.onPrimaryMessageReceived_(message);}else if(conn===_this.secondaryConn_){_this.onSecondaryMessageReceived_(message);}else{_this.log_('message on old connection');}}};};/**
     *
     * @param {Object} dataMsg An arbitrary data message to be sent to the server
     */Connection.prototype.sendRequest=function(dataMsg){// wrap in a data message envelope and send it on
var msg={t:'d',d:dataMsg};this.sendData_(msg);};Connection.prototype.tryCleanupConnection=function(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection
}};Connection.prototype.onSecondaryControl_=function(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt
this.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close
if(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}};Connection.prototype.onSecondaryMessageReceived_=function(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer=='c'){this.onSecondaryControl_(data);}else if(layer=='d'){// got a data message, but we're still second connection. Need to buffer it up
this.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}};Connection.prototype.upgradeIfSecondaryHealthy_=function(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.
this.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open
this.secondaryConn_.start();// send ack
this.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one
// can receive on this one, buffer responses until end received on primary transport
this.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();};Connection.prototype.onPrimaryMessageReceived_=function(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.
var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer=='c'){this.onControl_(data);}else if(layer=='d'){this.onDataMessage_(data);}};Connection.prototype.onDataMessage_=function(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level
this.onMessage_(message);};Connection.prototype.onPrimaryResponse_=function(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}};Connection.prototype.onControl_=function(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection
// payload in this case is the reason for the shutdown. Generally a human-readable error
this.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact
this.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}};/**
     *
     * @param {Object} handshake The handshake data returned from the server
     * @private
     */Connection.prototype.onHandshake_=function(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.updateHost(host);// if we've already closed the connection, then don't bother trying to progress further
if(this.state_==0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?
this.tryStartUpgrade_();}};Connection.prototype.tryStartUpgrade_=function(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}};Connection.prototype.startUpgrade_=function(conn){var _this=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we
// can consider the transport healthy.
this.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.
setTimeoutNonBlocking(function(){if(_this.secondaryConn_){_this.log_('Timed out trying to upgrade.');_this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));};Connection.prototype.onReset_=function(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.updateHost(host);// TODO: if we're already "connected", we need to trigger a disconnect at the next layer up.
// We don't currently support resets after the connection has already been established
if(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.
this.closeConnections_();this.start_();}};Connection.prototype.onConnectionEstablished_=function(conn,timestamp){var _this=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,
// send some pings.
if(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}};Connection.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.
if(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.onSecondaryConnectionLost_=function(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real
this.close();}};/**
     *
     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if
     * we should flush the host cache
     * @private
     */Connection.prototype.onConnectionLost_=function(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting
// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.
if(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away
if(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com
this.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();};/**
     *
     * @param {string} reason
     * @private
     */Connection.prototype.onConnectionShutdown_=function(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),
// so clear the callback.
this.onDisconnect_=null;this.close();};Connection.prototype.sendData_=function(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}};/**
     * Cleans up this connection, calling the appropriate callbacks
     */Connection.prototype.close=function(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}};/**
     *
     * @private
     */Connection.prototype.closeConnections_=function(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}};return Connection;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Interface defining the set of actions that can be performed against the Firebase server
 * (basically corresponds to our wire protocol).
 *
 * @interface
 */var ServerActions=/** @class */function(){function ServerActions(){}/**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     * @param {string=} hash
     */ServerActions.prototype.put=function(pathString,data,onComplete,hash){};/**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, ?string)} onComplete
     * @param {string=} hash
     */ServerActions.prototype.merge=function(pathString,data,onComplete,hash){};/**
     * Refreshes the auth token for the current connection.
     * @param {string} token The authentication token
     */ServerActions.prototype.refreshAuthToken=function(token){};/**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     */ServerActions.prototype.onDisconnectPut=function(pathString,data,onComplete){};/**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     */ServerActions.prototype.onDisconnectMerge=function(pathString,data,onComplete){};/**
     * @param {string} pathString
     * @param {function(string, string)=} onComplete
     */ServerActions.prototype.onDisconnectCancel=function(pathString,onComplete){};/**
     * @param {Object.<string, *>} stats
     */ServerActions.prototype.reportStats=function(stats){};return ServerActions;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)
var RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)
var RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.
var SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.
var INVALID_AUTH_TOKEN_THRESHOLD=3;/**
 * Firebase connection.  Abstracts wire protocol and handles reconnecting.
 *
 * NOTE: All JSON objects sent to the realtime connection must have property names enclosed
 * in quotes to make sure the closure compiler does not minify them.
 */var PersistentConnection=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(PersistentConnection,_super);/**
     * @implements {ServerActions}
     * @param repoInfo_ Data about the namespace we are connecting to
     * @param onDataUpdate_ A callback for new data from the server
     */function PersistentConnection(repoInfo_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,authOverride_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.onConnectStatus_=onConnectStatus_;_this.onServerInfoUpdate_=onServerInfoUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.authOverride_=authOverride_;// Used for diagnostic logging.
_this.id=PersistentConnection.nextPersistentConnectionId_++;_this.log_=logWrapper('p:'+_this.id+':');_this.interruptReasons_={};/** Map<path, Map<queryId, ListenSpec>> */_this.listens=new Map();_this.outstandingPuts_=[];_this.outstandingPutCount_=0;_this.onDisconnectRequestQueue_=[];_this.connected_=false;_this.reconnectDelay_=RECONNECT_MIN_DELAY;_this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this.securityDebugCallback_=null;_this.lastSessionId=null;_this.establishConnectionTimer_=null;_this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.
_this.requestCBHash_={};_this.requestNumber_=0;_this.realtime_=null;_this.authToken_=null;_this.forceTokenRefresh_=false;_this.invalidAuthTokenCount_=0;_this.firstConnection_=true;_this.lastConnectionAttemptTime_=null;_this.lastConnectionEstablishedTime_=null;if(authOverride_&&!Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}_this.scheduleConnect_(0);VisibilityMonitor.getInstance().on('visible',_this.onVisible_,_this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this.onOnline_,_this);}return _this;}PersistentConnection.prototype.sendRequest=function(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(msg));Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.connected_,"sendRequest call when we're not connected not allowed.");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}};/**
     * @inheritDoc
     */PersistentConnection.prototype.listen=function(query,currentHashFn,tag,onComplete){var queryId=query.queryIdentifier();var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'listen() called for non-default but complete query');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}};PersistentConnection.prototype.sendListen_=function(listenSpec){var _this=this;var query=listenSpec.query;var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.
if(listenSpec.tag){req['q']=query.queryObject();req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...
PersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this.listens.get(pathString)&&_this.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded
if(currentListenSpec===listenSpec){_this.log_('listen response',message);if(status!=='ok'){_this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});};PersistentConnection.warnOnListenWarnings_=function(payload,query){if(payload&&typeof payload==='object'&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(payload,'w')){var warnings=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='".indexOn": "'+query.getQueryParams().getIndex().toString()+'"';var indexPath=query.path.toString();warn("Using an unspecified index. Your data will be downloaded and "+("filtered on the client. Consider adding "+indexSpec+" at ")+(indexPath+" to your security rules for better performance."));}}};/**
     * @inheritDoc
     */PersistentConnection.prototype.refreshAuthToken=function(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete
//the credential so we dont become authenticated next time we connect.
if(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);};PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_=function(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).
// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.
var isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["o" /* isAdmin */])(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}};/**
     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like
     * a auth revoked (the connection is closed).
     */PersistentConnection.prototype.tryAuth=function(){var _this=this;if(this.connected_&&this.authToken_){var token_1=this.authToken_;var authMethod=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["v" /* isValidFormat */])(token_1)?'auth':'gauth';var requestData={cred:token_1};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this.authToken_===token_1){if(status==='ok'){_this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token
_this.onAuthRevoked_(status,data);}}});}};/**
     * @inheritDoc
     */PersistentConnection.prototype.unlisten=function(query,tag){var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Unlisten called for '+pathString+' '+queryId);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query.queryObject(),tag);}};PersistentConnection.prototype.sendUnlisten_=function(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.
if(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);};/**
     * @inheritDoc
     */PersistentConnection.prototype.onDisconnectPut=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}};/**
     * @inheritDoc
     */PersistentConnection.prototype.onDisconnectMerge=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}};/**
     * @inheritDoc
     */PersistentConnection.prototype.onDisconnectCancel=function(pathString,onComplete){if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}};PersistentConnection.prototype.sendOnDisconnect_=function(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});};/**
     * @inheritDoc
     */PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);};/**
     * @inheritDoc
     */PersistentConnection.prototype.merge=function(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);};PersistentConnection.prototype.putInternal=function(action,pathString,data,onComplete,hash){var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined)request[/*hash*/'h']=hash;// TODO: Only keep track of the most recent put for a given path?
this.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}};PersistentConnection.prototype.sendPut_=function(index){var _this=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this.log_(action+' response',message);delete _this.outstandingPuts_[index];_this.outstandingPutCount_--;// Clean up array occasionally.
if(_this.outstandingPutCount_===0){_this.outstandingPuts_=[];}if(onComplete)onComplete(message[/*status*/'s'],message[/* data */'d']);});};/**
     * @inheritDoc
     */PersistentConnection.prototype.reportStats=function(stats){var _this=this;// If we're not connected, we just drop the stats.
if(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this.log_('reportStats','Error sending stats: '+errorReason);}});}};PersistentConnection.prototype.onDataMessage_=function(message){if('r'in message){// this is a response
this.log_('from server: '+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively
this.onDataPush_(message['a'],message['b']);}};PersistentConnection.prototype.onDataPush_=function(action,body){this.log_('handleServerMessage',action,body);if(action==='d')this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);else if(action==='m')this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);else if(action==='c')this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);else if(action==='ac')this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);else if(action==='sd')this.onSecurityDebugPacket_(body);else error('Unrecognized action received from server: '+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(action)+'\nAre you using the latest client?');};PersistentConnection.prototype.onReady_=function(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);};PersistentConnection.prototype.scheduleConnect_=function(timeout){var _this=this;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(!this.realtime_,"Scheduling a connect when we're already connected/ing?");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating "Security Error" in
// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).
this.establishConnectionTimer_=setTimeout(function(){_this.establishConnectionTimer_=null;_this.establishConnection_();},Math.floor(timeout));};PersistentConnection.prototype.onVisible_=function(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.
if(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;};PersistentConnection.prototype.onOnline_=function(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}};PersistentConnection.prototype.onRealtimeDisconnect_=function(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.
this.cancelSentTransactions_();// Clear out the pending requests.
this.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_("Window isn't visible.  Delaying reconnect.");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.
var timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT)this.reconnectDelay_=RECONNECT_MIN_DELAY;this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.
this.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);};PersistentConnection.prototype.establishConnection_=function(){if(this.shouldReconnect_()){this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;var onDataMessage_1=this.onDataMessage_.bind(this);var onReady_1=this.onReady_.bind(this);var onDisconnect_1=this.onRealtimeDisconnect_.bind(this);var connId_1=this.id+':'+PersistentConnection.nextConnectionId_++;var self_1=this;var lastSessionId_1=this.lastSessionId;var canceled_1=false;var connection_1=null;var closeFn_1=function closeFn_1(){if(connection_1){connection_1.close();}else{canceled_1=true;onDisconnect_1();}};var sendRequestFn=function sendRequestFn(msg){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(connection_1,"sendRequest call when we're not connected not allowed.");connection_1.sendRequest(msg);};this.realtime_={close:closeFn_1,sendRequest:sendRequestFn};var forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;// First fetch auth token, and establish connection after fetching the token was successful
this.authTokenProvider_.getToken(forceRefresh).then(function(result){if(!canceled_1){log('getToken() completed. Creating connection.');self_1.authToken_=result&&result.accessToken;connection_1=new Connection(connId_1,self_1.repoInfo_,onDataMessage_1,onReady_1,onDisconnect_1,/* onKill= */function(reason){warn(reason+' ('+self_1.repoInfo_.toString()+')');self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId_1);}else{log('getToken() completed but was canceled');}}).then(null,function(error){self_1.log_('Failed to get token: '+error);if(!canceled_1){if(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["a" /* CONSTANTS */].NODE_ADMIN){// This may be a critical error for the Admin Node.js SDK, so log a warning.
// But getToken() may also just have temporarily failed, so we still want to
// continue retrying.
warn(error);}closeFn_1();}});}};PersistentConnection.prototype.interrupt=function(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}};PersistentConnection.prototype.resume=function(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["q" /* isEmpty */])(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}};PersistentConnection.prototype.handleTimestamp_=function(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});};PersistentConnection.prototype.cancelSentTransactions_=function(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete)put.onComplete('disconnect');delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.
if(this.outstandingPutCount_===0)this.outstandingPuts_=[];};PersistentConnection.prototype.onListenRevoked_=function(pathString,query){// Remove the listen and manufacture a "permission_denied" error for the failed listen.
var queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete)listen.onComplete('permission_denied');};PersistentConnection.prototype.removeListen_=function(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.
var listen;if(this.listens.has(normalizedPathString)){var map=this.listens.get(normalizedPathString);listen=map.get(queryId);map.delete(queryId);if(map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed
listen=undefined;}return listen;};PersistentConnection.prototype.onAuthRevoked_=function(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the
// retry period since oauth tokens will report as "invalid" if they're
// just expired. Plus there may be transient issues that resolve themselves.
this.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_AUTH_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely
this.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log
// a warning
this.authTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onSecurityDebugPacket_=function(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\n','\nFIREBASE: '));}}};PersistentConnection.prototype.restoreState_=function(){var e_1,_a,e_2,_b;//Re-authenticate ourselves if we have a credential stored.
this.tryAuth();try{// Puts depend on having received the corresponding data update from the server before they complete, so we must
// make sure to send listens before puts.
for(var _c=Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(this.listens.values()),_d=_c.next();!_d.done;_d=_c.next()){var queries=_d.value;try{for(var _e=(e_2=void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["g" /* __values */])(queries.values())),_f=_e.next();!_f.done;_f=_e.next()){var listenSpec=_f.value;this.sendListen_(listenSpec);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i])this.sendPut_(i);}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}};/**
     * Sends client stats for first connection
     */PersistentConnection.prototype.sendConnectStats_=function(){var stats={};var clientName='js';if(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["a" /* CONSTANTS */].NODE_ADMIN){clientName='admin_node';}else if(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["a" /* CONSTANTS */].NODE_CLIENT){clientName='node';}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\./g,'-')]=1;if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["r" /* isMobileCordova */])()){stats['framework.cordova']=1;}else if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["u" /* isReactNative */])()){stats['framework.reactnative']=1;}this.reportStats(stats);};PersistentConnection.prototype.shouldReconnect_=function(){var online=OnlineMonitor.getInstance().currentlyOnline();return Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["q" /* isEmpty */])(this.interruptReasons_)&&online;};PersistentConnection.nextPersistentConnectionId_=0;/**
     * Counter for number of connections created. Mainly used for tagging in the logs
     */PersistentConnection.nextConnectionId_=0;return PersistentConnection;}(ServerActions);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An implementation of ServerActions that communicates with the server via REST requests.
 * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full
 * persistent connection (using WebSockets or long-polling)
 */var ReadonlyRestClient=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(ReadonlyRestClient,_super);/**
     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to
     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server
     * @param {AuthTokenProvider} authTokenProvider_
     * @implements {ServerActions}
     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.authTokenProvider_=authTokenProvider_;/** @private {function(...[*])} */_this.log_=logWrapper('p:rest:');/**
         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen
         * that's been removed. :-/
         *
         * @private {!Object.<string, !Object>}
         */_this.listens_={};return _this;}ReadonlyRestClient.prototype.reportStats=function(stats){throw new Error('Method not implemented.');};/**
     * @param {!Query} query
     * @param {?number=} tag
     * @return {string}
     * @private
     */ReadonlyRestClient.getListenId_=function(query,tag){if(tag!==undefined){return'tag$'+tag;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(query.getQueryParams().isDefault(),"should have a tag if it's not a default query.");return query.path.toString();}};/** @inheritDoc */ReadonlyRestClient.prototype.listen=function(query,currentHashFn,tag,onComplete){var _this=this;var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+query.queryIdentifier());// Mark this listener so we can tell if it's removed.
var listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=query.getQueryParams().toRestQueryStringParameters();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(_this.listens_,listenId)===thisListen){var status_1;if(!error){status_1='ok';}else if(error==401){status_1='permission_denied';}else{status_1='rest_error:'+error;}onComplete(status_1,null);}});};/** @inheritDoc */ReadonlyRestClient.prototype.unlisten=function(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];};/** @inheritDoc */ReadonlyRestClient.prototype.refreshAuthToken=function(token){// no-op since we just always call getToken.
};/**
     * Performs a REST request to the given path, with the provided query string parameters,
     * and any auth credentials we have.
     *
     * @param {!string} pathString
     * @param {!Object.<string, *>} queryStringParameters
     * @param {?function(?number, *=)} callback
     * @private
     */ReadonlyRestClient.prototype.restRequest_=function(pathString,queryStringParameters,callback){var _this=this;if(queryStringParameters===void 0){queryStringParameters={};}queryStringParameters['format']='export';this.authTokenProvider_.getToken(/*forceRefresh=*/false).then(function(authTokenData){var authToken=authTokenData&&authTokenData.accessToken;if(authToken){queryStringParameters['auth']=authToken;}var url=(_this.repoInfo_.secure?'https://':'http://')+_this.repoInfo_.host+pathString+'?'+'ns='+_this.repoInfo_.namespace+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["y" /* querystring */])(queryStringParameters);_this.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["w" /* jsonEval */])(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.
if(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});};return ReadonlyRestClient;}(ServerActions);/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var INTERRUPT_REASON='repo_interrupt';/**
 * A connection to a single data repository.
 */var Repo=/** @class */function(){function Repo(repoInfo_,forceRestClient,app){var _this=this;this.repoInfo_=repoInfo_;this.app=app;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=new SparseSnapshotTree();// TODO: This should be @private but it's used by test_access.js and internal.js
this.persistentConnection_=null;var authTokenProvider;if(typeof process!=='undefined'&&process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR]){authTokenProvider=new EmulatorAuthTokenProvider(app);}else{authTokenProvider=new FirebaseAuthTokenProvider(app);}this.stats_=StatsManager.getCollection(repoInfo_);if(forceRestClient||beingCrawled()){this.server_=new ReadonlyRestClient(this.repoInfo_,this.onDataUpdate_.bind(this),authTokenProvider);// Minor hack: Fire onConnect immediately, since there's no actual connection.
setTimeout(this.onConnectStatus_.bind(this,true),0);}else{var authOverride=app.options['databaseAuthVariableOverride'];// Validate authOverride
if(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}this.persistentConnection_=new PersistentConnection(this.repoInfo_,this.onDataUpdate_.bind(this),this.onConnectStatus_.bind(this),this.onServerInfoUpdate_.bind(this),authTokenProvider,authOverride);this.server_=this.persistentConnection_;}authTokenProvider.addTokenChangeListener(function(token){_this.server_.refreshAuthToken(token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),
// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.
this.statsReporter_=StatsManager.getOrCreateReporter(repoInfo_,function(){return new StatsReporter(_this.stats_,_this.server_);});this.transactions_init_();// Used for .info.
this.infoData_=new SnapshotHolder();this.infoSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=_this.infoData_.getNode(query.path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events
// on initial data...
if(!node.isEmpty()){infoEvents=_this.infoSyncTree_.applyServerOverwrite(query.path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function stopListening(){}});this.updateInfo_('connected',false);this.serverSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){_this.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);_this.eventQueue_.raiseEventsForChangedPath(query.path,events);});// No synchronous events for network-backed sync trees
return[];},stopListening:function stopListening(query,tag){_this.server_.unlisten(query,tag);}});}/**
     * @return The URL corresponding to the root of this Firebase.
     */Repo.prototype.toString=function(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;};/**
     * @return The namespace represented by the repo.
     */Repo.prototype.name=function(){return this.repoInfo_.namespace;};/**
     * @return The time in milliseconds, taking the server offset into account if we have one.
     */Repo.prototype.serverTime=function(){var offsetNode=this.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;};/**
     * Generate ServerValues using some variables from the repo object.
     */Repo.prototype.generateServerValues=function(){return generateWithValues({timestamp:this.serverTime()});};/**
     * Called by realtime when we get new messages from the server.
     */Repo.prototype.onDataUpdate_=function(pathString,data,isMerge,tag){// For testing.
this.dataUpdateCount++;var path=new Path(pathString);data=this.interceptServerDataCallback_?this.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["x" /* map */])(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyTaggedQueryMerge(path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyTaggedQueryOverwrite(path,taggedSnap,tag);}}else if(isMerge){var changedChildren=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["x" /* map */])(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyServerMerge(path,changedChildren);}else{var snap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyServerOverwrite(path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events
// is a proxy for some change having occurred.
affectedPath=this.rerunTransactions_(path);}this.eventQueue_.raiseEventsForChangedPath(affectedPath,events);};// TODO: This should be @private but it's used by test_access.js and internal.js
Repo.prototype.interceptServerData_=function(callback){this.interceptServerDataCallback_=callback;};Repo.prototype.onConnectStatus_=function(connectStatus){this.updateInfo_('connected',connectStatus);if(connectStatus===false){this.runOnDisconnectEvents_();}};Repo.prototype.onServerInfoUpdate_=function(updates){var _this=this;each(updates,function(key,value){_this.updateInfo_(key,value);});};Repo.prototype.updateInfo_=function(pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON$1(value);this.infoData_.updateSnapshot(path,newNode);var events=this.infoSyncTree_.applyServerOverwrite(path,newNode);this.eventQueue_.raiseEventsForChangedPath(path,events);};Repo.prototype.getNextWriteId_=function(){return this.nextWriteId_++;};Repo.prototype.setWithPriority=function(path,newVal,newPriority,onComplete){var _this=this;this.log_('set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or
// (b) store unresolved paths on JSON parse
var serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,newPriority);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);var writeId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,writeId,true);this.eventQueue_.queueEvents(events);this.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId,!success);_this.eventQueue_.raiseEventsForChangedPath(path,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});var affectedPath=this.abortTransactions_(path);this.rerunTransactions_(affectedPath);// We queued the events above, so just flush the queue here
this.eventQueue_.raiseEventsForChangedPath(affectedPath,[]);};Repo.prototype.update=function(path,childrenToMerge,onComplete){var _this=this;this.log_('update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.
var empty=true;var serverValues=this.generateServerValues();var changedChildren={};each(childrenToMerge,function(changedKey,changedValue){empty=false;var newNodeUnresolved=nodeFromJSON$1(changedValue);changedChildren[changedKey]=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);});if(!empty){var writeId_1=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserMerge(path,changedChildren,writeId_1);this.eventQueue_.queueEvents(events);this.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId_1,!success);var affectedPath=clearEvents.length>0?_this.rerunTransactions_(path):path;_this.eventQueue_.raiseEventsForChangedPath(affectedPath,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});each(childrenToMerge,function(changedPath){var affectedPath=_this.abortTransactions_(path.child(changedPath));_this.rerunTransactions_(affectedPath);});// We queued the events above, so just flush the queue here
this.eventQueue_.raiseEventsForChangedPath(path,[]);}else{log("update() called with empty data.  Don't do anything.");this.callOnCompleteCallback(onComplete,'ok');}};/**
     * Applies all of the changes stored up in the onDisconnect_ tree.
     */Repo.prototype.runOnDisconnectEvents_=function(){var _this=this;this.log_('onDisconnectEvents');var serverValues=this.generateServerValues();var resolvedOnDisconnectTree=resolveDeferredValueTree(this.onDisconnect_,serverValues);var events=[];resolvedOnDisconnectTree.forEachTree(Path.Empty,function(path,snap){events=events.concat(_this.serverSyncTree_.applyServerOverwrite(path,snap));var affectedPath=_this.abortTransactions_(path);_this.rerunTransactions_(affectedPath);});this.onDisconnect_=new SparseSnapshotTree();this.eventQueue_.raiseEventsForChangedPath(Path.Empty,events);};Repo.prototype.onDisconnectCancel=function(path,onComplete){var _this=this;this.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.forget(path);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectSet=function(path,value,onComplete){var _this=this;var newNode=nodeFromJSON$1(value);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectSetWithPriority=function(path,value,priority,onComplete){var _this=this;var newNode=nodeFromJSON$1(value,priority);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectUpdate=function(path,childrenToMerge,onComplete){var _this=this;if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["q" /* isEmpty */])(childrenToMerge)){log("onDisconnect().update() called with empty data.  Don't do anything.");this.callOnCompleteCallback(onComplete,'ok');return;}this.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){each(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON$1(childNode);_this.onDisconnect_.remember(path.child(childName),newChildNode);});}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.addEventCallbackForQuery=function(query,eventRegistration){var events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.addEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.addEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};Repo.prototype.removeEventCallbackForQuery=function(query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof
// a little bit by handling the return values anyways.
var events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.removeEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.removeEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};Repo.prototype.interrupt=function(){if(this.persistentConnection_){this.persistentConnection_.interrupt(INTERRUPT_REASON);}};Repo.prototype.resume=function(){if(this.persistentConnection_){this.persistentConnection_.resume(INTERRUPT_REASON);}};Repo.prototype.stats=function(showDelta){if(showDelta===void 0){showDelta=false;}if(typeof console==='undefined')return;var stats;if(showDelta){if(!this.statsListener_)this.statsListener_=new StatsListener(this.stats_);stats=this.statsListener_.get();}else{stats=this.stats_.get();}var longestName=Object.keys(stats).reduce(function(previousValue,currentValue){return Math.max(currentValue.length,previousValue);},0);each(stats,function(stat,value){var paddedStat=stat;// pad stat names to be the same length (plus 2 extra spaces).
for(var i=stat.length;i<longestName+2;i++){paddedStat+=' ';}console.log(paddedStat+value);});};Repo.prototype.statsIncrementCounter=function(metric){this.stats_.incrementCounter(metric);this.statsReporter_.includeStat(metric);};Repo.prototype.log_=function(){var var_args=[];for(var _i=0;_i<arguments.length;_i++){var_args[_i]=arguments[_i];}var prefix='';if(this.persistentConnection_){prefix=this.persistentConnection_.id+':';}log.apply(void 0,Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["f" /* __spread */])([prefix],var_args));};Repo.prototype.callOnCompleteCallback=function(callback,status,errorReason){if(callback){exceptionGuard(function(){if(status=='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason)message+=': '+errorReason;var error=new Error(message);error.code=code;callback(error);}});}};Object.defineProperty(Repo.prototype,"database",{get:function get(){return this.__database||(this.__database=new Database(this));},enumerable:true,configurable:true});return Repo;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node
 *
 * @constructor
 * @implements {NodeFilter}
 */var RangedFilter=/** @class */function(){/**
     * @param {!QueryParams} params
     */function RangedFilter(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}/**
     * @return {!NamedNode}
     */RangedFilter.prototype.getStartPost=function(){return this.startPost_;};/**
     * @return {!NamedNode}
     */RangedFilter.prototype.getEndPost=function(){return this.endPost_;};/**
     * @param {!NamedNode} node
     * @return {boolean}
     */RangedFilter.prototype.matches=function(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;};/**
     * @inheritDoc
     */RangedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);};/**
     * @inheritDoc
     */RangedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;
newSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries
filtered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**
     * @inheritDoc
     */RangedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries
return oldSnap;};/**
     * @inheritDoc
     */RangedFilter.prototype.filtersNodes=function(){return true;};/**
     * @inheritDoc
     */RangedFilter.prototype.getIndexedFilter=function(){return this.indexedFilter_;};/**
     * @inheritDoc
     */RangedFilter.prototype.getIndex=function(){return this.index_;};/**
     * @param {!QueryParams} params
     * @return {!NamedNode}
     * @private
     */RangedFilter.getStartPost_=function(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}};/**
     * @param {!QueryParams} params
     * @return {!NamedNode}
     * @private
     */RangedFilter.getEndPost_=function(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}};return RangedFilter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible
 *
 * @constructor
 * @implements {NodeFilter}
 */var LimitedFilter=/** @class */function(){/**
     * @param {!QueryParams} params
     */function LimitedFilter(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}/**
     * @inheritDoc
     */LimitedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change
return snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}};/**
     * @inheritDoc
     */LimitedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;
filtered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want
filtered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate
var iterator=void 0;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments
break;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one
filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries
filtered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost=void 0;var endPost=void 0;var cmp=void 0;var iterator=void 0;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare_1=this.index_.getCompare();cmp=function cmp(a,b){return indexCompare_1(b,a);};}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var count=0;var foundStartPost=false;while(iterator.hasNext()){var next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding
foundStartPost=true;}var inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**
     * @inheritDoc
     */LimitedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries
return oldSnap;};/**
     * @inheritDoc
     */LimitedFilter.prototype.filtersNodes=function(){return true;};/**
     * @inheritDoc
     */LimitedFilter.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter();};/**
     * @inheritDoc
     */LimitedFilter.prototype.getIndex=function(){return this.index_;};/**
     * @param {!Node} snap
     * @param {string} childKey
     * @param {!Node} childSnap
     * @param {!CompleteChildSource} source
     * @param {?ChildChangeAccumulator} changeAccumulator
     * @return {!Node}
     * @private
     */LimitedFilter.prototype.fullLimitUpdateChild_=function(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology
var cmp;if(this.reverse_){var indexCmp_1=this.index_.getCompare();cmp=function cmp(a,b){return indexCmp_1(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(oldEventCache.numChildren()==this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name==childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't
// been applied to the limited filter yet. Ignore this next child which will be updated later in
// the limited filter...
nextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childChangedChange(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it
return snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(Change.childAddedChange(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}};return LimitedFilter;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a
 * range to be returned for a particular location. It is assumed that validation of parameters is done at the
 * user-facing API level, so it is not done here.
 * @constructor
 */var QueryParams=/** @class */function(){function QueryParams(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.endSet_=false;this.endNameSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}/**
     * @return {boolean}
     */QueryParams.prototype.hasStart=function(){return this.startSet_;};/**
     * @return {boolean} True if it would return from left.
     */QueryParams.prototype.isViewFromLeft=function(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.
// This means that only one of startSet_ and endSet_ is true. Use them
// to calculate which side of the view to anchor to. If neither is set,
// anchor to the end.
return this.startSet_;}else{return this.viewFrom_===QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;}};/**
     * Only valid to call if hasStart() returns true
     * @return {*}
     */QueryParams.prototype.getIndexStartValue=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;};/**
     * Only valid to call if hasStart() returns true.
     * Returns the starting key name for the range defined by these query parameters
     * @return {!string}
     */QueryParams.prototype.getIndexStartName=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}};/**
     * @return {boolean}
     */QueryParams.prototype.hasEnd=function(){return this.endSet_;};/**
     * Only valid to call if hasEnd() returns true.
     * @return {*}
     */QueryParams.prototype.getIndexEndValue=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;};/**
     * Only valid to call if hasEnd() returns true.
     * Returns the end key name for the range defined by these query parameters
     * @return {!string}
     */QueryParams.prototype.getIndexEndName=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}};/**
     * @return {boolean}
     */QueryParams.prototype.hasLimit=function(){return this.limitSet_;};/**
     * @return {boolean} True if a limit has been set and it has been explicitly anchored
     */QueryParams.prototype.hasAnchoredLimit=function(){return this.limitSet_&&this.viewFrom_!=='';};/**
     * Only valid to call if hasLimit() returns true
     * @return {!number}
     */QueryParams.prototype.getLimit=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.limitSet_,'Only valid if limit has been set');return this.limit_;};/**
     * @return {!Index}
     */QueryParams.prototype.getIndex=function(){return this.index_;};/**
     * @return {!QueryParams}
     * @private
     */QueryParams.prototype.copy_=function(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;};/**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */QueryParams.prototype.limit=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_='';return newParams;};/**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */QueryParams.prototype.limitToFirst=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;return newParams;};/**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */QueryParams.prototype.limitToLast=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;return newParams;};/**
     * @param {*} indexValue
     * @param {?string=} key
     * @return {!QueryParams}
     */QueryParams.prototype.startAt=function(indexValue,key){var newParams=this.copy_();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;};/**
     * @param {*} indexValue
     * @param {?string=} key
     * @return {!QueryParams}
     */QueryParams.prototype.endAt=function(indexValue,key){var newParams=this.copy_();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;};/**
     * @param {!Index} index
     * @return {!QueryParams}
     */QueryParams.prototype.orderBy=function(index){var newParams=this.copy_();newParams.index_=index;return newParams;};/**
     * @return {!Object}
     */QueryParams.prototype.getQueryObject=function(){var WIRE_PROTOCOL_CONSTANTS=QueryParams.WIRE_PROTOCOL_CONSTANTS_;var obj={};if(this.startSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE]=this.indexStartValue_;if(this.startNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME]=this.indexStartName_;}}if(this.endSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE]=this.indexEndValue_;if(this.endNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME]=this.indexEndName_;}}if(this.limitSet_){obj[WIRE_PROTOCOL_CONSTANTS.LIMIT]=this.limit_;var viewFrom=this.viewFrom_;if(viewFrom===''){if(this.isViewFromLeft()){viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;}else{viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;}}obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index
if(this.index_!==PRIORITY_INDEX){obj[WIRE_PROTOCOL_CONSTANTS.INDEX]=this.index_.toString();}return obj;};/**
     * @return {boolean}
     */QueryParams.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_);};/**
     * @return {boolean}
     */QueryParams.prototype.isDefault=function(){return this.loadsAllData()&&this.index_==PRIORITY_INDEX;};/**
     * @return {!NodeFilter}
     */QueryParams.prototype.getNodeFilter=function(){if(this.loadsAllData()){return new IndexedFilter(this.getIndex());}else if(this.hasLimit()){return new LimitedFilter(this);}else{return new RangedFilter(this);}};/**
     * Returns a set of REST query string parameters representing this query.
     *
     * @return {!Object.<string,*>} query string parameters
     */QueryParams.prototype.toRestQueryStringParameters=function(){var REST_CONSTANTS=QueryParams.REST_QUERY_CONSTANTS_;var qs={};if(this.isDefault()){return qs;}var orderBy;if(this.index_===PRIORITY_INDEX){orderBy=REST_CONSTANTS.PRIORITY_INDEX;}else if(this.index_===VALUE_INDEX){orderBy=REST_CONSTANTS.VALUE_INDEX;}else if(this.index_===KEY_INDEX){orderBy=REST_CONSTANTS.KEY_INDEX;}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(this.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=this.index_.toString();}qs[REST_CONSTANTS.ORDER_BY]=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(orderBy);if(this.startSet_){qs[REST_CONSTANTS.START_AT]=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(this.indexStartValue_);if(this.startNameSet_){qs[REST_CONSTANTS.START_AT]+=','+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(this.indexStartName_);}}if(this.endSet_){qs[REST_CONSTANTS.END_AT]=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(this.indexEndValue_);if(this.endNameSet_){qs[REST_CONSTANTS.END_AT]+=','+Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["C" /* stringify */])(this.indexEndName_);}}if(this.limitSet_){if(this.isViewFromLeft()){qs[REST_CONSTANTS.LIMIT_TO_FIRST]=this.limit_;}else{qs[REST_CONSTANTS.LIMIT_TO_LAST]=this.limit_;}}return qs;};/**
     * Wire Protocol Constants
     * @const
     * @enum {string}
     * @private
     */QueryParams.WIRE_PROTOCOL_CONSTANTS_={INDEX_START_VALUE:'sp',INDEX_START_NAME:'sn',INDEX_END_VALUE:'ep',INDEX_END_NAME:'en',LIMIT:'l',VIEW_FROM:'vf',VIEW_FROM_LEFT:'l',VIEW_FROM_RIGHT:'r',INDEX:'i'};/**
     * REST Query Constants
     * @const
     * @enum {string}
     * @private
     */QueryParams.REST_QUERY_CONSTANTS_={ORDER_BY:'orderBy',PRIORITY_INDEX:'$priority',VALUE_INDEX:'$value',KEY_INDEX:'$key',START_AT:'startAt',END_AT:'endAt',LIMIT_TO_FIRST:'limitToFirst',LIMIT_TO_LAST:'limitToLast'};/**
     * Default, empty query parameters
     * @type {!QueryParams}
     * @const
     */QueryParams.DEFAULT=new QueryParams();return QueryParams;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Reference=/** @class */function(_super){Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["c" /* __extends */])(Reference,_super);/**
     * Call options:
     *   new Reference(Repo, Path) or
     *   new Reference(url: string, string|RepoManager)
     *
     * Externally - this is the firebase.database.Reference type.
     *
     * @param {!Repo} repo
     * @param {(!Path)} path
     * @extends {Query}
     */function Reference(repo,path){var _this=this;if(!(repo instanceof Repo)){throw new Error('new Reference() no longer supported - use app.database().');}// call Query's constructor, passing in the repo and path.
_this=_super.call(this,repo,path,QueryParams.DEFAULT,false)||this;return _this;}/** @return {?string} */Reference.prototype.getKey=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.key',0,0,arguments.length);if(this.path.isEmpty())return null;else return this.path.getBack();};/**
     * @param {!(string|Path)} pathString
     * @return {!Reference}
     */Reference.prototype.child=function(pathString){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.child',1,1,arguments.length);if(typeof pathString==='number'){pathString=String(pathString);}else if(!(pathString instanceof Path)){if(this.path.getFront()===null)validateRootPathString('Reference.child',1,pathString,false);else validatePathString('Reference.child',1,pathString,false);}return new Reference(this.repo,this.path.child(pathString));};/** @return {?Reference} */Reference.prototype.getParent=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.parent',0,0,arguments.length);var parentPath=this.path.parent();return parentPath===null?null:new Reference(this.repo,parentPath);};/** @return {!Reference} */Reference.prototype.getRoot=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.root',0,0,arguments.length);var ref=this;while(ref.getParent()!==null){ref=ref.getParent();}return ref;};/** @return {!Database} */Reference.prototype.databaseProp=function(){return this.repo.database;};/**
     * @param {*} newVal
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */Reference.prototype.set=function(newVal,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.set',1,2,arguments.length);validateWritablePath('Reference.set',this.path);validateFirebaseDataArg('Reference.set',1,newVal,this.path,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.set',2,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo.setWithPriority(this.path,newVal,/*priority=*/null,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {!Object} objectToMerge
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */Reference.prototype.update=function(objectToMerge,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.update',1,2,arguments.length);validateWritablePath('Reference.update',this.path);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to Firebase.update() is deprecated. '+'Use set() if you want to overwrite the existing data, or '+'an Object with integer keys if you really do want to '+'only update some of the children.');}validateFirebaseMergeDataArg('Reference.update',1,objectToMerge,this.path,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.update',2,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo.update(this.path,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {*} newVal
     * @param {string|number|null} newPriority
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */Reference.prototype.setWithPriority=function(newVal,newPriority,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.setWithPriority',2,3,arguments.length);validateWritablePath('Reference.setWithPriority',this.path);validateFirebaseDataArg('Reference.setWithPriority',1,newVal,this.path,false);validatePriority('Reference.setWithPriority',2,newPriority,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.setWithPriority',3,onComplete,true);if(this.getKey()==='.length'||this.getKey()==='.keys')throw'Reference.setWithPriority failed: '+this.getKey()+' is a read-only object.';var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo.setWithPriority(this.path,newVal,newPriority,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */Reference.prototype.remove=function(onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.remove',0,1,arguments.length);validateWritablePath('Reference.remove',this.path);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.remove',1,onComplete,true);return this.set(null,onComplete);};/**
     * @param {function(*):*} transactionUpdate
     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete
     * @param {boolean=} applyLocally
     * @return {!Promise}
     */Reference.prototype.transaction=function(transactionUpdate,onComplete,applyLocally){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.transaction',1,3,arguments.length);validateWritablePath('Reference.transaction',this.path);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.transaction',1,transactionUpdate,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.transaction',2,onComplete,true);// NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how
// to expose it.
validateBoolean('Reference.transaction',3,applyLocally,true);if(this.getKey()==='.length'||this.getKey()==='.keys')throw'Reference.transaction failed: '+this.getKey()+' is a read-only object.';if(applyLocally===undefined)applyLocally=true;var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();if(typeof onComplete==='function'){deferred.promise.catch(function(){});}var promiseComplete=function promiseComplete(error,committed,snapshot){if(error){deferred.reject(error);}else{deferred.resolve(new TransactionResult(committed,snapshot));}if(typeof onComplete==='function'){onComplete(error,committed,snapshot);}};this.repo.startTransaction(this.path,transactionUpdate,promiseComplete,applyLocally);return deferred.promise;};/**
     * @param {string|number|null} priority
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */Reference.prototype.setPriority=function(priority,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.setPriority',1,2,arguments.length);validateWritablePath('Reference.setPriority',this.path);validatePriority('Reference.setPriority',1,priority,false);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.setPriority',2,onComplete,true);var deferred=new __WEBPACK_IMPORTED_MODULE_2__firebase_util__["b" /* Deferred */]();this.repo.setWithPriority(this.path.child('.priority'),priority,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**
     * @param {*=} value
     * @param {function(?Error)=} onComplete
     * @return {!Reference}
     */Reference.prototype.push=function(value,onComplete){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('Reference.push',0,2,arguments.length);validateWritablePath('Reference.push',this.path);validateFirebaseDataArg('Reference.push',1,value,this.path,true);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["E" /* validateCallback */])('Reference.push',2,onComplete,true);var now=this.repo.serverTime();var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a regular Reference.
// We use child() to create handles to two different references. The first is turned into a
// ThennableReference below by adding then() and catch() methods and is used as the
// return value of push(). The second remains a regular Reference and is used as the fulfilled
// value of the first ThennableReference.
var thennablePushRef=this.child(name);var pushRef=this.child(name);var promise;if(value!=null){promise=thennablePushRef.set(value,onComplete).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);if(typeof onComplete==='function'){promise.catch(function(){});}return thennablePushRef;};/**
     * @return {!OnDisconnect}
     */Reference.prototype.onDisconnect=function(){validateWritablePath('Reference.onDisconnect',this.path);return new OnDisconnect(this.repo,this.path);};Object.defineProperty(Reference.prototype,"database",{get:function get(){return this.databaseProp();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,"key",{get:function get(){return this.getKey();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,"parent",{get:function get(){return this.getParent();},enumerable:true,configurable:true});Object.defineProperty(Reference.prototype,"root",{get:function get(){return this.getRoot();},enumerable:true,configurable:true});return Reference;}(Query);/**
 * Define reference constructor in various modules
 *
 * We are doing this here to avoid several circular
 * dependency issues
 */Query.__referenceConstructor=Reference;SyncPoint.__referenceConstructor=Reference;/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Node in a Tree.
 */var TreeNode=/** @class */function(){function TreeNode(){// TODO: Consider making accessors that create children and value lazily or
// separate Internal / Leaf 'types'.
this.children={};this.childCount=0;this.value=null;}return TreeNode;}();/**
 * A light-weight tree, traversable by path.  Nodes can have both values and children.
 * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty
 * children.
 */var Tree=/** @class */function(){/**
     * @template T
     * @param {string=} name_ Optional name of the node.
     * @param {Tree=} parent_ Optional parent node.
     * @param {TreeNode=} node_ Optional node to wrap.
     */function Tree(name_,parent_,node_){if(name_===void 0){name_='';}if(parent_===void 0){parent_=null;}if(node_===void 0){node_=new TreeNode();}this.name_=name_;this.parent_=parent_;this.node_=node_;}/**
     * Returns a sub-Tree for the given path.
     *
     * @param {!(string|Path)} pathObj Path to look up.
     * @return {!Tree.<T>} Tree for path.
     */Tree.prototype.subTree=function(pathObj){// TODO: Require pathObj to be Path?
var path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=this,next;while((next=path.getFront())!==null){var childNode=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(child.node_.children,next)||new TreeNode();child=new Tree(next,child,childNode);path=path.popFront();}return child;};/**
     * Returns the data associated with this tree node.
     *
     * @return {?T} The data or null if no data exists.
     */Tree.prototype.getValue=function(){return this.node_.value;};/**
     * Sets data to this tree node.
     *
     * @param {!T} value Value to set.
     */Tree.prototype.setValue=function(value){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(typeof value!=='undefined','Cannot set value to undefined');this.node_.value=value;this.updateParents_();};/**
     * Clears the contents of the tree node (its value and all children).
     */Tree.prototype.clear=function(){this.node_.value=null;this.node_.children={};this.node_.childCount=0;this.updateParents_();};/**
     * @return {boolean} Whether the tree has any children.
     */Tree.prototype.hasChildren=function(){return this.node_.childCount>0;};/**
     * @return {boolean} Whether the tree is empty (no value or children).
     */Tree.prototype.isEmpty=function(){return this.getValue()===null&&!this.hasChildren();};/**
     * Calls action for each child of this tree node.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     */Tree.prototype.forEachChild=function(action){var _this=this;each(this.node_.children,function(child,childTree){action(new Tree(child,_this,childTree));});};/**
     * Does a depth-first traversal of this node's descendants, calling action for each one.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to
     *   false.
     * @param {boolean=} childrenFirst Whether to call action on children before calling it on
     *   parent.
     */Tree.prototype.forEachDescendant=function(action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst)action(this);this.forEachChild(function(child){child.forEachDescendant(action,/*includeSelf=*/true,childrenFirst);});if(includeSelf&&childrenFirst)action(this);};/**
     * Calls action on each ancestor node.
     *
     * @param {function(!Tree.<T>)} action Action to be called on each parent; return
     *   true to abort.
     * @param {boolean=} includeSelf Whether to call action on this node as well.
     * @return {boolean} true if the action callback returned true.
     */Tree.prototype.forEachAncestor=function(action,includeSelf){var node=includeSelf?this:this.parent();while(node!==null){if(action(node)){return true;}node=node.parent();}return false;};/**
     * Does a depth-first traversal of this node's descendants.  When a descendant with a value
     * is found, action is called on it and traversal does not continue inside the node.
     * Action is *not* called on this node.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     */Tree.prototype.forEachImmediateDescendantWithValue=function(action){this.forEachChild(function(child){if(child.getValue()!==null)action(child);else child.forEachImmediateDescendantWithValue(action);});};/**
     * @return {!Path} The path of this tree node, as a Path.
     */Tree.prototype.path=function(){return new Path(this.parent_===null?this.name_:this.parent_.path()+'/'+this.name_);};/**
     * @return {string} The name of the tree node.
     */Tree.prototype.name=function(){return this.name_;};/**
     * @return {?Tree} The parent tree node, or null if this is the root of the tree.
     */Tree.prototype.parent=function(){return this.parent_;};/**
     * Adds or removes this child from its parent based on whether it's empty or not.
     *
     * @private
     */Tree.prototype.updateParents_=function(){if(this.parent_!==null)this.parent_.updateChild_(this.name_,this);};/**
     * Adds or removes the passed child to this tree node, depending on whether it's empty.
     *
     * @param {string} childName The name of the child to update.
     * @param {!Tree.<T>} child The child to update.
     * @private
     */Tree.prototype.updateChild_=function(childName,child){var childEmpty=child.isEmpty();var childExists=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(this.node_.children,childName);if(childEmpty&&childExists){delete this.node_.children[childName];this.node_.childCount--;this.updateParents_();}else if(!childEmpty&&!childExists){this.node_.children[childName]=child.node_;this.node_.childCount++;this.updateParents_();}};return Tree;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific
// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well
// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.
// For now it's part of Repo, but in its own file.
/**
 * @enum {number}
 */var TransactionStatus;(function(TransactionStatus){// We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the
// server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to
// mismatched hash.
TransactionStatus[TransactionStatus["RUN"]=0]="RUN";// We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted
// or rejected yet).
TransactionStatus[TransactionStatus["SENT"]=1]="SENT";// Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be
// removed when we get a chance to prune completed ones.
TransactionStatus[TransactionStatus["COMPLETED"]=2]="COMPLETED";// Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).
// If it comes back as unsuccessful, we'll abort it.
TransactionStatus[TransactionStatus["SENT_NEEDS_ABORT"]=3]="SENT_NEEDS_ABORT";// Temporary state used to mark transactions that need to be aborted.
TransactionStatus[TransactionStatus["NEEDS_ABORT"]=4]="NEEDS_ABORT";})(TransactionStatus||(TransactionStatus={}));/**
 * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's
 * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.
 * @type {number}
 * @const
 * @private
 */Repo.MAX_TRANSACTION_RETRIES_=25;/**
 * Setup the transaction data structures
 * @private
 */Repo.prototype.transactions_init_=function(){/**
     * Stores queues of outstanding transactions for Firebase locations.
     *
     * @type {!Tree.<Array.<!Transaction>>}
     * @private
     */this.transactionQueueTree_=new Tree();};/**
 * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.
 *
 * @param {!Path} path Path at which to do transaction.
 * @param {function(*):*} transactionUpdate Update callback.
 * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.
 * @param {boolean} applyLocally Whether or not to make intermediate results visible
 */Repo.prototype.startTransaction=function(path,transactionUpdate,onComplete,applyLocally){this.log_('transaction on '+path);// Add a watch to make sure we get server updates.
var valueCallback=function valueCallback(){};var watchRef=new Reference(this,path);watchRef.on('value',valueCallback);var unwatcher=function unwatcher(){watchRef.off('value',valueCallback);};// Initialize transaction.
var transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.
status:null,// Used when combining transactions at different locations to figure out which one goes first.
order:LUIDGenerator(),// Whether to raise local events for this transaction.
applyLocally:applyLocally,// Count of how many times we've retried the transaction.
retryCount:0,// Function to call to clean up our .on() listener.
unwatcher:unwatcher,// Stores why a transaction was aborted.
abortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.
var currentState=this.getLatestState_(path);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.
transaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){// We just set the input snapshot, so this cast should be safe
var snapshot=new DataSnapshot(transaction.currentInputSnapshot,new Reference(this,transaction.path),PRIORITY_INDEX);transaction.onComplete(null,false,snapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.
transaction.status=TransactionStatus.RUN;var queueNode=this.transactionQueueTree_.subTree(path);var nodeQueue=queueNode.getValue()||[];nodeQueue.push(transaction);queueNode.setValue(nodeQueue);// Update visibleData and raise events
// Note: We intentionally raise events after updating all of our transaction state, since the user could
// start new transactions from the event callbacks.
var priorityForNode=void 0;if(typeof newVal==='object'&&newVal!==null&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(newVal,'.priority')){priorityForNode=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(newVal,'.priority');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=this.serverSyncTree_.calcCompleteEventCache(path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}priorityForNode/** @type {null|number|string} */=priorityForNode;var serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,transaction.currentWriteId,transaction.applyLocally);this.eventQueue_.raiseEventsForChangedPath(path,events);this.sendReadyTransactions_();}};/**
 * @param {!Path} path
 * @param {Array.<number>=} excludeSets A specific set to exclude
 * @return {Node}
 * @private
 */Repo.prototype.getLatestState_=function(path,excludeSets){return this.serverSyncTree_.calcCompleteEventCache(path,excludeSets)||ChildrenNode.EMPTY_NODE;};/**
 * Sends any already-run transactions that aren't waiting for outstanding transactions to
 * complete.
 *
 * Externally it's called with no arguments, but it calls itself recursively with a particular
 * transactionQueueTree node to recurse through the tree.
 *
 * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.
 * @private
 */Repo.prototype.sendReadyTransactions_=function(node){var _this=this;if(node===void 0){node=this.transactionQueueTree_;}// Before recursing, make sure any completed transactions are removed.
if(!node){this.pruneCompletedTransactionsBelowNode_(node);}if(node.getValue()!==null){var queue=this.buildTransactionQueue_(node);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===TransactionStatus.RUN;});// If they're all run (and not sent), we can send them.  Else, we must wait.
if(allRun){this.sendTransactionQueue_(node.path(),queue);}}else if(node.hasChildren()){node.forEachChild(function(childNode){_this.sendReadyTransactions_(childNode);});}};/**
 * Given a list of run transactions, send them to the server and then handle the result (success or failure).
 *
 * @param {!Path} path The location of the queue.
 * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.
 * @private
 */Repo.prototype.sendTransactionQueue_=function(path,queue){var _this=this;// Mark transactions as sent and increment retry count!
var setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=this.getLatestState_(path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(txn.status===TransactionStatus.RUN,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=TransactionStatus.SENT;txn.retryCount++;var relativePath=Path.relativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.
snapToSend=snapToSend.updateChild(relativePath/**@type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.
this.server_.put(pathToSend.toString(),dataToSend,function(status){_this.log_('transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since
// the callback could trigger more transactions or sets.
var callbacks=[];for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.COMPLETED;events=events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this transaction is complete, it should be set
var node=queue[i].currentOutputSnapshotResolved;var ref=new Reference(_this,queue[i].path);var snapshot=new DataSnapshot(node,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,true,snapshot));}queue[i].unwatcher();}// Now remove the completed transactions.
_this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));// There may be pending transactions that we can now send.
_this.sendReadyTransactions_();_this.eventQueue_.raiseEventsForChangedPath(path,events);// Finally, trigger onComplete callbacks.
for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.
if(status==='datastale'){for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT)queue[i].status=TransactionStatus.NEEDS_ABORT;else queue[i].status=TransactionStatus.RUN;}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.NEEDS_ABORT;queue[i].abortReason=status;}}_this.rerunTransactions_(path);}},latestHash);};/**
 * Finds all transactions dependent on the data at changedPath and reruns them.
 *
 * Should be called any time cached data changes.
 *
 * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to
 * be raised for.
 *
 * @param {!Path} changedPath The path in mergedData that changed.
 * @return {!Path} The rootmost path that was affected by rerunning transactions.
 * @private
 */Repo.prototype.rerunTransactions_=function(changedPath){var rootMostTransactionNode=this.getAncestorTransactionNode_(changedPath);var path=rootMostTransactionNode.path();var queue=this.buildTransactionQueue_(rootMostTransactionNode);this.rerunTransactionQueue_(queue,path);return path;};/**
 * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).
 *
 * @param {Array.<Transaction>} queue The queue of transactions to run.
 * @param {!Path} path The path the queue is for.
 * @private
 */Repo.prototype.rerunTransactionQueue_=function(queue,path){if(queue.length===0){return;// Nothing to do!
}// Queue up the callbacks and fire them after cleaning up all of our transaction state, since
// the callback could trigger more transactions or sets.
var callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.
var txnsToRerun=queue.filter(function(q){return q.status===TransactionStatus.RUN;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});for(var i=0;i<queue.length;i++){var transaction=queue[i];var relativePath=Path.relativePath(path,transaction.path);var abortTransaction=false,abortReason=void 0;Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===TransactionStatus.NEEDS_ABORT){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else if(transaction.status===TransactionStatus.RUN){if(transaction.retryCount>=Repo.MAX_TRANSACTION_RETRIES_){abortTransaction=true;abortReason='maxretry';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else{// This code reruns a transaction
var currentNode=this.getLatestState_(transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON$1(newData);var hasExplicitPriority=typeof newData==='object'&&newData!=null&&Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["j" /* contains */])(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.
newDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=this.generateServerValues();var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=this.getNextWriteId_();// Mutates setsToIgnore in place
setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}}}this.eventQueue_.raiseEventsForChangedPath(path,events);events=[];if(abortTransaction){// Abort.
queue[i].status=TransactionStatus.COMPLETED;// Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).
// So defer the unwatcher until we're done.
(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){var ref=new Reference(this,queue[i].path);// We set this field immediately, so it's safe to cast to an actual snapshot
var lastInput/** @type {!Node} */=queue[i].currentInputSnapshot;var snapshot=new DataSnapshot(lastInput,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,false,snapshot));}else{callbacks.push(queue[i].onComplete.bind(null,new Error(abortReason),false,null));}}}}// Clean up completed transactions.
this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.
for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.
this.sendReadyTransactions_();};/**
 * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns
 * the node for the given path if there are no pending transactions on any ancestor.
 *
 * @param {!Path} path The location to start at.
 * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.
 * @private
 */Repo.prototype.getAncestorTransactionNode_=function(path){var front;// Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.
var transactionNode=this.transactionQueueTree_;while((front=path.getFront())!==null&&transactionNode.getValue()===null){transactionNode=transactionNode.subTree(front);path=path.popFront();}return transactionNode;};/**
 * Builds the queue of all transactions at or below the specified transactionNode.
 *
 * @param {!Tree.<Array.<Transaction>>} transactionNode
 * @return {Array.<Transaction>} The generated queue.
 * @private
 */Repo.prototype.buildTransactionQueue_=function(transactionNode){// Walk any child transaction queues and aggregate them into a single queue.
var transactionQueue=[];this.aggregateTransactionQueuesForNode_(transactionNode,transactionQueue);// Sort them by the order the transactions were created.
transactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;};/**
 * @param {!Tree.<Array.<Transaction>>} node
 * @param {Array.<Transaction>} queue
 * @private
 */Repo.prototype.aggregateTransactionQueuesForNode_=function(node,queue){var _this=this;var nodeQueue=node.getValue();if(nodeQueue!==null){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}node.forEachChild(function(child){_this.aggregateTransactionQueuesForNode_(child,queue);});};/**
 * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.
 *
 * @param {!Tree.<Array.<!Transaction>>} node
 * @private
 */Repo.prototype.pruneCompletedTransactionsBelowNode_=function(node){var _this=this;var queue=node.getValue();if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==TransactionStatus.COMPLETED){queue[to]=queue[from];to++;}}queue.length=to;node.setValue(queue.length>0?queue:null);}node.forEachChild(function(childNode){_this.pruneCompletedTransactionsBelowNode_(childNode);});};/**
 * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()
 * since we consider them incompatible with transactions.
 *
 * @param {!Path} path Path for which we want to abort related transactions.
 * @return {!Path}
 * @private
 */Repo.prototype.abortTransactions_=function(path){var _this=this;var affectedPath=this.getAncestorTransactionNode_(path).path();var transactionNode=this.transactionQueueTree_.subTree(path);transactionNode.forEachAncestor(function(node){_this.abortTransactionsOnNode_(node);});this.abortTransactionsOnNode_(transactionNode);transactionNode.forEachDescendant(function(node){_this.abortTransactionsOnNode_(node);});return affectedPath;};/**
 * Abort transactions stored in this transaction queue node.
 *
 * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.
 * @private
 */Repo.prototype.abortTransactionsOnNode_=function(node){var queue=node.getValue();if(queue!==null){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since
// the callback could trigger more transactions or sets.
var callbacks=[];// Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones
// can be immediately aborted and removed.
var events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT);else if(queue[i].status===TransactionStatus.SENT){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.
queue[i].status=TransactionStatus.SENT_NEEDS_ABORT;queue[i].abortReason='set';}else{Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["f" /* assert */])(queue[i].status===TransactionStatus.RUN,'Unexpected transaction status in abort');// We can abort it immediately.
queue[i].unwatcher();events=events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId,true));if(queue[i].onComplete){var snapshot=null;callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,snapshot));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.
node.setValue(null);}else{// Remove the transactions we aborted.
queue.length=lastSent+1;}// Now fire the callbacks.
this.eventQueue_.raiseEventsForChangedPath(node.path(),events);for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}};/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** @const {string} */var DATABASE_URL_OPTION='databaseURL';var _staticInstance;/**
 * Creates and caches Repo instances.
 */var RepoManager=/** @class */function(){function RepoManager(){/**
         * @private {!Object.<string, Object<string, !fb.core.Repo>>}
         */this.repos_={};/**
         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).
         * @private {boolean}
         */this.useRestClient_=false;}RepoManager.getInstance=function(){if(!_staticInstance){_staticInstance=new RepoManager();}return _staticInstance;};// TODO(koss): Remove these functions unless used in tests?
RepoManager.prototype.interrupt=function(){for(var appName in this.repos_){for(var dbUrl in this.repos_[appName]){this.repos_[appName][dbUrl].interrupt();}}};RepoManager.prototype.resume=function(){for(var appName in this.repos_){for(var dbUrl in this.repos_[appName]){this.repos_[appName][dbUrl].resume();}}};/**
     * This function should only ever be called to CREATE a new database instance.
     *
     * @param {!FirebaseApp} app
     * @return {!Database}
     */RepoManager.prototype.databaseFromApp=function(app,url){var dbUrl=url||app.options[DATABASE_URL_OPTION];if(dbUrl===undefined){fatal("Can't determine Firebase Database URL.  Be sure to include "+DATABASE_URL_OPTION+' option when calling firebase.initializeApp().');}var parsedUrl=parseRepoInfo(dbUrl);var repoInfo=parsedUrl.repoInfo;var dbEmulatorHost=undefined;if(typeof process!=='undefined'){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){dbUrl="http://"+dbEmulatorHost+"?ns="+repoInfo.namespace;parsedUrl=parseRepoInfo(dbUrl);repoInfo=parsedUrl.repoInfo;}validateUrl('Invalid Firebase Database URL',1,parsedUrl);if(!parsedUrl.path.isEmpty()){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=this.createRepo(repoInfo,app);return repo.database;};/**
     * Remove the repo and make sure it is disconnected.
     *
     * @param {!Repo} repo
     */RepoManager.prototype.deleteRepo=function(repo){var appRepos=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(this.repos_,repo.app.name);// This should never happen...
if(!appRepos||Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(appRepos,repo.repoInfo_.toURLString())!==repo){fatal("Database "+repo.app.name+"("+repo.repoInfo_+") has already been deleted.");}repo.interrupt();delete appRepos[repo.repoInfo_.toURLString()];};/**
     * Ensures a repo doesn't already exist and then creates one using the
     * provided app.
     *
     * @param {!RepoInfo} repoInfo The metadata about the Repo
     * @param {!FirebaseApp} app
     * @return {!Repo} The Repo object for the specified server / repoName.
     */RepoManager.prototype.createRepo=function(repoInfo,app){var appRepos=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(this.repos_,app.name);if(!appRepos){appRepos={};this.repos_[app.name]=appRepos;}var repo=Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["z" /* safeGet */])(appRepos,repoInfo.toURLString());if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,this.useRestClient_,app);appRepos[repoInfo.toURLString()]=repo;return repo;};/**
     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.
     * @param {boolean} forceRestClient
     */RepoManager.prototype.forceRestClient=function(forceRestClient){this.useRestClient_=forceRestClient;};return RepoManager;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Class representing a firebase database.
 * @implements {FirebaseService}
 */var Database=/** @class */function(){/**
     * The constructor should not be called by users of our public API.
     * @param {!Repo} repo_
     */function Database(repo_){this.repo_=repo_;if(!(repo_ instanceof Repo)){fatal("Don't call new Database() directly - please use firebase.database().");}/** @type {Reference} */this.root_=new Reference(repo_,Path.Empty);this.INTERNAL=new DatabaseInternals(this);}Object.defineProperty(Database.prototype,"app",{get:function get(){return this.repo_.app;},enumerable:true,configurable:true});Database.prototype.ref=function(path){this.checkDeleted_('ref');Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('database.ref',0,1,arguments.length);if(path instanceof Reference){return this.refFromURL(path.toString());}return path!==undefined?this.root_.child(path):this.root_;};/**
     * Returns a reference to the root or the path specified in url.
     * We throw a exception if the url is not in the same domain as the
     * current repo.
     * @param {string} url
     * @return {!Reference} Firebase reference.
     */Database.prototype.refFromURL=function(url){/** @const {string} */var apiName='database.refFromURL';this.checkDeleted_(apiName);Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])(apiName,1,1,arguments.length);var parsedURL=parseRepoInfo(url);validateUrl(apiName,1,parsedURL);var repoInfo=parsedURL.repoInfo;if(repoInfo.host!==this.repo_.repoInfo_.host){fatal(apiName+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+this.repo_.repoInfo_.host+')');}return this.ref(parsedURL.path.toString());};/**
     * @param {string} apiName
     */Database.prototype.checkDeleted_=function(apiName){if(this.repo_===null){fatal('Cannot call '+apiName+' on a deleted database.');}};// Make individual repo go offline.
Database.prototype.goOffline=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('database.goOffline',0,0,arguments.length);this.checkDeleted_('goOffline');this.repo_.interrupt();};Database.prototype.goOnline=function(){Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["D" /* validateArgCount */])('database.goOnline',0,0,arguments.length);this.checkDeleted_('goOnline');this.repo_.resume();};Database.ServerValue={TIMESTAMP:{'.sv':'timestamp'}};return Database;}();var DatabaseInternals=/** @class */function(){/** @param {!Database} database */function DatabaseInternals(database){this.database=database;}/** @return {Promise<void>} */DatabaseInternals.prototype.delete=function(){return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["b" /* __awaiter */])(this,void 0,void 0,function(){return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__["d" /* __generator */])(this,function(_a){this.database.checkDeleted_('delete');RepoManager.getInstance().deleteRepo(this.database.repo_);this.database.repo_=null;this.database.root_=null;this.database.INTERNAL=null;this.database=null;return[2/*return*/];});});};return DatabaseInternals;}();/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * INTERNAL methods for internal-use only (tests, etc.).
 *
 * Customers shouldn't use these or else should be aware that they could break at any time.
 *
 * @const
 */var forceLongPolling=function forceLongPolling(){WebSocketConnection.forceDisallow();BrowserPollConnection.forceAllow();};var forceWebSockets=function forceWebSockets(){BrowserPollConnection.forceDisallow();};/* Used by App Manager */var isWebSocketsAvailable=function isWebSocketsAvailable(){return WebSocketConnection['isAvailable']();};var setSecurityDebugCallback=function setSecurityDebugCallback(ref,callback){ref.repo.persistentConnection_.securityDebugCallback_=callback;};var stats=function stats(ref,showDelta){ref.repo.stats(showDelta);};var statsIncrementCounter=function statsIncrementCounter(ref,metric){ref.repo.statsIncrementCounter(metric);};var dataUpdateCount=function dataUpdateCount(ref){return ref.repo.dataUpdateCount;};var interceptServerData=function interceptServerData(ref,callback){return ref.repo.interceptServerData_(callback);};var INTERNAL=/*#__PURE__*/Object.freeze({forceLongPolling:forceLongPolling,forceWebSockets:forceWebSockets,isWebSocketsAvailable:isWebSocketsAvailable,setSecurityDebugCallback:setSecurityDebugCallback,stats:stats,statsIncrementCounter:statsIncrementCounter,dataUpdateCount:dataUpdateCount,interceptServerData:interceptServerData});/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var DataConnection=PersistentConnection;/**
 * @param {!string} pathString
 * @param {function(*)} onComplete
 */PersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};/**
 * @param {*} data
 * @param {function(*)} onEcho
 */PersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.
var RealTimeConnection=Connection;/**
 * @param {function(): string} newHash
 * @return {function()}
 */var hijackHash=function hijackHash(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,opt_onComplete,opt_hash){if(opt_hash!==undefined){opt_hash=newHash();}oldPut.call(this,pathString,data,opt_onComplete,opt_hash);};return function(){PersistentConnection.prototype.put=oldPut;};};/**
 * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}
 */var ConnectionTarget=RepoInfo;/**
 * @param {!Query} query
 * @return {!string}
 */var queryIdentifier=function queryIdentifier(query){return query.queryIdentifier();};/**
 * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.
 *
 * @param {boolean} forceRestClient
 */var forceRestClient=function forceRestClient(_forceRestClient){RepoManager.getInstance().forceRestClient(_forceRestClient);};var TEST_ACCESS=/*#__PURE__*/Object.freeze({DataConnection:DataConnection,RealTimeConnection:RealTimeConnection,hijackHash:hijackHash,ConnectionTarget:ConnectionTarget,queryIdentifier:queryIdentifier,forceRestClient:forceRestClient});/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ServerValue=Database.ServerValue;function registerDatabase(instance){// set SDK_VERSION
setSDKVersion(instance.SDK_VERSION);// Register the Database Service with the 'firebase' namespace.
var namespace=instance.INTERNAL.registerService('database',function(app,unused,url){return RepoManager.getInstance().databaseFromApp(app,url);},// firebase.database namespace properties
{Reference:Reference,Query:Query,Database:Database,DataSnapshot:DataSnapshot,enableLogging:enableLogging,INTERNAL:INTERNAL,ServerValue:ServerValue,TEST_ACCESS:TEST_ACCESS},null,true);if(Object(__WEBPACK_IMPORTED_MODULE_2__firebase_util__["t" /* isNodeSdk */])()){module.exports=namespace;}}registerDatabase(__WEBPACK_IMPORTED_MODULE_0__firebase_app__["a" /* default */]);//# sourceMappingURL=index.esm.js.map
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__("pv+l")(module)))

/***/ }),

/***/ "5D9O":
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__("wVGV")();
}

/***/ }),

/***/ "5sRW":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var util_namespaceObject = {};
__webpack_require__.d(util_namespaceObject, "createFocusTrapInstance", function() { return createFocusTrapInstance; });

// EXTERNAL MODULE: ../node_modules/@material/base/index.js
var base = __webpack_require__("dSNL");

// EXTERNAL MODULE: ../node_modules/@material/ripple/index.js + 4 modules
var ripple = __webpack_require__("vkNc");

// CONCATENATED MODULE: ../node_modules/@material/dialog/constants.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

var cssClasses = {
  ROOT: 'mdc-dialog',
  OPEN: 'mdc-dialog--open',
  ANIMATING: 'mdc-dialog--animating',
  BACKDROP: 'mdc-dialog__backdrop',
  SCROLL_LOCK: 'mdc-dialog-scroll-lock',
  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',
  CANCEL_BTN: 'mdc-dialog__footer__button--cancel'
};

var strings = {
  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',
  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',
  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',
  ACCEPT_EVENT: 'MDCDialog:accept',
  CANCEL_EVENT: 'MDCDialog:cancel'
};

var numbers = {
  DIALOG_ANIMATION_TIME_MS: 120
};


// CONCATENATED MODULE: ../node_modules/@material/dialog/foundation.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */




var foundation_MDCDialogFoundation = function (_MDCFoundation) {
  _inherits(MDCDialogFoundation, _MDCFoundation);

  _createClass(MDCDialogFoundation, null, [{
    key: 'cssClasses',
    get: function get() {
      return cssClasses;
    }
  }, {
    key: 'strings',
    get: function get() {
      return strings;
    }
  }, {
    key: 'numbers',
    get: function get() {
      return numbers;
    }
  }, {
    key: 'defaultAdapter',
    get: function get() {
      return {
        addClass: function addClass() /* className: string */{},
        removeClass: function removeClass() /* className: string */{},
        addBodyClass: function addBodyClass() /* className: string */{},
        removeBodyClass: function removeBodyClass() /* className: string */{},
        eventTargetHasClass: function eventTargetHasClass() {
          return (/* target: EventTarget, className: string */ /* boolean */false
          );
        },
        registerInteractionHandler: function registerInteractionHandler() /* evt: string, handler: EventListener */{},
        deregisterInteractionHandler: function deregisterInteractionHandler() /* evt: string, handler: EventListener */{},
        registerSurfaceInteractionHandler: function registerSurfaceInteractionHandler() /* evt: string, handler: EventListener */{},
        deregisterSurfaceInteractionHandler: function deregisterSurfaceInteractionHandler() /* evt: string, handler: EventListener */{},
        registerDocumentKeydownHandler: function registerDocumentKeydownHandler() /* handler: EventListener */{},
        deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler() /* handler: EventListener */{},
        notifyAccept: function notifyAccept() {},
        notifyCancel: function notifyCancel() {},
        trapFocusOnSurface: function trapFocusOnSurface() {},
        untrapFocusOnSurface: function untrapFocusOnSurface() {},
        isDialog: function isDialog() {
          return (/* el: Element */ /* boolean */false
          );
        }
      };
    }
  }]);

  function MDCDialogFoundation(adapter) {
    _classCallCheck(this, MDCDialogFoundation);

    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCDialogFoundation.defaultAdapter, adapter)));

    _this.isOpen_ = false;
    _this.componentClickHandler_ = function (evt) {
      if (_this.adapter_.eventTargetHasClass(evt.target, cssClasses.BACKDROP)) {
        _this.cancel(true);
      }
    };
    _this.dialogClickHandler_ = function (evt) {
      return _this.handleDialogClick_(evt);
    };
    _this.documentKeydownHandler_ = function (evt) {
      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {
        _this.cancel(true);
      }
    };

    _this.timerId_ = 0;
    _this.animationTimerEnd_ = function (evt) {
      return _this.handleAnimationTimerEnd_(evt);
    };
    return _this;
  }

  MDCDialogFoundation.prototype.destroy = function destroy() {
    // Ensure that dialog is cleaned up when destroyed
    if (this.isOpen_) {
      this.close();
    }
    // Final cleanup of animating class in case the timer has not completed.
    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
    clearTimeout(this.timerId_);
  };

  MDCDialogFoundation.prototype.open = function open() {
    this.isOpen_ = true;
    this.disableScroll_();
    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);
    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);
    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);
    clearTimeout(this.timerId_);
    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);
  };

  MDCDialogFoundation.prototype.close = function close() {
    this.isOpen_ = false;
    this.enableScroll_();
    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);
    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
    this.adapter_.untrapFocusOnSurface();
    clearTimeout(this.timerId_);
    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);
  };

  MDCDialogFoundation.prototype.isOpen = function isOpen() {
    return this.isOpen_;
  };

  MDCDialogFoundation.prototype.accept = function accept(shouldNotify) {
    if (shouldNotify) {
      this.adapter_.notifyAccept();
    }

    this.close();
  };

  MDCDialogFoundation.prototype.cancel = function cancel(shouldNotify) {
    if (shouldNotify) {
      this.adapter_.notifyCancel();
    }

    this.close();
  };

  MDCDialogFoundation.prototype.handleDialogClick_ = function handleDialogClick_(evt) {
    var target = evt.target;

    if (this.adapter_.eventTargetHasClass(target, cssClasses.ACCEPT_BTN)) {
      this.accept(true);
    } else if (this.adapter_.eventTargetHasClass(target, cssClasses.CANCEL_BTN)) {
      this.cancel(true);
    }
  };

  MDCDialogFoundation.prototype.handleAnimationTimerEnd_ = function handleAnimationTimerEnd_() {
    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
    if (this.isOpen_) {
      this.adapter_.trapFocusOnSurface();
    }
  };

  MDCDialogFoundation.prototype.disableScroll_ = function disableScroll_() {
    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);
  };

  MDCDialogFoundation.prototype.enableScroll_ = function enableScroll_() {
    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);
  };

  return MDCDialogFoundation;
}(base["b" /* MDCFoundation */]);


// EXTERNAL MODULE: ../node_modules/focus-trap/index.js
var focus_trap = __webpack_require__("ySUw");
var focus_trap_default = /*#__PURE__*/__webpack_require__.n(focus_trap);

// CONCATENATED MODULE: ../node_modules/@material/dialog/util.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



function createFocusTrapInstance(surfaceEl, acceptButtonEl) {
  var focusTrapFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : focus_trap_default.a;

  return focusTrapFactory(surfaceEl, {
    initialFocus: acceptButtonEl,
    clickOutsideDeactivates: true
  });
}
// CONCATENATED MODULE: ../node_modules/@material/dialog/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCDialog", function() { return dialog_MDCDialog; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCDialogFoundation", function() { return foundation_MDCDialogFoundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "util", function() { return util_namespaceObject; });
var dialog__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function dialog__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dialog__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function dialog__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */










var dialog_MDCDialog = function (_MDCComponent) {
  dialog__inherits(MDCDialog, _MDCComponent);

  function MDCDialog() {
    dialog__classCallCheck(this, MDCDialog);

    return dialog__possibleConstructorReturn(this, _MDCComponent.apply(this, arguments));
  }

  MDCDialog.attachTo = function attachTo(root) {
    return new MDCDialog(root);
  };

  MDCDialog.prototype.initialize = function initialize() {
    this.focusTrap_ = createFocusTrapInstance(this.dialogSurface_, this.acceptButton_);
    this.footerBtnRipples_ = [];

    var footerBtns = this.root_.querySelectorAll('.mdc-dialog__footer__button');
    for (var i = 0, footerBtn; footerBtn = footerBtns[i]; i++) {
      this.footerBtnRipples_.push(new ripple["MDCRipple"](footerBtn));
    }
  };

  MDCDialog.prototype.destroy = function destroy() {
    this.footerBtnRipples_.forEach(function (ripple) {
      return ripple.destroy();
    });
    _MDCComponent.prototype.destroy.call(this);
  };

  MDCDialog.prototype.show = function show() {
    this.foundation_.open();
  };

  MDCDialog.prototype.close = function close() {
    this.foundation_.close();
  };

  MDCDialog.prototype.getDefaultFoundation = function getDefaultFoundation() {
    var _this2 = this;

    return new foundation_MDCDialogFoundation({
      addClass: function addClass(className) {
        return _this2.root_.classList.add(className);
      },
      removeClass: function removeClass(className) {
        return _this2.root_.classList.remove(className);
      },
      addBodyClass: function addBodyClass(className) {
        return document.body.classList.add(className);
      },
      removeBodyClass: function removeBodyClass(className) {
        return document.body.classList.remove(className);
      },
      eventTargetHasClass: function eventTargetHasClass(target, className) {
        return target.classList.contains(className);
      },
      registerInteractionHandler: function registerInteractionHandler(evt, handler) {
        return _this2.root_.addEventListener(evt, handler);
      },
      deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
        return _this2.root_.removeEventListener(evt, handler);
      },
      registerSurfaceInteractionHandler: function registerSurfaceInteractionHandler(evt, handler) {
        return _this2.dialogSurface_.addEventListener(evt, handler);
      },
      deregisterSurfaceInteractionHandler: function deregisterSurfaceInteractionHandler(evt, handler) {
        return _this2.dialogSurface_.removeEventListener(evt, handler);
      },
      registerDocumentKeydownHandler: function registerDocumentKeydownHandler(handler) {
        return document.addEventListener('keydown', handler);
      },
      deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler(handler) {
        return document.removeEventListener('keydown', handler);
      },
      notifyAccept: function notifyAccept() {
        return _this2.emit(foundation_MDCDialogFoundation.strings.ACCEPT_EVENT);
      },
      notifyCancel: function notifyCancel() {
        return _this2.emit(foundation_MDCDialogFoundation.strings.CANCEL_EVENT);
      },
      trapFocusOnSurface: function trapFocusOnSurface() {
        return _this2.focusTrap_.activate();
      },
      untrapFocusOnSurface: function untrapFocusOnSurface() {
        return _this2.focusTrap_.deactivate();
      },
      isDialog: function isDialog(el) {
        return el === _this2.dialogSurface_;
      }
    });
  };

  dialog__createClass(MDCDialog, [{
    key: 'open',
    get: function get() {
      return this.foundation_.isOpen();
    }
  }, {
    key: 'acceptButton_',
    get: function get() {
      return this.root_.querySelector(foundation_MDCDialogFoundation.strings.ACCEPT_SELECTOR);
    }
  }, {
    key: 'dialogSurface_',
    get: function get() {
      return this.root_.querySelector(foundation_MDCDialogFoundation.strings.DIALOG_SURFACE_SELECTOR);
    }
  }]);

  return MDCDialog;
}(base["a" /* MDCComponent */]);

/***/ }),

/***/ "7/cg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Button = exports.ButtonIcon = void 0;

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _preact = __webpack_require__("KM04");

var _MaterialComponent2 = _interopRequireDefault(__webpack_require__("uc5p"));

var _Icon2 = _interopRequireDefault(__webpack_require__("MeGi"));

var _generateThemeClass = _interopRequireDefault(__webpack_require__("QTRl"));

var ButtonIcon =
/*#__PURE__*/
function (_Icon) {
  (0, _inherits2.default)(ButtonIcon, _Icon);

  function ButtonIcon() {
    var _this;

    (0, _classCallCheck2.default)(this, ButtonIcon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ButtonIcon).apply(this, arguments));
    _this.componentName = 'button__icon';
    return _this;
  }

  return ButtonIcon;
}(_Icon2.default);

exports.ButtonIcon = ButtonIcon;

var Button =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Button, _MaterialComponent);

  function Button() {
    var _this2;

    (0, _classCallCheck2.default)(this, Button);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Button).apply(this, arguments));
    _this2.componentName = 'button';
    _this2.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];
    _this2.themeProps = ['primary', 'secondary'];
    return _this2;
  }

  (0, _createClass2.default)(Button, [{
    key: "materialDom",
    value: function materialDom(props) {
      var ButtonElement = props.href ? 'a' : 'button';
      var className = '';
      this.themeProps.forEach(function (themeProp) {
        if (themeProp in props && props[themeProp] !== false) {
          className += (0, _generateThemeClass.default)(themeProp) + ' ';
        }
      });
      return (0, _preact.h)(ButtonElement, _extends({
        ref: this.setControlRef
      }, props, {
        className: className
      }), this.props.children);
    }
  }]);
  return Button;
}(_MaterialComponent2.default);

exports.Button = Button;

var default_1 =
/*#__PURE__*/
function (_Button) {
  (0, _inherits2.default)(default_1, _Button);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Button);

exports.default = default_1;
default_1.Icon = ButtonIcon;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "7LhK":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"social_footer":"social_footer__Onedb","social_body":"social_body__1kBPM","social_twitter_wall":"social_twitter_wall__3iiA5","social_gif":"social_gif__-O59R"};

/***/ }),

/***/ "8Kxm":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CONSTANTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Deferred; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ErrorFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return FirebaseError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Sha1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return assert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return assertionError; });
/* unused harmony export async */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return base64; });
/* unused harmony export base64Decode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return base64Encode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return createSubscribe; });
/* unused harmony export decode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return deepCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return deepExtend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return errorPrefix; });
/* unused harmony export getUA */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return isAdmin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return isBrowser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return isEmpty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return isMobileCordova; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return isNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return isNodeSdk; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return isReactNative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return isValidFormat; });
/* unused harmony export isValidTimestamp */
/* unused harmony export issuedAtTime */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return jsonEval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return querystring; });
/* unused harmony export querystringDecode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return safeGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return stringLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return stringToByteArray$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return validateArgCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return validateCallback; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return validateContextObject; });
/* unused harmony export validateNamespace */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__("vCxL");


/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function assert(assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function assertionError(message) {
    return new Error('Firebase Database (' + CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function stringToByteArray(str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        } else if (c < 2048) {
            out[p++] = c >> 6 | 192;
            out[p++] = c & 63 | 128;
        } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = c >> 18 | 240;
            out[p++] = c >> 12 & 63 | 128;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
        } else {
            out[p++] = c >> 12 | 224;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function byteArrayToString(bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0,
        c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        } else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
        } else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        } else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function encodeByteArray(input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function encodeString(input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function decodeString(input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function decodeStringToByteArray(input, webSafe) {
        this.init_();
        var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = byte1 << 2 | byte2 >> 4;
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = byte3 << 6 & 0xc0 | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function init_() {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function base64Encode(str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function base64Decode(str) {
    try {
        return base64.decodeString(str, true);
    } catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */function () {
    function Deferred() {
        var _this = this;
        this.reject = function () {};
        this.resolve = function () {};
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            } else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () {});
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                } else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}();

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    } else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return typeof window !== 'undefined' &&
    // @ts-ignore Setting up an broadly applicable index signature for Window
    // just to deal with this case would probably be a bad idea.
    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return Object.prototype.toString.call(global.process) === '[object process]';
    } catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return typeof navigator === 'object' && navigator['product'] === 'ReactNative';
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */function (_super) {
    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["c" /* __extends */])(FirebaseError, _super);
    function FirebaseError(code, message) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error);
var ErrorFactory = /** @class */function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage);
        // Keys with an underscore at the end of their name are not included in
        // error.data for some reason.
        // TODO: Replace with Object.entries when lib is updated to es2017.
        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
            var key = _b[_a];
            if (key.slice(-1) !== '_') {
                if (key in error) {
                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
                }
                error[key] = customData[key];
            }
        }
        return error;
    };
    return ErrorFactory;
}();
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? value.toString() : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function decode(token) {
    var header = {},
        claims = {},
        data = {},
        signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    } catch (e) {}
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function isValidTimestamp(token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0,
        validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        } else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        } else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function issuedAtTime(token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function isValidFormat(token) {
    var decoded = decode(token),
        claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function isAdmin(token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    } else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function _loop_1(key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        } else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i],
            key = _b[0],
            value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);
                offset += 4;
            }
        } else {
            for (var i = 0; i < 16; i++) {
                W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = (t << 1 | t >>> 31) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ b & (c ^ d);
                    k = 0x5a827999;
                } else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            } else {
                if (i < 60) {
                    f = b & c | d & (b | c);
                    k = 0x8f1bbcdc;
                } else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;
            e = d;
            d = c;
            c = (b << 30 | b >>> 2) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = this.chain_[0] + a & 0xffffffff;
        this.chain_[1] = this.chain_[1] + b & 0xffffffff;
        this.chain_[2] = this.chain_[2] + c & 0xffffffff;
        this.chain_[3] = this.chain_[3] + d & 0xffffffff;
        this.chain_[4] = this.chain_[4] + e & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            } else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        } else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = this.chain_[i] >> j & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}();

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task.then(function () {
            executor(_this);
        }).catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined && error === undefined && complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
            observer = nextOrObserver;
        } else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    } else {
                        observer.complete();
                    }
                } catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                } catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}();
/** Turn synchronous function into one called asynchronously. */
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true).then(function () {
            fn.apply(void 0, args);
        }).catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {}
// do nothing


/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    } else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentNumber, callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function stringToByteArray$1(str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        } else if (c < 2048) {
            out[p++] = c >> 6 | 192;
            out[p++] = c & 63 | 128;
        } else if (c < 65536) {
            out[p++] = c >> 12 | 224;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
        } else {
            out[p++] = c >> 18 | 240;
            out[p++] = c >> 12 & 63 | 128;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function stringLength(str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        } else if (c < 2048) {
            p += 2;
        } else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        } else {
            p += 3;
        }
    }
    return p;
};


//# sourceMappingURL=index.esm.js.map

/***/ }),

/***/ "AkAO":
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "Asjh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),

/***/ "B1iE":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */;(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined;/** Used as the semantic version number. */var VERSION='4.17.15';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for cloning. */var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for function metadata. */var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading and trailing whitespace. */var reTrim=/^\s+|\s+$/g,reTrimStart=/^\s+/,reTrimEnd=/\s+$/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f',reComboHalfMarksRange='\\ufe20-\\ufe2f',rsComboSymbolsRange='\\u20d0-\\u20ff',rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos='[\'\u2019]',rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d';/** Used to compose unicode regexes. */var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
'\u0100':'A','\u0102':'A','\u0104':'A','\u0101':'a','\u0103':'a','\u0105':'a','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u010E':'D','\u0110':'D','\u010F':'d','\u0111':'d','\u0112':'E','\u0114':'E','\u0116':'E','\u0118':'E','\u011A':'E','\u0113':'e','\u0115':'e','\u0117':'e','\u0119':'e','\u011B':'e','\u011C':'G','\u011E':'G','\u0120':'G','\u0122':'G','\u011D':'g','\u011F':'g','\u0121':'g','\u0123':'g','\u0124':'H','\u0126':'H','\u0125':'h','\u0127':'h','\u0128':'I','\u012A':'I','\u012C':'I','\u012E':'I','\u0130':'I','\u0129':'i','\u012B':'i','\u012D':'i','\u012F':'i','\u0131':'i','\u0134':'J','\u0135':'j','\u0136':'K','\u0137':'k','\u0138':'k','\u0139':'L','\u013B':'L','\u013D':'L','\u013F':'L','\u0141':'L','\u013A':'l','\u013C':'l','\u013E':'l','\u0140':'l','\u0142':'l','\u0143':'N','\u0145':'N','\u0147':'N','\u014A':'N','\u0144':'n','\u0146':'n','\u0148':'n','\u014B':'n','\u014C':'O','\u014E':'O','\u0150':'O','\u014D':'o','\u014F':'o','\u0151':'o','\u0154':'R','\u0156':'R','\u0158':'R','\u0155':'r','\u0157':'r','\u0159':'r','\u015A':'S','\u015C':'S','\u015E':'S','\u0160':'S','\u015B':'s','\u015D':'s','\u015F':'s','\u0161':'s','\u0162':'T','\u0164':'T','\u0166':'T','\u0163':'t','\u0165':'t','\u0167':'t','\u0168':'U','\u016A':'U','\u016C':'U','\u016E':'U','\u0170':'U','\u0172':'U','\u0169':'u','\u016B':'u','\u016D':'u','\u016F':'u','\u0171':'u','\u0173':'u','\u0174':'W','\u0175':'w','\u0176':'Y','\u0177':'y','\u0178':'Y','\u0179':'Z','\u017B':'Z','\u017D':'Z','\u017A':'z','\u017C':'z','\u017E':'z','\u0132':'IJ','\u0133':'ij','\u0152':'Oe','\u0153':'oe','\u0149':"'n",'\u017F':'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=typeof global=='object'&&global&&global.Object===Object&&global;/** Detect free variable `self`. */var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports=typeof exports=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&typeof module=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/*--------------------------------------------------------------------------*//**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */function arrayIncludes(array,value){var length=array==null?0:array.length;return!!length&&baseIndexOf(array,value,0)>-1;}/**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */var asciiSize=baseProperty('length');/**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function asciiToArray(string){return string.split('');}/**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}/**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return-1;}/**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */function baseIsNaN(value){return value!==value;}/**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}/**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */function baseProperty(key){return function(object){return object==null?undefined:object[key];};}/**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */function basePropertyOf(object){return function(key){return object==null?undefined:object[key];};}/**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined){result=result===undefined?current:result+current;}}return result;}/**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */function baseToPairs(object,props){return arrayMap(props,function(key){return[key,object[key]];});}/**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */function baseUnary(func){return function(value){return func(value);};}/**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */function cacheHas(cache,key){return cache.has(key);}/**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */var deburrLetter=basePropertyOf(deburredLetters);/**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */function escapeStringChar(chr){return'\\'+stringEscapes[chr];}/**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */function getValue(object,key){return object==null?undefined:object[key];}/**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */function hasUnicode(string){return reHasUnicode.test(string);}/**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return-1;}/**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/*--------------------------------------------------------------------------*//**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */var nativeObjectToString=objectProto.toString;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined,Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=Symbol?Symbol.isConcatSpreadable:undefined,symIterator=Symbol?Symbol.iterator:undefined,symToStringTag=Symbol?Symbol.toStringTag:undefined;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/*------------------------------------------------------------------------*//**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return{};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined;return result;};}();/**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */function baseLodash(){}// No operation performed.
/**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined;}/**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */lodash.templateSettings={/**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'escape':reEscape,/**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'evaluate':reEvaluate,/**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'interpolate':reInterpolate,/**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */'variable':'',/**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */'imports':{/**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */'_':lodash}};// Ensure wrappers are instances of `baseLodash`.
lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/*------------------------------------------------------------------------*//**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else{result=this.clone();result.__dir__*=-1;}return result;}/**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else{break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/*------------------------------------------------------------------------*//**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;}/**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);}/**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/*------------------------------------------------------------------------*//**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */function listCacheClear(){this.__data__=[];this.size=0;}/**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else{splice.call(data,index,1);}--this.size;return true;}/**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];}/**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else{data[index][1]=value;}return this;}// Add methods to `ListCache`.
ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/*------------------------------------------------------------------------*//**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/*------------------------------------------------------------------------*//**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/*------------------------------------------------------------------------*//**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function stackGet(key){return this.__data__.get(key);}/**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function stackHas(key){return this.__data__.has(key);}/**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/*------------------------------------------------------------------------*//**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
isIndex(key,length)))){result.push(key);}}return result;}/**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined;}/**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}/**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function assignMergeValue(object,key,value){if(value!==undefined&&!eq(object[key],value)||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return-1;}/**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}/**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else{object[key]=value;}}/**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined:get(object,paths[index]);}return result;}/**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined){number=number<=upper?number:upper;}if(lower!==undefined){number=number>=lower?number:lower;}}return number;}/**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else{if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}// Check for circular references and return its corresponding clone.
stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}/**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return!length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined&&!(key in object)||!predicate(value)){return false;}}return true;}/**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined,args);},wait);}/**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */var baseEach=createBaseEach(baseForOwn);/**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
baseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */var baseFor=createBaseFor();/**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */var baseForRight=createBaseFor(true);/**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;}/**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */function baseGt(value,other){return value>other;}/**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined:apply(func,object,args);}/**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}/**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}/**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}/**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}/**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}/**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}/**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
if(typeof value=='function'){return value;}if(value==null){return identity;}if(typeof value=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */function baseLt(value,other){return value<other;}/**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}/**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){stack||(stack=new Stack());if(isObject(srcValue)){baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else{var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined;if(newValue===undefined){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}/**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined;var isCommon=newValue===undefined;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else{newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||isFunction(objValue)){newValue=initCloneObject(srcValue);}}else{isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined;}/**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return{'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}/**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}/**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else{baseUnset(array,index);}}}return array;}/**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */function baseSample(collection){return arraySample(values(collection));}/**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}/**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined;if(newValue===undefined){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};/**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return!result;});return!!result;}/**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else{high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */function baseSortedIndexBy(array,value,iteratee,retHighest){value=iteratee(value);var low=0,high=array==null?0:array.length,valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else{setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else{high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return+value;}/**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else{seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}/**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}/**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined;assignFunc(result,props[index],value);}return result;}/**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */function castFunction(value){return typeof value=='function'?value:identity;}/**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}/**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */var castRest=baseRest;/**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */function castSlice(array,start,end){var length=array.length;end=end===undefined?length:end;return!start&&end>=length?array:baseSlice(array,start,end);}/**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1;}}return 0;}/**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// that causes it, under certain circumstances, to provide the same value for
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// for more details.
//
// This also ensures a stable sort in V8 and other engines.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
return object.index-other.index;}/**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined;if(newValue===undefined){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else{assignValue(object,key,newValue);}}return object;}/**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}/**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined,guard=length>2?sources[2]:undefined;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
// for more details.
var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
// See https://es5.github.io/#x13.2.2 for more details.
return isObject(result)?result:thisBinding;};}/**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined,args,holders,undefined,undefined,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined;};}/**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else{wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined&&other===undefined){return defaultValue;}if(value!==undefined){result=value;}if(other!==undefined){if(result===undefined){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else{value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */function createPadding(length,chars){chars=chars===undefined?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined;}// Ensure the sign of `-0` is preserved.
start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}step=step===undefined?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined,newHoldersRight=isCurry?undefined:holders,newPartials=isCurry?partials:undefined,newPartialsRight=isCurry?undefined:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision&&nativeIsFinite(number)){// Shift with exponential notation to avoid floating-point issues.
// See [MDN](https://mdn.io/round#Examples) for more details.
var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return+(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined;}ary=ary===undefined?ary:nativeMax(toInteger(ary),0);arity=arity===undefined?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined;}var data=isBindKey?undefined:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else{result=createHybrid.apply(undefined,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}/**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */function customOmitClone(value){return isPlainObject(value)?undefined:value;}/**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Assume cyclic values are equal.
var stacked=stack.get(array);if(stacked&&stack.get(other)){return stacked==other;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
// Invalid dates are coerced to `NaN`.
return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// for more details.
return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked&&stack.get(other)){return stacked==other;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */function flatRest(func){return setToString(overRest(func,undefined,flatten),func+'');}/**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined;}/**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else{delete value[symToStringTag];}}return result;}/**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return[];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};/**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return{'start':start,'end':end};}/**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}/**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index;if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value;if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */function isKeyable(value){var type=typeof value;return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return!!data&&func===data[0];}/**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}/**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */var isMaskable=coreJsData?isFunction:stubFalse;/**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}/**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */function isStrictComparable(value){return value===value&&!isObject(value);}/**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object));};}/**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;// Exit early if metadata can't be merged.
if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}// Compose partial arguments.
var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
data[0]=source[0];data[1]=newBitmask;return data;}/**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */function objectToString(value){return nativeObjectToString.call(value);}/**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}/**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined;}return array;}/**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */function safeGet(object,key){if(key==='constructor'&&typeof object[key]==='function'){return;}if(key=='__proto__'){return;}return object[key];}/**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */var setData=shortOut(baseSetData);/**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */var setToString=shortOut(baseSetToString);/**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else{count=0;}return func.apply(undefined,arguments);};}/**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});/**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return'';}/**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/*------------------------------------------------------------------------*//**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined){size=1;}else{size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return[];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */function concat(){var length=arguments.length;if(!length){return[];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined,comparator):[];});/**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return[];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length-1;if(fromIndex!==undefined){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}/**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}/**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return[];}depth=depth===undefined?1:toInteger(depth);return baseFlatten(array,depth);}/**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */function head(array){return array&&array.length?array[0]:undefined;}/**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}/**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined;}else{mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator=='function'?comparator:undefined;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined,comparator):[];});/**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}/**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined;}/**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length;if(fromIndex!==undefined){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined;}/**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */var pull=baseRest(pullAll);/**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined,comparator):array;}/**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */function reverse(array){return array==null?array:nativeReverse.call(array);}/**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */function slice(array,start,end){var length=array==null?0:array.length;if(!length){return[];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else{start=start==null?0:toInteger(start);end=end===undefined?length:toInteger(end);}return baseSlice(array,start,end);}/**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return-1;}/**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return-1;}/**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}/**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */function take(array,n,guard){if(!(array&&array.length)){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined,comparator);});/**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */function uniqWith(array,comparator){comparator=typeof comparator=='function'?comparator:undefined;return array&&array.length?baseUniq(array,undefined,comparator):[];}/**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */function unzip(array){if(!(array&&array.length)){return[];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */function unzipWith(array,iteratee){if(!(array&&array.length)){return[];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined,group);});}/**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined,comparator);});/**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */var zip=baseRest(unzip);/**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined;return unzipWith(arrays,iteratee);});/*------------------------------------------------------------------------*//**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */function tap(value,interceptor){interceptor(value);return value;}/**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */function thru(value,interceptor){return interceptor(value);}/**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined);}return array;});});/**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */function wrapperChain(){return chain(this);}/**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */function wrapperNext(){if(this.__values__===undefined){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined:this.__values__[this.__index__++];return{'done':done,'value':value};}/**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */function wrapperToIterator(){return this;}/**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined;if(result){previous.__wrapped__=clone;}else{result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/*------------------------------------------------------------------------*//**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else{baseAssignValue(result,key,1);}});/**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */var find=createFind(findIndex);/**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */var findLast=createFind(findLastIndex);/**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else{baseAssignValue(result,key,[value]);}});/**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});/**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return[];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return[[],[]];});/**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined){n=1;}else{n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return[];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/*------------------------------------------------------------------------*//**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */var now=ctxNow||function(){return root.Date.now();};/*------------------------------------------------------------------------*//**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */function ary(func,n,guard){n=guard?undefined:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined,undefined,undefined,undefined,n);}/**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined;}return result;};}/**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */function curry(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curry.placeholder;return result;}/**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */function curryRight(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curryRight.placeholder;return result;}/**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
lastInvokeTime=time;// Start the timer for the trailing edge.
timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
// trailing edge, the system time has gone backwards and we're treating
// it as the trailing edge, or we've hit the `maxWait` limit.
return lastCallTime===undefined||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined;// Only invoke if we have `lastArgs` which means `func` has been
// debounced at least once.
if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined;return result;}function cancel(){if(timerId!==undefined){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined;}function flush(){return timerId===undefined?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}/**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
memoize.Cache=MapCache;/**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return!predicate.call(this);case 1:return!predicate.call(this,args[0]);case 2:return!predicate.call(this,args[0],args[1]);case 3:return!predicate.call(this,args[0],args[1],args[2]);}return!predicate.apply(this,args);};}/**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */function once(func){return before(2,func);}/**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined,partials,holders);});/**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined,partials,holders);});/**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined,undefined,undefined,indexes);});/**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined?start:toInteger(start);return baseRest(func,start);}/**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}/**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */function unary(func){return ary(func,1);}/**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */function wrap(value,wrapper){return partial(castFunction(wrapper),value);}/*------------------------------------------------------------------------*//**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */function castArray(){if(!arguments.length){return[];}var value=arguments[0];return isArray(value)?value:[value];}/**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}/**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */function cloneWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}/**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}/**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */function cloneDeepWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}/**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */function eq(value,other){return value===other||value!==value&&other!==other;}/**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */var gt=createRelationalOperation(baseGt);/**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */var isArray=Array.isArray;/**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}/**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */var isBuffer=nativeIsBuffer||stubFalse;/**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}/**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size;}if(isPrototype(value)){return!baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */function isEqual(value,other){return baseIsEqual(value,other);}/**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined;var result=customizer?customizer(value,other):undefined;return result===undefined?baseIsEqual(value,other,undefined,customizer):!!result;}/**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message=='string'&&typeof value.name=='string'&&!isPlainObject(value);}/**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}/**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
// in Safari 9 which returns 'object' for typed arrays and other constructors.
var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);}/**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */function isObject(value){var type=typeof value;return value!=null&&(type=='object'||type=='function');}/**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */function isObjectLike(value){return value!=null&&typeof value=='object';}/**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
// Perform the `toStringTag` check first to avoid errors with some
// ActiveX objects in IE.
return isNumber(value)&&value!=+value;}/**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */function isNull(value){return value===null;}/**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */function isNil(value){return value==null;}/**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}/**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}/**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */function isSymbol(value){return typeof value=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}/**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */function isUndefined(value){return value===undefined;}/**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}/**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */var lt=createRelationalOperation(baseLt);/**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */function toArray(value){if(!value){return[];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=value.replace(reTrim,'');var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}/**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */function toString(value){return value==null?'':baseToString(value);}/*------------------------------------------------------------------------*//**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */var at=flatRest(baseAt);/**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}/**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});/**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */var defaultsDeep=baseRest(function(args){args.push(undefined,customDefaultsMerge);return apply(mergeWith,undefined,args);});/**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;}/**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));/**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else{result[value]=[key];}},getIteratee);/**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */var invoke=baseRest(baseInvoke);/**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});/**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});/**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */function pickBy(object,predicate){if(object==null){return{};}var props=arrayMap(getAllKeysIn(object),function(prop){return[prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}/**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
if(!length){length=1;object=undefined;}while(++index<length){var value=object==null?undefined:object[toKey(path[index])];if(value===undefined){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseSet(object,path,value,customizer);}/**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */var toPairs=createToPairs(keys);/**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */var toPairsIn=createToPairs(keysIn);/**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else{accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */function values(object){return object==null?[]:baseValues(object,keys(object));}/**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/*------------------------------------------------------------------------*//**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */function clamp(number,lower,upper){if(upper===undefined){upper=lower;lower=undefined;}if(upper!==undefined){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */function inRange(number,start,end){start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined;}if(floating===undefined){if(typeof upper=='boolean'){floating=upper;upper=undefined;}else if(typeof lower=='boolean'){floating=lower;lower=undefined;}}if(lower===undefined&&upper===undefined){lower=0;upper=1;}else{lower=toFinite(lower);if(upper===undefined){upper=lower;lower=0;}else{upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/*------------------------------------------------------------------------*//**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */var lowerFirst=createCaseFirst('toLowerCase');/**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined){n=1;}else{n=toInteger(n);}return baseRepeat(toString(string),n);}/**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined;}limit=limit===undefined?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return[];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
// (http://ejohn.org/blog/javascript-micro-templating/)
// and Laura Doktorova's doT.js (https://github.com/olado/doT).
var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
// The sourceURL gets injected into the source that's eval-ed, so be careful
// with lookup (in case of e.g. prototype pollution), and strip newlines if any.
// A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
var sourceURL='//# sourceURL='+(hasOwnProperty.call(options,'sourceURL')?(options.sourceURL+'').replace(/[\r\n]/g,' '):'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
// order to produce the correct `offset` value.
return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
// code to add the data object to the top of the scope chain.
// Like with sourceURL, we take care to not check the option's prototype,
// as this configuration is a code injection vector.
var variable=hasOwnProperty.call(options,'variable')&&options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Cleanup code by stripping empty strings.
source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined,importsValues);});// Provide the compiled function's source by its `toString` method or
// the `source` property as a convenience for inlining compiled templates.
result.source=source;if(isError(result)){throw result;}return result;}/**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */function toLower(value){return toString(value).toLowerCase();}/**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */function toUpper(value){return toString(value).toUpperCase();}/**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrim,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimEnd,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */var upperFirst=createCaseFirst('toUpperCase');/**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined:pattern;if(pattern===undefined){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/*------------------------------------------------------------------------*//**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */var attempt=baseRest(function(func,args){try{return apply(func,undefined,args);}catch(e){return isError(e)?e:new Error(e);}});/**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return[toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}/**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */function constant(value){return function(){return value;};}/**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */var flow=createFlow();/**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */var flowRight=createFlow(true);/**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */function identity(value){return value;}/**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,CLONE_DEEP_FLAG));}/**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}/**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}/**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */function noop(){}// No operation performed.
/**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */var over=createOver(arrayMap);/**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */var overEvery=createOver(arrayEvery);/**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */var overSome=createOver(arraySome);/**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */function propertyOf(object){return function(path){return object==null?undefined:baseGet(object,path);};}/**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */var range=createRange();/**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */var rangeRight=createRange(true);/**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */function stubArray(){return[];}/**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */function stubFalse(){return false;}/**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */function stubObject(){return{};}/**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */function stubString(){return'';}/**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */function stubTrue(){return true;}/**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return[];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}/**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/*------------------------------------------------------------------------*//**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */var ceil=createRound('ceil');/**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */var floor=createRound('floor');/**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined;}/**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined;}/**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */function mean(array){return baseMean(array,identity);}/**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined;}/**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined;}/**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */var round=createRound('round');/**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/*------------------------------------------------------------------------*/// Add methods that return wrapped values in chain sequences.
lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
mixin(lodash,lodash);/*------------------------------------------------------------------------*/// Add methods that return unwrapped values in chain sequences.
lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});/*------------------------------------------------------------------------*//**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */lodash.VERSION=VERSION;// Assign default placeholders.
arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else{result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'';if(!hasOwnProperty.call(realNames,key)){realNames[key]=[];}realNames[key].push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined,WRAP_BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined}];// Add methods to `LazyWrapper`.
LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};/*--------------------------------------------------------------------------*/// Export lodash.
var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
if(true){// Expose Lodash on the global object to prevent errors when Lodash is
// loaded by a script tag in the presence of an AMD loader.
// See http://requirejs.org/docs/errors.html#mismatch for more details.
// Use `_.noConflict` to remove Lodash from the global object.
root._=_;// Define as an anonymous module so, through path mapping, it can be
// referenced as the "underscore" module.
!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return _;}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}// Check for `exports` after `define` in case a build optimizer adds it.
else if(freeModule){// Export for Node.js.
(freeModule.exports=_)._=_;// Export for CommonJS support.
freeExports._=_;}else{// Export to the global object.
root._=_;}}).call(this);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("l262")(module)))

/***/ }),

/***/ "C19U":
/***/ (function(module, exports, __webpack_require__) {

if (typeof indexedDB != 'undefined') {
  module.exports = __webpack_require__("enoJ");
} else {
  module.exports = {
    open: function open() {
      return Promise.reject('IDB requires a browser environment');
    },
    delete: function _delete() {
      return Promise.reject('IDB requires a browser environment');
    }
  };
}

/***/ }),

/***/ "Ci/U":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"photos_grid":"photos_grid__2poj_","grid_item":"grid_item__3-5H5","gallery_info":"gallery_info__3jnVc"};

/***/ }),

/***/ "Dg08":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"scrollbar":"scrollbar__1AR9d","mapImage":"mapImage__2RxRp","cfp":"cfp__Teipx","footer":"footer__9sNVj"};

/***/ }),

/***/ "DzRl":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ../node_modules/@material/base/index.js
var base = __webpack_require__("dSNL");

// CONCATENATED MODULE: ../node_modules/@material/snackbar/constants.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var cssClasses = {
  ROOT: 'mdc-snackbar',
  TEXT: 'mdc-snackbar__text',
  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',
  ACTION_BUTTON: 'mdc-snackbar__action-button',
  ACTIVE: 'mdc-snackbar--active',
  MULTILINE: 'mdc-snackbar--multiline',
  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom'
};

var strings = {
  TEXT_SELECTOR: '.mdc-snackbar__text',
  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',
  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',
  SHOW_EVENT: 'MDCSnackbar:show',
  HIDE_EVENT: 'MDCSnackbar:hide'
};

var numbers = {
  MESSAGE_TIMEOUT: 2750
};
// CONCATENATED MODULE: ../node_modules/@material/snackbar/foundation.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */




var foundation_MDCSnackbarFoundation = function (_MDCFoundation) {
  _inherits(MDCSnackbarFoundation, _MDCFoundation);

  _createClass(MDCSnackbarFoundation, [{
    key: 'active',
    get: function get() {
      return this.active_;
    }
  }], [{
    key: 'cssClasses',
    get: function get() {
      return cssClasses;
    }
  }, {
    key: 'strings',
    get: function get() {
      return strings;
    }
  }, {
    key: 'defaultAdapter',
    get: function get() {
      return {
        addClass: function addClass() /* className: string */{},
        removeClass: function removeClass() /* className: string */{},
        setAriaHidden: function setAriaHidden() {},
        unsetAriaHidden: function unsetAriaHidden() {},
        setActionAriaHidden: function setActionAriaHidden() {},
        unsetActionAriaHidden: function unsetActionAriaHidden() {},
        setActionText: function setActionText() /* actionText: string */{},
        setMessageText: function setMessageText() /* message: string */{},
        setFocus: function setFocus() {},
        isFocused: function isFocused() {
          return (/* boolean */false
          );
        },
        visibilityIsHidden: function visibilityIsHidden() {
          return (/* boolean */false
          );
        },
        registerCapturedBlurHandler: function registerCapturedBlurHandler() /* handler: EventListener */{},
        deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler() /* handler: EventListener */{},
        registerVisibilityChangeHandler: function registerVisibilityChangeHandler() /* handler: EventListener */{},
        deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler() /* handler: EventListener */{},
        registerCapturedInteractionHandler: function registerCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},
        deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},
        registerActionClickHandler: function registerActionClickHandler() /* handler: EventListener */{},
        deregisterActionClickHandler: function deregisterActionClickHandler() /* handler: EventListener */{},
        registerTransitionEndHandler: function registerTransitionEndHandler() /* handler: EventListener */{},
        deregisterTransitionEndHandler: function deregisterTransitionEndHandler() /* handler: EventListener */{},
        notifyShow: function notifyShow() {},
        notifyHide: function notifyHide() {}
      };
    }
  }]);

  function MDCSnackbarFoundation(adapter) {
    _classCallCheck(this, MDCSnackbarFoundation);

    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCSnackbarFoundation.defaultAdapter, adapter)));

    _this.active_ = false;
    _this.actionWasClicked_ = false;
    _this.dismissOnAction_ = true;
    _this.firstFocus_ = true;
    _this.pointerDownRecognized_ = false;
    _this.snackbarHasFocus_ = false;
    _this.snackbarData_ = null;
    _this.queue_ = [];
    _this.actionClickHandler_ = function () {
      _this.actionWasClicked_ = true;
      _this.invokeAction_();
    };
    _this.visibilitychangeHandler_ = function () {
      clearTimeout(_this.timeoutId_);
      _this.snackbarHasFocus_ = true;

      if (!_this.adapter_.visibilityIsHidden()) {
        setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);
      }
    };
    _this.interactionHandler_ = function (evt) {
      if (evt.type === 'focus' && !_this.adapter_.isFocused()) {
        return;
      }
      if (evt.type === 'touchstart' || evt.type === 'mousedown') {
        _this.pointerDownRecognized_ = true;
      }
      _this.handlePossibleTabKeyboardFocus_(evt);

      if (evt.type === 'focus') {
        _this.pointerDownRecognized_ = false;
      }
    };
    _this.blurHandler_ = function () {
      clearTimeout(_this.timeoutId_);
      _this.snackbarHasFocus_ = false;
      _this.timeoutId_ = setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);
    };
    return _this;
  }

  MDCSnackbarFoundation.prototype.init = function init() {
    this.adapter_.registerActionClickHandler(this.actionClickHandler_);
    this.adapter_.setAriaHidden();
    this.adapter_.setActionAriaHidden();
  };

  MDCSnackbarFoundation.prototype.destroy = function destroy() {
    var _this2 = this;

    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);
    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);
    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);
    ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {
      _this2.adapter_.deregisterCapturedInteractionHandler(evtType, _this2.interactionHandler_);
    });
  };

  MDCSnackbarFoundation.prototype.dismissesOnAction = function dismissesOnAction() {
    return this.dismissOnAction_;
  };

  MDCSnackbarFoundation.prototype.setDismissOnAction = function setDismissOnAction(dismissOnAction) {
    this.dismissOnAction_ = !!dismissOnAction;
  };

  MDCSnackbarFoundation.prototype.show = function show(data) {
    var _this3 = this;

    if (!data) {
      throw new Error('Please provide a data object with at least a message to display.');
    }
    if (!data.message) {
      throw new Error('Please provide a message to be displayed.');
    }
    if (data.actionHandler && !data.actionText) {
      throw new Error('Please provide action text with the handler.');
    }
    if (this.active) {
      this.queue_.push(data);
      return;
    }
    clearTimeout(this.timeoutId_);
    this.snackbarData_ = data;
    this.firstFocus_ = true;
    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);
    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);
    ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {
      _this3.adapter_.registerCapturedInteractionHandler(evtType, _this3.interactionHandler_);
    });

    var ACTIVE = cssClasses.ACTIVE,
        MULTILINE = cssClasses.MULTILINE,
        ACTION_ON_BOTTOM = cssClasses.ACTION_ON_BOTTOM;


    this.adapter_.setMessageText(this.snackbarData_.message);

    if (this.snackbarData_.multiline) {
      this.adapter_.addClass(MULTILINE);
      if (this.snackbarData_.actionOnBottom) {
        this.adapter_.addClass(ACTION_ON_BOTTOM);
      }
    }

    if (this.snackbarData_.actionHandler) {
      this.adapter_.setActionText(this.snackbarData_.actionText);
      this.actionHandler_ = this.snackbarData_.actionHandler;
      this.setActionHidden_(false);
    } else {
      this.setActionHidden_(true);
      this.actionHandler_ = null;
      this.adapter_.setActionText(null);
    }

    this.active_ = true;
    this.adapter_.addClass(ACTIVE);
    this.adapter_.unsetAriaHidden();
    this.adapter_.notifyShow();

    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);
  };

  MDCSnackbarFoundation.prototype.handlePossibleTabKeyboardFocus_ = function handlePossibleTabKeyboardFocus_() {
    var hijackFocus = this.firstFocus_ && !this.pointerDownRecognized_;

    if (hijackFocus) {
      this.setFocusOnAction_();
    }

    this.firstFocus_ = false;
  };

  MDCSnackbarFoundation.prototype.setFocusOnAction_ = function setFocusOnAction_() {
    this.adapter_.setFocus();
    this.snackbarHasFocus_ = true;
    this.firstFocus_ = false;
  };

  MDCSnackbarFoundation.prototype.invokeAction_ = function invokeAction_() {
    try {
      if (!this.actionHandler_) {
        return;
      }

      this.actionHandler_();
    } finally {
      if (this.dismissOnAction_) {
        this.cleanup_();
      }
    }
  };

  MDCSnackbarFoundation.prototype.cleanup_ = function cleanup_() {
    var _this4 = this;

    var allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;

    if (allowDismissal) {
      var ACTIVE = cssClasses.ACTIVE,
          MULTILINE = cssClasses.MULTILINE,
          ACTION_ON_BOTTOM = cssClasses.ACTION_ON_BOTTOM;


      this.adapter_.removeClass(ACTIVE);

      var handler = function handler() {
        clearTimeout(_this4.timeoutId_);
        _this4.adapter_.deregisterTransitionEndHandler(handler);
        _this4.adapter_.removeClass(MULTILINE);
        _this4.adapter_.removeClass(ACTION_ON_BOTTOM);
        _this4.setActionHidden_(true);
        _this4.adapter_.setAriaHidden();
        _this4.active_ = false;
        _this4.snackbarHasFocus_ = false;
        _this4.adapter_.notifyHide();
        _this4.showNext_();
      };

      this.adapter_.registerTransitionEndHandler(handler);
    }
  };

  MDCSnackbarFoundation.prototype.showNext_ = function showNext_() {
    if (!this.queue_.length) {
      return;
    }
    this.show(this.queue_.shift());
  };

  MDCSnackbarFoundation.prototype.setActionHidden_ = function setActionHidden_(isHidden) {
    if (isHidden) {
      this.adapter_.setActionAriaHidden();
    } else {
      this.adapter_.unsetActionAriaHidden();
    }
  };

  return MDCSnackbarFoundation;
}(base["b" /* MDCFoundation */]);


// CONCATENATED MODULE: ../node_modules/@material/animation/index.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @typedef {{
 *   noPrefix: string,
 *   webkitPrefix: string,
 *   styleProperty: string
 * }}
 */
var VendorPropertyMapType = void 0;

/** @const {Object<string, !VendorPropertyMapType>} */
var eventTypeMap = {
  'animationstart': {
    noPrefix: 'animationstart',
    webkitPrefix: 'webkitAnimationStart',
    styleProperty: 'animation'
  },
  'animationend': {
    noPrefix: 'animationend',
    webkitPrefix: 'webkitAnimationEnd',
    styleProperty: 'animation'
  },
  'animationiteration': {
    noPrefix: 'animationiteration',
    webkitPrefix: 'webkitAnimationIteration',
    styleProperty: 'animation'
  },
  'transitionend': {
    noPrefix: 'transitionend',
    webkitPrefix: 'webkitTransitionEnd',
    styleProperty: 'transition'
  }
};

/** @const {Object<string, !VendorPropertyMapType>} */
var cssPropertyMap = {
  'animation': {
    noPrefix: 'animation',
    webkitPrefix: '-webkit-animation'
  },
  'transform': {
    noPrefix: 'transform',
    webkitPrefix: '-webkit-transform'
  },
  'transition': {
    noPrefix: 'transition',
    webkitPrefix: '-webkit-transition'
  }
};

/**
 * @param {!Object} windowObj
 * @return {boolean}
 */
function hasProperShape(windowObj) {
  return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';
}

/**
 * @param {string} eventType
 * @return {boolean}
 */
function eventFoundInMaps(eventType) {
  return eventType in eventTypeMap || eventType in cssPropertyMap;
}

/**
 * @param {string} eventType
 * @param {!Object<string, !VendorPropertyMapType>} map
 * @param {!Element} el
 * @return {string}
 */
function getJavaScriptEventName(eventType, map, el) {
  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
}

/**
 * Helper function to determine browser prefix for CSS3 animation events
 * and property names.
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */
function getAnimationName(windowObj, eventType) {
  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
    return eventType;
  }

  var map = /** @type {!Object<string, !VendorPropertyMapType>} */eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;
  var el = windowObj['document']['createElement']('div');
  var eventName = '';

  if (map === eventTypeMap) {
    eventName = getJavaScriptEventName(eventType, map, el);
  } else {
    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
  }

  return eventName;
}

// Public functions to access getAnimationName() for JavaScript events or CSS
// property names.

var transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];

/**
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */
function getCorrectEventName(windowObj, eventType) {
  return getAnimationName(windowObj, eventType);
}

/**
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */
function getCorrectPropertyName(windowObj, eventType) {
  return getAnimationName(windowObj, eventType);
}


// CONCATENATED MODULE: ../node_modules/@material/snackbar/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCSnackbar", function() { return snackbar_MDCSnackbar; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCSnackbarFoundation", function() { return foundation_MDCSnackbarFoundation; });
var snackbar__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function snackbar__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function snackbar__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function snackbar__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */







var snackbar_MDCSnackbar = function (_MDCComponent) {
  snackbar__inherits(MDCSnackbar, _MDCComponent);

  function MDCSnackbar() {
    snackbar__classCallCheck(this, MDCSnackbar);

    return snackbar__possibleConstructorReturn(this, _MDCComponent.apply(this, arguments));
  }

  MDCSnackbar.attachTo = function attachTo(root) {
    return new MDCSnackbar(root);
  };

  MDCSnackbar.prototype.show = function show(data) {
    this.foundation_.show(data);
  };

  MDCSnackbar.prototype.getDefaultFoundation = function getDefaultFoundation() {
    var _this2 = this;

    var _MDCSnackbarFoundatio = foundation_MDCSnackbarFoundation.strings,
        TEXT_SELECTOR = _MDCSnackbarFoundatio.TEXT_SELECTOR,
        ACTION_BUTTON_SELECTOR = _MDCSnackbarFoundatio.ACTION_BUTTON_SELECTOR;

    var getText = function getText() {
      return _this2.root_.querySelector(TEXT_SELECTOR);
    };
    var getActionButton = function getActionButton() {
      return _this2.root_.querySelector(ACTION_BUTTON_SELECTOR);
    };

    /* eslint brace-style: "off" */
    return new foundation_MDCSnackbarFoundation({
      addClass: function addClass(className) {
        return _this2.root_.classList.add(className);
      },
      removeClass: function removeClass(className) {
        return _this2.root_.classList.remove(className);
      },
      setAriaHidden: function setAriaHidden() {
        return _this2.root_.setAttribute('aria-hidden', 'true');
      },
      unsetAriaHidden: function unsetAriaHidden() {
        return _this2.root_.removeAttribute('aria-hidden');
      },
      setActionAriaHidden: function setActionAriaHidden() {
        return getActionButton().setAttribute('aria-hidden', 'true');
      },
      unsetActionAriaHidden: function unsetActionAriaHidden() {
        return getActionButton().removeAttribute('aria-hidden');
      },
      setActionText: function setActionText(text) {
        getActionButton().textContent = text;
      },
      setMessageText: function setMessageText(text) {
        getText().textContent = text;
      },
      setFocus: function setFocus() {
        return getActionButton().focus();
      },
      isFocused: function isFocused() {
        return document.activeElement === getActionButton();
      },
      visibilityIsHidden: function visibilityIsHidden() {
        return document.hidden;
      },
      registerCapturedBlurHandler: function registerCapturedBlurHandler(handler) {
        return getActionButton().addEventListener('blur', handler, true);
      },
      deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler(handler) {
        return getActionButton().removeEventListener('blur', handler, true);
      },
      registerVisibilityChangeHandler: function registerVisibilityChangeHandler(handler) {
        return document.addEventListener('visibilitychange', handler);
      },
      deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler(handler) {
        return document.removeEventListener('visibilitychange', handler);
      },
      registerCapturedInteractionHandler: function registerCapturedInteractionHandler(evt, handler) {
        return document.body.addEventListener(evt, handler, true);
      },
      deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler(evt, handler) {
        return document.body.removeEventListener(evt, handler, true);
      },
      registerActionClickHandler: function registerActionClickHandler(handler) {
        return getActionButton().addEventListener('click', handler);
      },
      deregisterActionClickHandler: function deregisterActionClickHandler(handler) {
        return getActionButton().removeEventListener('click', handler);
      },
      registerTransitionEndHandler: function registerTransitionEndHandler(handler) {
        return _this2.root_.addEventListener(getCorrectEventName(window, 'transitionend'), handler);
      },
      deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {
        return _this2.root_.removeEventListener(getCorrectEventName(window, 'transitionend'), handler);
      },
      notifyShow: function notifyShow() {
        return _this2.emit(foundation_MDCSnackbarFoundation.strings.SHOW_EVENT);
      },
      notifyHide: function notifyHide() {
        return _this2.emit(foundation_MDCSnackbarFoundation.strings.HIDE_EVENT);
      }
    });
  };

  snackbar__createClass(MDCSnackbar, [{
    key: 'dismissesOnAction',
    get: function get() {
      return this.foundation_.dismissesOnAction();
    },
    set: function set(dismissesOnAction) {
      this.foundation_.setDismissOnAction(dismissesOnAction);
    }
  }]);

  return MDCSnackbar;
}(base["a" /* MDCComponent */]);

/***/ }),

/***/ "E7HD":
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "E7XR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.List = exports.ListGroupHeader = exports.ListGroup = exports.ListSecondaryText = exports.ListPrimaryText = exports.ListTextContainer = exports.ListDivider = exports.ListItemMetaText = exports.ListItemMeta = exports.ListItemGraphic = exports.ListLinkItem = exports.ListItem = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _preact = __webpack_require__("KM04");

var _MaterialComponent10 = _interopRequireDefault(__webpack_require__("uc5p"));

var _Icon = _interopRequireDefault(__webpack_require__("MeGi"));

var ListItem =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(ListItem, _MaterialComponent);

  function ListItem() {
    var _this;

    (0, _classCallCheck2.default)(this, ListItem);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).apply(this, arguments));
    _this.componentName = 'list-item';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(ListItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("li", _extends({
        role: "option"
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListItem;
}(_MaterialComponent10.default);

exports.ListItem = ListItem;

var ListLinkItem =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(ListLinkItem, _MaterialComponent2);

  function ListLinkItem() {
    var _this2;

    (0, _classCallCheck2.default)(this, ListLinkItem);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListLinkItem).apply(this, arguments));
    _this2.componentName = 'list-item';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(ListLinkItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("a", _extends({
        role: "option"
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListLinkItem;
}(_MaterialComponent10.default);

exports.ListLinkItem = ListLinkItem;

var ListItemGraphic =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(ListItemGraphic, _MaterialComponent3);

  function ListItemGraphic() {
    var _this3;

    (0, _classCallCheck2.default)(this, ListItemGraphic);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemGraphic).apply(this, arguments));
    _this3.componentName = 'list-item__graphic';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(ListItemGraphic, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", _extends({}, props, {
        ref: this.setControlRef,
        role: "presentation"
      }), (0, _preact.h)(_Icon.default, {
        "aria-hidden": "true"
      }, props.children));
    }
  }]);
  return ListItemGraphic;
}(_MaterialComponent10.default);

exports.ListItemGraphic = ListItemGraphic;

var ListItemMeta =
/*#__PURE__*/
function (_ListItemGraphic) {
  (0, _inherits2.default)(ListItemMeta, _ListItemGraphic);

  function ListItemMeta() {
    var _this4;

    (0, _classCallCheck2.default)(this, ListItemMeta);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMeta).apply(this, arguments));
    _this4.componentName = 'list-item__meta';
    return _this4;
  }

  return ListItemMeta;
}(ListItemGraphic);

exports.ListItemMeta = ListItemMeta;

var ListItemMetaText =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(ListItemMetaText, _MaterialComponent4);

  function ListItemMetaText() {
    var _this5;

    (0, _classCallCheck2.default)(this, ListItemMetaText);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMetaText).apply(this, arguments));
    _this5.componentName = 'list-item__meta';
    _this5.mdcProps = [];
    return _this5;
  }

  (0, _createClass2.default)(ListItemMetaText, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", _extends({}, props, {
        ref: this.setControlRef,
        role: "presentation"
      }), props.children);
    }
  }]);
  return ListItemMetaText;
}(_MaterialComponent10.default);

exports.ListItemMetaText = ListItemMetaText;

var ListDivider =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(ListDivider, _MaterialComponent5);

  function ListDivider() {
    var _this6;

    (0, _classCallCheck2.default)(this, ListDivider);
    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListDivider).apply(this, arguments));
    _this6.componentName = 'list-divider';
    _this6.mdcProps = ['inset'];
    return _this6;
  }

  (0, _createClass2.default)(ListDivider, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("li", _extends({
        role: "separator"
      }, props, {
        ref: this.setControlRef
      }));
    }
  }]);
  return ListDivider;
}(_MaterialComponent10.default);

exports.ListDivider = ListDivider;

var ListTextContainer =
/*#__PURE__*/
function (_MaterialComponent6) {
  (0, _inherits2.default)(ListTextContainer, _MaterialComponent6);

  function ListTextContainer() {
    var _this7;

    (0, _classCallCheck2.default)(this, ListTextContainer);
    _this7 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListTextContainer).apply(this, arguments));
    _this7.componentName = 'list-item__text';
    _this7.mdcProps = [];
    return _this7;
  }

  (0, _createClass2.default)(ListTextContainer, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", _extends({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListTextContainer;
}(_MaterialComponent10.default);

exports.ListTextContainer = ListTextContainer;

var ListPrimaryText =
/*#__PURE__*/
function (_ListTextContainer) {
  (0, _inherits2.default)(ListPrimaryText, _ListTextContainer);

  function ListPrimaryText() {
    var _this8;

    (0, _classCallCheck2.default)(this, ListPrimaryText);
    _this8 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListPrimaryText).apply(this, arguments));
    _this8.componentName = 'list-item__primary-text';
    return _this8;
  }

  return ListPrimaryText;
}(ListTextContainer);

exports.ListPrimaryText = ListPrimaryText;

var ListSecondaryText =
/*#__PURE__*/
function (_ListTextContainer2) {
  (0, _inherits2.default)(ListSecondaryText, _ListTextContainer2);

  function ListSecondaryText() {
    var _this9;

    (0, _classCallCheck2.default)(this, ListSecondaryText);
    _this9 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListSecondaryText).apply(this, arguments));
    _this9.componentName = 'list-item__secondary-text';
    return _this9;
  }

  return ListSecondaryText;
}(ListTextContainer);

exports.ListSecondaryText = ListSecondaryText;

var ListGroup =
/*#__PURE__*/
function (_MaterialComponent7) {
  (0, _inherits2.default)(ListGroup, _MaterialComponent7);

  function ListGroup() {
    var _this10;

    (0, _classCallCheck2.default)(this, ListGroup);
    _this10 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroup).apply(this, arguments));
    _this10.componentName = 'list-group';
    _this10.mdcProps = [];
    return _this10;
  }

  (0, _createClass2.default)(ListGroup, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", _extends({}, props), this.props.children);
    }
  }]);
  return ListGroup;
}(_MaterialComponent10.default);

exports.ListGroup = ListGroup;

var ListGroupHeader =
/*#__PURE__*/
function (_MaterialComponent8) {
  (0, _inherits2.default)(ListGroupHeader, _MaterialComponent8);

  function ListGroupHeader() {
    var _this11;

    (0, _classCallCheck2.default)(this, ListGroupHeader);
    _this11 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroupHeader).apply(this, arguments));
    _this11.componentName = 'list-group__subheader';
    _this11.mdcProps = [];
    return _this11;
  }

  (0, _createClass2.default)(ListGroupHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("h3", _extends({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListGroupHeader;
}(_MaterialComponent10.default);

exports.ListGroupHeader = ListGroupHeader;

var List =
/*#__PURE__*/
function (_MaterialComponent9) {
  (0, _inherits2.default)(List, _MaterialComponent9);

  function List() {
    var _this12;

    (0, _classCallCheck2.default)(this, List);
    _this12 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).apply(this, arguments));
    _this12.componentName = 'list';
    _this12.mdcProps = ['dense', 'two-line', 'avatar-list'];
    return _this12;
  }

  (0, _createClass2.default)(List, [{
    key: "materialDom",
    value: function materialDom(props) {
      if (props.interactive) {
        return (0, _preact.h)("nav", _extends({
          ref: this.setControlRef
        }, props), props.children);
      }

      return (0, _preact.h)("ul", _extends({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return List;
}(_MaterialComponent10.default);

exports.List = List;

var default_1 =
/*#__PURE__*/
function (_List) {
  (0, _inherits2.default)(default_1, _List);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(List);

exports.default = default_1;
default_1.Item = ListItem;
default_1.LinkItem = ListLinkItem;
default_1.ItemGraphic = ListItemGraphic;
default_1.ItemMeta = ListItemMeta;
default_1.ItemMetaText = ListItemMetaText;
default_1.Divider = ListDivider;
default_1.TextContainer = ListTextContainer;
default_1.PrimaryText = ListPrimaryText;
default_1.SecondaryText = ListSecondaryText;
default_1.Group = ListGroup;
default_1.GroupHeader = ListGroupHeader;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "EQDb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__("uJAj");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



/**
 * @template F
 */

var MDCComponent = function () {
  /**
   * @param {!Element} root
   * @return {!MDCComponent}
   */
  MDCComponent.attachTo = function attachTo(root) {
    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
    // returns an instantiated component with its root set to that element. Also note that in the cases of
    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
    // from getDefaultFoundation().
    return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__["a" /* default */]());
  };

  /**
   * @param {!Element} root
   * @param {F=} foundation
   * @param {...?} args
   */


  function MDCComponent(root) {
    var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    _classCallCheck(this, MDCComponent);

    /** @protected {!Element} */
    this.root_ = root;

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    this.initialize.apply(this, args);
    // Note that we initialize foundation here and not within the constructor's default param so that
    // this.root_ is defined and can be used within the foundation class.
    /** @protected {!F} */
    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
    this.foundation_.init();
    this.initialSyncWithDOM();
  }

  MDCComponent.prototype.initialize = function initialize() /* ...args */{}
  // Subclasses can override this to do any additional setup work that would be considered part of a
  // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
  // initialized. Any additional arguments besides root and foundation will be passed in here.


  /**
   * @return {!F} foundation
   */
  ;

  MDCComponent.prototype.getDefaultFoundation = function getDefaultFoundation() {
    // Subclasses must override this method to return a properly configured foundation class for the
    // component.
    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
  };

  MDCComponent.prototype.initialSyncWithDOM = function initialSyncWithDOM() {
    // Subclasses should override this method if they need to perform work to synchronize with a host DOM
    // object. An example of this would be a form control wrapper that needs to synchronize its internal state
    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
  };

  MDCComponent.prototype.destroy = function destroy() {
    // Subclasses may implement this method to release any resources / deregister any listeners they have
    // attached. An example of this might be deregistering a resize event from the window object.
    this.foundation_.destroy();
  };

  /**
   * Wrapper method to add an event listener to the component's root element. This is most useful when
   * listening for custom events.
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCComponent.prototype.listen = function listen(evtType, handler) {
    this.root_.addEventListener(evtType, handler);
  };

  /**
   * Wrapper method to remove an event listener to the component's root element. This is most useful when
   * unlistening for custom events.
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCComponent.prototype.unlisten = function unlisten(evtType, handler) {
    this.root_.removeEventListener(evtType, handler);
  };

  /**
   * Fires a cross-browser-compatible custom event from the component root of the given type,
   * with the given data.
   * @param {string} evtType
   * @param {!Object} evtData
   * @param {boolean=} shouldBubble
   */


  MDCComponent.prototype.emit = function emit(evtType, evtData) {
    var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    var evt = void 0;
    if (typeof CustomEvent === 'function') {
      evt = new CustomEvent(evtType, {
        detail: evtData,
        bubbles: shouldBubble
      });
    } else {
      evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(evtType, shouldBubble, false, evtData);
    }

    this.root_.dispatchEvent(evt);
  };

  return MDCComponent;
}();

/* harmony default export */ __webpack_exports__["a"] = (MDCComponent);

/***/ }),

/***/ "EyEO":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var util_namespaceObject = {};
__webpack_require__.d(util_namespaceObject, "createFocusTrapInstance", function() { return createFocusTrapInstance; });

// EXTERNAL MODULE: ../node_modules/@material/base/index.js
var base = __webpack_require__("dSNL");

// CONCATENATED MODULE: ../node_modules/@material/drawer/adapter.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Drawer
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Drawer into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
var MDCDrawerAdapter = function () {
  function MDCDrawerAdapter() {
    _classCallCheck(this, MDCDrawerAdapter);
  }

  /**
   * Adds a class to the root Element.
   * @param {string} className
   */
  MDCDrawerAdapter.prototype.addClass = function addClass(className) {};

  /**
   * Removes a class from the root Element.
   * @param {string} className
   */


  MDCDrawerAdapter.prototype.removeClass = function removeClass(className) {};

  /**
   * Returns true if the root Element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  MDCDrawerAdapter.prototype.hasClass = function hasClass(className) {};

  /**
   * @param {!Element} element target element to verify class name
   * @param {string} className class name
   */


  MDCDrawerAdapter.prototype.elementHasClass = function elementHasClass(element, className) {};

  /** @return {!ClientRect} */


  MDCDrawerAdapter.prototype.computeBoundingRect = function computeBoundingRect() {};

  /**
   * Saves the focus of currently active element.
   */


  MDCDrawerAdapter.prototype.saveFocus = function saveFocus() {};

  /**
   * Restores focus to element previously saved with 'saveFocus'.
   */


  MDCDrawerAdapter.prototype.restoreFocus = function restoreFocus() {};

  /**
   * Focuses the active / selected navigation item.
   */


  MDCDrawerAdapter.prototype.focusActiveNavigationItem = function focusActiveNavigationItem() {};

  /**
   * Emits a custom event "MDCDrawer:closed" denoting the drawer has closed.
   */


  MDCDrawerAdapter.prototype.notifyClose = function notifyClose() {};

  /**
   * Emits a custom event "MDCDrawer:opened" denoting the drawer has opened.
   */


  MDCDrawerAdapter.prototype.notifyOpen = function notifyOpen() {};

  /**
   * Traps focus on root element and focuses the active navigation element.
   */


  MDCDrawerAdapter.prototype.trapFocus = function trapFocus() {};

  /**
   * Releases focus trap from root element which was set by `trapFocus`
   * and restores focus to where it was prior to calling `trapFocus`.
   */


  MDCDrawerAdapter.prototype.releaseFocus = function releaseFocus() {};

  return MDCDrawerAdapter;
}();

/* harmony default export */ var drawer_adapter = (MDCDrawerAdapter);
// EXTERNAL MODULE: ../node_modules/@material/base/foundation.js
var foundation = __webpack_require__("uJAj");

// CONCATENATED MODULE: ../node_modules/@material/drawer/constants.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/** @enum {string} */
var cssClasses = {
  ROOT: 'mdc-drawer',
  DISMISSIBLE: 'mdc-drawer--dismissible',
  MODAL: 'mdc-drawer--modal',
  OPEN: 'mdc-drawer--open',
  ANIMATE: 'mdc-drawer--animate',
  OPENING: 'mdc-drawer--opening',
  CLOSING: 'mdc-drawer--closing'
};

/** @enum {string} */
var strings = {
  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',
  SCRIM_SELECTOR: '.mdc-drawer-scrim',
  CLOSE_EVENT: 'MDCDrawer:closed',
  OPEN_EVENT: 'MDCDrawer:opened'
};


// CONCATENATED MODULE: ../node_modules/@material/drawer/dismissible/foundation.js
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





/**
 * @extends {MDCFoundation<!MDCDrawerAdapter>}
 */

var foundation_MDCDismissibleDrawerFoundation = function (_MDCFoundation) {
  _inherits(MDCDismissibleDrawerFoundation, _MDCFoundation);

  function MDCDismissibleDrawerFoundation() {
    foundation__classCallCheck(this, MDCDismissibleDrawerFoundation);

    return _possibleConstructorReturn(this, _MDCFoundation.apply(this, arguments));
  }

  /**
   * Function to open the drawer.
   */
  MDCDismissibleDrawerFoundation.prototype.open = function open() {
    if (this.isOpen() || this.isOpening() || this.isClosing()) {
      return;
    }

    this.adapter_.addClass(cssClasses.OPEN);
    this.adapter_.addClass(cssClasses.ANIMATE);
    this.adapter_.computeBoundingRect(); // Force reflow.
    this.adapter_.addClass(cssClasses.OPENING);

    this.adapter_.saveFocus();
  };

  /**
   * Function to close the drawer.
   */


  MDCDismissibleDrawerFoundation.prototype.close = function close() {
    if (!this.isOpen() || this.isOpening() || this.isClosing()) {
      return;
    }

    this.adapter_.addClass(cssClasses.CLOSING);
  };

  /**
   * Extension point for when drawer finishes open animation.
   * @protected
   */


  MDCDismissibleDrawerFoundation.prototype.opened = function opened() {};

  /**
   * Extension point for when drawer finishes close animation.
   * @protected
   */


  MDCDismissibleDrawerFoundation.prototype.closed = function closed() {};

  /**
   * Returns true if drawer is in open state.
   * @return {boolean}
   */


  MDCDismissibleDrawerFoundation.prototype.isOpen = function isOpen() {
    return this.adapter_.hasClass(cssClasses.OPEN);
  };

  /**
   * Returns true if drawer is animating open.
   * @return {boolean}
   */


  MDCDismissibleDrawerFoundation.prototype.isOpening = function isOpening() {
    return this.adapter_.hasClass(cssClasses.OPENING);
  };

  /**
   * Returns true if drawer is animating closed.
   * @return {boolean}
   */


  MDCDismissibleDrawerFoundation.prototype.isClosing = function isClosing() {
    return this.adapter_.hasClass(cssClasses.CLOSING);
  };

  /**
   * Keydown handler to close drawer when key is escape.
   * @param evt
   */


  MDCDismissibleDrawerFoundation.prototype.handleKeydown = function handleKeydown(evt) {
    var keyCode = evt.keyCode,
        key = evt.key;


    var isEscape = key === 'Escape' || keyCode === 27;
    if (isEscape) {
      this.close();
    }
  };

  /**
   * Handles a transition end event on the root element.
   * @param {!Event} evt
   */


  MDCDismissibleDrawerFoundation.prototype.handleTransitionEnd = function handleTransitionEnd(evt) {
    var OPENING = cssClasses.OPENING,
        CLOSING = cssClasses.CLOSING,
        OPEN = cssClasses.OPEN,
        ANIMATE = cssClasses.ANIMATE,
        ROOT = cssClasses.ROOT;

    // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.

    var isElement = evt.target instanceof Element;
    if (!isElement || !this.adapter_.elementHasClass( /** @type {!Element} */evt.target, ROOT)) {
      return;
    }

    if (this.isClosing()) {
      this.adapter_.removeClass(OPEN);
      this.adapter_.restoreFocus();
      this.closed();
      this.adapter_.notifyClose();
    } else {
      this.adapter_.focusActiveNavigationItem();
      this.opened();
      this.adapter_.notifyOpen();
    }

    this.adapter_.removeClass(ANIMATE);
    this.adapter_.removeClass(OPENING);
    this.adapter_.removeClass(CLOSING);
  };

  _createClass(MDCDismissibleDrawerFoundation, null, [{
    key: 'strings',

    /** @return enum {string} */
    get: function get() {
      return strings;
    }

    /** @return enum {string} */

  }, {
    key: 'cssClasses',
    get: function get() {
      return cssClasses;
    }
  }, {
    key: 'defaultAdapter',
    get: function get() {
      return (/** @type {!MDCDrawerAdapter} */{
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          hasClass: function hasClass() /* className: string */{},
          elementHasClass: function elementHasClass() /* element: !Element, className: string */{},
          computeBoundingRect: function computeBoundingRect() {},
          notifyClose: function notifyClose() {},
          notifyOpen: function notifyOpen() {},
          saveFocus: function saveFocus() {},
          restoreFocus: function restoreFocus() {},
          focusActiveNavigationItem: function focusActiveNavigationItem() {},
          trapFocus: function trapFocus() {},
          releaseFocus: function releaseFocus() {}
        }
      );
    }
  }]);

  return MDCDismissibleDrawerFoundation;
}(foundation["a" /* default */]);

/* harmony default export */ var dismissible_foundation = (foundation_MDCDismissibleDrawerFoundation);
// CONCATENATED MODULE: ../node_modules/@material/drawer/modal/foundation.js
function modal_foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function foundation__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function foundation__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */




/**
 * @extends {MDCDismissibleDrawerFoundation<!MDCDrawerAdapter>}
 */

var MDCModalDrawerFoundation = function (_MDCDismissibleDrawer) {
  foundation__inherits(MDCModalDrawerFoundation, _MDCDismissibleDrawer);

  function MDCModalDrawerFoundation() {
    modal_foundation__classCallCheck(this, MDCModalDrawerFoundation);

    return foundation__possibleConstructorReturn(this, _MDCDismissibleDrawer.apply(this, arguments));
  }

  /**
   * Called when drawer finishes open animation.
   * @override
   */
  MDCModalDrawerFoundation.prototype.opened = function opened() {
    this.adapter_.trapFocus();
  };

  /**
   * Called when drawer finishes close animation.
   * @override
   */


  MDCModalDrawerFoundation.prototype.closed = function closed() {
    this.adapter_.releaseFocus();
  };

  /**
   * Handles click event on scrim.
   */


  MDCModalDrawerFoundation.prototype.handleScrimClick = function handleScrimClick() {
    this.close();
  };

  return MDCModalDrawerFoundation;
}(dismissible_foundation);

/* harmony default export */ var modal_foundation = (MDCModalDrawerFoundation);
// EXTERNAL MODULE: ../node_modules/@material/base/component.js
var component = __webpack_require__("EQDb");

// CONCATENATED MODULE: ../node_modules/@material/list/adapter.js
function adapter__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC List. Provides an interface for managing focus.
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
var MDCListAdapter = function () {
  function MDCListAdapter() {
    adapter__classCallCheck(this, MDCListAdapter);
  }

  /** @return {number} */
  MDCListAdapter.prototype.getListItemCount = function getListItemCount() {};

  /**
   * @return {number} */


  MDCListAdapter.prototype.getFocusedElementIndex = function getFocusedElementIndex() {};

  /**
   * @param {number} index
   * @param {string} attribute
   * @param {string} value
   */


  MDCListAdapter.prototype.setAttributeForElementIndex = function setAttributeForElementIndex(index, attribute, value) {};

  /**
   * @param {number} index
   * @param {string} attribute
   */


  MDCListAdapter.prototype.removeAttributeForElementIndex = function removeAttributeForElementIndex(index, attribute) {};

  /**
   * @param {number} index
   * @param {string} className
   */


  MDCListAdapter.prototype.addClassForElementIndex = function addClassForElementIndex(index, className) {};

  /**
   * @param {number} index
   * @param {string} className
   */


  MDCListAdapter.prototype.removeClassForElementIndex = function removeClassForElementIndex(index, className) {};

  /**
   * Focuses list item at the index specified.
   * @param {number} index
   */


  MDCListAdapter.prototype.focusItemAtIndex = function focusItemAtIndex(index) {};

  /**
   * Sets the tabindex to the value specified for all button/a element children of
   * the list item at the index specified.
   * @param {number} listItemIndex
   * @param {number} tabIndexValue
   */


  MDCListAdapter.prototype.setTabIndexForListItemChildren = function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {};

  /**
   * If the given element has an href, follows the link.
   * @param {!Element} ele
   */


  MDCListAdapter.prototype.followHref = function followHref(ele) {};

  return MDCListAdapter;
}();

/* harmony default export */ var list_adapter = (MDCListAdapter);
// CONCATENATED MODULE: ../node_modules/@material/list/constants.js
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
var constants_cssClasses = {
  ROOT: 'mdc-list',
  LIST_ITEM_CLASS: 'mdc-list-item',
  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
};

/** @enum {string} */
var constants_strings = {
  ARIA_ORIENTATION: 'aria-orientation',
  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
  ARIA_SELECTED: 'aria-selected',
  FOCUSABLE_CHILD_ELEMENTS: '.' + constants_cssClasses.LIST_ITEM_CLASS + ' button:not(:disabled), .' + constants_cssClasses.LIST_ITEM_CLASS + ' a',
  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
};


// CONCATENATED MODULE: ../node_modules/@material/list/foundation.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var foundation__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function list_foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function list_foundation__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function list_foundation__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

var foundation_MDCListFoundation = function (_MDCFoundation) {
  list_foundation__inherits(MDCListFoundation, _MDCFoundation);

  foundation__createClass(MDCListFoundation, null, [{
    key: 'strings',

    /** @return enum {string} */
    get: function get() {
      return constants_strings;
    }

    /** @return enum {string} */

  }, {
    key: 'cssClasses',
    get: function get() {
      return constants_cssClasses;
    }

    /**
     * {@see MDCListAdapter} for typing information on parameters and return
     * types.
     * @return {!MDCListAdapter}
     */

  }, {
    key: 'defaultAdapter',
    get: function get() {
      return (/** @type {!MDCListAdapter} */{
          getListItemCount: function getListItemCount() {},
          getFocusedElementIndex: function getFocusedElementIndex() {},
          setAttributeForElementIndex: function setAttributeForElementIndex() {},
          removeAttributeForElementIndex: function removeAttributeForElementIndex() {},
          addClassForElementIndex: function addClassForElementIndex() {},
          removeClassForElementIndex: function removeClassForElementIndex() {},
          focusItemAtIndex: function focusItemAtIndex() {},
          setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},
          followHref: function followHref() {}
        }
      );
    }

    /**
     * @param {!MDCListAdapter=} adapter
     */

  }]);

  function MDCListFoundation(adapter) {
    list_foundation__classCallCheck(this, MDCListFoundation);

    /** {boolean} */
    var _this = list_foundation__possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCListFoundation.defaultAdapter, adapter)));

    _this.wrapFocus_ = false;
    /** {boolean} */
    _this.isVertical_ = true;
    /** {boolean} */
    _this.isSingleSelectionList_ = false;
    /** {number} */
    _this.selectedIndex_ = -1;
    /** {boolean} */
    _this.useActivatedClass_ = false;
    return _this;
  }

  /**
   * Sets the private wrapFocus_ variable.
   * @param {boolean} value
   */


  MDCListFoundation.prototype.setWrapFocus = function setWrapFocus(value) {
    this.wrapFocus_ = value;
  };

  /**
   * Sets the isVertical_ private variable.
   * @param {boolean} value
   */


  MDCListFoundation.prototype.setVerticalOrientation = function setVerticalOrientation(value) {
    this.isVertical_ = value;
  };

  /**
   * Sets the isSingleSelectionList_ private variable.
   * @param {boolean} value
   */


  MDCListFoundation.prototype.setSingleSelection = function setSingleSelection(value) {
    this.isSingleSelectionList_ = value;
  };

  /**
   * Sets the useActivatedClass_ private variable.
   * @param {boolean} useActivated
   */


  MDCListFoundation.prototype.setUseActivatedClass = function setUseActivatedClass(useActivated) {
    this.useActivatedClass_ = useActivated;
  };

  /** @param {number} index */


  MDCListFoundation.prototype.setSelectedIndex = function setSelectedIndex(index) {
    if (index === this.selectedIndex_) {
      return;
    }

    var className = this.useActivatedClass_ ? constants_cssClasses.LIST_ITEM_ACTIVATED_CLASS : constants_cssClasses.LIST_ITEM_SELECTED_CLASS;

    if (this.selectedIndex_ >= 0) {
      this.adapter_.removeAttributeForElementIndex(this.selectedIndex_, constants_strings.ARIA_SELECTED);
      this.adapter_.removeClassForElementIndex(this.selectedIndex_, className);
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);
    }

    if (index >= 0 && this.adapter_.getListItemCount() > index) {
      this.selectedIndex_ = index;
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, constants_strings.ARIA_SELECTED, true);
      this.adapter_.addClassForElementIndex(this.selectedIndex_, className);
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', 0);

      if (this.selectedIndex_ !== 0) {
        this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
      }
    }
  };

  /**
   * Focus in handler for the list items.
   * @param evt
   * @param {number} listItemIndex
   */


  MDCListFoundation.prototype.handleFocusIn = function handleFocusIn(evt, listItemIndex) {
    if (listItemIndex >= 0) {
      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
    }
  };

  /**
   * Focus out handler for the list items.
   * @param {Event} evt
   * @param {number} listItemIndex
   */


  MDCListFoundation.prototype.handleFocusOut = function handleFocusOut(evt, listItemIndex) {
    if (listItemIndex >= 0) {
      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
    }
  };

  /**
   * Key handler for the list.
   * @param {Event} evt
   * @param {boolean} isRootListItem
   * @param {number} listItemIndex
   */


  MDCListFoundation.prototype.handleKeydown = function handleKeydown(evt, isRootListItem, listItemIndex) {
    var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
    var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
    var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
    var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
    var isHome = evt.key === 'Home' || evt.keyCode === 36;
    var isEnd = evt.key === 'End' || evt.keyCode === 35;
    var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
    var isSpace = evt.key === 'Space' || evt.keyCode === 32;

    var currentIndex = this.adapter_.getFocusedElementIndex();
    if (currentIndex === -1) {
      currentIndex = listItemIndex;
      if (currentIndex < 0) {
        // If this event doesn't have a mdc-list-item ancestor from the
        // current list (not from a sublist), return early.
        return;
      }
    }

    if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
      this.preventDefaultEvent_(evt);
      this.focusNextElement(currentIndex);
    } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
      this.preventDefaultEvent_(evt);
      this.focusPrevElement(currentIndex);
    } else if (isHome) {
      this.preventDefaultEvent_(evt);
      this.focusFirstElement();
    } else if (isEnd) {
      this.preventDefaultEvent_(evt);
      this.focusLastElement();
    } else if (this.isSingleSelectionList_ && (isEnter || isSpace)) {
      this.preventDefaultEvent_(evt);
      // Check if the space key was pressed on the list item or a child element.
      if (isRootListItem) {
        this.setSelectedIndex(currentIndex);

        // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.
        this.adapter_.followHref(currentIndex);
      }
    }
  };

  /**
   * Click handler for the list.
   */


  MDCListFoundation.prototype.handleClick = function handleClick() {
    var currentIndex = this.adapter_.getFocusedElementIndex();

    if (currentIndex === -1) return;

    this.setSelectedIndex(currentIndex);
  };

  /**
   * Ensures that preventDefault is only called if the containing element doesn't
   * consume the event, and it will cause an unintended scroll.
   * @param {Event} evt
   * @private
   */


  MDCListFoundation.prototype.preventDefaultEvent_ = function preventDefaultEvent_(evt) {
    var tagName = ('' + evt.target.tagName).toLowerCase();
    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
      evt.preventDefault();
    }
  };

  /**
   * Focuses the next element on the list.
   * @param {number} index
   */


  MDCListFoundation.prototype.focusNextElement = function focusNextElement(index) {
    var count = this.adapter_.getListItemCount();
    var nextIndex = index + 1;
    if (nextIndex >= count) {
      if (this.wrapFocus_) {
        nextIndex = 0;
      } else {
        // Return early because last item is already focused.
        return;
      }
    }
    this.adapter_.focusItemAtIndex(nextIndex);
  };

  /**
   * Focuses the previous element on the list.
   * @param {number} index
   */


  MDCListFoundation.prototype.focusPrevElement = function focusPrevElement(index) {
    var prevIndex = index - 1;
    if (prevIndex < 0) {
      if (this.wrapFocus_) {
        prevIndex = this.adapter_.getListItemCount() - 1;
      } else {
        // Return early because first item is already focused.
        return;
      }
    }
    this.adapter_.focusItemAtIndex(prevIndex);
  };

  MDCListFoundation.prototype.focusFirstElement = function focusFirstElement() {
    if (this.adapter_.getListItemCount() > 0) {
      this.adapter_.focusItemAtIndex(0);
    }
  };

  MDCListFoundation.prototype.focusLastElement = function focusLastElement() {
    var lastIndex = this.adapter_.getListItemCount() - 1;
    if (lastIndex >= 0) {
      this.adapter_.focusItemAtIndex(lastIndex);
    }
  };

  return MDCListFoundation;
}(foundation["a" /* default */]);

/* harmony default export */ var list_foundation = (foundation_MDCListFoundation);
// CONCATENATED MODULE: ../node_modules/@material/list/index.js
var list__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var list__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function list__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function list__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function list__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */






/**
 * @extends MDCComponent<!MDCListFoundation>
 */

var list_MDCList = function (_MDCComponent) {
  list__inherits(MDCList, _MDCComponent);

  /** @param {...?} args */
  function MDCList() {
    list__classCallCheck(this, MDCList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    /** @private {!Function} */
    var _this = list__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));

    _this.handleKeydown_;
    /** @private {!Function} */
    _this.handleClick_;
    /** @private {!Function} */
    _this.focusInEventListener_;
    /** @private {!Function} */
    _this.focusOutEventListener_;
    return _this;
  }

  /**
   * @param {!Element} root
   * @return {!MDCList}
   */


  MDCList.attachTo = function attachTo(root) {
    return new MDCList(root);
  };

  MDCList.prototype.destroy = function destroy() {
    this.root_.removeEventListener('keydown', this.handleKeydown_);
    this.root_.removeEventListener('click', this.handleClick_);
    this.root_.removeEventListener('focusin', this.focusInEventListener_);
    this.root_.removeEventListener('focusout', this.focusOutEventListener_);
  };

  MDCList.prototype.initialSyncWithDOM = function initialSyncWithDOM() {
    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
    this.root_.addEventListener('keydown', this.handleKeydown_);
    this.root_.addEventListener('focusin', this.focusInEventListener_);
    this.root_.addEventListener('focusout', this.focusOutEventListener_);
    this.layout();
    this.initializeListType();
  };

  MDCList.prototype.layout = function layout() {
    var direction = this.root_.getAttribute(constants_strings.ARIA_ORIENTATION);
    this.vertical = direction !== constants_strings.ARIA_ORIENTATION_HORIZONTAL;

    // List items need to have at least tabindex=-1 to be focusable.
    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(function (ele) {
      ele.setAttribute('tabindex', -1);
    });

    // Child button/a elements are not tabbable until the list item is focused.
    [].slice.call(this.root_.querySelectorAll(constants_strings.FOCUSABLE_CHILD_ELEMENTS)).forEach(function (ele) {
      return ele.setAttribute('tabindex', -1);
    });
  };

  /**
   * Used to figure out which list item this event is targetting. Or returns -1 if
   * there is no list item
   * @param {Event} evt
   * @private
   */


  MDCList.prototype.getListItemIndex_ = function getListItemIndex_(evt) {
    var eventTarget = /** @type {HTMLElement} */evt.target;
    var index = -1;

    // Find the first ancestor that is a list item or the list.
    while (!eventTarget.classList.contains(constants_cssClasses.LIST_ITEM_CLASS) && !eventTarget.classList.contains(constants_cssClasses.ROOT)) {
      eventTarget = eventTarget.parentElement;
    }

    // Get the index of the element if it is a list item.
    if (eventTarget.classList.contains(constants_cssClasses.LIST_ITEM_CLASS)) {
      index = this.listElements.indexOf(eventTarget);
    }

    return index;
  };

  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  MDCList.prototype.handleFocusInEvent_ = function handleFocusInEvent_(evt) {
    var index = this.getListItemIndex_(evt);
    this.foundation_.handleFocusIn(evt, index);
  };

  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  MDCList.prototype.handleFocusOutEvent_ = function handleFocusOutEvent_(evt) {
    var index = this.getListItemIndex_(evt);
    this.foundation_.handleFocusOut(evt, index);
  };

  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  MDCList.prototype.handleKeydownEvent_ = function handleKeydownEvent_(evt) {
    var index = this.getListItemIndex_(evt);

    if (index >= 0) {
      this.foundation_.handleKeydown(evt, evt.target.classList.contains(constants_cssClasses.LIST_ITEM_CLASS), index);
    }
  };

  MDCList.prototype.initializeListType = function initializeListType() {
    // Automatically set single selection if selected/activated classes are present.
    var preselectedElement = this.root_.querySelector('.' + constants_cssClasses.LIST_ITEM_ACTIVATED_CLASS + ', .' + constants_cssClasses.LIST_ITEM_SELECTED_CLASS);

    if (preselectedElement) {
      if (preselectedElement.classList.contains(constants_cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {
        this.foundation_.setUseActivatedClass(true);
      }

      this.singleSelection = true;
      this.selectedIndex = this.listElements.indexOf(preselectedElement);
    }
  };

  /** @param {boolean} value */


  /** @return {!MDCListFoundation} */
  MDCList.prototype.getDefaultFoundation = function getDefaultFoundation() {
    var _this2 = this;

    return new list_foundation( /** @type {!MDCListAdapter} */list__extends({
      getListItemCount: function getListItemCount() {
        return _this2.listElements.length;
      },
      getFocusedElementIndex: function getFocusedElementIndex() {
        return _this2.listElements.indexOf(document.activeElement);
      },
      setAttributeForElementIndex: function setAttributeForElementIndex(index, attr, value) {
        var element = _this2.listElements[index];
        if (element) {
          element.setAttribute(attr, value);
        }
      },
      removeAttributeForElementIndex: function removeAttributeForElementIndex(index, attr) {
        var element = _this2.listElements[index];
        if (element) {
          element.removeAttribute(attr);
        }
      },
      addClassForElementIndex: function addClassForElementIndex(index, className) {
        var element = _this2.listElements[index];
        if (element) {
          element.classList.add(className);
        }
      },
      removeClassForElementIndex: function removeClassForElementIndex(index, className) {
        var element = _this2.listElements[index];
        if (element) {
          element.classList.remove(className);
        }
      },
      focusItemAtIndex: function focusItemAtIndex(index) {
        var element = _this2.listElements[index];
        if (element) {
          element.focus();
        }
      },
      setTabIndexForListItemChildren: function setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {
        var element = _this2.listElements[listItemIndex];
        var listItemChildren = [].slice.call(element.querySelectorAll(constants_strings.FOCUSABLE_CHILD_ELEMENTS));
        listItemChildren.forEach(function (ele) {
          return ele.setAttribute('tabindex', tabIndexValue);
        });
      },
      followHref: function followHref(index) {
        var listItem = _this2.listElements[index];
        if (listItem && listItem.href) {
          listItem.click();
        }
      }
    }));
  };

  list__createClass(MDCList, [{
    key: 'vertical',
    set: function set(value) {
      this.foundation_.setVerticalOrientation(value);
    }

    /** @return Array<!Element>*/

  }, {
    key: 'listElements',
    get: function get() {
      return [].slice.call(this.root_.querySelectorAll(constants_strings.ENABLED_ITEMS_SELECTOR));
    }

    /** @param {boolean} value */

  }, {
    key: 'wrapFocus',
    set: function set(value) {
      this.foundation_.setWrapFocus(value);
    }

    /** @param {boolean} isSingleSelectionList */

  }, {
    key: 'singleSelection',
    set: function set(isSingleSelectionList) {
      if (isSingleSelectionList) {
        this.root_.addEventListener('click', this.handleClick_);
      } else {
        this.root_.removeEventListener('click', this.handleClick_);
      }

      this.foundation_.setSingleSelection(isSingleSelectionList);
    }

    /** @param {number} index */

  }, {
    key: 'selectedIndex',
    set: function set(index) {
      this.foundation_.setSelectedIndex(index);
    }
  }]);

  return MDCList;
}(component["a" /* default */]);


// EXTERNAL MODULE: ../node_modules/@material/drawer/node_modules/focus-trap/index.js
var focus_trap = __webpack_require__("TC0Z");
var focus_trap_default = /*#__PURE__*/__webpack_require__.n(focus_trap);

// CONCATENATED MODULE: ../node_modules/@material/drawer/util.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */



/**
 * @param {!Element} surfaceEl
 * @param {!Function} focusTrapFactory
 * @return {!FocusTrapInstance}
 */
function createFocusTrapInstance(surfaceEl) {
  var focusTrapFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focus_trap_default.a;

  return focusTrapFactory(surfaceEl, {
    clickOutsideDeactivates: true,
    initialFocus: false, // Navigation drawer handles focusing on active nav item.
    escapeDeactivates: false, // Navigation drawer handles ESC.
    returnFocusOnDeactivate: false // Navigation drawer handles restore focus.
  });
}


// CONCATENATED MODULE: ../node_modules/@material/drawer/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCDrawer", function() { return drawer_MDCDrawer; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCDismissibleDrawerFoundation", function() { return dismissible_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCModalDrawerFoundation", function() { return modal_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "util", function() { return util_namespaceObject; });
var drawer__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var drawer__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function drawer__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function drawer__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function drawer__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */










/**
 * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}
 * @final
 */

var drawer_MDCDrawer = function (_MDCComponent) {
  drawer__inherits(MDCDrawer, _MDCComponent);

  /**
   * @param {...?} args
   */
  function MDCDrawer() {
    drawer__classCallCheck(this, MDCDrawer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    /** @private {!Element} */
    var _this = drawer__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));

    _this.previousFocus_;

    /** @private {!Function} */
    _this.handleKeydown_;

    /** @private {!Function} */
    _this.handleTransitionEnd_;

    /** @private {!Function} */
    _this.focusTrapFactory_;

    /** @private {!FocusTrapInstance} */
    _this.focusTrap_;

    /** @private {?Element} */
    _this.scrim_;

    /** @private {?Function} */
    _this.handleScrimClick_;

    /** @private {?MDCList} */
    _this.list_;
    return _this;
  }

  /**
   * @param {!Element} root
   * @return {!MDCDrawer}
   */


  MDCDrawer.attachTo = function attachTo(root) {
    return new MDCDrawer(root);
  };

  /**
   * Returns true if drawer is in the open position.
   * @return {boolean}
   */


  MDCDrawer.prototype.initialize = function initialize() {
    var focusTrapFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : focus_trap_default.a;
    var listFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {
      return new list_MDCList(el);
    };

    var listEl = /** @type {!Element} */this.root_.querySelector('.' + list_foundation.cssClasses.ROOT);
    if (listEl) {
      this.list_ = listFactory(listEl);
      this.list_.wrapFocus = true;
    }
    this.focusTrapFactory_ = focusTrapFactory;
  };

  MDCDrawer.prototype.initialSyncWithDOM = function initialSyncWithDOM() {
    var _this2 = this;

    var MODAL = dismissible_foundation.cssClasses.MODAL;


    if (this.root_.classList.contains(MODAL)) {
      var SCRIM_SELECTOR = dismissible_foundation.strings.SCRIM_SELECTOR;

      this.scrim_ = /** @type {!Element} */this.root_.parentElement.querySelector(SCRIM_SELECTOR);
      this.handleScrimClick_ = function () {
        return (/** @type {!MDCModalDrawerFoundation} */_this2.foundation_.handleScrimClick()
        );
      };
      this.scrim_.addEventListener('click', this.handleScrimClick_);
      this.focusTrap_ = createFocusTrapInstance(this.root_, this.focusTrapFactory_);
    }

    this.handleKeydown_ = function (evt) {
      return _this2.foundation_.handleKeydown(evt);
    };
    this.handleTransitionEnd_ = function (evt) {
      return _this2.foundation_.handleTransitionEnd(evt);
    };

    this.root_.addEventListener('keydown', this.handleKeydown_);
    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);
  };

  MDCDrawer.prototype.destroy = function destroy() {
    this.root_.removeEventListener('keydown', this.handleKeydown_);
    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

    if (this.list_) {
      this.list_.destroy();
    }

    var MODAL = dismissible_foundation.cssClasses.MODAL;

    if (this.root_.classList.contains(MODAL)) {
      this.scrim_.removeEventListener('click', /** @type {!Function} */this.handleScrimClick_);
      // Ensure drawer is closed to hide scrim and release focus
      this.open = false;
    }
  };

  MDCDrawer.prototype.getDefaultFoundation = function getDefaultFoundation() {
    var _this3 = this;

    /** @type {!MDCDrawerAdapter} */
    var adapter = /** @type {!MDCDrawerAdapter} */drawer__extends({
      addClass: function addClass(className) {
        return _this3.root_.classList.add(className);
      },
      removeClass: function removeClass(className) {
        return _this3.root_.classList.remove(className);
      },
      hasClass: function hasClass(className) {
        return _this3.root_.classList.contains(className);
      },
      elementHasClass: function elementHasClass(element, className) {
        return element.classList.contains(className);
      },
      computeBoundingRect: function computeBoundingRect() {
        return _this3.root_.getBoundingClientRect();
      },
      saveFocus: function saveFocus() {
        _this3.previousFocus_ = document.activeElement;
      },
      restoreFocus: function restoreFocus() {
        var previousFocus = _this3.previousFocus_ && _this3.previousFocus_.focus;
        if (_this3.root_.contains(document.activeElement) && previousFocus) {
          _this3.previousFocus_.focus();
        }
      },
      focusActiveNavigationItem: function focusActiveNavigationItem() {
        var activeNavItemEl = _this3.root_.querySelector('.' + list_foundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS);
        if (activeNavItemEl) {
          activeNavItemEl.focus();
        }
      },
      notifyClose: function notifyClose() {
        return _this3.emit(strings.CLOSE_EVENT, {}, true /* shouldBubble */);
      },
      notifyOpen: function notifyOpen() {
        return _this3.emit(strings.OPEN_EVENT, {}, true /* shouldBubble */);
      },
      trapFocus: function trapFocus() {
        return _this3.focusTrap_.activate();
      },
      releaseFocus: function releaseFocus() {
        return _this3.focusTrap_.deactivate();
      }
    });

    var _MDCDismissibleDrawer = dismissible_foundation.cssClasses,
        DISMISSIBLE = _MDCDismissibleDrawer.DISMISSIBLE,
        MODAL = _MDCDismissibleDrawer.MODAL;

    if (this.root_.classList.contains(DISMISSIBLE)) {
      return new dismissible_foundation(adapter);
    } else if (this.root_.classList.contains(MODAL)) {
      return new modal_foundation(adapter);
    } else {
      throw new Error('MDCDrawer: Failed to instantiate component. Supported variants are ' + DISMISSIBLE + ' and ' + MODAL + '.');
    }
  };

  drawer__createClass(MDCDrawer, [{
    key: 'open',
    get: function get() {
      return this.foundation_.isOpen();
    }

    /**
     * Toggles the drawer open and closed.
     * @param {boolean} isOpen
     */
    ,
    set: function set(isOpen) {
      if (isOpen) {
        this.foundation_.open();
      } else {
        this.foundation_.close();
      }
    }
  }]);

  return MDCDrawer;
}(base["a" /* MDCComponent */]);



/***/ }),

/***/ "FnKr":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "Gr/Z":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, '__esModule', { value: !0 });var VALIDATOR_ARG_ERROR_MESSAGE = 'The typeValidator argument must be a function with the signature function(props, propName, componentName).',
    MESSAGE_ARG_ERROR_MESSAGE = 'The error message is optional, but must be a string if provided.',
    propIsRequired = function propIsRequired(a, b, c, d) {
  if ('boolean' == typeof a) return a;return 'function' == typeof a ? a(b, c, d) : !(!0 !== !!a) && !!a;
},
    propExists = function propExists(a, b) {
  return Object.hasOwnProperty.call(a, b);
},
    missingPropError = function missingPropError(a, b, c, d) {
  return d ? new Error(d) : new Error('Required ' + a[b] + ' `' + b + '`' + (' was not specified in `' + c + '`.'));
},
    guardAgainstInvalidArgTypes = function guardAgainstInvalidArgTypes(a, b) {
  if ('function' != typeof a) throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);if (!!b && 'string' != typeof b) throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);
},
    isRequiredIf = function isRequiredIf(a, b, c) {
  return guardAgainstInvalidArgTypes(a, c), function (d, e, f) {
    for (var _len = arguments.length, g = Array(3 < _len ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      g[_key - 3] = arguments[_key];
    }return propIsRequired(b, d, e, f) ? propExists(d, e) ? a.apply(void 0, [d, e, f].concat(g)) : missingPropError(d, e, f, c) : a.apply(void 0, [d, e, f].concat(g)); // Is not required, so just run typeValidator.
  };
};exports.default = isRequiredIf;

//# sourceMappingURL=isRequiredIf.js.map

/***/ }),

/***/ "IpTH":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "J5U+":
/***/ (function(module, exports, __webpack_require__) {

var superPropBase = __webpack_require__("/aYh");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;

/***/ }),

/***/ "JkW7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./style/index.css
var style = __webpack_require__("rq4c");
var style_default = /*#__PURE__*/__webpack_require__.n(style);

// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js
var preact_min = __webpack_require__("KM04");
var preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);

// EXTERNAL MODULE: ../node_modules/preact-router/dist/preact-router.es.js
var preact_router_es = __webpack_require__("/QC5");

// EXTERNAL MODULE: ../node_modules/@firebase/app/dist/index.esm.js
var index_esm = __webpack_require__("VxYX");

// CONCATENATED MODULE: ../node_modules/@firebase/auth/dist/auth.esm.js
(function () {
  var k,
      aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
    a != Array.prototype && a != Object.prototype && (a[b] = c.value);
  },
      ba = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this;function ca(a, b) {
    if (b) {
      var c = ba;a = a.split(".");for (var d = 0; d < a.length - 1; d++) {
        var e = a[d];e in c || (c[e] = {});c = c[e];
      }a = a[a.length - 1];d = c[a];b = b(d);b != d && null != b && aa(c, a, { configurable: !0, writable: !0, value: b });
    }
  }
  function da(a) {
    var b = 0;return function () {
      return b < a.length ? { done: !1, value: a[b++] } : { done: !0 };
    };
  }function ea(a) {
    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];return b ? b.call(a) : { next: da(a) };
  }
  ca("Promise", function (a) {
    function b(g) {
      this.b = 0;this.c = void 0;this.a = [];var h = this.f();try {
        g(h.resolve, h.reject);
      } catch (m) {
        h.reject(m);
      }
    }function c() {
      this.a = null;
    }function d(g) {
      return g instanceof b ? g : new b(function (h) {
        h(g);
      });
    }if (a) return a;c.prototype.b = function (g) {
      if (null == this.a) {
        this.a = [];var h = this;this.c(function () {
          h.g();
        });
      }this.a.push(g);
    };var e = ba.setTimeout;c.prototype.c = function (g) {
      e(g, 0);
    };c.prototype.g = function () {
      for (; this.a && this.a.length;) {
        var g = this.a;this.a = [];for (var h = 0; h < g.length; ++h) {
          var m = g[h];g[h] = null;try {
            m();
          } catch (p) {
            this.f(p);
          }
        }
      }this.a = null;
    };c.prototype.f = function (g) {
      this.c(function () {
        throw g;
      });
    };b.prototype.f = function () {
      function g(p) {
        return function (u) {
          m || (m = !0, p.call(h, u));
        };
      }var h = this,
          m = !1;return { resolve: g(this.m), reject: g(this.g) };
    };b.prototype.m = function (g) {
      if (g === this) this.g(new TypeError("A Promise cannot resolve to itself"));else if (g instanceof b) this.o(g);else {
        a: switch (typeof g) {case "object":
            var h = null != g;break a;case "function":
            h = !0;break a;default:
            h = !1;}h ? this.u(g) : this.h(g);
      }
    };
    b.prototype.u = function (g) {
      var h = void 0;try {
        h = g.then;
      } catch (m) {
        this.g(m);return;
      }"function" == typeof h ? this.v(h, g) : this.h(g);
    };b.prototype.g = function (g) {
      this.i(2, g);
    };b.prototype.h = function (g) {
      this.i(1, g);
    };b.prototype.i = function (g, h) {
      if (0 != this.b) throw Error("Cannot settle(" + g + ", " + h + "): Promise already settled in state" + this.b);this.b = g;this.c = h;this.l();
    };b.prototype.l = function () {
      if (null != this.a) {
        for (var g = 0; g < this.a.length; ++g) {
          f.b(this.a[g]);
        }this.a = null;
      }
    };var f = new c();b.prototype.o = function (g) {
      var h = this.f();
      g.Ja(h.resolve, h.reject);
    };b.prototype.v = function (g, h) {
      var m = this.f();try {
        g.call(h, m.resolve, m.reject);
      } catch (p) {
        m.reject(p);
      }
    };b.prototype.then = function (g, h) {
      function m(C, N) {
        return "function" == typeof C ? function (wa) {
          try {
            p(C(wa));
          } catch (ld) {
            u(ld);
          }
        } : N;
      }var p,
          u,
          A = new b(function (C, N) {
        p = C;u = N;
      });this.Ja(m(g, p), m(h, u));return A;
    };b.prototype.catch = function (g) {
      return this.then(void 0, g);
    };b.prototype.Ja = function (g, h) {
      function m() {
        switch (p.b) {case 1:
            g(p.c);break;case 2:
            h(p.c);break;default:
            throw Error("Unexpected state: " + p.b);}
      }var p = this;null == this.a ? f.b(m) : this.a.push(m);
    };b.resolve = d;b.reject = function (g) {
      return new b(function (h, m) {
        m(g);
      });
    };b.race = function (g) {
      return new b(function (h, m) {
        for (var p = ea(g), u = p.next(); !u.done; u = p.next()) {
          d(u.value).Ja(h, m);
        }
      });
    };b.all = function (g) {
      var h = ea(g),
          m = h.next();return m.done ? d([]) : new b(function (p, u) {
        function A(wa) {
          return function (ld) {
            C[wa] = ld;N--;0 == N && p(C);
          };
        }var C = [],
            N = 0;do {
          C.push(void 0), N++, d(m.value).Ja(A(C.length - 1), u), m = h.next();
        } while (!m.done);
      });
    };return b;
  });
  var fa = fa || {},
      l = this || self;function n(a) {
    return "string" == typeof a;
  }function ha(a) {
    return "boolean" == typeof a;
  }var ia = /^[\w+/_-]+[=]{0,2}$/,
      ja = null;function ka() {}
  function la(a) {
    var b = typeof a;if ("object" == b) {
      if (a) {
        if (a instanceof Array) return "array";if (a instanceof Object) return b;var c = Object.prototype.toString.call(a);if ("[object Window]" == c) return "object";if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
      } else return "null";
    } else if ("function" == b && "undefined" == typeof a.call) return "object";return b;
  }function ma(a) {
    return null === a;
  }function na(a) {
    return "array" == la(a);
  }function oa(a) {
    var b = la(a);return "array" == b || "object" == b && "number" == typeof a.length;
  }function q(a) {
    return "function" == la(a);
  }function r(a) {
    var b = typeof a;return "object" == b && null != a || "function" == b;
  }var pa = "closure_uid_" + (1E9 * Math.random() >>> 0),
      qa = 0;function ra(a, b, c) {
    return a.call.apply(a.bind, arguments);
  }
  function sa(a, b, c) {
    if (!a) throw Error();if (2 < arguments.length) {
      var d = Array.prototype.slice.call(arguments, 2);return function () {
        var e = Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e, d);return a.apply(b, e);
      };
    }return function () {
      return a.apply(b, arguments);
    };
  }function t(a, b, c) {
    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? t = ra : t = sa;return t.apply(null, arguments);
  }
  function ta(a, b) {
    var c = Array.prototype.slice.call(arguments, 1);return function () {
      var d = c.slice();d.push.apply(d, arguments);return a.apply(this, d);
    };
  }var ua = Date.now || function () {
    return +new Date();
  };function v(a, b) {
    function c() {}c.prototype = b.prototype;a.qb = b.prototype;a.prototype = new c();a.prototype.constructor = a;a.fd = function (d, e, f) {
      for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++) {
        g[h - 2] = arguments[h];
      }return b.prototype[e].apply(d, g);
    };
  };function va(a) {
    if (!a) return !1;try {
      return !!a.$goog_Thenable;
    } catch (b) {
      return !1;
    }
  };function w(a) {
    if (Error.captureStackTrace) Error.captureStackTrace(this, w);else {
      var b = Error().stack;b && (this.stack = b);
    }a && (this.message = String(a));
  }v(w, Error);w.prototype.name = "CustomError";function xa(a, b) {
    a = a.split("%s");for (var c = "", d = a.length - 1, e = 0; e < d; e++) {
      c += a[e] + (e < b.length ? b[e] : "%s");
    }w.call(this, c + a[d]);
  }v(xa, w);xa.prototype.name = "AssertionError";function ya(a, b) {
    throw new xa("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1));
  };function za(a, b) {
    this.c = a;this.f = b;this.b = 0;this.a = null;
  }za.prototype.get = function () {
    if (0 < this.b) {
      this.b--;var a = this.a;this.a = a.next;a.next = null;
    } else a = this.c();return a;
  };function Aa(a, b) {
    a.f(b);100 > a.b && (a.b++, b.next = a.a, a.a = b);
  };function Ba() {
    this.b = this.a = null;
  }var Da = new za(function () {
    return new Ca();
  }, function (a) {
    a.reset();
  });Ba.prototype.add = function (a, b) {
    var c = Da.get();c.set(a, b);this.b ? this.b.next = c : this.a = c;this.b = c;
  };function Ea() {
    var a = Fa,
        b = null;a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);return b;
  }function Ca() {
    this.next = this.b = this.a = null;
  }Ca.prototype.set = function (a, b) {
    this.a = a;this.b = b;this.next = null;
  };Ca.prototype.reset = function () {
    this.next = this.b = this.a = null;
  };function Ga(a, b) {
    a: {
      try {
        var c = a && a.ownerDocument,
            d = c && (c.defaultView || c.parentWindow);d = d || l;if (d.Element && d.Location) {
          var e = d;break a;
        }
      } catch (g) {}e = null;
    }if (e && "undefined" != typeof e[b] && (!a || !(a instanceof e[b]) && (a instanceof e.Location || a instanceof e.Element))) {
      if (r(a)) try {
        var f = a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
      } catch (g) {
        f = "<object could not be stringified>";
      } else f = void 0 === a ? "undefined" : null === a ? "null" : typeof a;ya("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, f);
    }
  };var Ha = Array.prototype.indexOf ? function (a, b) {
    return Array.prototype.indexOf.call(a, b, void 0);
  } : function (a, b) {
    if (n(a)) return n(b) && 1 == b.length ? a.indexOf(b, 0) : -1;for (var c = 0; c < a.length; c++) {
      if (c in a && a[c] === b) return c;
    }return -1;
  },
      x = Array.prototype.forEach ? function (a, b, c) {
    Array.prototype.forEach.call(a, b, c);
  } : function (a, b, c) {
    for (var d = a.length, e = n(a) ? a.split("") : a, f = 0; f < d; f++) {
      f in e && b.call(c, e[f], f, a);
    }
  };function Ia(a, b) {
    for (var c = n(a) ? a.split("") : a, d = a.length - 1; 0 <= d; --d) {
      d in c && b.call(void 0, c[d], d, a);
    }
  }
  var Ja = Array.prototype.map ? function (a, b) {
    return Array.prototype.map.call(a, b, void 0);
  } : function (a, b) {
    for (var c = a.length, d = Array(c), e = n(a) ? a.split("") : a, f = 0; f < c; f++) {
      f in e && (d[f] = b.call(void 0, e[f], f, a));
    }return d;
  },
      Ka = Array.prototype.some ? function (a, b) {
    return Array.prototype.some.call(a, b, void 0);
  } : function (a, b) {
    for (var c = a.length, d = n(a) ? a.split("") : a, e = 0; e < c; e++) {
      if (e in d && b.call(void 0, d[e], e, a)) return !0;
    }return !1;
  };
  function La(a) {
    a: {
      var b = Ma;for (var c = a.length, d = n(a) ? a.split("") : a, e = 0; e < c; e++) {
        if (e in d && b.call(void 0, d[e], e, a)) {
          b = e;break a;
        }
      }b = -1;
    }return 0 > b ? null : n(a) ? a.charAt(b) : a[b];
  }function Na(a, b) {
    return 0 <= Ha(a, b);
  }function Oa(a, b) {
    b = Ha(a, b);var c;(c = 0 <= b) && Array.prototype.splice.call(a, b, 1);return c;
  }function Pa(a, b) {
    var c = 0;Ia(a, function (d, e) {
      b.call(void 0, d, e, a) && 1 == Array.prototype.splice.call(a, e, 1).length && c++;
    });
  }function Qa(a) {
    return Array.prototype.concat.apply([], arguments);
  }
  function Ra(a) {
    var b = a.length;if (0 < b) {
      for (var c = Array(b), d = 0; d < b; d++) {
        c[d] = a[d];
      }return c;
    }return [];
  };function Sa(a, b) {
    for (var c in a) {
      b.call(void 0, a[c], c, a);
    }
  }function Ta(a) {
    for (var b in a) {
      return !1;
    }return !0;
  }function Ua(a) {
    var b = {},
        c;for (c in a) {
      b[c] = a[c];
    }return b;
  }var Va = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Wa(a, b) {
    for (var c, d, e = 1; e < arguments.length; e++) {
      d = arguments[e];for (c in d) {
        a[c] = d[c];
      }for (var f = 0; f < Va.length; f++) {
        c = Va[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
      }
    }
  };function Xa(a, b) {
    this.a = a === Ya && b || "";this.b = Za;
  }Xa.prototype.qa = !0;Xa.prototype.pa = function () {
    return this.a;
  };Xa.prototype.toString = function () {
    return "Const{" + this.a + "}";
  };function $a(a) {
    if (a instanceof Xa && a.constructor === Xa && a.b === Za) return a.a;ya("expected object of type Const, got '" + a + "'");return "type_error:Const";
  }var Za = {},
      Ya = {},
      ab = new Xa(Ya, "");function bb() {
    this.a = "";this.b = cb;
  }bb.prototype.qa = !0;bb.prototype.pa = function () {
    return this.a.toString();
  };bb.prototype.toString = function () {
    return "TrustedResourceUrl{" + this.a + "}";
  };function db(a) {
    if (a instanceof bb && a.constructor === bb && a.b === cb) return a.a;ya("expected object of type TrustedResourceUrl, got '" + a + "' of type " + la(a));return "type_error:TrustedResourceUrl";
  }
  function eb(a, b) {
    var c = $a(a);if (!fb.test(c)) throw Error("Invalid TrustedResourceUrl format: " + c);a = c.replace(gb, function (d, e) {
      if (!Object.prototype.hasOwnProperty.call(b, e)) throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));d = b[e];return d instanceof Xa ? $a(d) : encodeURIComponent(String(d));
    });return hb(a);
  }var gb = /%{(\w+)}/g,
      fb = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,
      cb = {};
  function hb(a) {
    var b = new bb();b.a = a;return b;
  };var ib = String.prototype.trim ? function (a) {
    return a.trim();
  } : function (a) {
    return (/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]
    );
  },
      jb = /&/g,
      kb = /</g,
      lb = />/g,
      mb = /"/g,
      nb = /'/g,
      ob = /\x00/g,
      pb = /[\x00&<>"']/;function y(a, b) {
    return -1 != a.indexOf(b);
  }function qb(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  };function rb() {
    this.a = "";this.b = sb;
  }rb.prototype.qa = !0;rb.prototype.pa = function () {
    return this.a.toString();
  };rb.prototype.toString = function () {
    return "SafeUrl{" + this.a + "}";
  };function tb(a) {
    if (a instanceof rb && a.constructor === rb && a.b === sb) return a.a;ya("expected object of type SafeUrl, got '" + a + "' of type " + la(a));return "type_error:SafeUrl";
  }var ub = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
  function vb(a) {
    if (a instanceof rb) return a;a = "object" == typeof a && a.qa ? a.pa() : String(a);ub.test(a) || (a = "about:invalid#zClosurez");return wb(a);
  }var sb = {};function wb(a) {
    var b = new rb();b.a = a;return b;
  }wb("about:blank");var xb;a: {
    var yb = l.navigator;if (yb) {
      var zb = yb.userAgent;if (zb) {
        xb = zb;break a;
      }
    }xb = "";
  }function z(a) {
    return y(xb, a);
  };function Ab() {
    this.a = "";this.b = Bb;
  }Ab.prototype.qa = !0;Ab.prototype.pa = function () {
    return this.a.toString();
  };Ab.prototype.toString = function () {
    return "SafeHtml{" + this.a + "}";
  };function Cb(a) {
    if (a instanceof Ab && a.constructor === Ab && a.b === Bb) return a.a;ya("expected object of type SafeHtml, got '" + a + "' of type " + la(a));return "type_error:SafeHtml";
  }var Bb = {};function Db(a) {
    var b = new Ab();b.a = a;return b;
  }Db("<!DOCTYPE html>");var Eb = Db("");Db("<br>");function Fb(a) {
    var b = hb($a(ab));Ga(a, "HTMLIFrameElement");a.src = db(b).toString();
  }function Gb(a, b) {
    Ga(a, "HTMLScriptElement");a.src = db(b);if (null === ja) b: {
      b = l.document;if ((b = b.querySelector && b.querySelector("script[nonce]")) && (b = b.nonce || b.getAttribute("nonce")) && ia.test(b)) {
        ja = b;break b;
      }ja = "";
    }b = ja;b && a.setAttribute("nonce", b);
  };function Hb(a, b) {
    for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
      d += c.shift() + e.shift();
    }return d + c.join("%s");
  }function Ib(a) {
    pb.test(a) && (-1 != a.indexOf("&") && (a = a.replace(jb, "&amp;")), -1 != a.indexOf("<") && (a = a.replace(kb, "&lt;")), -1 != a.indexOf(">") && (a = a.replace(lb, "&gt;")), -1 != a.indexOf('"') && (a = a.replace(mb, "&quot;")), -1 != a.indexOf("'") && (a = a.replace(nb, "&#39;")), -1 != a.indexOf("\x00") && (a = a.replace(ob, "&#0;")));return a;
  };function Jb(a) {
    l.setTimeout(function () {
      throw a;
    }, 0);
  }var Kb;
  function Lb() {
    var a = l.MessageChannel;"undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !z("Presto") && (a = function a() {
      var e = document.createElement("IFRAME");e.style.display = "none";Fb(e);document.documentElement.appendChild(e);var f = e.contentWindow;e = f.document;e.open();e.write(Cb(Eb));e.close();var g = "callImmediate" + Math.random(),
          h = "file:" == f.location.protocol ? "*" : f.location.protocol + "//" + f.location.host;e = t(function (m) {
        if (("*" == h || m.origin == h) && m.data == g) this.port1.onmessage();
      }, this);f.addEventListener("message", e, !1);this.port1 = {};this.port2 = { postMessage: function postMessage() {
          f.postMessage(g, h);
        } };
    });if ("undefined" !== typeof a && !z("Trident") && !z("MSIE")) {
      var b = new a(),
          c = {},
          d = c;b.port1.onmessage = function () {
        if (void 0 !== c.next) {
          c = c.next;var e = c.yb;c.yb = null;e();
        }
      };return function (e) {
        d.next = { yb: e };d = d.next;b.port2.postMessage(0);
      };
    }return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function (e) {
      var f = document.createElement("SCRIPT");
      f.onreadystatechange = function () {
        f.onreadystatechange = null;f.parentNode.removeChild(f);f = null;e();e = null;
      };document.documentElement.appendChild(f);
    } : function (e) {
      l.setTimeout(e, 0);
    };
  };function Mb(a, b) {
    Nb || Ob();Pb || (Nb(), Pb = !0);Fa.add(a, b);
  }var Nb;function Ob() {
    if (l.Promise && l.Promise.resolve) {
      var a = l.Promise.resolve(void 0);Nb = function Nb() {
        a.then(Qb);
      };
    } else Nb = function Nb() {
      var b = Qb;!q(l.setImmediate) || l.Window && l.Window.prototype && !z("Edge") && l.Window.prototype.setImmediate == l.setImmediate ? (Kb || (Kb = Lb()), Kb(b)) : l.setImmediate(b);
    };
  }var Pb = !1,
      Fa = new Ba();function Qb() {
    for (var a; a = Ea();) {
      try {
        a.a.call(a.b);
      } catch (b) {
        Jb(b);
      }Aa(Da, a);
    }Pb = !1;
  };function B(a, b) {
    this.a = Rb;this.i = void 0;this.f = this.b = this.c = null;this.g = this.h = !1;if (a != ka) try {
      var c = this;a.call(b, function (d) {
        Sb(c, Tb, d);
      }, function (d) {
        if (!(d instanceof Ub)) try {
          if (d instanceof Error) throw d;throw Error("Promise rejected.");
        } catch (e) {}Sb(c, Vb, d);
      });
    } catch (d) {
      Sb(this, Vb, d);
    }
  }var Rb = 0,
      Tb = 2,
      Vb = 3;function Wb() {
    this.next = this.f = this.b = this.g = this.a = null;this.c = !1;
  }Wb.prototype.reset = function () {
    this.f = this.b = this.g = this.a = null;this.c = !1;
  };var Xb = new za(function () {
    return new Wb();
  }, function (a) {
    a.reset();
  });
  function Yb(a, b, c) {
    var d = Xb.get();d.g = a;d.b = b;d.f = c;return d;
  }function D(a) {
    if (a instanceof B) return a;var b = new B(ka);Sb(b, Tb, a);return b;
  }function E(a) {
    return new B(function (b, c) {
      c(a);
    });
  }function Zb(a, b, c) {
    $b(a, b, c, null) || Mb(ta(b, a));
  }function ac(a) {
    return new B(function (b, c) {
      var d = a.length,
          e = [];if (d) for (var f = function f(p, u) {
        d--;e[p] = u;0 == d && b(e);
      }, g = function g(p) {
        c(p);
      }, h = 0, m; h < a.length; h++) {
        m = a[h], Zb(m, ta(f, h), g);
      } else b(e);
    });
  }
  function bc(a) {
    return new B(function (b) {
      var c = a.length,
          d = [];if (c) for (var e = function e(h, m, p) {
        c--;d[h] = m ? { Gb: !0, value: p } : { Gb: !1, reason: p };0 == c && b(d);
      }, f = 0, g; f < a.length; f++) {
        g = a[f], Zb(g, ta(e, f, !0), ta(e, f, !1));
      } else b(d);
    });
  }B.prototype.then = function (a, b, c) {
    return cc(this, q(a) ? a : null, q(b) ? b : null, c);
  };B.prototype.$goog_Thenable = !0;k = B.prototype;k.ka = function (a, b) {
    a = Yb(a, a, b);a.c = !0;dc(this, a);return this;
  };k.s = function (a, b) {
    return cc(this, null, a, b);
  };
  k.cancel = function (a) {
    this.a == Rb && Mb(function () {
      var b = new Ub(a);ec(this, b);
    }, this);
  };function ec(a, b) {
    if (a.a == Rb) if (a.c) {
      var c = a.c;if (c.b) {
        for (var d = 0, e = null, f = null, g = c.b; g && (g.c || (d++, g.a == a && (e = g), !(e && 1 < d))); g = g.next) {
          e || (f = g);
        }e && (c.a == Rb && 1 == d ? ec(c, b) : (f ? (d = f, d.next == c.f && (c.f = d), d.next = d.next.next) : fc(c), gc(c, e, Vb, b)));
      }a.c = null;
    } else Sb(a, Vb, b);
  }function dc(a, b) {
    a.b || a.a != Tb && a.a != Vb || hc(a);a.f ? a.f.next = b : a.b = b;a.f = b;
  }
  function cc(a, b, c, d) {
    var e = Yb(null, null, null);e.a = new B(function (f, g) {
      e.g = b ? function (h) {
        try {
          var m = b.call(d, h);f(m);
        } catch (p) {
          g(p);
        }
      } : f;e.b = c ? function (h) {
        try {
          var m = c.call(d, h);void 0 === m && h instanceof Ub ? g(h) : f(m);
        } catch (p) {
          g(p);
        }
      } : g;
    });e.a.c = a;dc(a, e);return e.a;
  }k.Oc = function (a) {
    this.a = Rb;Sb(this, Tb, a);
  };k.Pc = function (a) {
    this.a = Rb;Sb(this, Vb, a);
  };
  function Sb(a, b, c) {
    a.a == Rb && (a === c && (b = Vb, c = new TypeError("Promise cannot resolve to itself")), a.a = 1, $b(c, a.Oc, a.Pc, a) || (a.i = c, a.a = b, a.c = null, hc(a), b != Vb || c instanceof Ub || ic(a, c)));
  }function $b(a, b, c, d) {
    if (a instanceof B) return dc(a, Yb(b || ka, c || null, d)), !0;if (va(a)) return a.then(b, c, d), !0;if (r(a)) try {
      var e = a.then;if (q(e)) return jc(a, e, b, c, d), !0;
    } catch (f) {
      return c.call(d, f), !0;
    }return !1;
  }
  function jc(a, b, c, d, e) {
    function f(m) {
      h || (h = !0, d.call(e, m));
    }function g(m) {
      h || (h = !0, c.call(e, m));
    }var h = !1;try {
      b.call(a, g, f);
    } catch (m) {
      f(m);
    }
  }function hc(a) {
    a.h || (a.h = !0, Mb(a.Zb, a));
  }function fc(a) {
    var b = null;a.b && (b = a.b, a.b = b.next, b.next = null);a.b || (a.f = null);return b;
  }k.Zb = function () {
    for (var a; a = fc(this);) {
      gc(this, a, this.a, this.i);
    }this.h = !1;
  };
  function gc(a, b, c, d) {
    if (c == Vb && b.b && !b.c) for (; a && a.g; a = a.c) {
      a.g = !1;
    }if (b.a) b.a.c = null, kc(b, c, d);else try {
      b.c ? b.g.call(b.f) : kc(b, c, d);
    } catch (e) {
      lc.call(null, e);
    }Aa(Xb, b);
  }function kc(a, b, c) {
    b == Tb ? a.g.call(a.f, c) : a.b && a.b.call(a.f, c);
  }function ic(a, b) {
    a.g = !0;Mb(function () {
      a.g && lc.call(null, b);
    });
  }var lc = Jb;function Ub(a) {
    w.call(this, a);
  }v(Ub, w);Ub.prototype.name = "cancel";function mc() {
    0 != nc && (oc[this[pa] || (this[pa] = ++qa)] = this);this.ta = this.ta;this.la = this.la;
  }var nc = 0,
      oc = {};mc.prototype.ta = !1;function pc(a) {
    if (!a.ta && (a.ta = !0, a.xa(), 0 != nc)) {
      var b = a[pa] || (a[pa] = ++qa);if (0 != nc && a.la && 0 < a.la.length) throw Error(a + " did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete oc[b];
    }
  }mc.prototype.xa = function () {
    if (this.la) for (; this.la.length;) {
      this.la.shift()();
    }
  };function qc(a) {
    qc[" "](a);return a;
  }qc[" "] = ka;function rc(a, b) {
    var c = sc;return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
  };var tc = z("Opera"),
      uc = z("Trident") || z("MSIE"),
      vc = z("Edge"),
      wc = vc || uc,
      xc = z("Gecko") && !(y(xb.toLowerCase(), "webkit") && !z("Edge")) && !(z("Trident") || z("MSIE")) && !z("Edge"),
      yc = y(xb.toLowerCase(), "webkit") && !z("Edge");function zc() {
    var a = l.document;return a ? a.documentMode : void 0;
  }var Ac;
  a: {
    var Bc = "",
        Cc = function () {
      var a = xb;if (xc) return (/rv:([^\);]+)(\)|;)/.exec(a)
      );if (vc) return (/Edge\/([\d\.]+)/.exec(a)
      );if (uc) return (/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a)
      );if (yc) return (/WebKit\/(\S+)/.exec(a)
      );if (tc) return (/(?:Version)[ \/]?(\S+)/.exec(a)
      );
    }();Cc && (Bc = Cc ? Cc[1] : "");if (uc) {
      var Dc = zc();if (null != Dc && Dc > parseFloat(Bc)) {
        Ac = String(Dc);break a;
      }
    }Ac = Bc;
  }var sc = {};
  function Ec(a) {
    return rc(a, function () {
      for (var b = 0, c = ib(String(Ac)).split("."), d = ib(String(a)).split("."), e = Math.max(c.length, d.length), f = 0; 0 == b && f < e; f++) {
        var g = c[f] || "",
            h = d[f] || "";do {
          g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];if (0 == g[0].length && 0 == h[0].length) break;b = qb(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || qb(0 == g[2].length, 0 == h[2].length) || qb(g[2], h[2]);g = g[3];h = h[3];
        } while (0 == b);
      }return 0 <= b;
    });
  }var Fc;
  Fc = l.document && uc ? zc() : void 0;var Gc = Object.freeze || function (a) {
    return a;
  };var Hc = !uc || 9 <= Number(Fc),
      Ic = uc && !Ec("9"),
      Jc = function () {
    if (!l.addEventListener || !Object.defineProperty) return !1;var a = !1,
        b = Object.defineProperty({}, "passive", { get: function get() {
        a = !0;
      } });try {
      l.addEventListener("test", ka, b), l.removeEventListener("test", ka, b);
    } catch (c) {}return a;
  }();function F(a, b) {
    this.type = a;this.b = this.target = b;this.Mb = !0;
  }F.prototype.preventDefault = function () {
    this.Mb = !1;
  };function Kc(a, b) {
    F.call(this, a ? a.type : "");this.relatedTarget = this.b = this.target = null;this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;this.key = "";this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;this.pointerId = 0;this.pointerType = "";this.a = null;if (a) {
      var c = this.type = a.type,
          d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;this.target = a.target || a.srcElement;this.b = b;if (b = a.relatedTarget) {
        if (xc) {
          a: {
            try {
              qc(b.nodeName);var e = !0;break a;
            } catch (f) {}e = !1;
          }e || (b = null);
        }
      } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);this.relatedTarget = b;d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);this.button = a.button;this.key = a.key || "";this.ctrlKey = a.ctrlKey;this.altKey = a.altKey;this.shiftKey = a.shiftKey;this.metaKey = a.metaKey;this.pointerId = a.pointerId || 0;this.pointerType = n(a.pointerType) ? a.pointerType : Lc[a.pointerType] || "";this.a = a;a.defaultPrevented && this.preventDefault();
    }
  }v(Kc, F);var Lc = Gc({ 2: "touch", 3: "pen", 4: "mouse" });Kc.prototype.preventDefault = function () {
    Kc.qb.preventDefault.call(this);var a = this.a;if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Ic) try {
      if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
    } catch (b) {}
  };Kc.prototype.f = function () {
    return this.a;
  };var Mc = "closure_listenable_" + (1E6 * Math.random() | 0),
      Nc = 0;function Oc(a, b, c, d, e) {
    this.listener = a;this.proxy = null;this.src = b;this.type = c;this.capture = !!d;this.Na = e;this.key = ++Nc;this.ra = this.Ia = !1;
  }function Pc(a) {
    a.ra = !0;a.listener = null;a.proxy = null;a.src = null;a.Na = null;
  };function Qc(a) {
    this.src = a;this.a = {};this.b = 0;
  }Qc.prototype.add = function (a, b, c, d, e) {
    var f = a.toString();a = this.a[f];a || (a = this.a[f] = [], this.b++);var g = Rc(a, b, d, e);-1 < g ? (b = a[g], c || (b.Ia = !1)) : (b = new Oc(b, this.src, f, !!d, e), b.Ia = c, a.push(b));return b;
  };function Sc(a, b) {
    var c = b.type;c in a.a && Oa(a.a[c], b) && (Pc(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
  }function Rc(a, b, c, d) {
    for (var e = 0; e < a.length; ++e) {
      var f = a[e];if (!f.ra && f.listener == b && f.capture == !!c && f.Na == d) return e;
    }return -1;
  };var Tc = "closure_lm_" + (1E6 * Math.random() | 0),
      Uc = {},
      Vc = 0;function Wc(a, b, c, d, e) {
    if (d && d.once) Xc(a, b, c, d, e);else if (na(b)) for (var f = 0; f < b.length; f++) {
      Wc(a, b[f], c, d, e);
    } else c = Yc(c), a && a[Mc] ? Zc(a, b, c, r(d) ? !!d.capture : !!d, e) : $c(a, b, c, !1, d, e);
  }
  function $c(a, b, c, d, e, f) {
    if (!b) throw Error("Invalid event type");var g = r(e) ? !!e.capture : !!e,
        h = ad(a);h || (a[Tc] = h = new Qc(a));c = h.add(b, c, d, g, f);if (!c.proxy) {
      d = bd();c.proxy = d;d.src = a;d.listener = c;if (a.addEventListener) Jc || (e = g), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(cd(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");Vc++;
    }
  }
  function bd() {
    var a = dd,
        b = Hc ? function (c) {
      return a.call(b.src, b.listener, c);
    } : function (c) {
      c = a.call(b.src, b.listener, c);if (!c) return c;
    };return b;
  }function Xc(a, b, c, d, e) {
    if (na(b)) for (var f = 0; f < b.length; f++) {
      Xc(a, b[f], c, d, e);
    } else c = Yc(c), a && a[Mc] ? ed(a, b, c, r(d) ? !!d.capture : !!d, e) : $c(a, b, c, !0, d, e);
  }
  function fd(a, b, c, d, e) {
    if (na(b)) for (var f = 0; f < b.length; f++) {
      fd(a, b[f], c, d, e);
    } else (d = r(d) ? !!d.capture : !!d, c = Yc(c), a && a[Mc]) ? (a = a.u, b = String(b).toString(), b in a.a && (f = a.a[b], c = Rc(f, c, d, e), -1 < c && (Pc(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = ad(a)) && (b = a.a[b.toString()], a = -1, b && (a = Rc(b, c, d, e)), (c = -1 < a ? b[a] : null) && gd(c));
  }
  function gd(a) {
    if ("number" != typeof a && a && !a.ra) {
      var b = a.src;if (b && b[Mc]) Sc(b.u, a);else {
        var c = a.type,
            d = a.proxy;b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(cd(c), d) : b.addListener && b.removeListener && b.removeListener(d);Vc--;(c = ad(b)) ? (Sc(c, a), 0 == c.b && (c.src = null, b[Tc] = null)) : Pc(a);
      }
    }
  }function cd(a) {
    return a in Uc ? Uc[a] : Uc[a] = "on" + a;
  }
  function hd(a, b, c, d) {
    var e = !0;if (a = ad(a)) if (b = a.a[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {
      var f = b[a];f && f.capture == c && !f.ra && (f = id(f, d), e = e && !1 !== f);
    }return e;
  }function id(a, b) {
    var c = a.listener,
        d = a.Na || a.src;a.Ia && gd(a);return c.call(d, b);
  }
  function dd(a, b) {
    if (a.ra) return !0;if (!Hc) {
      if (!b) a: {
        b = ["window", "event"];for (var c = l, d = 0; d < b.length; d++) {
          if (c = c[b[d]], null == c) {
            b = null;break a;
          }
        }b = c;
      }d = b;b = new Kc(d, this);c = !0;if (!(0 > d.keyCode || void 0 != d.returnValue)) {
        a: {
          var e = !1;if (0 == d.keyCode) try {
            d.keyCode = -1;break a;
          } catch (g) {
            e = !0;
          }if (e || void 0 == d.returnValue) d.returnValue = !0;
        }d = [];for (e = b.b; e; e = e.parentNode) {
          d.push(e);
        }a = a.type;for (e = d.length - 1; 0 <= e; e--) {
          b.b = d[e];var f = hd(d[e], a, !0, b);c = c && f;
        }for (e = 0; e < d.length; e++) {
          b.b = d[e], f = hd(d[e], a, !1, b), c = c && f;
        }
      }return c;
    }return id(a, new Kc(b, this));
  }function ad(a) {
    a = a[Tc];return a instanceof Qc ? a : null;
  }var jd = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);function Yc(a) {
    if (q(a)) return a;a[jd] || (a[jd] = function (b) {
      return a.handleEvent(b);
    });return a[jd];
  };function G() {
    mc.call(this);this.u = new Qc(this);this.Sb = this;this.Wa = null;
  }v(G, mc);G.prototype[Mc] = !0;G.prototype.addEventListener = function (a, b, c, d) {
    Wc(this, a, b, c, d);
  };G.prototype.removeEventListener = function (a, b, c, d) {
    fd(this, a, b, c, d);
  };
  G.prototype.dispatchEvent = function (a) {
    var b,
        c = this.Wa;if (c) for (b = []; c; c = c.Wa) {
      b.push(c);
    }c = this.Sb;var d = a.type || a;if (n(a)) a = new F(a, c);else if (a instanceof F) a.target = a.target || c;else {
      var e = a;a = new F(d, c);Wa(a, e);
    }e = !0;if (b) for (var f = b.length - 1; 0 <= f; f--) {
      var g = a.b = b[f];e = kd(g, d, !0, a) && e;
    }g = a.b = c;e = kd(g, d, !0, a) && e;e = kd(g, d, !1, a) && e;if (b) for (f = 0; f < b.length; f++) {
      g = a.b = b[f], e = kd(g, d, !1, a) && e;
    }return e;
  };
  G.prototype.xa = function () {
    G.qb.xa.call(this);if (this.u) {
      var a = this.u,
          b = 0,
          c;for (c in a.a) {
        for (var d = a.a[c], e = 0; e < d.length; e++) {
          ++b, Pc(d[e]);
        }delete a.a[c];a.b--;
      }
    }this.Wa = null;
  };function Zc(a, b, c, d, e) {
    a.u.add(String(b), c, !1, d, e);
  }function ed(a, b, c, d, e) {
    a.u.add(String(b), c, !0, d, e);
  }
  function kd(a, b, c, d) {
    b = a.u.a[String(b)];if (!b) return !0;b = b.concat();for (var e = !0, f = 0; f < b.length; ++f) {
      var g = b[f];if (g && !g.ra && g.capture == c) {
        var h = g.listener,
            m = g.Na || g.src;g.Ia && Sc(a.u, g);e = !1 !== h.call(m, d) && e;
      }
    }return e && 0 != d.Mb;
  };function md(a, b, c) {
    if (q(a)) c && (a = t(a, c));else if (a && "function" == typeof a.handleEvent) a = t(a.handleEvent, a);else throw Error("Invalid listener argument");return 2147483647 < Number(b) ? -1 : l.setTimeout(a, b || 0);
  }function nd(a) {
    var b = null;return new B(function (c, d) {
      b = md(function () {
        c(void 0);
      }, a);-1 == b && d(Error("Failed to schedule timer."));
    }).s(function (c) {
      l.clearTimeout(b);throw c;
    });
  };function od(a) {
    if (a.U && "function" == typeof a.U) return a.U();if (n(a)) return a.split("");if (oa(a)) {
      for (var b = [], c = a.length, d = 0; d < c; d++) {
        b.push(a[d]);
      }return b;
    }b = [];c = 0;for (d in a) {
      b[c++] = a[d];
    }return b;
  }function pd(a) {
    if (a.X && "function" == typeof a.X) return a.X();if (!a.U || "function" != typeof a.U) {
      if (oa(a) || n(a)) {
        var b = [];a = a.length;for (var c = 0; c < a; c++) {
          b.push(c);
        }return b;
      }b = [];c = 0;for (var d in a) {
        b[c++] = d;
      }return b;
    }
  }
  function qd(a, b) {
    if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (oa(a) || n(a)) x(a, b, void 0);else for (var c = pd(a), d = od(a), e = d.length, f = 0; f < e; f++) {
      b.call(void 0, d[f], c && c[f], a);
    }
  };function rd(a, b) {
    this.b = {};this.a = [];this.c = 0;var c = arguments.length;if (1 < c) {
      if (c % 2) throw Error("Uneven number of arguments");for (var d = 0; d < c; d += 2) {
        this.set(arguments[d], arguments[d + 1]);
      }
    } else if (a) if (a instanceof rd) for (c = a.X(), d = 0; d < c.length; d++) {
      this.set(c[d], a.get(c[d]));
    } else for (d in a) {
      this.set(d, a[d]);
    }
  }k = rd.prototype;k.U = function () {
    sd(this);for (var a = [], b = 0; b < this.a.length; b++) {
      a.push(this.b[this.a[b]]);
    }return a;
  };k.X = function () {
    sd(this);return this.a.concat();
  };
  k.clear = function () {
    this.b = {};this.c = this.a.length = 0;
  };function sd(a) {
    if (a.c != a.a.length) {
      for (var b = 0, c = 0; b < a.a.length;) {
        var d = a.a[b];td(a.b, d) && (a.a[c++] = d);b++;
      }a.a.length = c;
    }if (a.c != a.a.length) {
      var e = {};for (c = b = 0; b < a.a.length;) {
        d = a.a[b], td(e, d) || (a.a[c++] = d, e[d] = 1), b++;
      }a.a.length = c;
    }
  }k.get = function (a, b) {
    return td(this.b, a) ? this.b[a] : b;
  };k.set = function (a, b) {
    td(this.b, a) || (this.c++, this.a.push(a));this.b[a] = b;
  };
  k.forEach = function (a, b) {
    for (var c = this.X(), d = 0; d < c.length; d++) {
      var e = c[d],
          f = this.get(e);a.call(b, f, e, this);
    }
  };function td(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  };var ud = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function vd(a, b) {
    if (a) {
      a = a.split("&");for (var c = 0; c < a.length; c++) {
        var d = a[c].indexOf("="),
            e = null;if (0 <= d) {
          var f = a[c].substring(0, d);e = a[c].substring(d + 1);
        } else f = a[c];b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
      }
    }
  };function wd(a, b) {
    this.b = this.i = this.f = "";this.l = null;this.g = this.c = "";this.h = !1;var c;a instanceof wd ? (this.h = void 0 !== b ? b : a.h, xd(this, a.f), this.i = a.i, this.b = a.b, yd(this, a.l), this.c = a.c, zd(this, Ad(a.a)), this.g = a.g) : a && (c = String(a).match(ud)) ? (this.h = !!b, xd(this, c[1] || "", !0), this.i = Bd(c[2] || ""), this.b = Bd(c[3] || "", !0), yd(this, c[4]), this.c = Bd(c[5] || "", !0), zd(this, c[6] || "", !0), this.g = Bd(c[7] || "")) : (this.h = !!b, this.a = new Cd(null, this.h));
  }
  wd.prototype.toString = function () {
    var a = [],
        b = this.f;b && a.push(Dd(b, Ed, !0), ":");var c = this.b;if (c || "file" == b) a.push("//"), (b = this.i) && a.push(Dd(b, Ed, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.l, null != c && a.push(":", String(c));if (c = this.c) this.b && "/" != c.charAt(0) && a.push("/"), a.push(Dd(c, "/" == c.charAt(0) ? Fd : Gd, !0));(c = this.a.toString()) && a.push("?", c);(c = this.g) && a.push("#", Dd(c, Hd));return a.join("");
  };
  wd.prototype.resolve = function (a) {
    var b = new wd(this),
        c = !!a.f;c ? xd(b, a.f) : c = !!a.i;c ? b.i = a.i : c = !!a.b;c ? b.b = a.b : c = null != a.l;var d = a.c;if (c) yd(b, a.l);else if (c = !!a.c) {
      if ("/" != d.charAt(0)) if (this.b && !this.c) d = "/" + d;else {
        var e = b.c.lastIndexOf("/");-1 != e && (d = b.c.substr(0, e + 1) + d);
      }e = d;if (".." == e || "." == e) d = "";else if (y(e, "./") || y(e, "/.")) {
        d = 0 == e.lastIndexOf("/", 0);e = e.split("/");for (var f = [], g = 0; g < e.length;) {
          var h = e[g++];"." == h ? d && g == e.length && f.push("") : ".." == h ? ((1 < f.length || 1 == f.length && "" != f[0]) && f.pop(), d && g == e.length && f.push("")) : (f.push(h), d = !0);
        }d = f.join("/");
      } else d = e;
    }c ? b.c = d : c = "" !== a.a.toString();c ? zd(b, Ad(a.a)) : c = !!a.g;c && (b.g = a.g);return b;
  };function xd(a, b, c) {
    a.f = c ? Bd(b, !0) : b;a.f && (a.f = a.f.replace(/:$/, ""));
  }function yd(a, b) {
    if (b) {
      b = Number(b);if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);a.l = b;
    } else a.l = null;
  }function zd(a, b, c) {
    b instanceof Cd ? (a.a = b, Id(a.a, a.h)) : (c || (b = Dd(b, Jd)), a.a = new Cd(b, a.h));
  }function H(a, b, c) {
    a.a.set(b, c);
  }function Kd(a, b) {
    return a.a.get(b);
  }
  function Ld(a) {
    return a instanceof wd ? new wd(a) : new wd(a, void 0);
  }function Md(a, b) {
    var c = new wd(null, void 0);xd(c, "https");a && (c.b = a);b && (c.c = b);return c;
  }function Bd(a, b) {
    return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
  }function Dd(a, b, c) {
    return n(a) ? (a = encodeURI(a).replace(b, Nd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
  }function Nd(a) {
    a = a.charCodeAt(0);return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
  }
  var Ed = /[#\/\?@]/g,
      Gd = /[#\?:]/g,
      Fd = /[#\?]/g,
      Jd = /[#\?@]/g,
      Hd = /#/g;function Cd(a, b) {
    this.b = this.a = null;this.c = a || null;this.f = !!b;
  }function Od(a) {
    a.a || (a.a = new rd(), a.b = 0, a.c && vd(a.c, function (b, c) {
      a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
    }));
  }function Pd(a) {
    var b = pd(a);if ("undefined" == typeof b) throw Error("Keys are undefined");var c = new Cd(null, void 0);a = od(a);for (var d = 0; d < b.length; d++) {
      var e = b[d],
          f = a[d];na(f) ? Qd(c, e, f) : c.add(e, f);
    }return c;
  }k = Cd.prototype;
  k.add = function (a, b) {
    Od(this);this.c = null;a = Rd(this, a);var c = this.a.get(a);c || this.a.set(a, c = []);c.push(b);this.b += 1;return this;
  };function Sd(a, b) {
    Od(a);b = Rd(a, b);td(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, td(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && sd(a)));
  }k.clear = function () {
    this.a = this.c = null;this.b = 0;
  };function Td(a, b) {
    Od(a);b = Rd(a, b);return td(a.a.b, b);
  }k.forEach = function (a, b) {
    Od(this);this.a.forEach(function (c, d) {
      x(c, function (e) {
        a.call(b, e, d, this);
      }, this);
    }, this);
  };
  k.X = function () {
    Od(this);for (var a = this.a.U(), b = this.a.X(), c = [], d = 0; d < b.length; d++) {
      for (var e = a[d], f = 0; f < e.length; f++) {
        c.push(b[d]);
      }
    }return c;
  };k.U = function (a) {
    Od(this);var b = [];if (n(a)) Td(this, a) && (b = Qa(b, this.a.get(Rd(this, a))));else {
      a = this.a.U();for (var c = 0; c < a.length; c++) {
        b = Qa(b, a[c]);
      }
    }return b;
  };k.set = function (a, b) {
    Od(this);this.c = null;a = Rd(this, a);Td(this, a) && (this.b -= this.a.get(a).length);this.a.set(a, [b]);this.b += 1;return this;
  };
  k.get = function (a, b) {
    if (!a) return b;a = this.U(a);return 0 < a.length ? String(a[0]) : b;
  };function Qd(a, b, c) {
    Sd(a, b);0 < c.length && (a.c = null, a.a.set(Rd(a, b), Ra(c)), a.b += c.length);
  }k.toString = function () {
    if (this.c) return this.c;if (!this.a) return "";for (var a = [], b = this.a.X(), c = 0; c < b.length; c++) {
      var d = b[c],
          e = encodeURIComponent(String(d));d = this.U(d);for (var f = 0; f < d.length; f++) {
        var g = e;"" !== d[f] && (g += "=" + encodeURIComponent(String(d[f])));a.push(g);
      }
    }return this.c = a.join("&");
  };
  function Ad(a) {
    var b = new Cd();b.c = a.c;a.a && (b.a = new rd(a.a), b.b = a.b);return b;
  }function Rd(a, b) {
    b = String(b);a.f && (b = b.toLowerCase());return b;
  }function Id(a, b) {
    b && !a.f && (Od(a), a.c = null, a.a.forEach(function (c, d) {
      var e = d.toLowerCase();d != e && (Sd(this, d), Qd(this, e, c));
    }, a));a.f = b;
  };var Ud = !uc || 9 <= Number(Fc);function Vd(a) {
    var b = document;return n(a) ? b.getElementById(a) : a;
  }function Wd(a, b) {
    Sa(b, function (c, d) {
      c && "object" == typeof c && c.qa && (c = c.pa());"style" == d ? a.style.cssText = c : "class" == d ? a.className = c : "for" == d ? a.htmlFor = c : Xd.hasOwnProperty(d) ? a.setAttribute(Xd[d], c) : 0 == d.lastIndexOf("aria-", 0) || 0 == d.lastIndexOf("data-", 0) ? a.setAttribute(d, c) : a[d] = c;
    });
  }
  var Xd = { cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", frameborder: "frameBorder", height: "height", maxlength: "maxLength", nonce: "nonce", role: "role", rowspan: "rowSpan", type: "type", usemap: "useMap", valign: "vAlign", width: "width" };
  function Yd(a, b, c) {
    var d = arguments,
        e = document,
        f = String(d[0]),
        g = d[1];if (!Ud && g && (g.name || g.type)) {
      f = ["<", f];g.name && f.push(' name="', Ib(g.name), '"');if (g.type) {
        f.push(' type="', Ib(g.type), '"');var h = {};Wa(h, g);delete h.type;g = h;
      }f.push(">");f = f.join("");
    }f = e.createElement(f);g && (n(g) ? f.className = g : na(g) ? f.className = g.join(" ") : Wd(f, g));2 < d.length && Zd(e, f, d);return f;
  }
  function Zd(a, b, c) {
    function d(g) {
      g && b.appendChild(n(g) ? a.createTextNode(g) : g);
    }for (var e = 2; e < c.length; e++) {
      var f = c[e];!oa(f) || r(f) && 0 < f.nodeType ? d(f) : x($d(f) ? Ra(f) : f, d);
    }
  }function $d(a) {
    if (a && "number" == typeof a.length) {
      if (r(a)) return "function" == typeof a.item || "string" == typeof a.item;if (q(a)) return "function" == typeof a.item;
    }return !1;
  };function ae(a) {
    var b = [];be(new ce(), a, b);return b.join("");
  }function ce() {}
  function be(a, b, c) {
    if (null == b) c.push("null");else {
      if ("object" == typeof b) {
        if (na(b)) {
          var d = b;b = d.length;c.push("[");for (var e = "", f = 0; f < b; f++) {
            c.push(e), be(a, d[f], c), e = ",";
          }c.push("]");return;
        }if (b instanceof String || b instanceof Number || b instanceof Boolean) b = b.valueOf();else {
          c.push("{");e = "";for (d in b) {
            Object.prototype.hasOwnProperty.call(b, d) && (f = b[d], "function" != typeof f && (c.push(e), de(d, c), c.push(":"), be(a, f, c), e = ","));
          }c.push("}");return;
        }
      }switch (typeof b) {case "string":
          de(b, c);break;case "number":
          c.push(isFinite(b) && !isNaN(b) ? String(b) : "null");break;case "boolean":
          c.push(String(b));break;case "function":
          c.push("null");break;default:
          throw Error("Unknown type: " + typeof b);}
    }
  }var ee = { '"': '\\"', "\\": "\\\\", "/": "\\/", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t", "\x0B": "\\u000b" },
      fe = /\uffff/.test("\uFFFF") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
  function de(a, b) {
    b.push('"', a.replace(fe, function (c) {
      var d = ee[c];d || (d = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1), ee[c] = d);return d;
    }), '"');
  }; /*
     Copyright 2017 Google Inc.
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
     http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
     */
  function ge() {
    var a = I();return uc && !!Fc && 11 == Fc || /Edge\/\d+/.test(a);
  }function he() {
    return l.window && l.window.location.href || self && self.location && self.location.href || "";
  }function ie(a, b) {
    b = b || l.window;var c = "about:blank";a && (c = tb(vb(a)).toString());b.location.href = c;
  }function je(a, b) {
    var c = [],
        d;for (d in a) {
      d in b ? typeof a[d] != typeof b[d] ? c.push(d) : "object" == typeof a[d] && null != a[d] && null != b[d] ? 0 < je(a[d], b[d]).length && c.push(d) : a[d] !== b[d] && c.push(d) : c.push(d);
    }for (d in b) {
      d in a || c.push(d);
    }return c;
  }
  function ke() {
    var a = I();a = le(a) != me ? null : (a = a.match(/\sChrome\/(\d+)/i)) && 2 == a.length ? parseInt(a[1], 10) : null;return a && 30 > a ? !1 : !uc || !Fc || 9 < Fc;
  }function ne(a) {
    a = (a || I()).toLowerCase();return a.match(/android/) || a.match(/webos/) || a.match(/iphone|ipad|ipod/) || a.match(/blackberry/) || a.match(/windows phone/) || a.match(/iemobile/) ? !0 : !1;
  }function oe(a) {
    a = a || l.window;try {
      a.close();
    } catch (b) {}
  }
  function pe(a, b, c) {
    var d = Math.floor(1E9 * Math.random()).toString();b = b || 500;c = c || 600;var e = (window.screen.availHeight - c) / 2,
        f = (window.screen.availWidth - b) / 2;b = { width: b, height: c, top: 0 < e ? e : 0, left: 0 < f ? f : 0, location: !0, resizable: !0, statusbar: !0, toolbar: !1 };c = I().toLowerCase();d && (b.target = d, y(c, "crios/") && (b.target = "_blank"));le(I()) == qe && (a = a || "http://localhost", b.scrollbars = !0);c = a || "";(a = b) || (a = {});d = window;b = c instanceof rb ? c : vb("undefined" != typeof c.href ? c.href : String(c));c = a.target || c.target;e = [];
    for (g in a) {
      switch (g) {case "width":case "height":case "top":case "left":
          e.push(g + "=" + a[g]);break;case "target":case "noopener":case "noreferrer":
          break;default:
          e.push(g + "=" + (a[g] ? 1 : 0));}
    }var g = e.join(",");(z("iPhone") && !z("iPod") && !z("iPad") || z("iPad") || z("iPod")) && d.navigator && d.navigator.standalone && c && "_self" != c ? (g = d.document.createElement("A"), Ga(g, "HTMLAnchorElement"), b instanceof rb || b instanceof rb || (b = "object" == typeof b && b.qa ? b.pa() : String(b), ub.test(b) || (b = "about:invalid#zClosurez"), b = wb(b)), g.href = tb(b), g.setAttribute("target", c), a.noreferrer && g.setAttribute("rel", "noreferrer"), a = document.createEvent("MouseEvent"), a.initMouseEvent("click", !0, !0, d, 1), g.dispatchEvent(a), g = {}) : a.noreferrer ? (g = d.open("", c, g), a = tb(b).toString(), g && (wc && y(a, ";") && (a = "'" + a.replace(/'/g, "%27") + "'"), g.opener = null, a = Db('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url=' + Ib(a) + '">'), g.document.write(Cb(a)), g.document.close())) : (g = d.open(tb(b).toString(), c, g)) && a.noopener && (g.opener = null);if (g) try {
      g.focus();
    } catch (h) {}return g;
  }function re(a) {
    return new B(function (b) {
      function c() {
        nd(2E3).then(function () {
          if (!a || a.closed) b();else return c();
        });
      }return c();
    });
  }var se = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
      te = /^[^@]+@[^@]+$/;function ue() {
    var a = null;return new B(function (b) {
      "complete" == l.document.readyState ? b() : (a = function a() {
        b();
      }, Xc(window, "load", a));
    }).s(function (b) {
      fd(window, "load", a);throw b;
    });
  }
  function ve() {
    return we(void 0) ? ue().then(function () {
      return new B(function (a, b) {
        var c = l.document,
            d = setTimeout(function () {
          b(Error("Cordova framework is not ready."));
        }, 1E3);c.addEventListener("deviceready", function () {
          clearTimeout(d);a();
        }, !1);
      });
    }) : E(Error("Cordova must run in an Android or iOS file scheme."));
  }function we(a) {
    a = a || I();return !("file:" !== xe() || !a.toLowerCase().match(/iphone|ipad|ipod|android/));
  }function ye() {
    var a = l.window;try {
      return !(!a || a == a.top);
    } catch (b) {
      return !1;
    }
  }
  function ze() {
    return "undefined" !== typeof l.WorkerGlobalScope && "function" === typeof l.importScripts;
  }function Ae() {
    return index_esm["a" /* default */].INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : index_esm["a" /* default */].INTERNAL.hasOwnProperty("node") ? "Node" : ze() ? "Worker" : "Browser";
  }function Be() {
    var a = Ae();return "ReactNative" === a || "Node" === a;
  }function Ce() {
    for (var a = 50, b = []; 0 < a;) {
      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
    }return b.join("");
  }
  var qe = "Firefox",
      me = "Chrome";
  function le(a) {
    var b = a.toLowerCase();if (y(b, "opera/") || y(b, "opr/") || y(b, "opios/")) return "Opera";if (y(b, "iemobile")) return "IEMobile";if (y(b, "msie") || y(b, "trident/")) return "IE";if (y(b, "edge/")) return "Edge";if (y(b, "firefox/")) return qe;if (y(b, "silk/")) return "Silk";if (y(b, "blackberry")) return "Blackberry";if (y(b, "webos")) return "Webos";if (!y(b, "safari/") || y(b, "chrome/") || y(b, "crios/") || y(b, "android")) {
      if (!y(b, "chrome/") && !y(b, "crios/") || y(b, "edge/")) {
        if (y(b, "android")) return "Android";if ((a = a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/)) && 2 == a.length) return a[1];
      } else return me;
    } else return "Safari";return "Other";
  }var De = { Vc: "FirebaseCore-web", Xc: "FirebaseUI-web" };function Ee(a, b) {
    b = b || [];var c = [],
        d = {},
        e;for (e in De) {
      d[De[e]] = !0;
    }for (e = 0; e < b.length; e++) {
      "undefined" !== typeof d[b[e]] && (delete d[b[e]], c.push(b[e]));
    }c.sort();b = c;b.length || (b = ["FirebaseCore-web"]);c = Ae();"Browser" === c ? (d = I(), c = le(d)) : "Worker" === c && (d = I(), c = le(d) + "-" + c);return c + "/JsCore/" + a + "/" + b.join(",");
  }function I() {
    return l.navigator && l.navigator.userAgent || "";
  }
  function J(a, b) {
    a = a.split(".");b = b || l;for (var c = 0; c < a.length && "object" == typeof b && null != b; c++) {
      b = b[a[c]];
    }c != a.length && (b = void 0);return b;
  }function Fe() {
    try {
      var a = l.localStorage,
          b = Ge();if (a) return a.setItem(b, "1"), a.removeItem(b), ge() ? !!l.indexedDB : !0;
    } catch (c) {
      return ze() && !!l.indexedDB;
    }return !1;
  }function He() {
    return (Ie() || "chrome-extension:" === xe() || we()) && !Be() && Fe() && !ze();
  }function Ie() {
    return "http:" === xe() || "https:" === xe();
  }function xe() {
    return l.location && l.location.protocol || null;
  }
  function Je(a) {
    a = a || I();return ne(a) || le(a) == qe ? !1 : !0;
  }function Ke(a) {
    return "undefined" === typeof a ? null : ae(a);
  }function Le(a) {
    var b = {},
        c;for (c in a) {
      a.hasOwnProperty(c) && null !== a[c] && void 0 !== a[c] && (b[c] = a[c]);
    }return b;
  }function Me(a) {
    if (null !== a) return JSON.parse(a);
  }function Ge(a) {
    return a ? a : Math.floor(1E9 * Math.random()).toString();
  }function Ne(a) {
    a = a || I();return "Safari" == le(a) || a.toLowerCase().match(/iphone|ipad|ipod/) ? !1 : !0;
  }
  function Oe() {
    var a = l.___jsl;if (a && a.H) for (var b in a.H) {
      if (a.H[b].r = a.H[b].r || [], a.H[b].L = a.H[b].L || [], a.H[b].r = a.H[b].L.concat(), a.CP) for (var c = 0; c < a.CP.length; c++) {
        a.CP[c] = null;
      }
    }
  }function Pe(a, b) {
    if (a > b) throw Error("Short delay should be less than long delay!");this.a = a;this.c = b;a = I();b = Ae();this.b = ne(a) || "ReactNative" === b;
  }
  Pe.prototype.get = function () {
    var a = l.navigator;return (a && "boolean" === typeof a.onLine && (Ie() || "chrome-extension:" === xe() || "undefined" !== typeof a.connection) ? a.onLine : 1) ? this.b ? this.c : this.a : Math.min(5E3, this.a);
  };function Qe() {
    var a = l.document;return a && "undefined" !== typeof a.visibilityState ? "visible" == a.visibilityState : !0;
  }
  function Re() {
    var a = l.document,
        _b = null;return Qe() || !a ? D() : new B(function (c) {
      _b = function b() {
        Qe() && (a.removeEventListener("visibilitychange", _b, !1), c());
      };a.addEventListener("visibilitychange", _b, !1);
    }).s(function (c) {
      a.removeEventListener("visibilitychange", _b, !1);throw c;
    });
  }function Se(a) {
    try {
      var b = new Date(parseInt(a, 10));if (!isNaN(b.getTime()) && !/[^0-9]/.test(a)) return b.toUTCString();
    } catch (c) {}return null;
  }function Te() {
    return !(!J("fireauth.oauthhelper", l) && !J("fireauth.iframe", l));
  }
  function Ue() {
    var a = l.navigator;return a && a.serviceWorker && a.serviceWorker.controller || null;
  }function Ve() {
    var a = l.navigator;return a && a.serviceWorker ? D().then(function () {
      return a.serviceWorker.ready;
    }).then(function (b) {
      return b.active || null;
    }).s(function () {
      return null;
    }) : D(null);
  };var We = {};function Xe(a) {
    We[a] || (We[a] = !0, "undefined" !== typeof console && "function" === typeof console.warn && console.warn(a));
  };var Ye;try {
    var Ze = {};Object.defineProperty(Ze, "abcd", { configurable: !0, enumerable: !0, value: 1 });Object.defineProperty(Ze, "abcd", { configurable: !0, enumerable: !0, value: 2 });Ye = 2 == Ze.abcd;
  } catch (a) {
    Ye = !1;
  }function K(a, b, c) {
    Ye ? Object.defineProperty(a, b, { configurable: !0, enumerable: !0, value: c }) : a[b] = c;
  }function L(a, b) {
    if (b) for (var c in b) {
      b.hasOwnProperty(c) && K(a, c, b[c]);
    }
  }function $e(a) {
    var b = {};L(b, a);return b;
  }function af(a) {
    var b = {},
        c;for (c in a) {
      a.hasOwnProperty(c) && (b[c] = a[c]);
    }return b;
  }
  function bf(a, b) {
    if (!b || !b.length) return !0;if (!a) return !1;for (var c = 0; c < b.length; c++) {
      var d = a[b[c]];if (void 0 === d || null === d || "" === d) return !1;
    }return !0;
  }function cf(a) {
    var b = a;if ("object" == typeof a && null != a) {
      b = "length" in a ? [] : {};for (var c in a) {
        K(b, c, cf(a[c]));
      }
    }return b;
  };function df(a) {
    var b = {},
        c = a[ef],
        d = a[ff];a = a[gf];if (!a || a != hf && !c) throw Error("Invalid provider user info!");b[jf] = d || null;b[kf] = c || null;K(this, lf, a);K(this, mf, cf(b));
  }var hf = "EMAIL_SIGNIN",
      ef = "email",
      ff = "newEmail",
      gf = "requestType",
      kf = "email",
      jf = "fromEmail",
      mf = "data",
      lf = "operation";function M(a, b) {
    this.code = nf + a;this.message = b || of[a] || "";
  }v(M, Error);M.prototype.A = function () {
    return { code: this.code, message: this.message };
  };M.prototype.toJSON = function () {
    return this.A();
  };function pf(a) {
    var b = a && a.code;return b ? new M(b.substring(nf.length), a.message) : null;
  }
  var nf = "auth/",
      of = { "admin-restricted-operation": "This operation is restricted to administrators only.", "argument-error": "", "app-not-authorized": "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.", "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
    "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.", "code-expired": "The SMS code has expired. Please re-send the verification code to try again.", "cordova-not-ready": "Cordova framework is not ready.", "cors-unsupported": "This browser is not supported.", "credential-already-in-use": "This credential is already associated with a different user account.", "custom-token-mismatch": "The custom token corresponds to a different audience.",
    "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.", "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.", "email-already-in-use": "The email address is already in use by another account.", "expired-action-code": "The action code has expired. ", "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.",
    "internal-error": "An internal error has occurred.", "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.", "invalid-app-id": "The mobile app identifier is not registed for the current project.", "invalid-user-token": "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.", "invalid-auth-event": "An internal error has occurred.",
    "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.", "invalid-continue-uri": "The continue URL provided in the request is invalid.", "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
    "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.", "invalid-dynamic-link-domain": "The provided dynamic link domain is not configured or authorized for the current project.", "invalid-email": "The email address is badly formatted.", "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.", "invalid-cert-hash": "The SHA-1 certificate hash provided is invalid.", "invalid-credential": "The supplied auth credential is malformed or has expired.",
    "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.", "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.", "invalid-oauth-client-id": "The OAuth client ID provided is either invalid or does not match the specified API key.", "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
    "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.", "wrong-password": "The password is invalid or the user does not have a password.", "invalid-persistence-type": "The specified persistence type is invalid. It can only be local, session or none.", "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
    "invalid-provider-id": "The specified provider ID is invalid.", "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.", "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.", "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.", "invalid-tenant-id": "The Auth instance's tenant ID is invalid.",
    "missing-android-pkg-name": "An Android Package Name must be provided if the Android App is required to be installed.", "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.", "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.", "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.",
    "missing-continue-uri": "A continue URL must be provided in the request.", "missing-iframe-start": "An internal error has occurred.", "missing-ios-bundle-id": "An iOS Bundle ID must be provided if an App Store ID is provided.", "missing-or-invalid-nonce": "The OIDC ID token requires a valid unhashed nonce.", "missing-phone-number": "To send verification codes, provide a phone number for the recipient.", "missing-verification-id": "The phone auth credential was created with an empty verification ID.", "app-deleted": "This instance of FirebaseApp has been deleted.",
    "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.", "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.", "no-auth-event": "An internal error has occurred.", "no-such-provider": "User was not linked to an account with the given provider.", "null-user": "A null user object was provided as the argument for an operation which requires a non-null user object.",
    "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.", "operation-not-supported-in-this-environment": 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.', "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.",
    "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.", "provider-already-linked": "User can only be linked to one identity for the given provider.", "quota-exceeded": "The project's quota for this operation has been exceeded.", "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.", "redirect-operation-pending": "A redirect sign-in operation is already pending.", "rejected-credential": "The request contains malformed or mismatching credentials.",
    "tenant-id-mismatch": "The provided tenant ID does not match the Auth instance's tenant ID", timeout: "The operation has timed out.", "user-token-expired": "The user's credential is no longer valid. The user must sign in again.", "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.", "unauthorized-continue-uri": "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.", "unsupported-persistence-type": "The current environment does not support the specified persistence type.",
    "unsupported-tenant-operation": "This operation is not supported in a multi-tenant context.", "user-cancelled": "User did not grant your application the permissions it requested.", "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.", "user-disabled": "The user account has been disabled by an administrator.", "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.", "user-signed-out": "", "weak-password": "The password must be 6 characters long or more.",
    "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled." };function qf(a) {
    a = Ld(a);var b = Kd(a, rf) || null,
        c = Kd(a, sf) || null,
        d = Kd(a, tf) || null;d = d ? uf[d] || null : null;if (!b || !c || !d) throw new M("argument-error", rf + ", " + sf + "and " + tf + " are required in a valid action code URL.");L(this, { apiKey: b, operation: d, code: c, continueUrl: Kd(a, vf) || null, languageCode: Kd(a, wf) || null, tenantId: Kd(a, xf) || null });
  }var rf = "apiKey",
      sf = "oobCode",
      vf = "continueUrl",
      wf = "languageCode",
      tf = "mode",
      xf = "tenantId",
      uf = { recoverEmail: "RECOVER_EMAIL", resetPassword: "PASSWORD_RESET", signIn: hf, verifyEmail: "VERIFY_EMAIL" };
  function yf(a) {
    try {
      return new qf(a);
    } catch (b) {
      return null;
    }
  };function zf(a) {
    var b = a[Af];if ("undefined" === typeof b) throw new M("missing-continue-uri");if ("string" !== typeof b || "string" === typeof b && !b.length) throw new M("invalid-continue-uri");this.h = b;this.b = this.a = null;this.g = !1;var c = a[Bf];if (c && "object" === typeof c) {
      b = c[Cf];var d = c[Df];c = c[Ef];if ("string" === typeof b && b.length) {
        this.a = b;if ("undefined" !== typeof d && "boolean" !== typeof d) throw new M("argument-error", Df + " property must be a boolean when specified.");this.g = !!d;if ("undefined" !== typeof c && ("string" !== typeof c || "string" === typeof c && !c.length)) throw new M("argument-error", Ef + " property must be a non empty string when specified.");this.b = c || null;
      } else {
        if ("undefined" !== typeof b) throw new M("argument-error", Cf + " property must be a non empty string when specified.");if ("undefined" !== typeof d || "undefined" !== typeof c) throw new M("missing-android-pkg-name");
      }
    } else if ("undefined" !== typeof c) throw new M("argument-error", Bf + " property must be a non null object when specified.");this.f = null;if ((b = a[Ff]) && "object" === typeof b) {
      if (b = b[Gf], "string" === typeof b && b.length) this.f = b;else {
        if ("undefined" !== typeof b) throw new M("argument-error", Gf + " property must be a non empty string when specified.");
      }
    } else if ("undefined" !== typeof b) throw new M("argument-error", Ff + " property must be a non null object when specified.");b = a[Hf];if ("undefined" !== typeof b && "boolean" !== typeof b) throw new M("argument-error", Hf + " property must be a boolean when specified.");this.c = !!b;a = a[If];if ("undefined" !== typeof a && ("string" !== typeof a || "string" === typeof a && !a.length)) throw new M("argument-error", If + " property must be a non empty string when specified.");this.i = a || null;
  }var Bf = "android",
      If = "dynamicLinkDomain",
      Hf = "handleCodeInApp",
      Ff = "iOS",
      Af = "url",
      Df = "installApp",
      Ef = "minimumVersion",
      Cf = "packageName",
      Gf = "bundleId";
  function Jf(a) {
    var b = {};b.continueUrl = a.h;b.canHandleCodeInApp = a.c;if (b.androidPackageName = a.a) b.androidMinimumVersion = a.b, b.androidInstallApp = a.g;b.iOSBundleId = a.f;b.dynamicLinkDomain = a.i;for (var c in b) {
      null === b[c] && delete b[c];
    }return b;
  };function Kf(a) {
    return Ja(a, function (b) {
      b = b.toString(16);return 1 < b.length ? b : "0" + b;
    }).join("");
  };var Lf = null,
      Mf = null;function Nf(a) {
    var b = "";Of(a, function (c) {
      b += String.fromCharCode(c);
    });return b;
  }function Of(a, b) {
    function c(m) {
      for (; d < a.length;) {
        var p = a.charAt(d++),
            u = Mf[p];if (null != u) return u;if (!/^[\s\xa0]*$/.test(p)) throw Error("Unknown base64 encoding at char: " + p);
      }return m;
    }Pf();for (var d = 0;;) {
      var e = c(-1),
          f = c(0),
          g = c(64),
          h = c(64);if (64 === h && -1 === e) break;b(e << 2 | f >> 4);64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
    }
  }
  function Pf() {
    if (!Lf) {
      Lf = {};Mf = {};for (var a = 0; 65 > a; a++) {
        Lf[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a), Mf[Lf[a]] = a, 62 <= a && (Mf["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a)] = a);
      }
    }
  };function Qf(a) {
    this.f = a.sub;ua();this.a = a.provider_id || a.firebase && a.firebase.sign_in_provider || null;this.c = a.firebase && a.firebase.tenant || null;this.b = !!a.is_anonymous || "anonymous" == this.a;
  }Qf.prototype.R = function () {
    return this.c;
  };Qf.prototype.g = function () {
    return this.b;
  };function Rf(a) {
    return (a = Sf(a)) && a.sub && a.iss && a.aud && a.exp ? new Qf(a) : null;
  }
  function Sf(a) {
    if (!a) return null;a = a.split(".");if (3 != a.length) return null;a = a[1];for (var b = (4 - a.length % 4) % 4, c = 0; c < b; c++) {
      a += ".";
    }try {
      return JSON.parse(Nf(a));
    } catch (d) {}return null;
  };var Tf = { ad: { bb: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/", ib: "https://securetoken.googleapis.com/v1/token", id: "p" }, cd: { bb: "https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/", ib: "https://staging-securetoken.sandbox.googleapis.com/v1/token", id: "s" }, dd: { bb: "https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/", ib: "https://test-securetoken.sandbox.googleapis.com/v1/token", id: "t" } };
  function Uf(a) {
    for (var b in Tf) {
      if (Tf[b].id === a) return a = Tf[b], { firebaseEndpoint: a.bb, secureTokenEndpoint: a.ib };
    }return null;
  }var Vf;Vf = Uf("__EID__") ? "__EID__" : void 0;var Wf = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),
      Xf = ["client_id", "response_type", "scope", "redirect_uri", "state"],
      Yf = { Wc: { Oa: "locale", Da: 500, Ca: 600, Pa: "facebook.com", hb: Xf }, Yc: { Oa: null, Da: 500, Ca: 620, Pa: "github.com", hb: Xf }, Zc: { Oa: "hl", Da: 515, Ca: 680, Pa: "google.com", hb: Xf }, ed: { Oa: "lang", Da: 485, Ca: 705, Pa: "twitter.com", hb: Wf } };function Zf(a) {
    for (var b in Yf) {
      if (Yf[b].Pa == a) return Yf[b];
    }return null;
  };function $f(a) {
    var b = {};b["facebook.com"] = ag;b["google.com"] = bg;b["github.com"] = cg;b["twitter.com"] = dg;var c = a && a[eg];try {
      if (c) return b[c] ? new b[c](a) : new fg(a);if ("undefined" !== typeof a[gg]) return new hg(a);
    } catch (d) {}return null;
  }var gg = "idToken",
      eg = "providerId";
  function hg(a) {
    var b = a[eg];if (!b && a[gg]) {
      var c = Rf(a[gg]);c && c.a && (b = c.a);
    }if (!b) throw Error("Invalid additional user info!");if ("anonymous" == b || "custom" == b) b = null;c = !1;"undefined" !== typeof a.isNewUser ? c = !!a.isNewUser : "identitytoolkit#SignupNewUserResponse" === a.kind && (c = !0);K(this, "providerId", b);K(this, "isNewUser", c);
  }function fg(a) {
    hg.call(this, a);a = Me(a.rawUserInfo || "{}");K(this, "profile", cf(a || {}));
  }v(fg, hg);
  function ag(a) {
    fg.call(this, a);if ("facebook.com" != this.providerId) throw Error("Invalid provider ID!");
  }v(ag, fg);function cg(a) {
    fg.call(this, a);if ("github.com" != this.providerId) throw Error("Invalid provider ID!");K(this, "username", this.profile && this.profile.login || null);
  }v(cg, fg);function bg(a) {
    fg.call(this, a);if ("google.com" != this.providerId) throw Error("Invalid provider ID!");
  }v(bg, fg);
  function dg(a) {
    fg.call(this, a);if ("twitter.com" != this.providerId) throw Error("Invalid provider ID!");K(this, "username", a.screenName || null);
  }v(dg, fg);function ig(a) {
    var b = Ld(a),
        c = Kd(b, "link"),
        d = Kd(Ld(c), "link");b = Kd(b, "deep_link_id");return Kd(Ld(b), "link") || b || d || c || a;
  };function jg() {}function kg(a, b) {
    return a.then(function (c) {
      if (c[lg]) {
        var d = Rf(c[lg]);if (!d || b != d.f) throw new M("user-mismatch");return c;
      }throw new M("user-mismatch");
    }).s(function (c) {
      throw c && c.code && c.code == nf + "user-not-found" ? new M("user-mismatch") : c;
    });
  }function mg(a, b) {
    if (b) this.a = b;else throw new M("internal-error", "failed to construct a credential");K(this, "providerId", a);K(this, "signInMethod", a);
  }mg.prototype.na = function (a) {
    return ng(a, og(this));
  };
  mg.prototype.b = function (a, b) {
    var c = og(this);c.idToken = b;return pg(a, c);
  };mg.prototype.f = function (a, b) {
    return kg(qg(a, og(this)), b);
  };function og(a) {
    return { pendingToken: a.a, requestUri: "http://localhost" };
  }mg.prototype.A = function () {
    return { providerId: this.providerId, signInMethod: this.signInMethod, pendingToken: this.a };
  };function rg(a) {
    if (a && a.providerId && a.signInMethod && 0 == a.providerId.indexOf("saml.") && a.pendingToken) try {
      return new mg(a.providerId, a.pendingToken);
    } catch (b) {}return null;
  }
  function sg(a, b, c) {
    this.a = null;if (b.idToken || b.accessToken) b.idToken && K(this, "idToken", b.idToken), b.accessToken && K(this, "accessToken", b.accessToken), b.nonce && !b.pendingToken && K(this, "nonce", b.nonce), b.pendingToken && (this.a = b.pendingToken);else if (b.oauthToken && b.oauthTokenSecret) K(this, "accessToken", b.oauthToken), K(this, "secret", b.oauthTokenSecret);else throw new M("internal-error", "failed to construct a credential");K(this, "providerId", a);K(this, "signInMethod", c);
  }
  sg.prototype.na = function (a) {
    return ng(a, tg(this));
  };sg.prototype.b = function (a, b) {
    var c = tg(this);c.idToken = b;return pg(a, c);
  };sg.prototype.f = function (a, b) {
    var c = tg(this);return kg(qg(a, c), b);
  };
  function tg(a) {
    var b = {};a.idToken && (b.id_token = a.idToken);a.accessToken && (b.access_token = a.accessToken);a.secret && (b.oauth_token_secret = a.secret);b.providerId = a.providerId;a.nonce && !a.a && (b.nonce = a.nonce);b = { postBody: Pd(b).toString(), requestUri: "http://localhost" };a.a && (delete b.postBody, b.pendingToken = a.a);return b;
  }
  sg.prototype.A = function () {
    var a = { providerId: this.providerId, signInMethod: this.signInMethod };this.idToken && (a.oauthIdToken = this.idToken);this.accessToken && (a.oauthAccessToken = this.accessToken);this.secret && (a.oauthTokenSecret = this.secret);this.nonce && (a.nonce = this.nonce);this.a && (a.pendingToken = this.a);return a;
  };
  function ug(a) {
    if (a && a.providerId && a.signInMethod) {
      var b = { idToken: a.oauthIdToken, accessToken: a.oauthTokenSecret ? null : a.oauthAccessToken, oauthTokenSecret: a.oauthTokenSecret, oauthToken: a.oauthTokenSecret && a.oauthAccessToken, nonce: a.nonce, pendingToken: a.pendingToken };try {
        return new sg(a.providerId, b, a.signInMethod);
      } catch (c) {}
    }return null;
  }function vg(a, b) {
    this.Fc = b || [];L(this, { providerId: a, isOAuthProvider: !0 });this.zb = {};this.cb = (Zf(a) || {}).Oa || null;this.ab = null;
  }
  vg.prototype.Ea = function (a) {
    this.zb = Ua(a);return this;
  };function wg(a) {
    if ("string" !== typeof a || 0 != a.indexOf("saml.")) throw new M("argument-error", 'SAML provider IDs must be prefixed with "saml."');vg.call(this, a, []);
  }v(wg, vg);function O(a) {
    vg.call(this, a, Xf);this.a = [];
  }v(O, vg);O.prototype.wa = function (a) {
    Na(this.a, a) || this.a.push(a);return this;
  };O.prototype.Hb = function () {
    return Ra(this.a);
  };
  O.prototype.credential = function (a, b) {
    var c;r(a) ? c = { idToken: a.idToken || null, accessToken: a.accessToken || null, nonce: a.rawNonce || null } : c = { idToken: a || null, accessToken: b || null };if (!c.idToken && !c.accessToken) throw new M("argument-error", "credential failed: must provide the ID token and/or the access token.");return new sg(this.providerId, c, this.providerId);
  };function xg() {
    O.call(this, "facebook.com");
  }v(xg, O);K(xg, "PROVIDER_ID", "facebook.com");K(xg, "FACEBOOK_SIGN_IN_METHOD", "facebook.com");
  function yg(a) {
    if (!a) throw new M("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;r(a) && (b = a.accessToken);return new xg().credential({ accessToken: b });
  }function zg() {
    O.call(this, "github.com");
  }v(zg, O);K(zg, "PROVIDER_ID", "github.com");K(zg, "GITHUB_SIGN_IN_METHOD", "github.com");
  function Ag(a) {
    if (!a) throw new M("argument-error", "credential failed: expected 1 argument (the OAuth access token).");var b = a;r(a) && (b = a.accessToken);return new zg().credential({ accessToken: b });
  }function Bg() {
    O.call(this, "google.com");this.wa("profile");
  }v(Bg, O);K(Bg, "PROVIDER_ID", "google.com");K(Bg, "GOOGLE_SIGN_IN_METHOD", "google.com");function Cg(a, b) {
    var c = a;r(a) && (c = a.idToken, b = a.accessToken);return new Bg().credential({ idToken: c, accessToken: b });
  }function Dg() {
    vg.call(this, "twitter.com", Wf);
  }v(Dg, vg);
  K(Dg, "PROVIDER_ID", "twitter.com");K(Dg, "TWITTER_SIGN_IN_METHOD", "twitter.com");function Eg(a, b) {
    var c = a;r(c) || (c = { oauthToken: a, oauthTokenSecret: b });if (!c.oauthToken || !c.oauthTokenSecret) throw new M("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");return new sg("twitter.com", c, "twitter.com");
  }
  function Fg(a, b, c) {
    this.a = a;this.c = b;K(this, "providerId", "password");K(this, "signInMethod", c === Gg.EMAIL_LINK_SIGN_IN_METHOD ? Gg.EMAIL_LINK_SIGN_IN_METHOD : Gg.EMAIL_PASSWORD_SIGN_IN_METHOD);
  }Fg.prototype.na = function (a) {
    return this.signInMethod == Gg.EMAIL_LINK_SIGN_IN_METHOD ? P(a, Hg, { email: this.a, oobCode: this.c }) : P(a, Ig, { email: this.a, password: this.c });
  };
  Fg.prototype.b = function (a, b) {
    return this.signInMethod == Gg.EMAIL_LINK_SIGN_IN_METHOD ? P(a, Jg, { idToken: b, email: this.a, oobCode: this.c }) : P(a, Kg, { idToken: b, email: this.a, password: this.c });
  };Fg.prototype.f = function (a, b) {
    return kg(this.na(a), b);
  };Fg.prototype.A = function () {
    return { email: this.a, password: this.c, signInMethod: this.signInMethod };
  };function Lg(a) {
    return a && a.email && a.password ? new Fg(a.email, a.password, a.signInMethod) : null;
  }function Gg() {
    L(this, { providerId: "password", isOAuthProvider: !1 });
  }
  function Mg(a, b) {
    b = Ng(b);if (!b) throw new M("argument-error", "Invalid email link!");return new Fg(a, b.code, Gg.EMAIL_LINK_SIGN_IN_METHOD);
  }function Ng(a) {
    a = ig(a);return (a = yf(a)) && a.operation === hf ? a : null;
  }L(Gg, { PROVIDER_ID: "password" });L(Gg, { EMAIL_LINK_SIGN_IN_METHOD: "emailLink" });L(Gg, { EMAIL_PASSWORD_SIGN_IN_METHOD: "password" });function Og(a) {
    if (!(a.Ua && a.Ta || a.Fa && a.ba)) throw new M("internal-error");this.a = a;K(this, "providerId", "phone");K(this, "signInMethod", "phone");
  }Og.prototype.na = function (a) {
    return a.Va(Pg(this));
  };
  Og.prototype.b = function (a, b) {
    var c = Pg(this);c.idToken = b;return P(a, Qg, c);
  };Og.prototype.f = function (a, b) {
    var c = Pg(this);c.operation = "REAUTH";a = P(a, Rg, c);return kg(a, b);
  };Og.prototype.A = function () {
    var a = { providerId: "phone" };this.a.Ua && (a.verificationId = this.a.Ua);this.a.Ta && (a.verificationCode = this.a.Ta);this.a.Fa && (a.temporaryProof = this.a.Fa);this.a.ba && (a.phoneNumber = this.a.ba);return a;
  };
  function Sg(a) {
    if (a && "phone" === a.providerId && (a.verificationId && a.verificationCode || a.temporaryProof && a.phoneNumber)) {
      var b = {};x(["verificationId", "verificationCode", "temporaryProof", "phoneNumber"], function (c) {
        a[c] && (b[c] = a[c]);
      });return new Og(b);
    }return null;
  }function Pg(a) {
    return a.a.Fa && a.a.ba ? { temporaryProof: a.a.Fa, phoneNumber: a.a.ba } : { sessionInfo: a.a.Ua, code: a.a.Ta };
  }
  function Tg(a) {
    try {
      this.a = a || index_esm["a" /* default */].auth();
    } catch (b) {
      throw new M("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");
    }L(this, { providerId: "phone", isOAuthProvider: !1 });
  }
  Tg.prototype.Va = function (a, b) {
    var c = this.a.b;return D(b.verify()).then(function (d) {
      if (!n(d)) throw new M("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch (b.type) {case "recaptcha":
          return Ug(c, { phoneNumber: a, recaptchaToken: d }).then(function (e) {
            "function" === typeof b.reset && b.reset();return e;
          }, function (e) {
            "function" === typeof b.reset && b.reset();throw e;
          });default:
          throw new M("argument-error", 'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}
    });
  };function Vg(a, b) {
    if (!a) throw new M("missing-verification-id");if (!b) throw new M("missing-verification-code");return new Og({ Ua: a, Ta: b });
  }L(Tg, { PROVIDER_ID: "phone" });L(Tg, { PHONE_SIGN_IN_METHOD: "phone" });
  function Wg(a) {
    if (a.temporaryProof && a.phoneNumber) return new Og({ Fa: a.temporaryProof, ba: a.phoneNumber });var b = a && a.providerId;if (!b || "password" === b) return null;var c = a && a.oauthAccessToken,
        d = a && a.oauthTokenSecret,
        e = a && a.nonce,
        f = a && a.oauthIdToken,
        g = a && a.pendingToken;try {
      switch (b) {case "google.com":
          return Cg(f, c);case "facebook.com":
          return yg(c);case "github.com":
          return Ag(c);case "twitter.com":
          return Eg(c, d);default:
          return c || d || f || g ? g ? 0 == b.indexOf("saml.") ? new mg(b, g) : new sg(b, { pendingToken: g, idToken: a.oauthIdToken,
            accessToken: a.oauthAccessToken }, b) : new O(b).credential({ idToken: f, accessToken: c, rawNonce: e }) : null;}
    } catch (h) {
      return null;
    }
  }function Xg(a) {
    if (!a.isOAuthProvider) throw new M("invalid-oauth-provider");
  };function Yg(a, b, c, d, e, f, g) {
    this.c = a;this.b = b || null;this.g = c || null;this.f = d || null;this.i = f || null;this.h = g || null;this.a = e || null;if (this.g || this.a) {
      if (this.g && this.a) throw new M("invalid-auth-event");if (this.g && !this.f) throw new M("invalid-auth-event");
    } else throw new M("invalid-auth-event");
  }Yg.prototype.getUid = function () {
    var a = [];a.push(this.c);this.b && a.push(this.b);this.f && a.push(this.f);this.h && a.push(this.h);return a.join("-");
  };Yg.prototype.R = function () {
    return this.h;
  };
  Yg.prototype.A = function () {
    return { type: this.c, eventId: this.b, urlResponse: this.g, sessionId: this.f, postBody: this.i, tenantId: this.h, error: this.a && this.a.A() };
  };function Zg(a) {
    a = a || {};return a.type ? new Yg(a.type, a.eventId, a.urlResponse, a.sessionId, a.error && pf(a.error), a.postBody, a.tenantId) : null;
  }; /*
     Copyright 2018 Google Inc.
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
     http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
     */
  function $g() {
    this.b = null;this.a = [];
  }var ah = null;function bh(a) {
    var b = ah;b.a.push(a);b.b || (b.b = function (c) {
      for (var d = 0; d < b.a.length; d++) {
        b.a[d](c);
      }
    }, a = J("universalLinks.subscribe", l), "function" === typeof a && a(null, b.b));
  };function ch(a) {
    var b = "unauthorized-domain",
        c = void 0,
        d = Ld(a);a = d.b;d = d.f;"chrome-extension" == d ? c = Hb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : "http" == d || "https" == d ? c = Hb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", a) : b = "operation-not-supported-in-this-environment";
    M.call(this, b, c);
  }v(ch, M);function dh(a, b, c) {
    M.call(this, a, c);a = b || {};a.Ab && K(this, "email", a.Ab);a.ba && K(this, "phoneNumber", a.ba);a.credential && K(this, "credential", a.credential);a.Qb && K(this, "tenantId", a.Qb);
  }v(dh, M);dh.prototype.A = function () {
    var a = { code: this.code, message: this.message };this.email && (a.email = this.email);this.phoneNumber && (a.phoneNumber = this.phoneNumber);this.tenantId && (a.tenantId = this.tenantId);var b = this.credential && this.credential.A();b && Wa(a, b);return a;
  };dh.prototype.toJSON = function () {
    return this.A();
  };
  function eh(a) {
    if (a.code) {
      var b = a.code || "";0 == b.indexOf(nf) && (b = b.substring(nf.length));var c = { credential: Wg(a), Qb: a.tenantId };if (a.email) c.Ab = a.email;else if (a.phoneNumber) c.ba = a.phoneNumber;else if (!c.credential) return new M(b, a.message || void 0);return new dh(b, c, a.message);
    }return null;
  };function fh() {}fh.prototype.c = null;function gh(a) {
    return a.c || (a.c = a.b());
  };var hh;function ih() {}v(ih, fh);ih.prototype.a = function () {
    var a = jh(this);return a ? new ActiveXObject(a) : new XMLHttpRequest();
  };ih.prototype.b = function () {
    var a = {};jh(this) && (a[0] = !0, a[1] = !0);return a;
  };
  function jh(a) {
    if (!a.f && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
      for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {
        var d = b[c];try {
          return new ActiveXObject(d), a.f = d;
        } catch (e) {}
      }throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
    }return a.f;
  }hh = new ih();function kh() {}v(kh, fh);kh.prototype.a = function () {
    var a = new XMLHttpRequest();if ("withCredentials" in a) return a;if ("undefined" != typeof XDomainRequest) return new lh();throw Error("Unsupported browser");
  };kh.prototype.b = function () {
    return {};
  };
  function lh() {
    this.a = new XDomainRequest();this.readyState = 0;this.onreadystatechange = null;this.responseType = this.responseText = this.response = "";this.status = -1;this.statusText = "";this.a.onload = t(this.fc, this);this.a.onerror = t(this.Ib, this);this.a.onprogress = t(this.gc, this);this.a.ontimeout = t(this.kc, this);
  }k = lh.prototype;k.open = function (a, b, c) {
    if (null != c && !c) throw Error("Only async requests are supported.");this.a.open(a, b);
  };
  k.send = function (a) {
    if (a) {
      if ("string" == typeof a) this.a.send(a);else throw Error("Only string data is supported");
    } else this.a.send();
  };k.abort = function () {
    this.a.abort();
  };k.setRequestHeader = function () {};k.getResponseHeader = function (a) {
    return "content-type" == a.toLowerCase() ? this.a.contentType : "";
  };k.fc = function () {
    this.status = 200;this.response = this.responseText = this.a.responseText;mh(this, 4);
  };k.Ib = function () {
    this.status = 500;this.response = this.responseText = "";mh(this, 4);
  };k.kc = function () {
    this.Ib();
  };
  k.gc = function () {
    this.status = 200;mh(this, 1);
  };function mh(a, b) {
    a.readyState = b;if (a.onreadystatechange) a.onreadystatechange();
  }k.getAllResponseHeaders = function () {
    return "content-type: " + this.a.contentType;
  };function nh(a, b, c) {
    this.reset(a, b, c, void 0, void 0);
  }nh.prototype.a = null;var oh = 0;nh.prototype.reset = function (a, b, c, d, e) {
    "number" == typeof e || oh++;d || ua();delete this.a;
  };function ph(a) {
    this.f = a;this.b = this.c = this.a = null;
  }function qh(a, b) {
    this.name = a;this.value = b;
  }qh.prototype.toString = function () {
    return this.name;
  };var rh = new qh("SEVERE", 1E3),
      sh = new qh("WARNING", 900),
      th = new qh("CONFIG", 700),
      uh = new qh("FINE", 500);function vh(a) {
    if (a.c) return a.c;if (a.a) return vh(a.a);ya("Root logger has no level set.");return null;
  }ph.prototype.log = function (a, b, c) {
    if (a.value >= vh(this).value) for (q(b) && (b = b()), a = new nh(a, String(b), this.f), c && (a.a = c), c = this; c;) {
      c = c.a;
    }
  };var wh = {},
      xh = null;
  function yh(a) {
    xh || (xh = new ph(""), wh[""] = xh, xh.c = th);var b;if (!(b = wh[a])) {
      b = new ph(a);var c = a.lastIndexOf("."),
          d = a.substr(c + 1);c = yh(a.substr(0, c));c.b || (c.b = {});c.b[d] = b;b.a = c;wh[a] = b;
    }return b;
  };function zh(a, b) {
    a && a.log(uh, b, void 0);
  };function Ah(a) {
    this.f = a;
  }v(Ah, fh);Ah.prototype.a = function () {
    return new Bh(this.f);
  };Ah.prototype.b = function (a) {
    return function () {
      return a;
    };
  }({});function Bh(a) {
    G.call(this);this.o = a;this.readyState = Ch;this.status = 0;this.responseType = this.responseText = this.response = this.statusText = "";this.onreadystatechange = null;this.i = new Headers();this.b = null;this.m = "GET";this.g = "";this.a = !1;this.h = yh("goog.net.FetchXmlHttp");this.l = this.c = this.f = null;
  }v(Bh, G);var Ch = 0;k = Bh.prototype;
  k.open = function (a, b) {
    if (this.readyState != Ch) throw this.abort(), Error("Error reopening a connection");this.m = a;this.g = b;this.readyState = 1;Dh(this);
  };k.send = function (a) {
    if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");this.a = !0;var b = { headers: this.i, method: this.m, credentials: void 0, cache: void 0 };a && (b.body = a);this.o.fetch(new Request(this.g, b)).then(this.jc.bind(this), this.Ma.bind(this));
  };
  k.abort = function () {
    this.response = this.responseText = "";this.i = new Headers();this.status = 0;this.c && this.c.cancel("Request was aborted.");1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, Eh(this, !1));this.readyState = Ch;
  };
  k.jc = function (a) {
    this.a && (this.f = a, this.b || (this.b = a.headers, this.readyState = 2, Dh(this)), this.a && (this.readyState = 3, Dh(this), this.a && ("arraybuffer" === this.responseType ? a.arrayBuffer().then(this.hc.bind(this), this.Ma.bind(this)) : "undefined" !== typeof l.ReadableStream && "body" in a ? (this.response = this.responseText = "", this.c = a.body.getReader(), this.l = new TextDecoder(), Fh(this)) : a.text().then(this.ic.bind(this), this.Ma.bind(this)))));
  };function Fh(a) {
    a.c.read().then(a.ec.bind(a)).catch(a.Ma.bind(a));
  }
  k.ec = function (a) {
    if (this.a) {
      var b = this.l.decode(a.value ? a.value : new Uint8Array(0), { stream: !a.done });b && (this.response = this.responseText += b);a.done ? Eh(this, !0) : Dh(this);3 == this.readyState && Fh(this);
    }
  };k.ic = function (a) {
    this.a && (this.response = this.responseText = a, Eh(this, !0));
  };k.hc = function (a) {
    this.a && (this.response = a, Eh(this, !0));
  };k.Ma = function (a) {
    var b = this.h;b && b.log(sh, "Failed to fetch url " + this.g, a instanceof Error ? a : Error(a));this.a && Eh(this, !0);
  };
  function Eh(a, b) {
    b && a.f && (a.status = a.f.status, a.statusText = a.f.statusText);a.readyState = 4;a.f = null;a.c = null;a.l = null;Dh(a);
  }k.setRequestHeader = function (a, b) {
    this.i.append(a, b);
  };k.getResponseHeader = function (a) {
    return this.b ? this.b.get(a.toLowerCase()) || "" : ((a = this.h) && a.log(sh, "Attempting to get response header but no headers have been received for url: " + this.g, void 0), "");
  };
  k.getAllResponseHeaders = function () {
    if (!this.b) {
      var a = this.h;a && a.log(sh, "Attempting to get all response headers but no headers have been received for url: " + this.g, void 0);return "";
    }a = [];for (var b = this.b.entries(), c = b.next(); !c.done;) {
      c = c.value, a.push(c[0] + ": " + c[1]), c = b.next();
    }return a.join("\r\n");
  };function Dh(a) {
    a.onreadystatechange && a.onreadystatechange.call(a);
  };function Gh(a) {
    G.call(this);this.headers = new rd();this.B = a || null;this.c = !1;this.w = this.a = null;this.h = this.O = this.l = "";this.f = this.J = this.i = this.I = !1;this.g = 0;this.o = null;this.m = Hh;this.v = this.P = !1;
  }v(Gh, G);var Hh = "";Gh.prototype.b = yh("goog.net.XhrIo");var Ih = /^https?$/i,
      Jh = ["POST", "PUT"];
  function Kh(a, b, c, d, e) {
    if (a.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + a.l + "; newUri=" + b);c = c ? c.toUpperCase() : "GET";a.l = b;a.h = "";a.O = c;a.I = !1;a.c = !0;a.a = a.B ? a.B.a() : hh.a();a.w = a.B ? gh(a.B) : gh(hh);a.a.onreadystatechange = t(a.Lb, a);try {
      zh(a.b, Lh(a, "Opening Xhr")), a.J = !0, a.a.open(c, String(b), !0), a.J = !1;
    } catch (g) {
      zh(a.b, Lh(a, "Error opening Xhr: " + g.message));Mh(a, g);return;
    }b = d || "";var f = new rd(a.headers);e && qd(e, function (g, h) {
      f.set(h, g);
    });e = La(f.X());d = l.FormData && b instanceof l.FormData;!Na(Jh, c) || e || d || f.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");f.forEach(function (g, h) {
      this.a.setRequestHeader(h, g);
    }, a);a.m && (a.a.responseType = a.m);"withCredentials" in a.a && a.a.withCredentials !== a.P && (a.a.withCredentials = a.P);try {
      Nh(a), 0 < a.g && (a.v = Oh(a.a), zh(a.b, Lh(a, "Will abort after " + a.g + "ms if incomplete, xhr2 " + a.v)), a.v ? (a.a.timeout = a.g, a.a.ontimeout = t(a.Ga, a)) : a.o = md(a.Ga, a.g, a)), zh(a.b, Lh(a, "Sending request")), a.i = !0, a.a.send(b), a.i = !1;
    } catch (g) {
      zh(a.b, Lh(a, "Send error: " + g.message)), Mh(a, g);
    }
  }function Oh(a) {
    return uc && Ec(9) && "number" == typeof a.timeout && void 0 !== a.ontimeout;
  }function Ma(a) {
    return "content-type" == a.toLowerCase();
  }k = Gh.prototype;k.Ga = function () {
    "undefined" != typeof fa && this.a && (this.h = "Timed out after " + this.g + "ms, aborting", zh(this.b, Lh(this, this.h)), this.dispatchEvent("timeout"), this.abort(8));
  };function Mh(a, b) {
    a.c = !1;a.a && (a.f = !0, a.a.abort(), a.f = !1);a.h = b;Ph(a);Qh(a);
  }
  function Ph(a) {
    a.I || (a.I = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
  }k.abort = function () {
    this.a && this.c && (zh(this.b, Lh(this, "Aborting")), this.c = !1, this.f = !0, this.a.abort(), this.f = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), Qh(this));
  };k.xa = function () {
    this.a && (this.c && (this.c = !1, this.f = !0, this.a.abort(), this.f = !1), Qh(this, !0));Gh.qb.xa.call(this);
  };k.Lb = function () {
    this.ta || (this.J || this.i || this.f ? Rh(this) : this.yc());
  };k.yc = function () {
    Rh(this);
  };
  function Rh(a) {
    if (a.c && "undefined" != typeof fa) if (a.w[1] && 4 == Sh(a) && 2 == Th(a)) zh(a.b, Lh(a, "Local request error detected and ignored"));else if (a.i && 4 == Sh(a)) md(a.Lb, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == Sh(a)) {
      zh(a.b, Lh(a, "Request complete"));a.c = !1;try {
        var b = Th(a);a: switch (b) {case 200:case 201:case 202:case 204:case 206:case 304:case 1223:
            var c = !0;break a;default:
            c = !1;}var d;if (!(d = c)) {
          var e;if (e = 0 === b) {
            var f = String(a.l).match(ud)[1] || null;if (!f && l.self && l.self.location) {
              var g = l.self.location.protocol;
              f = g.substr(0, g.length - 1);
            }e = !Ih.test(f ? f.toLowerCase() : "");
          }d = e;
        }if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
          try {
            var h = 2 < Sh(a) ? a.a.statusText : "";
          } catch (m) {
            zh(a.b, "Can not get status: " + m.message), h = "";
          }a.h = h + " [" + Th(a) + "]";Ph(a);
        }
      } finally {
        Qh(a);
      }
    }
  }function Qh(a, b) {
    if (a.a) {
      Nh(a);var c = a.a,
          d = a.w[0] ? ka : null;a.a = null;a.w = null;b || a.dispatchEvent("ready");try {
        c.onreadystatechange = d;
      } catch (e) {
        (a = a.b) && a.log(rh, "Problem encountered resetting onreadystatechange: " + e.message, void 0);
      }
    }
  }
  function Nh(a) {
    a.a && a.v && (a.a.ontimeout = null);a.o && (l.clearTimeout(a.o), a.o = null);
  }function Sh(a) {
    return a.a ? a.a.readyState : 0;
  }function Th(a) {
    try {
      return 2 < Sh(a) ? a.a.status : -1;
    } catch (b) {
      return -1;
    }
  }function Uh(a) {
    try {
      return a.a ? a.a.responseText : "";
    } catch (b) {
      return zh(a.b, "Can not get responseText: " + b.message), "";
    }
  }
  k.getResponse = function () {
    try {
      if (!this.a) return null;if ("response" in this.a) return this.a.response;switch (this.m) {case Hh:case "text":
          return this.a.responseText;case "arraybuffer":
          if ("mozResponseArrayBuffer" in this.a) return this.a.mozResponseArrayBuffer;}var a = this.b;a && a.log(rh, "Response type " + this.m + " is not supported on this browser", void 0);return null;
    } catch (b) {
      return zh(this.b, "Can not get response: " + b.message), null;
    }
  };function Lh(a, b) {
    return b + " [" + a.O + " " + a.l + " " + Th(a) + "]";
  }; /*
     Portions of this code are from MochiKit, received by
     The Closure Authors under the MIT license. All other code is Copyright
     2005-2009 The Closure Authors. All Rights Reserved.
     */
  function Vh(a) {
    var b = Wh;this.g = [];this.v = b;this.o = a || null;this.f = this.a = !1;this.c = void 0;this.u = this.w = this.i = !1;this.h = 0;this.b = null;this.l = 0;
  }Vh.prototype.cancel = function (a) {
    if (this.a) this.c instanceof Vh && this.c.cancel();else {
      if (this.b) {
        var b = this.b;delete this.b;a ? b.cancel(a) : (b.l--, 0 >= b.l && b.cancel());
      }this.v ? this.v.call(this.o, this) : this.u = !0;this.a || (a = new Xh(this), Yh(this), Zh(this, !1, a));
    }
  };Vh.prototype.m = function (a, b) {
    this.i = !1;Zh(this, a, b);
  };function Zh(a, b, c) {
    a.a = !0;a.c = c;a.f = !b;$h(a);
  }
  function Yh(a) {
    if (a.a) {
      if (!a.u) throw new ai(a);a.u = !1;
    }
  }function bi(a, b) {
    ci(a, null, b, void 0);
  }function ci(a, b, c, d) {
    a.g.push([b, c, d]);a.a && $h(a);
  }Vh.prototype.then = function (a, b, c) {
    var d,
        e,
        f = new B(function (g, h) {
      d = g;e = h;
    });ci(this, d, function (g) {
      g instanceof Xh ? f.cancel() : e(g);
    });return f.then(a, b, c);
  };Vh.prototype.$goog_Thenable = !0;function di(a) {
    return Ka(a.g, function (b) {
      return q(b[1]);
    });
  }
  function $h(a) {
    if (a.h && a.a && di(a)) {
      var b = a.h,
          c = ei[b];c && (l.clearTimeout(c.a), delete ei[b]);a.h = 0;
    }a.b && (a.b.l--, delete a.b);b = a.c;for (var d = c = !1; a.g.length && !a.i;) {
      var e = a.g.shift(),
          f = e[0],
          g = e[1];e = e[2];if (f = a.f ? g : f) try {
        var h = f.call(e || a.o, b);void 0 !== h && (a.f = a.f && (h == b || h instanceof Error), a.c = b = h);if (va(b) || "function" === typeof l.Promise && b instanceof l.Promise) d = !0, a.i = !0;
      } catch (m) {
        b = m, a.f = !0, di(a) || (c = !0);
      }
    }a.c = b;d && (h = t(a.m, a, !0), d = t(a.m, a, !1), b instanceof Vh ? (ci(b, h, d), b.w = !0) : b.then(h, d));c && (b = new fi(b), ei[b.a] = b, a.h = b.a);
  }function ai() {
    w.call(this);
  }v(ai, w);ai.prototype.message = "Deferred has already fired";ai.prototype.name = "AlreadyCalledError";function Xh() {
    w.call(this);
  }v(Xh, w);Xh.prototype.message = "Deferred was canceled";Xh.prototype.name = "CanceledError";function fi(a) {
    this.a = l.setTimeout(t(this.c, this), 0);this.b = a;
  }fi.prototype.c = function () {
    delete ei[this.a];throw this.b;
  };var ei = {};function gi(a) {
    var b = {},
        c = b.document || document,
        d = db(a).toString(),
        e = document.createElement("SCRIPT"),
        f = { Nb: e, Ga: void 0 },
        g = new Vh(f),
        h = null,
        m = null != b.timeout ? b.timeout : 5E3;0 < m && (h = window.setTimeout(function () {
      hi(e, !0);var p = new ii(ji, "Timeout reached for loading script " + d);Yh(g);Zh(g, !1, p);
    }, m), f.Ga = h);e.onload = e.onreadystatechange = function () {
      e.readyState && "loaded" != e.readyState && "complete" != e.readyState || (hi(e, b.gd || !1, h), Yh(g), Zh(g, !0, null));
    };e.onerror = function () {
      hi(e, !0, h);var p = new ii(ki, "Error while loading script " + d);Yh(g);Zh(g, !1, p);
    };f = b.attributes || {};Wa(f, { type: "text/javascript", charset: "UTF-8" });Wd(e, f);Gb(e, a);li(c).appendChild(e);return g;
  }function li(a) {
    var b;return (b = (a || document).getElementsByTagName("HEAD")) && 0 != b.length ? b[0] : a.documentElement;
  }function Wh() {
    if (this && this.Nb) {
      var a = this.Nb;a && "SCRIPT" == a.tagName && hi(a, !0, this.Ga);
    }
  }
  function hi(a, b, c) {
    null != c && l.clearTimeout(c);a.onload = ka;a.onerror = ka;a.onreadystatechange = ka;b && window.setTimeout(function () {
      a && a.parentNode && a.parentNode.removeChild(a);
    }, 0);
  }var ki = 0,
      ji = 1;function ii(a, b) {
    var c = "Jsloader error (code #" + a + ")";b && (c += ": " + b);w.call(this, c);this.code = a;
  }v(ii, w);function mi(a) {
    this.f = a;
  }v(mi, fh);mi.prototype.a = function () {
    return new this.f();
  };mi.prototype.b = function () {
    return {};
  };
  function ni(a, b, c) {
    this.c = a;a = b || {};this.l = a.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token";this.u = a.secureTokenTimeout || oi;this.g = Ua(a.secureTokenHeaders || pi);this.h = a.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.i = a.firebaseTimeout || qi;this.a = Ua(a.firebaseHeaders || ri);c && (this.a["X-Client-Version"] = c, this.g["X-Client-Version"] = c);c = "Node" == Ae();c = l.XMLHttpRequest || c && index_esm["a" /* default */].INTERNAL.node && index_esm["a" /* default */].INTERNAL.node.XMLHttpRequest;if (!c && !ze()) throw new M("internal-error", "The XMLHttpRequest compatibility library was not found.");this.f = void 0;ze() ? this.f = new Ah(self) : Be() ? this.f = new mi(c) : this.f = new kh();this.b = null;
  }var si,
      lg = "idToken",
      oi = new Pe(3E4, 6E4),
      pi = { "Content-Type": "application/x-www-form-urlencoded" },
      qi = new Pe(3E4, 6E4),
      ri = { "Content-Type": "application/json" };function ti(a, b) {
    b ? a.a["X-Firebase-Locale"] = b : delete a.a["X-Firebase-Locale"];
  }
  function ui(a, b) {
    b ? (a.a["X-Client-Version"] = b, a.g["X-Client-Version"] = b) : (delete a.a["X-Client-Version"], delete a.g["X-Client-Version"]);
  }ni.prototype.R = function () {
    return this.b;
  };function vi(a, b, c, d, e, f, g) {
    ke() || ze() ? a = t(a.o, a) : (si || (si = new B(function (h, m) {
      wi(h, m);
    })), a = t(a.m, a));a(b, c, d, e, f, g);
  }
  ni.prototype.o = function (a, b, c, d, e, f) {
    if (ze() && ("undefined" === typeof l.fetch || "undefined" === typeof l.Headers || "undefined" === typeof l.Request)) throw new M("operation-not-supported-in-this-environment", "fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var g = new Gh(this.f);if (f) {
      g.g = Math.max(0, f);var h = setTimeout(function () {
        g.dispatchEvent("timeout");
      }, f);
    }Zc(g, "complete", function () {
      h && clearTimeout(h);var m = null;try {
        m = JSON.parse(Uh(this)) || null;
      } catch (p) {
        m = null;
      }b && b(m);
    });ed(g, "ready", function () {
      h && clearTimeout(h);pc(this);
    });ed(g, "timeout", function () {
      h && clearTimeout(h);pc(this);b && b(null);
    });Kh(g, a, c, d, e);
  };var xi = new Xa(Ya, "https://apis.google.com/js/client.js?onload=%{onload}"),
      yi = "__fcb" + Math.floor(1E6 * Math.random()).toString();
  function wi(a, b) {
    if (((window.gapi || {}).client || {}).request) a();else {
      l[yi] = function () {
        ((window.gapi || {}).client || {}).request ? a() : b(Error("CORS_UNSUPPORTED"));
      };var c = eb(xi, { onload: yi });bi(gi(c), function () {
        b(Error("CORS_UNSUPPORTED"));
      });
    }
  }
  ni.prototype.m = function (a, b, c, d, e) {
    var f = this;si.then(function () {
      window.gapi.client.setApiKey(f.c);var g = window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({ path: a, method: c, body: d, headers: e, authType: "none", callback: function callback(h) {
          window.gapi.auth.setToken(g);b && b(h);
        } });
    }).s(function (g) {
      b && b({ error: { message: g && g.message || "CORS_UNSUPPORTED" } });
    });
  };
  function zi(a, b) {
    return new B(function (c, d) {
      "refresh_token" == b.grant_type && b.refresh_token || "authorization_code" == b.grant_type && b.code ? vi(a, a.l + "?key=" + encodeURIComponent(a.c), function (e) {
        e ? e.error ? d(Ai(e)) : e.access_token && e.refresh_token ? c(e) : d(new M("internal-error")) : d(new M("network-request-failed"));
      }, "POST", Pd(b).toString(), a.g, a.u.get()) : d(new M("internal-error"));
    });
  }
  function Bi(a, b, c, d, e, f) {
    var g = Ld(a.h + b);H(g, "key", a.c);f && H(g, "cb", ua().toString());var h = "GET" == c;if (h) for (var m in d) {
      d.hasOwnProperty(m) && H(g, m, d[m]);
    }return new B(function (p, u) {
      vi(a, g.toString(), function (A) {
        A ? A.error ? u(Ai(A, e || {})) : p(A) : u(new M("network-request-failed"));
      }, c, h ? void 0 : ae(Le(d)), a.a, a.i.get());
    });
  }function Ci(a) {
    a = a.email;if (!n(a) || !te.test(a)) throw new M("invalid-email");
  }function Di(a) {
    "email" in a && Ci(a);
  }
  function Ei(a, b) {
    return P(a, Fi, { identifier: b, continueUri: Ie() ? he() : "http://localhost" }).then(function (c) {
      return c.signinMethods || [];
    });
  }function Gi(a) {
    return P(a, Hi, {}).then(function (b) {
      return b.authorizedDomains || [];
    });
  }function Ii(a) {
    if (!a[lg]) throw new M("internal-error");
  }
  function Ji(a) {
    if (a.phoneNumber || a.temporaryProof) {
      if (!a.phoneNumber || !a.temporaryProof) throw new M("internal-error");
    } else {
      if (!a.sessionInfo) throw new M("missing-verification-id");if (!a.code) throw new M("missing-verification-code");
    }
  }ni.prototype.ob = function () {
    return P(this, Ki, {});
  };ni.prototype.rb = function (a, b) {
    return P(this, Li, { idToken: a, email: b });
  };ni.prototype.sb = function (a, b) {
    return P(this, Kg, { idToken: a, password: b });
  };var Mi = { displayName: "DISPLAY_NAME", photoUrl: "PHOTO_URL" };k = ni.prototype;
  k.tb = function (a, b) {
    var c = { idToken: a },
        d = [];Sa(Mi, function (e, f) {
      var g = b[f];null === g ? d.push(e) : f in b && (c[f] = g);
    });d.length && (c.deleteAttribute = d);return P(this, Li, c);
  };k.kb = function (a, b) {
    a = { requestType: "PASSWORD_RESET", email: a };Wa(a, b);return P(this, Ni, a);
  };k.lb = function (a, b) {
    a = { requestType: "EMAIL_SIGNIN", email: a };Wa(a, b);return P(this, Oi, a);
  };k.jb = function (a, b) {
    a = { requestType: "VERIFY_EMAIL", idToken: a };Wa(a, b);return P(this, Pi, a);
  };function Ug(a, b) {
    return P(a, Qi, b);
  }k.Va = function (a) {
    return P(this, Ri, a);
  };
  function Si(a, b, c) {
    return P(a, Ti, { idToken: b, deleteProvider: c });
  }function Ui(a) {
    if (!a.requestUri || !a.sessionId && !a.postBody && !a.pendingToken) throw new M("internal-error");
  }function Vi(a, b) {
    b.oauthIdToken && b.providerId && 0 == b.providerId.indexOf("oidc.") && !b.pendingToken && (a.sessionId ? b.nonce = a.sessionId : a.postBody && (a = new Cd(a.postBody), Td(a, "nonce") && (b.nonce = a.get("nonce"))));return b;
  }
  function Wi(a) {
    var b = null;a.needConfirmation ? (a.code = "account-exists-with-different-credential", b = eh(a)) : "FEDERATED_USER_ID_ALREADY_LINKED" == a.errorMessage ? (a.code = "credential-already-in-use", b = eh(a)) : "EMAIL_EXISTS" == a.errorMessage ? (a.code = "email-already-in-use", b = eh(a)) : a.errorMessage && (b = Xi(a.errorMessage));if (b) throw b;if (!a[lg]) throw new M("internal-error");
  }function ng(a, b) {
    b.returnIdpCredential = !0;return P(a, Yi, b);
  }function pg(a, b) {
    b.returnIdpCredential = !0;return P(a, Zi, b);
  }
  function qg(a, b) {
    b.returnIdpCredential = !0;b.autoCreate = !1;return P(a, $i, b);
  }function aj(a) {
    if (!a.oobCode) throw new M("invalid-action-code");
  }k.$a = function (a, b) {
    return P(this, bj, { oobCode: a, newPassword: b });
  };k.Ka = function (a) {
    return P(this, cj, { oobCode: a });
  };k.Xa = function (a) {
    return P(this, dj, { oobCode: a });
  };
  var dj = { endpoint: "setAccountInfo", D: aj, fa: "email", F: !0 },
      cj = { endpoint: "resetPassword", D: aj, K: function K(a) {
      var b = a.requestType;if (!b || !a.email && "EMAIL_SIGNIN" != b) throw new M("internal-error");
    }, F: !0 },
      ej = { endpoint: "signupNewUser", D: function D(a) {
      Ci(a);if (!a.password) throw new M("weak-password");
    }, K: Ii, T: !0, F: !0 },
      Fi = { endpoint: "createAuthUri", F: !0 },
      fj = { endpoint: "deleteAccount", V: ["idToken"] },
      Ti = { endpoint: "setAccountInfo", V: ["idToken", "deleteProvider"], D: function D(a) {
      if (!na(a.deleteProvider)) throw new M("internal-error");
    } },
      Hg = { endpoint: "emailLinkSignin", V: ["email", "oobCode"], D: Ci, K: Ii, T: !0, F: !0 },
      Jg = { endpoint: "emailLinkSignin", V: ["idToken", "email", "oobCode"], D: Ci, K: Ii, T: !0 },
      gj = { endpoint: "getAccountInfo" },
      Oi = { endpoint: "getOobConfirmationCode", V: ["requestType"], D: function D(a) {
      if ("EMAIL_SIGNIN" != a.requestType) throw new M("internal-error");Ci(a);
    }, fa: "email", F: !0 },
      Pi = { endpoint: "getOobConfirmationCode", V: ["idToken", "requestType"], D: function D(a) {
      if ("VERIFY_EMAIL" != a.requestType) throw new M("internal-error");
    }, fa: "email", F: !0 },
      Ni = { endpoint: "getOobConfirmationCode", V: ["requestType"], D: function D(a) {
      if ("PASSWORD_RESET" != a.requestType) throw new M("internal-error");Ci(a);
    }, fa: "email", F: !0 },
      Hi = { wb: !0, endpoint: "getProjectConfig", Kb: "GET" },
      hj = { wb: !0, endpoint: "getRecaptchaParam", Kb: "GET", K: function K(a) {
      if (!a.recaptchaSiteKey) throw new M("internal-error");
    } },
      bj = { endpoint: "resetPassword", D: aj, fa: "email", F: !0 },
      Qi = { endpoint: "sendVerificationCode", V: ["phoneNumber", "recaptchaToken"], fa: "sessionInfo", F: !0 },
      Li = { endpoint: "setAccountInfo", V: ["idToken"],
    D: Di, T: !0 },
      Kg = { endpoint: "setAccountInfo", V: ["idToken"], D: function D(a) {
      Di(a);if (!a.password) throw new M("weak-password");
    }, K: Ii, T: !0 },
      Ki = { endpoint: "signupNewUser", K: Ii, T: !0, F: !0 },
      Yi = { endpoint: "verifyAssertion", D: Ui, Qa: Vi, K: Wi, T: !0, F: !0 },
      $i = { endpoint: "verifyAssertion", D: Ui, Qa: Vi, K: function K(a) {
      if (a.errorMessage && "USER_NOT_FOUND" == a.errorMessage) throw new M("user-not-found");if (a.errorMessage) throw Xi(a.errorMessage);if (!a[lg]) throw new M("internal-error");
    }, T: !0, F: !0 },
      Zi = { endpoint: "verifyAssertion", D: function D(a) {
      Ui(a);
      if (!a.idToken) throw new M("internal-error");
    }, Qa: Vi, K: Wi, T: !0 },
      ij = { endpoint: "verifyCustomToken", D: function D(a) {
      if (!a.token) throw new M("invalid-custom-token");
    }, K: Ii, T: !0, F: !0 },
      Ig = { endpoint: "verifyPassword", D: function D(a) {
      Ci(a);if (!a.password) throw new M("wrong-password");
    }, K: Ii, T: !0, F: !0 },
      Ri = { endpoint: "verifyPhoneNumber", D: Ji, K: Ii, F: !0 },
      Qg = { endpoint: "verifyPhoneNumber", D: function D(a) {
      if (!a.idToken) throw new M("internal-error");Ji(a);
    }, K: function K(a) {
      if (a.temporaryProof) throw a.code = "credential-already-in-use", eh(a);Ii(a);
    } },
      Rg = { Yb: { USER_NOT_FOUND: "user-not-found" }, endpoint: "verifyPhoneNumber", D: Ji, K: Ii, F: !0 };
  function P(a, b, c) {
    if (!bf(c, b.V)) return E(new M("internal-error"));var d = b.Kb || "POST",
        e;return D(c).then(b.D).then(function () {
      b.T && (c.returnSecureToken = !0);b.F && a.b && "undefined" === typeof c.tenantId && (c.tenantId = a.b);return Bi(a, b.endpoint, d, c, b.Yb, b.wb || !1);
    }).then(function (f) {
      e = f;return b.Qa ? b.Qa(c, e) : e;
    }).then(b.K).then(function () {
      if (!b.fa) return e;if (!(b.fa in e)) throw new M("internal-error");return e[b.fa];
    });
  }function Xi(a) {
    return Ai({ error: { errors: [{ message: a }], code: 400, message: a } });
  }
  function Ai(a, b) {
    var c = (a.error && a.error.errors && a.error.errors[0] || {}).reason || "";var d = { keyInvalid: "invalid-api-key", ipRefererBlocked: "app-not-authorized" };if (c = d[c] ? new M(d[c]) : null) return c;c = a.error && a.error.message || "";d = { INVALID_CUSTOM_TOKEN: "invalid-custom-token", CREDENTIAL_MISMATCH: "custom-token-mismatch", MISSING_CUSTOM_TOKEN: "internal-error", INVALID_IDENTIFIER: "invalid-email", MISSING_CONTINUE_URI: "internal-error", INVALID_EMAIL: "invalid-email", INVALID_PASSWORD: "wrong-password", USER_DISABLED: "user-disabled",
      MISSING_PASSWORD: "internal-error", EMAIL_EXISTS: "email-already-in-use", PASSWORD_LOGIN_DISABLED: "operation-not-allowed", INVALID_IDP_RESPONSE: "invalid-credential", INVALID_PENDING_TOKEN: "invalid-credential", FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use", MISSING_OR_INVALID_NONCE: "missing-or-invalid-nonce", INVALID_MESSAGE_PAYLOAD: "invalid-message-payload", INVALID_RECIPIENT_EMAIL: "invalid-recipient-email", INVALID_SENDER: "invalid-sender", EMAIL_NOT_FOUND: "user-not-found", RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
      EXPIRED_OOB_CODE: "expired-action-code", INVALID_OOB_CODE: "invalid-action-code", MISSING_OOB_CODE: "internal-error", INVALID_PROVIDER_ID: "invalid-provider-id", CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login", INVALID_ID_TOKEN: "invalid-user-token", TOKEN_EXPIRED: "user-token-expired", USER_NOT_FOUND: "user-token-expired", CORS_UNSUPPORTED: "cors-unsupported", DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated", INVALID_APP_ID: "invalid-app-id", TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests", WEAK_PASSWORD: "weak-password",
      OPERATION_NOT_ALLOWED: "operation-not-allowed", USER_CANCELLED: "user-cancelled", CAPTCHA_CHECK_FAILED: "captcha-check-failed", INVALID_APP_CREDENTIAL: "invalid-app-credential", INVALID_CODE: "invalid-verification-code", INVALID_PHONE_NUMBER: "invalid-phone-number", INVALID_SESSION_INFO: "invalid-verification-id", INVALID_TEMPORARY_PROOF: "invalid-credential", MISSING_APP_CREDENTIAL: "missing-app-credential", MISSING_CODE: "missing-verification-code", MISSING_PHONE_NUMBER: "missing-phone-number", MISSING_SESSION_INFO: "missing-verification-id",
      QUOTA_EXCEEDED: "quota-exceeded", SESSION_EXPIRED: "code-expired", REJECTED_CREDENTIAL: "rejected-credential", INVALID_CONTINUE_URI: "invalid-continue-uri", MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name", MISSING_IOS_BUNDLE_ID: "missing-ios-bundle-id", UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri", INVALID_DYNAMIC_LINK_DOMAIN: "invalid-dynamic-link-domain", INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id", INVALID_CERT_HASH: "invalid-cert-hash", UNSUPPORTED_TENANT_OPERATION: "unsupported-tenant-operation",
      INVALID_TENANT_ID: "invalid-tenant-id", ADMIN_ONLY_OPERATION: "admin-restricted-operation" };Wa(d, b || {});b = (b = c.match(/^[^\s]+\s*:\s*(.*)$/)) && 1 < b.length ? b[1] : void 0;for (var e in d) {
      if (0 === c.indexOf(e)) return new M(d[e], b);
    }!b && a && (b = Ke(a));return new M("internal-error", b);
  };function jj(a) {
    this.b = a;this.a = null;this.fb = kj(this);
  }
  function kj(a) {
    return lj().then(function () {
      return new B(function (b, c) {
        J("gapi.iframes.getContext")().open({ where: document.body, url: a.b, messageHandlersFilter: J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"), attributes: { style: { position: "absolute", top: "-100px", width: "1px", height: "1px" } }, dontclear: !0 }, function (d) {
          function e() {
            clearTimeout(f);b();
          }a.a = d;a.a.restyle({ setHideOnLeave: !1 });var f = setTimeout(function () {
            c(Error("Network Error"));
          }, mj.get());d.ping(e).then(e, function () {
            c(Error("Network Error"));
          });
        });
      });
    });
  }
  function nj(a, b) {
    return a.fb.then(function () {
      return new B(function (c) {
        a.a.send(b.type, b, c, J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
      });
    });
  }function oj(a, b) {
    a.fb.then(function () {
      a.a.register("authEvent", b, J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
    });
  }var pj = new Xa(Ya, "https://apis.google.com/js/api.js?onload=%{onload}"),
      qj = new Pe(3E4, 6E4),
      mj = new Pe(5E3, 15E3),
      rj = null;
  function lj() {
    return rj ? rj : rj = new B(function (a, b) {
      function c() {
        Oe();J("gapi.load")("gapi.iframes", { callback: a, ontimeout: function ontimeout() {
            Oe();b(Error("Network Error"));
          }, timeout: qj.get() });
      }if (J("gapi.iframes.Iframe")) a();else if (J("gapi.load")) c();else {
        var d = "__iframefcb" + Math.floor(1E6 * Math.random()).toString();l[d] = function () {
          J("gapi.load") ? c() : b(Error("Network Error"));
        };d = eb(pj, { onload: d });D(gi(d)).s(function () {
          b(Error("Network Error"));
        });
      }
    }).s(function (a) {
      rj = null;throw a;
    });
  };function sj(a, b, c) {
    this.i = a;this.g = b;this.h = c;this.f = null;this.a = Md(this.i, "/__/auth/iframe");H(this.a, "apiKey", this.g);H(this.a, "appName", this.h);this.b = null;this.c = [];
  }sj.prototype.toString = function () {
    this.f ? H(this.a, "v", this.f) : Sd(this.a.a, "v");this.b ? H(this.a, "eid", this.b) : Sd(this.a.a, "eid");this.c.length ? H(this.a, "fw", this.c.join(",")) : Sd(this.a.a, "fw");return this.a.toString();
  };function tj(a, b, c, d, e) {
    this.o = a;this.m = b;this.c = c;this.u = d;this.i = this.g = this.l = null;this.a = e;this.h = this.f = null;
  }
  tj.prototype.nb = function (a) {
    this.h = a;return this;
  };
  tj.prototype.toString = function () {
    var a = Md(this.o, "/__/auth/handler");H(a, "apiKey", this.m);H(a, "appName", this.c);H(a, "authType", this.u);if (this.a.isOAuthProvider) {
      var b = this.a;try {
        var c = index_esm["a" /* default */].app(this.c).auth().ha();
      } catch (h) {
        c = null;
      }b.ab = c;H(a, "providerId", this.a.providerId);b = this.a;c = Le(b.zb);for (var d in c) {
        c[d] = c[d].toString();
      }d = b.Fc;c = Ua(c);for (var e = 0; e < d.length; e++) {
        var f = d[e];f in c && delete c[f];
      }b.cb && b.ab && !c[b.cb] && (c[b.cb] = b.ab);Ta(c) || H(a, "customParameters", Ke(c));
    }"function" === typeof this.a.Hb && (b = this.a.Hb(), b.length && H(a, "scopes", b.join(",")));this.l ? H(a, "redirectUrl", this.l) : Sd(a.a, "redirectUrl");this.g ? H(a, "eventId", this.g) : Sd(a.a, "eventId");this.i ? H(a, "v", this.i) : Sd(a.a, "v");if (this.b) for (var g in this.b) {
      this.b.hasOwnProperty(g) && !Kd(a, g) && H(a, g, this.b[g]);
    }this.h ? H(a, "tid", this.h) : Sd(a.a, "tid");this.f ? H(a, "eid", this.f) : Sd(a.a, "eid");g = uj(this.c);g.length && H(a, "fw", g.join(","));return a.toString();
  };function uj(a) {
    try {
      return index_esm["a" /* default */].app(a).auth().Aa();
    } catch (b) {
      return [];
    }
  }
  function vj(a, b, c, d, e) {
    this.u = a;this.f = b;this.b = c;this.c = d || null;this.h = e || null;this.m = this.o = this.v = null;this.g = [];this.l = this.a = null;
  }
  function wj(a) {
    var b = he();return Gi(a).then(function (c) {
      a: {
        var d = Ld(b),
            e = d.f;d = d.b;for (var f = 0; f < c.length; f++) {
          var g = c[f];var h = d;var m = e;0 == g.indexOf("chrome-extension://") ? h = Ld(g).b == h && "chrome-extension" == m : "http" != m && "https" != m ? h = !1 : se.test(g) ? h = h == g : (g = g.split(".").join("\\."), h = new RegExp("^(.+\\." + g + "|" + g + ")$", "i").test(h));if (h) {
            c = !0;break a;
          }
        }c = !1;
      }if (!c) throw new ch(he());
    });
  }
  function xj(a) {
    if (a.l) return a.l;a.l = ue().then(function () {
      if (!a.o) {
        var b = a.c,
            c = a.h,
            d = uj(a.b),
            e = new sj(a.u, a.f, a.b);e.f = b;e.b = c;e.c = Ra(d || []);a.o = e.toString();
      }a.i = new jj(a.o);yj(a);
    });return a.l;
  }k = vj.prototype;k.Fb = function (a, b, c) {
    var d = new M("popup-closed-by-user"),
        e = new M("web-storage-unsupported"),
        f = this,
        g = !1;return this.ia().then(function () {
      zj(f).then(function (h) {
        h || (a && oe(a), b(e), g = !0);
      });
    }).s(function () {}).then(function () {
      if (!g) return re(a);
    }).then(function () {
      if (!g) return nd(c).then(function () {
        b(d);
      });
    });
  };
  k.Ob = function () {
    var a = I();return !Je(a) && !Ne(a);
  };k.Jb = function () {
    return !1;
  };
  k.Db = function (a, b, c, d, e, f, g, h) {
    if (!a) return E(new M("popup-blocked"));if (g && !Je()) return this.ia().s(function (p) {
      oe(a);e(p);
    }), d(), D();this.a || (this.a = wj(Aj(this)));var m = this;return this.a.then(function () {
      var p = m.ia().s(function (u) {
        oe(a);e(u);throw u;
      });d();return p;
    }).then(function () {
      Xg(c);if (!g) {
        var p = Bj(m.u, m.f, m.b, b, c, null, f, m.c, void 0, m.h, h);ie(p, a);
      }
    }).s(function (p) {
      "auth/network-request-failed" == p.code && (m.a = null);throw p;
    });
  };
  function Aj(a) {
    a.m || (a.v = a.c ? Ee(a.c, uj(a.b)) : null, a.m = new ni(a.f, Uf(a.h), a.v));return a.m;
  }k.Eb = function (a, b, c, d) {
    this.a || (this.a = wj(Aj(this)));var e = this;return this.a.then(function () {
      Xg(b);var f = Bj(e.u, e.f, e.b, a, b, he(), c, e.c, void 0, e.h, d);ie(f);
    }).s(function (f) {
      "auth/network-request-failed" == f.code && (e.a = null);throw f;
    });
  };k.ia = function () {
    var a = this;return xj(this).then(function () {
      return a.i.fb;
    }).s(function () {
      a.a = null;throw new M("network-request-failed");
    });
  };k.Rb = function () {
    return !0;
  };
  function Bj(a, b, c, d, e, f, g, h, m, p, u) {
    a = new tj(a, b, c, d, e);a.l = f;a.g = g;a.i = h;a.b = Ua(m || null);a.f = p;return a.nb(u).toString();
  }function yj(a) {
    if (!a.i) throw Error("IfcHandler must be initialized!");oj(a.i, function (b) {
      var c = {};if (b && b.authEvent) {
        var d = !1;b = Zg(b.authEvent);for (c = 0; c < a.g.length; c++) {
          d = a.g[c](b) || d;
        }c = {};c.status = d ? "ACK" : "ERROR";return D(c);
      }c.status = "ERROR";return D(c);
    });
  }
  function zj(a) {
    var b = { type: "webStorageSupport" };return xj(a).then(function () {
      return nj(a.i, b);
    }).then(function (c) {
      if (c && c.length && "undefined" !== typeof c[0].webStorageSupport) return c[0].webStorageSupport;throw Error();
    });
  }k.ya = function (a) {
    this.g.push(a);
  };k.La = function (a) {
    Pa(this.g, function (b) {
      return b == a;
    });
  };function Cj(a) {
    this.a = a || index_esm["a" /* default */].INTERNAL.reactNative && index_esm["a" /* default */].INTERNAL.reactNative.AsyncStorage;if (!this.a) throw new M("internal-error", "The React Native compatibility library was not found.");this.type = "asyncStorage";
  }k = Cj.prototype;k.get = function (a) {
    return D(this.a.getItem(a)).then(function (b) {
      return b && Me(b);
    });
  };k.set = function (a, b) {
    return D(this.a.setItem(a, Ke(b)));
  };k.S = function (a) {
    return D(this.a.removeItem(a));
  };k.$ = function () {};k.ea = function () {};function Dj(a) {
    this.b = a;this.a = {};this.f = t(this.c, this);
  }var Ej = [];function Fj() {
    var a = ze() ? self : null;x(Ej, function (c) {
      c.b == a && (b = c);
    });if (!b) {
      var b = new Dj(a);Ej.push(b);
    }return b;
  }
  Dj.prototype.c = function (a) {
    var b = a.data.eventType,
        c = a.data.eventId,
        d = this.a[b];if (d && 0 < d.length) {
      a.ports[0].postMessage({ status: "ack", eventId: c, eventType: b, response: null });var e = [];x(d, function (f) {
        e.push(D().then(function () {
          return f(a.origin, a.data.data);
        }));
      });bc(e).then(function (f) {
        var g = [];x(f, function (h) {
          g.push({ fulfilled: h.Gb, value: h.value, reason: h.reason ? h.reason.message : void 0 });
        });x(g, function (h) {
          for (var m in h) {
            "undefined" === typeof h[m] && delete h[m];
          }
        });a.ports[0].postMessage({ status: "done", eventId: c,
          eventType: b, response: g });
      });
    }
  };function Gj(a, b, c) {
    Ta(a.a) && a.b.addEventListener("message", a.f);"undefined" === typeof a.a[b] && (a.a[b] = []);a.a[b].push(c);
  };function Hj(a) {
    this.a = a;
  }Hj.prototype.postMessage = function (a, b) {
    this.a.postMessage(a, b);
  };function Ij(a) {
    this.c = a;this.b = !1;this.a = [];
  }
  function Jj(a, b, c, d) {
    var e,
        f = c || {},
        g,
        h,
        m,
        p = null;if (a.b) return E(Error("connection_unavailable"));var u = d ? 800 : 50,
        A = "undefined" !== typeof MessageChannel ? new MessageChannel() : null;return new B(function (C, N) {
      A ? (e = Math.floor(Math.random() * Math.pow(10, 20)).toString(), A.port1.start(), h = setTimeout(function () {
        N(Error("unsupported_event"));
      }, u), g = function g(wa) {
        wa.data.eventId === e && ("ack" === wa.data.status ? (clearTimeout(h), m = setTimeout(function () {
          N(Error("timeout"));
        }, 3E3)) : "done" === wa.data.status ? (clearTimeout(m), "undefined" !== typeof wa.data.response ? C(wa.data.response) : N(Error("unknown_error"))) : (clearTimeout(h), clearTimeout(m), N(Error("invalid_response"))));
      }, p = { messageChannel: A, onMessage: g }, a.a.push(p), A.port1.addEventListener("message", g), a.c.postMessage({ eventType: b, eventId: e, data: f }, [A.port2])) : N(Error("connection_unavailable"));
    }).then(function (C) {
      Kj(a, p);return C;
    }).s(function (C) {
      Kj(a, p);throw C;
    });
  }
  function Kj(a, b) {
    if (b) {
      var c = b.messageChannel,
          d = b.onMessage;c && (c.port1.removeEventListener("message", d), c.port1.close());Pa(a.a, function (e) {
        return e == b;
      });
    }
  }Ij.prototype.close = function () {
    for (; 0 < this.a.length;) {
      Kj(this, this.a[0]);
    }this.b = !0;
  };function Lj() {
    if (!Mj()) throw new M("web-storage-unsupported");this.c = {};this.a = [];this.b = 0;this.u = l.indexedDB;this.type = "indexedDB";this.g = this.l = this.f = this.i = null;this.o = !1;this.h = null;var a = this;ze() && self ? (this.l = Fj(), Gj(this.l, "keyChanged", function (b, c) {
      return Nj(a).then(function (d) {
        0 < d.length && x(a.a, function (e) {
          e(d);
        });return { keyProcessed: Na(d, c.key) };
      });
    }), Gj(this.l, "ping", function () {
      return D(["keyChanged"]);
    })) : Ve().then(function (b) {
      if (a.h = b) a.g = new Ij(new Hj(b)), Jj(a.g, "ping", null, !0).then(function (c) {
        c[0].fulfilled && Na(c[0].value, "keyChanged") && (a.o = !0);
      }).s(function () {});
    });
  }var Oj;function Pj(a) {
    return new B(function (b, c) {
      var d = a.u.deleteDatabase("firebaseLocalStorageDb");d.onsuccess = function () {
        b();
      };d.onerror = function (e) {
        c(Error(e.target.error));
      };
    });
  }
  function Qj(a) {
    return new B(function (b, c) {
      var d = a.u.open("firebaseLocalStorageDb", 1);d.onerror = function (e) {
        try {
          e.preventDefault();
        } catch (f) {}c(Error(e.target.error));
      };d.onupgradeneeded = function (e) {
        e = e.target.result;try {
          e.createObjectStore("firebaseLocalStorage", { keyPath: "fbase_key" });
        } catch (f) {
          c(f);
        }
      };d.onsuccess = function (e) {
        e = e.target.result;e.objectStoreNames.contains("firebaseLocalStorage") ? b(e) : Pj(a).then(function () {
          return Qj(a);
        }).then(function (f) {
          b(f);
        }).s(function (f) {
          c(f);
        });
      };
    });
  }
  function Rj(a) {
    a.m || (a.m = Qj(a));return a.m;
  }function Mj() {
    try {
      return !!l.indexedDB;
    } catch (a) {
      return !1;
    }
  }function Sj(a) {
    return a.objectStore("firebaseLocalStorage");
  }function Tj(a, b) {
    return a.transaction(["firebaseLocalStorage"], b ? "readwrite" : "readonly");
  }function Uj(a) {
    return new B(function (b, c) {
      a.onsuccess = function (d) {
        d && d.target ? b(d.target.result) : b();
      };a.onerror = function (d) {
        c(d.target.error);
      };
    });
  }k = Lj.prototype;
  k.set = function (a, b) {
    var c = !1,
        d,
        e = this;return Rj(this).then(function (f) {
      d = f;f = Sj(Tj(d, !0));return Uj(f.get(a));
    }).then(function (f) {
      var g = Sj(Tj(d, !0));if (f) return f.value = b, Uj(g.put(f));e.b++;c = !0;f = {};f.fbase_key = a;f.value = b;return Uj(g.add(f));
    }).then(function () {
      e.c[a] = b;return Vj(e, a);
    }).ka(function () {
      c && e.b--;
    });
  };function Vj(a, b) {
    return a.g && a.h && Ue() === a.h ? Jj(a.g, "keyChanged", { key: b }, a.o).then(function () {}).s(function () {}) : D();
  }
  k.get = function (a) {
    return Rj(this).then(function (b) {
      return Uj(Sj(Tj(b, !1)).get(a));
    }).then(function (b) {
      return b && b.value;
    });
  };k.S = function (a) {
    var b = !1,
        c = this;return Rj(this).then(function (d) {
      b = !0;c.b++;return Uj(Sj(Tj(d, !0))["delete"](a));
    }).then(function () {
      delete c.c[a];return Vj(c, a);
    }).ka(function () {
      b && c.b--;
    });
  };
  function Nj(a) {
    return Rj(a).then(function (b) {
      var c = Sj(Tj(b, !1));return c.getAll ? Uj(c.getAll()) : new B(function (d, e) {
        var f = [],
            g = c.openCursor();g.onsuccess = function (h) {
          (h = h.target.result) ? (f.push(h.value), h["continue"]()) : d(f);
        };g.onerror = function (h) {
          e(h.target.error);
        };
      });
    }).then(function (b) {
      var c = {},
          d = [];if (0 == a.b) {
        for (d = 0; d < b.length; d++) {
          c[b[d].fbase_key] = b[d].value;
        }d = je(a.c, c);a.c = c;
      }return d;
    });
  }k.$ = function (a) {
    0 == this.a.length && Wj(this);this.a.push(a);
  };
  k.ea = function (a) {
    Pa(this.a, function (b) {
      return b == a;
    });0 == this.a.length && Xj(this);
  };function Wj(a) {
    function b() {
      a.f = setTimeout(function () {
        a.i = Nj(a).then(function (c) {
          0 < c.length && x(a.a, function (d) {
            d(c);
          });
        }).then(function () {
          b();
        }).s(function (c) {
          "STOP_EVENT" != c.message && b();
        });
      }, 800);
    }Xj(a);b();
  }function Xj(a) {
    a.i && a.i.cancel("STOP_EVENT");a.f && (clearTimeout(a.f), a.f = null);
  };function Yj(a) {
    var b = this,
        c = null;this.a = [];this.type = "indexedDB";this.c = a;this.b = D().then(function () {
      if (Mj()) {
        var d = Ge(),
            e = "__sak" + d;Oj || (Oj = new Lj());c = Oj;return c.set(e, d).then(function () {
          return c.get(e);
        }).then(function (f) {
          if (f !== d) throw Error("indexedDB not supported!");return c.S(e);
        }).then(function () {
          return c;
        }).s(function () {
          return b.c;
        });
      }return b.c;
    }).then(function (d) {
      b.type = d.type;d.$(function (e) {
        x(b.a, function (f) {
          f(e);
        });
      });return d;
    });
  }k = Yj.prototype;k.get = function (a) {
    return this.b.then(function (b) {
      return b.get(a);
    });
  };
  k.set = function (a, b) {
    return this.b.then(function (c) {
      return c.set(a, b);
    });
  };k.S = function (a) {
    return this.b.then(function (b) {
      return b.S(a);
    });
  };k.$ = function (a) {
    this.a.push(a);
  };k.ea = function (a) {
    Pa(this.a, function (b) {
      return b == a;
    });
  };function Zj() {
    this.a = {};this.type = "inMemory";
  }k = Zj.prototype;k.get = function (a) {
    return D(this.a[a]);
  };k.set = function (a, b) {
    this.a[a] = b;return D();
  };k.S = function (a) {
    delete this.a[a];return D();
  };k.$ = function () {};k.ea = function () {};function ak() {
    if (!bk()) {
      if ("Node" == Ae()) throw new M("internal-error", "The LocalStorage compatibility library was not found.");throw new M("web-storage-unsupported");
    }this.a = ck() || index_esm["a" /* default */].INTERNAL.node.localStorage;this.type = "localStorage";
  }function ck() {
    try {
      var a = l.localStorage,
          b = Ge();a && (a.setItem(b, "1"), a.removeItem(b));return a;
    } catch (c) {
      return null;
    }
  }
  function bk() {
    var a = "Node" == Ae();a = ck() || a && index_esm["a" /* default */].INTERNAL.node && index_esm["a" /* default */].INTERNAL.node.localStorage;if (!a) return !1;try {
      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
    } catch (b) {
      return !1;
    }
  }k = ak.prototype;k.get = function (a) {
    var b = this;return D().then(function () {
      var c = b.a.getItem(a);return Me(c);
    });
  };k.set = function (a, b) {
    var c = this;return D().then(function () {
      var d = Ke(b);null === d ? c.S(a) : c.a.setItem(a, d);
    });
  };k.S = function (a) {
    var b = this;return D().then(function () {
      b.a.removeItem(a);
    });
  };
  k.$ = function (a) {
    l.window && Wc(l.window, "storage", a);
  };k.ea = function (a) {
    l.window && fd(l.window, "storage", a);
  };function dk() {
    this.type = "nullStorage";
  }k = dk.prototype;k.get = function () {
    return D(null);
  };k.set = function () {
    return D();
  };k.S = function () {
    return D();
  };k.$ = function () {};k.ea = function () {};function ek() {
    if (!fk()) {
      if ("Node" == Ae()) throw new M("internal-error", "The SessionStorage compatibility library was not found.");throw new M("web-storage-unsupported");
    }this.a = gk() || index_esm["a" /* default */].INTERNAL.node.sessionStorage;this.type = "sessionStorage";
  }function gk() {
    try {
      var a = l.sessionStorage,
          b = Ge();a && (a.setItem(b, "1"), a.removeItem(b));return a;
    } catch (c) {
      return null;
    }
  }
  function fk() {
    var a = "Node" == Ae();a = gk() || a && index_esm["a" /* default */].INTERNAL.node && index_esm["a" /* default */].INTERNAL.node.sessionStorage;if (!a) return !1;try {
      return a.setItem("__sak", "1"), a.removeItem("__sak"), !0;
    } catch (b) {
      return !1;
    }
  }k = ek.prototype;k.get = function (a) {
    var b = this;return D().then(function () {
      var c = b.a.getItem(a);return Me(c);
    });
  };k.set = function (a, b) {
    var c = this;return D().then(function () {
      var d = Ke(b);null === d ? c.S(a) : c.a.setItem(a, d);
    });
  };k.S = function (a) {
    var b = this;return D().then(function () {
      b.a.removeItem(a);
    });
  };k.$ = function () {};
  k.ea = function () {};function hk() {
    var a = {};a.Browser = ik;a.Node = jk;a.ReactNative = kk;a.Worker = lk;this.a = a[Ae()];
  }var mk,
      ik = { C: ak, Sa: ek },
      jk = { C: ak, Sa: ek },
      kk = { C: Cj, Sa: dk },
      lk = { C: ak, Sa: dk };var nk = { $c: "local", NONE: "none", bd: "session" };function ok(a) {
    var b = new M("invalid-persistence-type"),
        c = new M("unsupported-persistence-type");a: {
      for (d in nk) {
        if (nk[d] == a) {
          var d = !0;break a;
        }
      }d = !1;
    }if (!d || "string" !== typeof a) throw b;switch (Ae()) {case "ReactNative":
        if ("session" === a) throw c;break;case "Node":
        if ("none" !== a) throw c;break;default:
        if (!Fe() && "none" !== a) throw c;}
  }
  function pk() {
    var a = !Ne(I()) && ye() ? !0 : !1,
        b = Je(),
        c = Fe();this.m = a;this.h = b;this.l = c;this.a = {};mk || (mk = new hk());a = mk;try {
      this.g = !ge() && Te() || !l.indexedDB ? new a.a.C() : new Yj(ze() ? new Zj() : new a.a.C());
    } catch (d) {
      this.g = new Zj(), this.h = !0;
    }try {
      this.i = new a.a.Sa();
    } catch (d) {
      this.i = new Zj();
    }this.u = new Zj();this.f = t(this.Pb, this);this.b = {};
  }var qk;function rk() {
    qk || (qk = new pk());return qk;
  }function sk(a, b) {
    switch (b) {case "session":
        return a.i;case "none":
        return a.u;default:
        return a.g;}
  }
  function tk(a, b) {
    return "firebase:" + a.name + (b ? ":" + b : "");
  }function uk(a, b, c) {
    var d = tk(b, c),
        e = sk(a, b.C);return a.get(b, c).then(function (f) {
      var g = null;try {
        g = Me(l.localStorage.getItem(d));
      } catch (h) {}if (g && !f) return l.localStorage.removeItem(d), a.set(b, g, c);g && f && "localStorage" != e.type && l.localStorage.removeItem(d);
    });
  }k = pk.prototype;k.get = function (a, b) {
    return sk(this, a.C).get(tk(a, b));
  };function vk(a, b, c) {
    c = tk(b, c);"local" == b.C && (a.b[c] = null);return sk(a, b.C).S(c);
  }
  k.set = function (a, b, c) {
    var d = tk(a, c),
        e = this,
        f = sk(this, a.C);return f.set(d, b).then(function () {
      return f.get(d);
    }).then(function (g) {
      "local" == a.C && (e.b[d] = g);
    });
  };k.addListener = function (a, b, c) {
    a = tk(a, b);this.l && (this.b[a] = l.localStorage.getItem(a));Ta(this.a) && (sk(this, "local").$(this.f), this.h || (ge() || !Te()) && l.indexedDB || !this.l || wk(this));this.a[a] || (this.a[a] = []);this.a[a].push(c);
  };
  k.removeListener = function (a, b, c) {
    a = tk(a, b);this.a[a] && (Pa(this.a[a], function (d) {
      return d == c;
    }), 0 == this.a[a].length && delete this.a[a]);Ta(this.a) && (sk(this, "local").ea(this.f), xk(this));
  };function wk(a) {
    xk(a);a.c = setInterval(function () {
      for (var b in a.a) {
        var c = l.localStorage.getItem(b),
            d = a.b[b];c != d && (a.b[b] = c, c = new Kc({ type: "storage", key: b, target: window, oldValue: d, newValue: c, a: !0 }), a.Pb(c));
      }
    }, 1E3);
  }function xk(a) {
    a.c && (clearInterval(a.c), a.c = null);
  }
  k.Pb = function (a) {
    if (a && a.f) {
      var b = a.a.key;if (null == b) for (var c in this.a) {
        var d = this.b[c];"undefined" === typeof d && (d = null);var e = l.localStorage.getItem(c);e !== d && (this.b[c] = e, this.Za(c));
      } else if (0 == b.indexOf("firebase:") && this.a[b]) {
        "undefined" !== typeof a.a.a ? sk(this, "local").ea(this.f) : xk(this);if (this.m) if (c = l.localStorage.getItem(b), d = a.a.newValue, d !== c) null !== d ? l.localStorage.setItem(b, d) : l.localStorage.removeItem(b);else if (this.b[b] === d && "undefined" === typeof a.a.a) return;var f = this;c = function c() {
          if ("undefined" !== typeof a.a.a || f.b[b] !== l.localStorage.getItem(b)) f.b[b] = l.localStorage.getItem(b), f.Za(b);
        };uc && Fc && 10 == Fc && l.localStorage.getItem(b) !== a.a.newValue && a.a.newValue !== a.a.oldValue ? setTimeout(c, 10) : c();
      }
    } else x(a, t(this.Za, this));
  };k.Za = function (a) {
    this.a[a] && x(this.a[a], function (b) {
      b();
    });
  };function yk(a) {
    this.a = a;this.b = rk();
  }var zk = { name: "authEvent", C: "local" };function Ak(a) {
    return a.b.get(zk, a.a).then(function (b) {
      return Zg(b);
    });
  };function Bk() {
    this.a = rk();
  };function Ck() {
    this.b = -1;
  };function Dk(a, b) {
    this.b = Ek;this.f = l.Uint8Array ? new Uint8Array(this.b) : Array(this.b);this.g = this.c = 0;this.a = [];this.i = a;this.h = b;this.l = l.Int32Array ? new Int32Array(64) : Array(64);void 0 !== Fk || (l.Int32Array ? Fk = new Int32Array(Gk) : Fk = Gk);this.reset();
  }var Fk;v(Dk, Ck);for (var Ek = 64, Hk = Ek - 1, Ik = [], Jk = 0; Jk < Hk; Jk++) {
    Ik[Jk] = 0;
  }var Kk = Qa(128, Ik);Dk.prototype.reset = function () {
    this.g = this.c = 0;this.a = l.Int32Array ? new Int32Array(this.h) : Ra(this.h);
  };
  function Lk(a) {
    for (var b = a.f, c = a.l, d = 0, e = 0; e < b.length;) {
      c[d++] = b[e] << 24 | b[e + 1] << 16 | b[e + 2] << 8 | b[e + 3], e = 4 * d;
    }for (b = 16; 64 > b; b++) {
      e = c[b - 15] | 0;d = c[b - 2] | 0;var f = (c[b - 16] | 0) + ((e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3) | 0,
          g = (c[b - 7] | 0) + ((d >>> 17 | d << 15) ^ (d >>> 19 | d << 13) ^ d >>> 10) | 0;c[b] = f + g | 0;
    }d = a.a[0] | 0;e = a.a[1] | 0;var h = a.a[2] | 0,
        m = a.a[3] | 0,
        p = a.a[4] | 0,
        u = a.a[5] | 0,
        A = a.a[6] | 0;f = a.a[7] | 0;for (b = 0; 64 > b; b++) {
      var C = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & e ^ d & h ^ e & h) | 0;g = p & u ^ ~p & A;f = f + ((p >>> 6 | p << 26) ^ (p >>> 11 | p << 21) ^ (p >>> 25 | p << 7)) | 0;g = g + (Fk[b] | 0) | 0;g = f + (g + (c[b] | 0) | 0) | 0;f = A;A = u;u = p;p = m + g | 0;m = h;h = e;e = d;d = g + C | 0;
    }a.a[0] = a.a[0] + d | 0;a.a[1] = a.a[1] + e | 0;a.a[2] = a.a[2] + h | 0;a.a[3] = a.a[3] + m | 0;a.a[4] = a.a[4] + p | 0;a.a[5] = a.a[5] + u | 0;a.a[6] = a.a[6] + A | 0;a.a[7] = a.a[7] + f | 0;
  }
  function Mk(a, b, c) {
    void 0 === c && (c = b.length);var d = 0,
        e = a.c;if (n(b)) for (; d < c;) {
      a.f[e++] = b.charCodeAt(d++), e == a.b && (Lk(a), e = 0);
    } else if (oa(b)) for (; d < c;) {
      var f = b[d++];if (!("number" == typeof f && 0 <= f && 255 >= f && f == (f | 0))) throw Error("message must be a byte array");a.f[e++] = f;e == a.b && (Lk(a), e = 0);
    } else throw Error("message must be string or array");a.c = e;a.g += c;
  }
  var Gk = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];function Nk() {
    Dk.call(this, 8, Ok);
  }v(Nk, Dk);var Ok = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];function Pk(a, b, c, d, e) {
    this.u = a;this.i = b;this.l = c;this.m = d || null;this.o = e || null;this.h = b + ":" + c;this.v = new Bk();this.g = new yk(this.h);this.f = null;this.b = [];this.a = this.c = null;
  }function Qk(a) {
    return new M("invalid-cordova-configuration", a);
  }k = Pk.prototype;
  k.ia = function () {
    return this.Ba ? this.Ba : this.Ba = ve().then(function () {
      if ("function" !== typeof J("universalLinks.subscribe", l)) throw Qk("cordova-universal-links-plugin-fix is not installed");if ("undefined" === typeof J("BuildInfo.packageName", l)) throw Qk("cordova-plugin-buildinfo is not installed");if ("function" !== typeof J("cordova.plugins.browsertab.openUrl", l)) throw Qk("cordova-plugin-browsertab is not installed");if ("function" !== typeof J("cordova.InAppBrowser.open", l)) throw Qk("cordova-plugin-inappbrowser is not installed");
    }, function () {
      throw new M("cordova-not-ready");
    });
  };function Rk() {
    for (var a = 20, b = []; 0 < a;) {
      b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), a--;
    }return b.join("");
  }function Sk(a) {
    var b = new Nk();Mk(b, a);a = [];var c = 8 * b.g;56 > b.c ? Mk(b, Kk, 56 - b.c) : Mk(b, Kk, b.b - (b.c - 56));for (var d = 63; 56 <= d; d--) {
      b.f[d] = c & 255, c /= 256;
    }Lk(b);for (d = c = 0; d < b.i; d++) {
      for (var e = 24; 0 <= e; e -= 8) {
        a[c++] = b.a[d] >> e & 255;
      }
    }return Kf(a);
  }
  k.Fb = function (a, b) {
    b(new M("operation-not-supported-in-this-environment"));return D();
  };k.Db = function () {
    return E(new M("operation-not-supported-in-this-environment"));
  };k.Rb = function () {
    return !1;
  };k.Ob = function () {
    return !0;
  };k.Jb = function () {
    return !0;
  };
  k.Eb = function (a, b, c, d) {
    if (this.c) return E(new M("redirect-operation-pending"));var e = this,
        f = l.document,
        g = null,
        h = null,
        m = null,
        p = null;return this.c = D().then(function () {
      Xg(b);return Tk(e);
    }).then(function () {
      return Uk(e, a, b, c, d);
    }).then(function () {
      return new B(function (u, A) {
        h = function h() {
          var C = J("cordova.plugins.browsertab.close", l);u();"function" === typeof C && C();e.a && "function" === typeof e.a.close && (e.a.close(), e.a = null);return !1;
        };e.ya(h);m = function m() {
          g || (g = nd(2E3).then(function () {
            A(new M("redirect-cancelled-by-user"));
          }));
        };
        p = function p() {
          Qe() && m();
        };f.addEventListener("resume", m, !1);I().toLowerCase().match(/android/) || f.addEventListener("visibilitychange", p, !1);
      }).s(function (u) {
        return Vk(e).then(function () {
          throw u;
        });
      });
    }).ka(function () {
      m && f.removeEventListener("resume", m, !1);p && f.removeEventListener("visibilitychange", p, !1);g && g.cancel();h && e.La(h);e.c = null;
    });
  };
  function Uk(a, b, c, d, e) {
    var f = Rk(),
        g = new Yg(b, d, null, f, new M("no-auth-event"), null, e),
        h = J("BuildInfo.packageName", l);if ("string" !== typeof h) throw new M("invalid-cordova-configuration");var m = J("BuildInfo.displayName", l),
        p = {};if (I().toLowerCase().match(/iphone|ipad|ipod/)) p.ibi = h;else if (I().toLowerCase().match(/android/)) p.apn = h;else return E(new M("operation-not-supported-in-this-environment"));m && (p.appDisplayName = m);f = Sk(f);p.sessionId = f;var u = Bj(a.u, a.i, a.l, b, c, null, d, a.m, p, a.o, e);return a.ia().then(function () {
      var A = a.h;return a.v.a.set(zk, g.A(), A);
    }).then(function () {
      var A = J("cordova.plugins.browsertab.isAvailable", l);if ("function" !== typeof A) throw new M("invalid-cordova-configuration");var C = null;A(function (N) {
        if (N) {
          C = J("cordova.plugins.browsertab.openUrl", l);if ("function" !== typeof C) throw new M("invalid-cordova-configuration");C(u);
        } else {
          C = J("cordova.InAppBrowser.open", l);if ("function" !== typeof C) throw new M("invalid-cordova-configuration");N = I();a.a = C(u, N.match(/(iPad|iPhone|iPod).*OS 7_\d/i) || N.match(/(iPad|iPhone|iPod).*OS 8_\d/i) ? "_blank" : "_system", "location=yes");
        }
      });
    });
  }function Wk(a, b) {
    for (var c = 0; c < a.b.length; c++) {
      try {
        a.b[c](b);
      } catch (d) {}
    }
  }function Tk(a) {
    a.f || (a.f = a.ia().then(function () {
      return new B(function (b) {
        function c(d) {
          b(d);a.La(c);return !1;
        }a.ya(c);Xk(a);
      });
    }));return a.f;
  }function Vk(a) {
    var b = null;return Ak(a.g).then(function (c) {
      b = c;c = a.g;return vk(c.b, zk, c.a);
    }).then(function () {
      return b;
    });
  }
  function Xk(a) {
    function b(g) {
      d = !0;e && e.cancel();Vk(a).then(function (h) {
        var m = c;if (h && g && g.url) {
          var p = null;m = ig(g.url);-1 != m.indexOf("/__/auth/callback") && (p = Ld(m), p = Me(Kd(p, "firebaseError") || null), p = (p = "object" === typeof p ? pf(p) : null) ? new Yg(h.c, h.b, null, null, p, null, h.R()) : new Yg(h.c, h.b, m, h.f, null, null, h.R()));m = p || c;
        }Wk(a, m);
      });
    }var c = new Yg("unknown", null, null, null, new M("no-auth-event")),
        d = !1,
        e = nd(500).then(function () {
      return Vk(a).then(function () {
        d || Wk(a, c);
      });
    }),
        f = l.handleOpenURL;l.handleOpenURL = function (g) {
      0 == g.toLowerCase().indexOf(J("BuildInfo.packageName", l).toLowerCase() + "://") && b({ url: g });if ("function" === typeof f) try {
        f(g);
      } catch (h) {
        console.error(h);
      }
    };ah || (ah = new $g());bh(b);
  }k.ya = function (a) {
    this.b.push(a);Tk(this).s(function (b) {
      "auth/invalid-cordova-configuration" === b.code && (b = new Yg("unknown", null, null, null, new M("no-auth-event")), a(b));
    });
  };k.La = function (a) {
    Pa(this.b, function (b) {
      return b == a;
    });
  };function Yk(a) {
    this.a = a;this.b = rk();
  }var Zk = { name: "pendingRedirect", C: "session" };function $k(a) {
    return a.b.set(Zk, "pending", a.a);
  }function al(a) {
    return vk(a.b, Zk, a.a);
  }function bl(a) {
    return a.b.get(Zk, a.a).then(function (b) {
      return "pending" == b;
    });
  };function cl(a, b, c) {
    this.i = {};this.v = 0;this.B = a;this.u = b;this.m = c;this.h = [];this.f = !1;this.l = t(this.o, this);this.b = new dl();this.w = new el();this.g = new Yk(this.u + ":" + this.m);this.c = {};this.c.unknown = this.b;this.c.signInViaRedirect = this.b;this.c.linkViaRedirect = this.b;this.c.reauthViaRedirect = this.b;this.c.signInViaPopup = this.w;this.c.linkViaPopup = this.w;this.c.reauthViaPopup = this.w;this.a = fl(this.B, this.u, this.m, Vf);
  }
  function fl(a, b, c, d) {
    var e = index_esm["a" /* default */].SDK_VERSION || null;return we() ? new Pk(a, b, c, e, d) : new vj(a, b, c, e, d);
  }cl.prototype.reset = function () {
    this.f = !1;this.a.La(this.l);this.a = fl(this.B, this.u, this.m);this.i = {};
  };function gl(a) {
    a.f || (a.f = !0, a.a.ya(a.l));var b = a.a;return a.a.ia().s(function (c) {
      a.a == b && a.reset();throw c;
    });
  }function hl(a) {
    a.a.Ob() && gl(a).s(function (b) {
      var c = new Yg("unknown", null, null, null, new M("operation-not-supported-in-this-environment"));il(b) && a.o(c);
    });a.a.Jb() || jl(a.b);
  }
  function kl(a, b) {
    Na(a.h, b) || a.h.push(b);a.f || bl(a.g).then(function (c) {
      c ? al(a.g).then(function () {
        gl(a).s(function (d) {
          var e = new Yg("unknown", null, null, null, new M("operation-not-supported-in-this-environment"));il(d) && a.o(e);
        });
      }) : hl(a);
    }).s(function () {
      hl(a);
    });
  }function ll(a, b) {
    Pa(a.h, function (c) {
      return c == b;
    });
  }
  cl.prototype.o = function (a) {
    if (!a) throw new M("invalid-auth-event");6E5 <= ua() - this.v && (this.i = {}, this.v = 0);if (a && a.getUid() && this.i.hasOwnProperty(a.getUid())) return !1;for (var b = !1, c = 0; c < this.h.length; c++) {
      var d = this.h[c];if (d.xb(a.c, a.b)) {
        if (b = this.c[a.c]) b.h(a, d), a && (a.f || a.b) && (this.i[a.getUid()] = !0, this.v = ua());b = !0;break;
      }
    }jl(this.b);return b;
  };var ml = new Pe(2E3, 1E4),
      nl = new Pe(3E4, 6E4);cl.prototype.oa = function () {
    return this.b.oa();
  };
  function ol(a, b, c, d, e, f, g) {
    return a.a.Db(b, c, d, function () {
      a.f || (a.f = !0, a.a.ya(a.l));
    }, function () {
      a.reset();
    }, e, f, g);
  }function il(a) {
    return a && "auth/cordova-not-ready" == a.code ? !0 : !1;
  }
  function pl(a, b, c, d, e) {
    var f;return $k(a.g).then(function () {
      return a.a.Eb(b, c, d, e).s(function (g) {
        if (il(g)) throw new M("operation-not-supported-in-this-environment");f = g;return al(a.g).then(function () {
          throw f;
        });
      }).then(function () {
        return a.a.Rb() ? new B(function () {}) : al(a.g).then(function () {
          return a.oa();
        }).then(function () {}).s(function () {});
      });
    });
  }function ql(a, b, c, d, e) {
    return a.a.Fb(d, function (f) {
      b.ja(c, null, f, e);
    }, ml.get());
  }var rl = {};
  function sl(a, b, c) {
    var d = b + ":" + c;rl[d] || (rl[d] = new cl(a, b, c));return rl[d];
  }function dl() {
    this.b = null;this.f = [];this.c = [];this.a = null;this.i = this.g = !1;
  }dl.prototype.reset = function () {
    this.b = null;this.a && (this.a.cancel(), this.a = null);
  };
  dl.prototype.h = function (a, b) {
    if (a) {
      this.reset();this.g = !0;var c = a.c,
          d = a.b,
          e = a.a && "auth/web-storage-unsupported" == a.a.code,
          f = a.a && "auth/operation-not-supported-in-this-environment" == a.a.code;this.i = !(!e && !f);"unknown" != c || e || f ? a.a ? (tl(this, !0, null, a.a), D()) : b.za(c, d) ? ul(this, a, b) : E(new M("invalid-auth-event")) : (tl(this, !1, null, null), D());
    } else E(new M("invalid-auth-event"));
  };function jl(a) {
    a.g || (a.g = !0, tl(a, !1, null, null));
  }function vl(a) {
    a.g && !a.i && tl(a, !1, null, null);
  }
  function ul(a, b, c) {
    c = c.za(b.c, b.b);var d = b.g,
        e = b.f,
        f = b.i,
        g = b.R(),
        h = !!b.c.match(/Redirect$/);c(d, e, g, f).then(function (m) {
      tl(a, h, m, null);
    }).s(function (m) {
      tl(a, h, null, m);
    });
  }function wl(a, b) {
    a.b = function () {
      return E(b);
    };if (a.c.length) for (var c = 0; c < a.c.length; c++) {
      a.c[c](b);
    }
  }function xl(a, b) {
    a.b = function () {
      return D(b);
    };if (a.f.length) for (var c = 0; c < a.f.length; c++) {
      a.f[c](b);
    }
  }function tl(a, b, c, d) {
    b ? d ? wl(a, d) : xl(a, c) : xl(a, { user: null });a.f = [];a.c = [];
  }
  dl.prototype.oa = function () {
    var a = this;return new B(function (b, c) {
      a.b ? a.b().then(b, c) : (a.f.push(b), a.c.push(c), yl(a));
    });
  };function yl(a) {
    var b = new M("timeout");a.a && a.a.cancel();a.a = nd(nl.get()).then(function () {
      a.b || (a.g = !0, tl(a, !0, null, b));
    });
  }function el() {}el.prototype.h = function (a, b) {
    if (a) {
      var c = a.c,
          d = a.b;a.a ? (b.ja(a.c, null, a.a, a.b), D()) : b.za(c, d) ? zl(a, b) : E(new M("invalid-auth-event"));
    } else E(new M("invalid-auth-event"));
  };
  function zl(a, b) {
    var c = a.b,
        d = a.c;b.za(d, c)(a.g, a.f, a.R(), a.i).then(function (e) {
      b.ja(d, e, null, c);
    }).s(function (e) {
      b.ja(d, null, e, c);
    });
  };function Al() {
    this.vb = !1;Object.defineProperty(this, "appVerificationDisabled", { get: function get() {
        return this.vb;
      }, set: function set(a) {
        this.vb = a;
      }, enumerable: !1 });
  };function Bl(a, b) {
    this.a = b;K(this, "verificationId", a);
  }Bl.prototype.confirm = function (a) {
    a = Vg(this.verificationId, a);return this.a(a);
  };function Cl(a, b, c, d) {
    return new Tg(a).Va(b, c).then(function (e) {
      return new Bl(e, d);
    });
  };function Dl(a) {
    var b = Sf(a);if (!(b && b.exp && b.auth_time && b.iat)) throw new M("internal-error", "An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");L(this, { token: a, expirationTime: Se(1E3 * b.exp), authTime: Se(1E3 * b.auth_time), issuedAtTime: Se(1E3 * b.iat), signInProvider: b.firebase && b.firebase.sign_in_provider ? b.firebase.sign_in_provider : null, claims: b });
  };function El(a, b, c) {
    this.h = a;this.i = b;this.g = c;this.c = 3E4;this.f = 96E4;this.b = null;this.a = this.c;if (this.f < this.c) throw Error("Proactive refresh lower bound greater than upper bound!");
  }El.prototype.start = function () {
    this.a = this.c;Fl(this, !0);
  };function Gl(a, b) {
    if (b) return a.a = a.c, a.g();b = a.a;a.a *= 2;a.a > a.f && (a.a = a.f);return b;
  }function Fl(a, b) {
    a.stop();a.b = nd(Gl(a, b)).then(function () {
      return Re();
    }).then(function () {
      return a.h();
    }).then(function () {
      Fl(a, !0);
    }).s(function (c) {
      a.i(c) && Fl(a, !1);
    });
  }
  El.prototype.stop = function () {
    this.b && (this.b.cancel(), this.b = null);
  };function Hl(a) {
    this.f = a;this.b = this.a = null;this.c = 0;
  }Hl.prototype.A = function () {
    return { apiKey: this.f.c, refreshToken: this.a, accessToken: this.b, expirationTime: this.c };
  };function Il(a, b) {
    var c = b[lg],
        d = b.refreshToken;b = Jl(b.expiresIn);a.b = c;a.c = b;a.a = d;
  }function Kl(a, b) {
    a.b = b.b;a.a = b.a;a.c = b.c;
  }function Jl(a) {
    return ua() + 1E3 * parseInt(a, 10);
  }
  function Ll(a, b) {
    return zi(a.f, b).then(function (c) {
      a.b = c.access_token;a.c = Jl(c.expires_in);a.a = c.refresh_token;return { accessToken: a.b, expirationTime: a.c, refreshToken: a.a };
    }).s(function (c) {
      "auth/user-token-expired" == c.code && (a.a = null);throw c;
    });
  }Hl.prototype.getToken = function (a) {
    a = !!a;return this.b && !this.a ? E(new M("user-token-expired")) : a || !this.b || ua() > this.c - 3E4 ? this.a ? Ll(this, { grant_type: "refresh_token", refresh_token: this.a }) : D(null) : D({ accessToken: this.b, expirationTime: this.c, refreshToken: this.a });
  };function Ml(a, b) {
    this.a = a || null;this.b = b || null;L(this, { lastSignInTime: Se(b || null), creationTime: Se(a || null) });
  }function Nl(a) {
    return new Ml(a.a, a.b);
  }Ml.prototype.A = function () {
    return { lastLoginAt: this.b, createdAt: this.a };
  };function Ol(a, b, c, d, e, f) {
    L(this, { uid: a, displayName: d || null, photoURL: e || null, email: c || null, phoneNumber: f || null, providerId: b });
  }function Pl(a, b) {
    F.call(this, a);for (var c in b) {
      this[c] = b[c];
    }
  }v(Pl, F);
  function Q(a, b, c) {
    this.I = [];this.l = a.apiKey;this.m = a.appName;this.o = a.authDomain || null;a = index_esm["a" /* default */].SDK_VERSION ? Ee(index_esm["a" /* default */].SDK_VERSION) : null;this.a = new ni(this.l, Uf(Vf), a);this.b = new Hl(this.a);Ql(this, b[lg]);Il(this.b, b);K(this, "refreshToken", this.b.a);Rl(this, c || {});G.call(this);this.J = !1;this.o && He() && (this.i = sl(this.o, this.l, this.m));this.O = [];this.h = null;this.w = Sl(this);this.W = t(this.Ha, this);var d = this;this.ga = null;this.va = function (e) {
      d.sa(e.g);
    };this.Z = null;this.P = [];this.ua = function (e) {
      Tl(d, e.c);
    };this.Y = null;
  }v(Q, G);Q.prototype.sa = function (a) {
    this.ga = a;ti(this.a, a);
  };Q.prototype.ha = function () {
    return this.ga;
  };function Ul(a, b) {
    a.Z && fd(a.Z, "languageCodeChanged", a.va);(a.Z = b) && Wc(b, "languageCodeChanged", a.va);
  }function Tl(a, b) {
    a.P = b;ui(a.a, index_esm["a" /* default */].SDK_VERSION ? Ee(index_esm["a" /* default */].SDK_VERSION, a.P) : null);
  }Q.prototype.Aa = function () {
    return Ra(this.P);
  };function Vl(a, b) {
    a.Y && fd(a.Y, "frameworkChanged", a.ua);(a.Y = b) && Wc(b, "frameworkChanged", a.ua);
  }Q.prototype.Ha = function () {
    this.w.b && (this.w.stop(), this.w.start());
  };
  function Wl(a) {
    try {
      return index_esm["a" /* default */].app(a.m).auth();
    } catch (b) {
      throw new M("internal-error", "No firebase.auth.Auth instance is available for the Firebase App '" + a.m + "'!");
    }
  }function Sl(a) {
    return new El(function () {
      return a.G(!0);
    }, function (b) {
      return b && "auth/network-request-failed" == b.code ? !0 : !1;
    }, function () {
      var b = a.b.c - ua() - 3E5;return 0 < b ? b : 0;
    });
  }function Xl(a) {
    a.B || a.w.b || (a.w.start(), fd(a, "tokenChanged", a.W), Wc(a, "tokenChanged", a.W));
  }function Yl(a) {
    fd(a, "tokenChanged", a.W);a.w.stop();
  }
  function Ql(a, b) {
    a.ma = b;K(a, "_lat", b);
  }function Zl(a, b) {
    Pa(a.O, function (c) {
      return c == b;
    });
  }function $l(a) {
    for (var b = [], c = 0; c < a.O.length; c++) {
      b.push(a.O[c](a));
    }return bc(b).then(function () {
      return a;
    });
  }function am(a) {
    a.i && !a.J && (a.J = !0, kl(a.i, a));
  }
  function Rl(a, b) {
    L(a, { uid: b.uid, displayName: b.displayName || null, photoURL: b.photoURL || null, email: b.email || null, emailVerified: b.emailVerified || !1, phoneNumber: b.phoneNumber || null, isAnonymous: b.isAnonymous || !1, tenantId: b.tenantId || null, metadata: new Ml(b.createdAt, b.lastLoginAt), providerData: [] });a.a.b = a.tenantId;
  }K(Q.prototype, "providerId", "firebase");function bm() {}function cm(a) {
    return D().then(function () {
      if (a.B) throw new M("app-deleted");
    });
  }
  function dm(a) {
    return Ja(a.providerData, function (b) {
      return b.providerId;
    });
  }function em(a, b) {
    b && (fm(a, b.providerId), a.providerData.push(b));
  }function fm(a, b) {
    Pa(a.providerData, function (c) {
      return c.providerId == b;
    });
  }function gm(a, b, c) {
    ("uid" != b || c) && a.hasOwnProperty(b) && K(a, b, c);
  }
  function hm(a, b) {
    a != b && (L(a, { uid: b.uid, displayName: b.displayName, photoURL: b.photoURL, email: b.email, emailVerified: b.emailVerified, phoneNumber: b.phoneNumber, isAnonymous: b.isAnonymous, tenantId: b.tenantId, providerData: [] }), b.metadata ? K(a, "metadata", Nl(b.metadata)) : K(a, "metadata", new Ml()), x(b.providerData, function (c) {
      em(a, c);
    }), Kl(a.b, b.b), K(a, "refreshToken", a.b.a));
  }k = Q.prototype;k.reload = function () {
    var a = this;return R(this, cm(this).then(function () {
      return im(a).then(function () {
        return $l(a);
      }).then(bm);
    }));
  };
  function im(a) {
    return a.G().then(function (b) {
      var c = a.isAnonymous;return jm(a, b).then(function () {
        c || gm(a, "isAnonymous", !1);return b;
      });
    });
  }k.dc = function (a) {
    return this.G(a).then(function (b) {
      return new Dl(b);
    });
  };k.G = function (a) {
    var b = this;return R(this, cm(this).then(function () {
      return b.b.getToken(a);
    }).then(function (c) {
      if (!c) throw new M("internal-error");c.accessToken != b.ma && (Ql(b, c.accessToken), b.dispatchEvent(new Pl("tokenChanged")));gm(b, "refreshToken", c.refreshToken);return c.accessToken;
    }));
  };
  function km(a, b) {
    b[lg] && a.ma != b[lg] && (Il(a.b, b), a.dispatchEvent(new Pl("tokenChanged")), Ql(a, b[lg]), gm(a, "refreshToken", a.b.a));
  }function jm(a, b) {
    return P(a.a, gj, { idToken: b }).then(t(a.zc, a));
  }
  k.zc = function (a) {
    a = a.users;if (!a || !a.length) throw new M("internal-error");a = a[0];Rl(this, { uid: a.localId, displayName: a.displayName, photoURL: a.photoUrl, email: a.email, emailVerified: !!a.emailVerified, phoneNumber: a.phoneNumber, lastLoginAt: a.lastLoginAt, createdAt: a.createdAt, tenantId: a.tenantId });for (var b = lm(a), c = 0; c < b.length; c++) {
      em(this, b[c]);
    }gm(this, "isAnonymous", !(this.email && a.passwordHash) && !(this.providerData && this.providerData.length));
  };
  function lm(a) {
    return (a = a.providerUserInfo) && a.length ? Ja(a, function (b) {
      return new Ol(b.rawId, b.providerId, b.email, b.displayName, b.photoUrl, b.phoneNumber);
    }) : [];
  }k.Ac = function (a) {
    Xe("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");return this.gb(a);
  };
  k.gb = function (a) {
    var b = this,
        c = null;return R(this, a.f(this.a, this.uid).then(function (d) {
      km(b, d);c = mm(b, d, "reauthenticate");b.h = null;return b.reload();
    }).then(function () {
      return c;
    }), !0);
  };function nm(a, b) {
    return im(a).then(function () {
      if (Na(dm(a), b)) return $l(a).then(function () {
        throw new M("provider-already-linked");
      });
    });
  }k.rc = function (a) {
    Xe("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");return this.eb(a);
  };
  k.eb = function (a) {
    var b = this,
        c = null;return R(this, nm(this, a.providerId).then(function () {
      return b.G();
    }).then(function (d) {
      return a.b(b.a, d);
    }).then(function (d) {
      c = mm(b, d, "link");return om(b, d);
    }).then(function () {
      return c;
    }));
  };k.sc = function (a, b) {
    var c = this;return R(this, nm(this, "phone").then(function () {
      return Cl(Wl(c), a, b, t(c.eb, c));
    }));
  };k.Bc = function (a, b) {
    var c = this;return R(this, D().then(function () {
      return Cl(Wl(c), a, b, t(c.gb, c));
    }), !0);
  };
  function mm(a, b, c) {
    var d = Wg(b);b = $f(b);return $e({ user: a, credential: d, additionalUserInfo: b, operationType: c });
  }function om(a, b) {
    km(a, b);return a.reload().then(function () {
      return a;
    });
  }k.rb = function (a) {
    var b = this;return R(this, this.G().then(function (c) {
      return b.a.rb(c, a);
    }).then(function (c) {
      km(b, c);return b.reload();
    }));
  };k.Sc = function (a) {
    var b = this;return R(this, this.G().then(function (c) {
      return a.b(b.a, c);
    }).then(function (c) {
      km(b, c);return b.reload();
    }));
  };
  k.sb = function (a) {
    var b = this;return R(this, this.G().then(function (c) {
      return b.a.sb(c, a);
    }).then(function (c) {
      km(b, c);return b.reload();
    }));
  };
  k.tb = function (a) {
    if (void 0 === a.displayName && void 0 === a.photoURL) return cm(this);var b = this;return R(this, this.G().then(function (c) {
      return b.a.tb(c, { displayName: a.displayName, photoUrl: a.photoURL });
    }).then(function (c) {
      km(b, c);gm(b, "displayName", c.displayName || null);gm(b, "photoURL", c.photoUrl || null);x(b.providerData, function (d) {
        "password" === d.providerId && (K(d, "displayName", b.displayName), K(d, "photoURL", b.photoURL));
      });return $l(b);
    }).then(bm));
  };
  k.Qc = function (a) {
    var b = this;return R(this, im(this).then(function (c) {
      return Na(dm(b), a) ? Si(b.a, c, [a]).then(function (d) {
        var e = {};x(d.providerUserInfo || [], function (f) {
          e[f.providerId] = !0;
        });x(dm(b), function (f) {
          e[f] || fm(b, f);
        });e[Tg.PROVIDER_ID] || K(b, "phoneNumber", null);return $l(b);
      }) : $l(b).then(function () {
        throw new M("no-such-provider");
      });
    }));
  };
  k.delete = function () {
    var a = this;return R(this, this.G().then(function (b) {
      return P(a.a, fj, { idToken: b });
    }).then(function () {
      a.dispatchEvent(new Pl("userDeleted"));
    })).then(function () {
      for (var b = 0; b < a.I.length; b++) {
        a.I[b].cancel("app-deleted");
      }Ul(a, null);Vl(a, null);a.I = [];a.B = !0;Yl(a);K(a, "refreshToken", null);a.i && ll(a.i, a);
    });
  };
  k.xb = function (a, b) {
    return "linkViaPopup" == a && (this.g || null) == b && this.f || "reauthViaPopup" == a && (this.g || null) == b && this.f || "linkViaRedirect" == a && (this.ca || null) == b || "reauthViaRedirect" == a && (this.ca || null) == b ? !0 : !1;
  };k.ja = function (a, b, c, d) {
    "linkViaPopup" != a && "reauthViaPopup" != a || d != (this.g || null) || (c && this.v ? this.v(c) : b && !c && this.f && this.f(b), this.c && (this.c.cancel(), this.c = null), delete this.f, delete this.v);
  };
  k.za = function (a, b) {
    return "linkViaPopup" == a && b == (this.g || null) ? t(this.Bb, this) : "reauthViaPopup" == a && b == (this.g || null) ? t(this.Cb, this) : "linkViaRedirect" == a && (this.ca || null) == b ? t(this.Bb, this) : "reauthViaRedirect" == a && (this.ca || null) == b ? t(this.Cb, this) : null;
  };k.tc = function (a) {
    var b = this;return pm(this, "linkViaPopup", a, function () {
      return nm(b, a.providerId).then(function () {
        return $l(b);
      });
    }, !1);
  };k.Cc = function (a) {
    return pm(this, "reauthViaPopup", a, function () {
      return D();
    }, !0);
  };
  function pm(a, b, c, d, e) {
    if (!He()) return E(new M("operation-not-supported-in-this-environment"));if (a.h && !e) return E(a.h);var f = Zf(c.providerId),
        g = Ge(a.uid + ":::"),
        h = null;(!Je() || ye()) && a.o && c.isOAuthProvider && (h = Bj(a.o, a.l, a.m, b, c, null, g, index_esm["a" /* default */].SDK_VERSION || null, null, null, a.tenantId));var m = pe(h, f && f.Da, f && f.Ca);d = d().then(function () {
      qm(a);if (!e) return a.G().then(function () {});
    }).then(function () {
      return ol(a.i, m, b, c, g, !!h, a.tenantId);
    }).then(function () {
      return new B(function (p, u) {
        a.ja(b, null, new M("cancelled-popup-request"), a.g || null);a.f = p;a.v = u;a.g = g;a.c = ql(a.i, a, b, m, g);
      });
    }).then(function (p) {
      m && oe(m);return p ? $e(p) : null;
    }).s(function (p) {
      m && oe(m);throw p;
    });return R(a, d, e);
  }k.uc = function (a) {
    var b = this;return rm(this, "linkViaRedirect", a, function () {
      return nm(b, a.providerId);
    }, !1);
  };k.Dc = function (a) {
    return rm(this, "reauthViaRedirect", a, function () {
      return D();
    }, !0);
  };
  function rm(a, b, c, d, e) {
    if (!He()) return E(new M("operation-not-supported-in-this-environment"));if (a.h && !e) return E(a.h);var f = null,
        g = Ge(a.uid + ":::");d = d().then(function () {
      qm(a);if (!e) return a.G().then(function () {});
    }).then(function () {
      a.ca = g;return $l(a);
    }).then(function (h) {
      a.da && (h = a.da, h = h.b.set(sm, a.A(), h.a));return h;
    }).then(function () {
      return pl(a.i, b, c, g, a.tenantId);
    }).s(function (h) {
      f = h;if (a.da) return tm(a.da);throw f;
    }).then(function () {
      if (f) throw f;
    });return R(a, d, e);
  }
  function qm(a) {
    if (!a.i || !a.J) {
      if (a.i && !a.J) throw new M("internal-error");throw new M("auth-domain-config-required");
    }
  }k.Bb = function (a, b, c, d) {
    var e = this;this.c && (this.c.cancel(), this.c = null);var f = null;c = this.G().then(function (g) {
      return pg(e.a, { requestUri: a, postBody: d, sessionId: b, idToken: g });
    }).then(function (g) {
      f = mm(e, g, "link");return om(e, g);
    }).then(function () {
      return f;
    });return R(this, c);
  };
  k.Cb = function (a, b, c, d) {
    var e = this;this.c && (this.c.cancel(), this.c = null);var f = null,
        g = D().then(function () {
      return kg(qg(e.a, { requestUri: a, sessionId: b, postBody: d, tenantId: c }), e.uid);
    }).then(function (h) {
      f = mm(e, h, "reauthenticate");km(e, h);e.h = null;return e.reload();
    }).then(function () {
      return f;
    });return R(this, g, !0);
  };
  k.jb = function (a) {
    var b = this,
        c = null;return R(this, this.G().then(function (d) {
      c = d;return "undefined" === typeof a || Ta(a) ? {} : Jf(new zf(a));
    }).then(function (d) {
      return b.a.jb(c, d);
    }).then(function (d) {
      if (b.email != d) return b.reload();
    }).then(function () {}));
  };function R(a, b, c) {
    var d = um(a, b, c);a.I.push(d);d.ka(function () {
      Oa(a.I, d);
    });return d;
  }
  function um(a, b, c) {
    return a.h && !c ? (b.cancel(), E(a.h)) : b.s(function (d) {
      !d || "auth/user-disabled" != d.code && "auth/user-token-expired" != d.code || (a.h || a.dispatchEvent(new Pl("userInvalidated")), a.h = d);throw d;
    });
  }k.toJSON = function () {
    return this.A();
  };
  k.A = function () {
    var a = { uid: this.uid, displayName: this.displayName, photoURL: this.photoURL, email: this.email, emailVerified: this.emailVerified, phoneNumber: this.phoneNumber, isAnonymous: this.isAnonymous, tenantId: this.tenantId, providerData: [], apiKey: this.l, appName: this.m, authDomain: this.o, stsTokenManager: this.b.A(), redirectEventId: this.ca || null };this.metadata && Wa(a, this.metadata.A());x(this.providerData, function (b) {
      a.providerData.push(af(b));
    });return a;
  };
  function vm(a) {
    if (!a.apiKey) return null;var b = { apiKey: a.apiKey, authDomain: a.authDomain, appName: a.appName },
        c = {};if (a.stsTokenManager && a.stsTokenManager.accessToken && a.stsTokenManager.expirationTime) c[lg] = a.stsTokenManager.accessToken, c.refreshToken = a.stsTokenManager.refreshToken || null, c.expiresIn = (a.stsTokenManager.expirationTime - ua()) / 1E3;else return null;var d = new Q(b, c, a);a.providerData && x(a.providerData, function (e) {
      e && em(d, $e(e));
    });a.redirectEventId && (d.ca = a.redirectEventId);return d;
  }
  function wm(a, b, c, d) {
    var e = new Q(a, b);c && (e.da = c);d && Tl(e, d);return e.reload().then(function () {
      return e;
    });
  }function xm(a, b, c, d) {
    b = b || { apiKey: a.l, authDomain: a.o, appName: a.m };var e = a.b,
        f = {};f[lg] = e.b;f.refreshToken = e.a;f.expiresIn = (e.c - ua()) / 1E3;b = new Q(b, f);c && (b.da = c);d && Tl(b, d);hm(b, a);return b;
  };function ym(a) {
    this.a = a;this.b = rk();
  }var sm = { name: "redirectUser", C: "session" };function tm(a) {
    return vk(a.b, sm, a.a);
  }function zm(a, b) {
    return a.b.get(sm, a.a).then(function (c) {
      c && b && (c.authDomain = b);return vm(c || {});
    });
  };function Am(a) {
    this.a = a;this.b = rk();this.c = null;this.f = Bm(this);this.b.addListener(Cm("local"), this.a, t(this.g, this));
  }Am.prototype.g = function () {
    var a = this,
        b = Cm("local");Dm(this, function () {
      return D().then(function () {
        return a.c && "local" != a.c.C ? a.b.get(b, a.a) : null;
      }).then(function (c) {
        if (c) return Em(a, "local").then(function () {
          a.c = b;
        });
      });
    });
  };function Em(a, b) {
    var c = [],
        d;for (d in nk) {
      nk[d] !== b && c.push(vk(a.b, Cm(nk[d]), a.a));
    }c.push(vk(a.b, Fm, a.a));return ac(c);
  }
  function Bm(a) {
    var b = Cm("local"),
        c = Cm("session"),
        d = Cm("none");return uk(a.b, b, a.a).then(function () {
      return a.b.get(c, a.a);
    }).then(function (e) {
      return e ? c : a.b.get(d, a.a).then(function (f) {
        return f ? d : a.b.get(b, a.a).then(function (g) {
          return g ? b : a.b.get(Fm, a.a).then(function (h) {
            return h ? Cm(h) : b;
          });
        });
      });
    }).then(function (e) {
      a.c = e;return Em(a, e.C);
    }).s(function () {
      a.c || (a.c = b);
    });
  }var Fm = { name: "persistence", C: "session" };function Cm(a) {
    return { name: "authUser", C: a };
  }
  Am.prototype.mb = function (a) {
    var b = null,
        c = this;ok(a);return Dm(this, function () {
      return a != c.c.C ? c.b.get(c.c, c.a).then(function (d) {
        b = d;return Em(c, a);
      }).then(function () {
        c.c = Cm(a);if (b) return c.b.set(c.c, b, c.a);
      }) : D();
    });
  };function Gm(a) {
    return Dm(a, function () {
      return a.b.set(Fm, a.c.C, a.a);
    });
  }function Hm(a, b) {
    return Dm(a, function () {
      return a.b.set(a.c, b.A(), a.a);
    });
  }function Im(a) {
    return Dm(a, function () {
      return vk(a.b, a.c, a.a);
    });
  }
  function Jm(a, b) {
    return Dm(a, function () {
      return a.b.get(a.c, a.a).then(function (c) {
        c && b && (c.authDomain = b);return vm(c || {});
      });
    });
  }function Dm(a, b) {
    a.f = a.f.then(b, b);return a.f;
  };function Km(a) {
    this.l = !1;K(this, "settings", new Al());K(this, "app", a);if (S(this).options && S(this).options.apiKey) a = index_esm["a" /* default */].SDK_VERSION ? Ee(index_esm["a" /* default */].SDK_VERSION) : null, this.b = new ni(S(this).options && S(this).options.apiKey, Uf(Vf), a);else throw new M("invalid-api-key");this.O = [];this.m = [];this.J = [];this.Ub = index_esm["a" /* default */].INTERNAL.createSubscribe(t(this.oc, this));this.W = void 0;this.Vb = index_esm["a" /* default */].INTERNAL.createSubscribe(t(this.pc, this));Lm(this, null);this.h = new Am(S(this).options.apiKey + ":" + S(this).name);this.w = new ym(S(this).options.apiKey + ":" + S(this).name);this.Y = T(this, Mm(this));this.i = T(this, Nm(this));this.ga = !1;this.ma = t(this.Nc, this);this.ub = t(this.aa, this);this.ua = t(this.bc, this);this.va = t(this.mc, this);this.Ha = t(this.nc, this);this.a = null;Om(this);this.INTERNAL = {};this.INTERNAL["delete"] = t(this.delete, this);this.INTERNAL.logFramework = t(this.vc, this);this.o = 0;G.call(this);Pm(this);this.I = [];
  }v(Km, G);function Qm(a) {
    F.call(this, "languageCodeChanged");this.g = a;
  }v(Qm, F);
  function Rm(a) {
    F.call(this, "frameworkChanged");this.c = a;
  }v(Rm, F);k = Km.prototype;k.mb = function (a) {
    a = this.h.mb(a);return T(this, a);
  };k.sa = function (a) {
    this.Z === a || this.l || (this.Z = a, ti(this.b, this.Z), this.dispatchEvent(new Qm(this.ha())));
  };k.ha = function () {
    return this.Z;
  };k.Tc = function () {
    var a = l.navigator;this.sa(a ? a.languages && a.languages[0] || a.language || a.userLanguage || null : null);
  };k.vc = function (a) {
    this.I.push(a);ui(this.b, index_esm["a" /* default */].SDK_VERSION ? Ee(index_esm["a" /* default */].SDK_VERSION, this.I) : null);this.dispatchEvent(new Rm(this.I));
  };
  k.Aa = function () {
    return Ra(this.I);
  };k.nb = function (a) {
    this.P === a || this.l || (this.P = a, this.b.b = this.P);
  };k.R = function () {
    return this.P;
  };function Pm(a) {
    Object.defineProperty(a, "lc", { get: function get() {
        return this.ha();
      }, set: function set(b) {
        this.sa(b);
      }, enumerable: !1 });a.Z = null;Object.defineProperty(a, "ti", { get: function get() {
        return this.R();
      }, set: function set(b) {
        this.nb(b);
      }, enumerable: !1 });a.P = null;
  }
  k.toJSON = function () {
    return { apiKey: S(this).options.apiKey, authDomain: S(this).options.authDomain, appName: S(this).name, currentUser: U(this) && U(this).A() };
  };function Sm(a) {
    return a.Tb || E(new M("auth-domain-config-required"));
  }function Om(a) {
    var b = S(a).options.authDomain,
        c = S(a).options.apiKey;b && He() && (a.Tb = a.Y.then(function () {
      if (!a.l) {
        a.a = sl(b, c, S(a).name);kl(a.a, a);U(a) && am(U(a));if (a.B) {
          am(a.B);var d = a.B;d.sa(a.ha());Ul(d, a);d = a.B;Tl(d, a.I);Vl(d, a);a.B = null;
        }return a.a;
      }
    }));
  }
  k.xb = function (a, b) {
    switch (a) {case "unknown":case "signInViaRedirect":
        return !0;case "signInViaPopup":
        return this.g == b && !!this.f;default:
        return !1;}
  };k.ja = function (a, b, c, d) {
    "signInViaPopup" == a && this.g == d && (c && this.v ? this.v(c) : b && !c && this.f && this.f(b), this.c && (this.c.cancel(), this.c = null), delete this.f, delete this.v);
  };k.za = function (a, b) {
    return "signInViaRedirect" == a || "signInViaPopup" == a && this.g == b && this.f ? t(this.ac, this) : null;
  };
  k.ac = function (a, b, c, d) {
    var e = this;a = { requestUri: a, postBody: d, sessionId: b, tenantId: c };this.c && (this.c.cancel(), this.c = null);var f = null,
        g = null,
        h = ng(e.b, a).then(function (m) {
      f = Wg(m);g = $f(m);return m;
    });a = e.Y.then(function () {
      return h;
    }).then(function (m) {
      return Tm(e, m);
    }).then(function () {
      return $e({ user: U(e), credential: f, additionalUserInfo: g, operationType: "signIn" });
    });return T(this, a);
  };
  k.Lc = function (a) {
    if (!He()) return E(new M("operation-not-supported-in-this-environment"));var b = this,
        c = Zf(a.providerId),
        d = Ge(),
        e = null;(!Je() || ye()) && S(this).options.authDomain && a.isOAuthProvider && (e = Bj(S(this).options.authDomain, S(this).options.apiKey, S(this).name, "signInViaPopup", a, null, d, index_esm["a" /* default */].SDK_VERSION || null, null, null, this.R()));var f = pe(e, c && c.Da, c && c.Ca);c = Sm(this).then(function (g) {
      return ol(g, f, "signInViaPopup", a, d, !!e, b.R());
    }).then(function () {
      return new B(function (g, h) {
        b.ja("signInViaPopup", null, new M("cancelled-popup-request"), b.g);b.f = g;b.v = h;b.g = d;b.c = ql(b.a, b, "signInViaPopup", f, d);
      });
    }).then(function (g) {
      f && oe(f);return g ? $e(g) : null;
    }).s(function (g) {
      f && oe(f);throw g;
    });return T(this, c);
  };k.Mc = function (a) {
    if (!He()) return E(new M("operation-not-supported-in-this-environment"));var b = this,
        c = Sm(this).then(function () {
      return Gm(b.h);
    }).then(function () {
      return pl(b.a, "signInViaRedirect", a, void 0, b.R());
    });return T(this, c);
  };
  function Um(a) {
    if (!He()) return E(new M("operation-not-supported-in-this-environment"));var b = Sm(a).then(function () {
      return a.a.oa();
    }).then(function (c) {
      return c ? $e(c) : null;
    });return T(a, b);
  }k.oa = function () {
    var a = this;return Um(this).then(function (b) {
      a.a && vl(a.a.b);return b;
    }).s(function (b) {
      a.a && vl(a.a.b);throw b;
    });
  };
  k.Rc = function (a) {
    if (!a) return E(new M("null-user"));if (this.P != a.tenantId) return E(new M("tenant-id-mismatch"));var b = this,
        c = {};c.apiKey = S(this).options.apiKey;c.authDomain = S(this).options.authDomain;c.appName = S(this).name;var d = xm(a, c, b.w, b.Aa());return T(this, this.i.then(function () {
      if (S(b).options.apiKey != a.l) return d.reload();
    }).then(function () {
      if (U(b) && a.uid == U(b).uid) return hm(U(b), a), b.aa(a);Lm(b, d);am(d);return b.aa(d);
    }).then(function () {
      Vm(b);
    }));
  };
  function Tm(a, b) {
    var c = {};c.apiKey = S(a).options.apiKey;c.authDomain = S(a).options.authDomain;c.appName = S(a).name;return a.Y.then(function () {
      return wm(c, b, a.w, a.Aa());
    }).then(function (d) {
      if (U(a) && d.uid == U(a).uid) return hm(U(a), d), a.aa(d);Lm(a, d);am(d);return a.aa(d);
    }).then(function () {
      Vm(a);
    });
  }
  function Lm(a, b) {
    U(a) && (Zl(U(a), a.ub), fd(U(a), "tokenChanged", a.ua), fd(U(a), "userDeleted", a.va), fd(U(a), "userInvalidated", a.Ha), Yl(U(a)));b && (b.O.push(a.ub), Wc(b, "tokenChanged", a.ua), Wc(b, "userDeleted", a.va), Wc(b, "userInvalidated", a.Ha), 0 < a.o && Xl(b));K(a, "currentUser", b);b && (b.sa(a.ha()), Ul(b, a), Tl(b, a.I), Vl(b, a));
  }k.pb = function () {
    var a = this,
        b = this.i.then(function () {
      a.a && vl(a.a.b);if (!U(a)) return D();Lm(a, null);return Im(a.h).then(function () {
        Vm(a);
      });
    });return T(this, b);
  };
  function Wm(a) {
    var b = zm(a.w, S(a).options.authDomain).then(function (c) {
      if (a.B = c) c.da = a.w;return tm(a.w);
    });return T(a, b);
  }function Mm(a) {
    var b = S(a).options.authDomain,
        c = Wm(a).then(function () {
      return Jm(a.h, b);
    }).then(function (d) {
      return d ? (d.da = a.w, a.B && (a.B.ca || null) == (d.ca || null) ? d : d.reload().then(function () {
        return Hm(a.h, d).then(function () {
          return d;
        });
      }).s(function (e) {
        return "auth/network-request-failed" == e.code ? d : Im(a.h);
      })) : null;
    }).then(function (d) {
      Lm(a, d || null);
    });return T(a, c);
  }
  function Nm(a) {
    return a.Y.then(function () {
      return Um(a);
    }).s(function () {}).then(function () {
      if (!a.l) return a.ma();
    }).s(function () {}).then(function () {
      if (!a.l) {
        a.ga = !0;var b = a.h;b.b.addListener(Cm("local"), b.a, a.ma);
      }
    });
  }
  k.Nc = function () {
    var a = this;return Jm(this.h, S(this).options.authDomain).then(function (b) {
      if (!a.l) {
        var c;if (c = U(a) && b) {
          c = U(a).uid;var d = b.uid;c = void 0 === c || null === c || "" === c || void 0 === d || null === d || "" === d ? !1 : c == d;
        }if (c) return hm(U(a), b), U(a).G();if (U(a) || b) Lm(a, b), b && (am(b), b.da = a.w), a.a && kl(a.a, a), Vm(a);
      }
    });
  };k.aa = function (a) {
    return Hm(this.h, a);
  };k.bc = function () {
    Vm(this);this.aa(U(this));
  };k.mc = function () {
    this.pb();
  };k.nc = function () {
    this.pb();
  };
  function Xm(a, b) {
    var c = null,
        d = null;return T(a, b.then(function (e) {
      c = Wg(e);d = $f(e);return Tm(a, e);
    }).then(function () {
      return $e({ user: U(a), credential: c, additionalUserInfo: d, operationType: "signIn" });
    }));
  }k.oc = function (a) {
    var b = this;this.addAuthTokenListener(function () {
      a.next(U(b));
    });
  };k.pc = function (a) {
    var b = this;Ym(this, function () {
      a.next(U(b));
    });
  };k.xc = function (a, b, c) {
    var d = this;this.ga && Promise.resolve().then(function () {
      q(a) ? a(U(d)) : q(a.next) && a.next(U(d));
    });return this.Ub(a, b, c);
  };
  k.wc = function (a, b, c) {
    var d = this;this.ga && Promise.resolve().then(function () {
      d.W = d.getUid();q(a) ? a(U(d)) : q(a.next) && a.next(U(d));
    });return this.Vb(a, b, c);
  };k.cc = function (a) {
    var b = this,
        c = this.i.then(function () {
      return U(b) ? U(b).G(a).then(function (d) {
        return { accessToken: d };
      }) : null;
    });return T(this, c);
  };k.Hc = function (a) {
    var b = this;return this.i.then(function () {
      return Xm(b, P(b.b, ij, { token: a }));
    }).then(function (c) {
      var d = c.user;gm(d, "isAnonymous", !1);b.aa(d);return c;
    });
  };
  k.Ic = function (a, b) {
    var c = this;return this.i.then(function () {
      return Xm(c, P(c.b, Ig, { email: a, password: b }));
    });
  };k.Xb = function (a, b) {
    var c = this;return this.i.then(function () {
      return Xm(c, P(c.b, ej, { email: a, password: b }));
    });
  };k.Ra = function (a) {
    var b = this;return this.i.then(function () {
      return Xm(b, a.na(b.b));
    });
  };k.Gc = function (a) {
    Xe("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");return this.Ra(a);
  };
  k.ob = function () {
    var a = this;return this.i.then(function () {
      var b = U(a);if (b && b.isAnonymous) {
        var c = $e({ providerId: null, isNewUser: !1 });return $e({ user: b, credential: null, additionalUserInfo: c, operationType: "signIn" });
      }return Xm(a, a.b.ob()).then(function (d) {
        var e = d.user;gm(e, "isAnonymous", !0);a.aa(e);return d;
      });
    });
  };function S(a) {
    return a.app;
  }function U(a) {
    return a.currentUser;
  }k.getUid = function () {
    return U(this) && U(this).uid || null;
  };function Zm(a) {
    return U(a) && U(a)._lat || null;
  }
  function Vm(a) {
    if (a.ga) {
      for (var b = 0; b < a.m.length; b++) {
        if (a.m[b]) a.m[b](Zm(a));
      }if (a.W !== a.getUid() && a.J.length) for (a.W = a.getUid(), b = 0; b < a.J.length; b++) {
        if (a.J[b]) a.J[b](Zm(a));
      }
    }
  }k.Wb = function (a) {
    this.addAuthTokenListener(a);this.o++;0 < this.o && U(this) && Xl(U(this));
  };k.Ec = function (a) {
    var b = this;x(this.m, function (c) {
      c == a && b.o--;
    });0 > this.o && (this.o = 0);0 == this.o && U(this) && Yl(U(this));this.removeAuthTokenListener(a);
  };
  k.addAuthTokenListener = function (a) {
    var b = this;this.m.push(a);T(this, this.i.then(function () {
      b.l || Na(b.m, a) && a(Zm(b));
    }));
  };k.removeAuthTokenListener = function (a) {
    Pa(this.m, function (b) {
      return b == a;
    });
  };function Ym(a, b) {
    a.J.push(b);T(a, a.i.then(function () {
      !a.l && Na(a.J, b) && a.W !== a.getUid() && (a.W = a.getUid(), b(Zm(a)));
    }));
  }
  k.delete = function () {
    this.l = !0;for (var a = 0; a < this.O.length; a++) {
      this.O[a].cancel("app-deleted");
    }this.O = [];this.h && (a = this.h, a.b.removeListener(Cm("local"), a.a, this.ma));this.a && (ll(this.a, this), vl(this.a.b));return Promise.resolve();
  };function T(a, b) {
    a.O.push(b);b.ka(function () {
      Oa(a.O, b);
    });return b;
  }k.$b = function (a) {
    return T(this, Ei(this.b, a));
  };k.qc = function (a) {
    return !!Ng(a);
  };
  k.lb = function (a, b) {
    var c = this;return T(this, D().then(function () {
      var d = new zf(b);if (!d.c) throw new M("argument-error", Hf + " must be true when sending sign in link to email");return Jf(d);
    }).then(function (d) {
      return c.b.lb(a, d);
    }).then(function () {}));
  };k.Uc = function (a) {
    return this.Ka(a).then(function (b) {
      return b.data.email;
    });
  };k.$a = function (a, b) {
    return T(this, this.b.$a(a, b).then(function () {}));
  };k.Ka = function (a) {
    return T(this, this.b.Ka(a).then(function (b) {
      return new df(b);
    }));
  };
  k.Xa = function (a) {
    return T(this, this.b.Xa(a).then(function () {}));
  };k.kb = function (a, b) {
    var c = this;return T(this, D().then(function () {
      return "undefined" === typeof b || Ta(b) ? {} : Jf(new zf(b));
    }).then(function (d) {
      return c.b.kb(a, d);
    }).then(function () {}));
  };k.Kc = function (a, b) {
    return T(this, Cl(this, a, b, t(this.Ra, this)));
  };
  k.Jc = function (a, b) {
    var c = this;return T(this, D().then(function () {
      var d = b || he(),
          e = Mg(a, d);d = Ng(d);if (!d) throw new M("argument-error", "Invalid email link!");if (d.tenantId !== c.R()) throw new M("tenant-id-mismatch");return c.Ra(e);
    }));
  };function $m() {}$m.prototype.render = function () {};$m.prototype.reset = function () {};$m.prototype.getResponse = function () {};$m.prototype.execute = function () {};function an() {
    this.a = {};this.b = 1E12;
  }var bn = null;an.prototype.render = function (a, b) {
    this.a[this.b.toString()] = new cn(a, b);return this.b++;
  };an.prototype.reset = function (a) {
    var b = dn(this, a);a = en(a);b && a && (b.delete(), delete this.a[a]);
  };an.prototype.getResponse = function (a) {
    return (a = dn(this, a)) ? a.getResponse() : null;
  };an.prototype.execute = function (a) {
    (a = dn(this, a)) && a.execute();
  };function dn(a, b) {
    return (b = en(b)) ? a.a[b] || null : null;
  }function en(a) {
    return (a = "undefined" === typeof a ? 1E12 : a) ? a.toString() : null;
  }
  function cn(a, b) {
    this.g = !1;this.c = b;this.a = this.b = null;this.h = "invisible" !== this.c.size;this.f = Vd(a);var c = this;this.i = function () {
      c.execute();
    };this.h ? this.execute() : Wc(this.f, "click", this.i);
  }cn.prototype.getResponse = function () {
    fn(this);return this.b;
  };
  cn.prototype.execute = function () {
    fn(this);var a = this;this.a || (this.a = setTimeout(function () {
      a.b = Ce();var b = a.c.callback,
          c = a.c["expired-callback"];if (b) try {
        b(a.b);
      } catch (d) {}a.a = setTimeout(function () {
        a.a = null;a.b = null;if (c) try {
          c();
        } catch (d) {}a.h && a.execute();
      }, 6E4);
    }, 500));
  };cn.prototype.delete = function () {
    fn(this);this.g = !0;clearTimeout(this.a);this.a = null;fd(this.f, "click", this.i);
  };function fn(a) {
    if (a.g) throw Error("reCAPTCHA mock was already deleted!");
  };function gn() {}gn.prototype.g = function () {
    bn || (bn = new an());return D(bn);
  };gn.prototype.c = function () {};var hn = null;function jn() {
    this.b = l.grecaptcha ? Infinity : 0;this.f = null;this.a = "__rcb" + Math.floor(1E6 * Math.random()).toString();
  }var kn = new Xa(Ya, "https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),
      ln = new Pe(3E4, 6E4);
  jn.prototype.g = function (a) {
    var b = this;return new B(function (c, d) {
      var e = setTimeout(function () {
        d(new M("network-request-failed"));
      }, ln.get());if (!l.grecaptcha || a !== b.f && !b.b) {
        l[b.a] = function () {
          if (l.grecaptcha) {
            b.f = a;var g = l.grecaptcha.render;l.grecaptcha.render = function (h, m) {
              h = g(h, m);b.b++;return h;
            };clearTimeout(e);c(l.grecaptcha);
          } else clearTimeout(e), d(new M("internal-error"));delete l[b.a];
        };var f = eb(kn, { onload: b.a, hl: a || "" });D(gi(f)).s(function () {
          clearTimeout(e);d(new M("internal-error", "Unable to load external reCAPTCHA dependencies!"));
        });
      } else clearTimeout(e), c(l.grecaptcha);
    });
  };jn.prototype.c = function () {
    this.b--;
  };var mn = null;function nn(a, b, c, d, e, f, g) {
    K(this, "type", "recaptcha");this.c = this.f = null;this.B = !1;this.u = b;this.g = null;g ? (hn || (hn = new gn()), g = hn) : (mn || (mn = new jn()), g = mn);this.m = g;this.a = c || { theme: "light", type: "image" };this.h = [];if (this.a[on]) throw new M("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.i = "invisible" === this.a[pn];if (!l.document) throw new M("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
    if (!Vd(b) || !this.i && Vd(b).hasChildNodes()) throw new M("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");this.o = new ni(a, f || null, e || null);this.v = d || function () {
      return null;
    };var h = this;this.l = [];var m = this.a[qn];this.a[qn] = function (u) {
      rn(h, u);if ("function" === typeof m) m(u);else if ("string" === typeof m) {
        var A = J(m, l);"function" === typeof A && A(u);
      }
    };var p = this.a[sn];this.a[sn] = function () {
      rn(h, null);if ("function" === typeof p) p();else if ("string" === typeof p) {
        var u = J(p, l);"function" === typeof u && u();
      }
    };
  }var qn = "callback",
      sn = "expired-callback",
      on = "sitekey",
      pn = "size";function rn(a, b) {
    for (var c = 0; c < a.l.length; c++) {
      try {
        a.l[c](b);
      } catch (d) {}
    }
  }function tn(a, b) {
    Pa(a.l, function (c) {
      return c == b;
    });
  }function un(a, b) {
    a.h.push(b);b.ka(function () {
      Oa(a.h, b);
    });return b;
  }k = nn.prototype;
  k.Ba = function () {
    var a = this;return this.f ? this.f : this.f = un(this, D().then(function () {
      if (Ie() && !ze()) return ue();throw new M("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");
    }).then(function () {
      return a.m.g(a.v());
    }).then(function (b) {
      a.g = b;return P(a.o, hj, {});
    }).then(function (b) {
      a.a[on] = b.recaptchaSiteKey;
    }).s(function (b) {
      a.f = null;throw b;
    }));
  };
  k.render = function () {
    vn(this);var a = this;return un(this, this.Ba().then(function () {
      if (null === a.c) {
        var b = a.u;if (!a.i) {
          var c = Vd(b);b = Yd("DIV");c.appendChild(b);
        }a.c = a.g.render(b, a.a);
      }return a.c;
    }));
  };k.verify = function () {
    vn(this);var a = this;return un(this, this.render().then(function (b) {
      return new B(function (c) {
        var d = a.g.getResponse(b);if (d) c(d);else {
          var e = function e(f) {
            f && (tn(a, e), c(f));
          };a.l.push(e);a.i && a.g.execute(a.c);
        }
      });
    }));
  };k.reset = function () {
    vn(this);null !== this.c && this.g.reset(this.c);
  };
  function vn(a) {
    if (a.B) throw new M("internal-error", "RecaptchaVerifier instance has been destroyed.");
  }k.clear = function () {
    vn(this);this.B = !0;this.m.c();for (var a = 0; a < this.h.length; a++) {
      this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");
    }if (!this.i) {
      a = Vd(this.u);for (var b; b = a.firstChild;) {
        a.removeChild(b);
      }
    }
  };
  function wn(a, b, c) {
    var d = !1;try {
      this.b = c || index_esm["a" /* default */].app();
    } catch (g) {
      throw new M("argument-error", "No firebase.app.App instance is currently initialized.");
    }if (this.b.options && this.b.options.apiKey) c = this.b.options.apiKey;else throw new M("invalid-api-key");var e = this,
        f = null;try {
      f = this.b.auth().Aa();
    } catch (g) {}try {
      d = this.b.auth().settings.appVerificationDisabledForTesting;
    } catch (g) {}f = index_esm["a" /* default */].SDK_VERSION ? Ee(index_esm["a" /* default */].SDK_VERSION, f) : null;nn.call(this, c, a, b, function () {
      try {
        var g = e.b.auth().ha();
      } catch (h) {
        g = null;
      }return g;
    }, f, Uf(Vf), d);
  }v(wn, nn);function xn(a, b, c, d) {
    a: {
      c = Array.prototype.slice.call(c);var e = 0;for (var f = !1, g = 0; g < b.length; g++) {
        if (b[g].optional) f = !0;else {
          if (f) throw new M("internal-error", "Argument validator encountered a required argument after an optional argument.");e++;
        }
      }f = b.length;if (c.length < e || f < c.length) d = "Expected " + (e == f ? 1 == e ? "1 argument" : e + " arguments" : e + "-" + f + " arguments") + " but got " + c.length + ".";else {
        for (e = 0; e < c.length; e++) {
          if (f = b[e].optional && void 0 === c[e], !b[e].N(c[e]) && !f) {
            b = b[e];if (0 > e || e >= yn.length) throw new M("internal-error", "Argument validator received an unsupported number of arguments.");c = yn[e];d = (d ? "" : c + " argument ") + (b.name ? '"' + b.name + '" ' : "") + "must be " + b.M + ".";break a;
          }
        }d = null;
      }
    }if (d) throw new M("argument-error", a + " failed: " + d);
  }var yn = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function V(a, b) {
    return { name: a || "", M: "a valid string", optional: !!b, N: n };
  }function zn(a, b) {
    return { name: a || "", M: "a boolean", optional: !!b, N: ha };
  }
  function W(a, b) {
    return { name: a || "", M: "a valid object", optional: !!b, N: r };
  }function An(a, b) {
    return { name: a || "", M: "a function", optional: !!b, N: q };
  }function Bn(a, b) {
    return { name: a || "", M: "null", optional: !!b, N: ma };
  }function Cn() {
    return { name: "", M: "an HTML element", optional: !1, N: function N(a) {
        return !!(a && a instanceof Element);
      } };
  }function Dn() {
    return { name: "auth", M: "an instance of Firebase Auth", optional: !0, N: function N(a) {
        return !!(a && a instanceof Km);
      } };
  }
  function En() {
    return { name: "app", M: "an instance of Firebase App", optional: !0, N: function N(a) {
        return !!(a && a instanceof index_esm["a" /* default */].app.App);
      } };
  }function Fn(a) {
    return { name: a ? a + "Credential" : "credential", M: a ? "a valid " + a + " credential" : "a valid credential", optional: !1, N: function N(b) {
        if (!b) return !1;var c = !a || b.providerId === a;return !(!b.na || !c);
      } };
  }
  function Gn() {
    return { name: "authProvider", M: "a valid Auth provider", optional: !1, N: function N(a) {
        return !!(a && a.providerId && a.hasOwnProperty && a.hasOwnProperty("isOAuthProvider"));
      } };
  }function Hn() {
    return { name: "applicationVerifier", M: "an implementation of firebase.auth.ApplicationVerifier", optional: !1, N: function N(a) {
        return !!(a && n(a.type) && q(a.verify));
      } };
  }function X(a, b, c, d) {
    return { name: c || "", M: a.M + " or " + b.M, optional: !!d, N: function N(e) {
        return a.N(e) || b.N(e);
      } };
  };function Y(a, b) {
    for (var c in b) {
      var d = b[c].name;a[d] = In(d, a[c], b[c].j);
    }
  }function Jn(a, b) {
    for (var c in b) {
      var d = b[c].name;d !== c && Object.defineProperty(a, d, { get: ta(function (e) {
          return this[e];
        }, c), set: ta(function (e, f, g, h) {
          xn(e, [g], [h], !0);this[f] = h;
        }, d, c, b[c].Ya), enumerable: !0 });
    }
  }function Z(a, b, c, d) {
    a[b] = In(b, c, d);
  }
  function In(a, b, c) {
    function d() {
      var g = Array.prototype.slice.call(arguments);xn(e, c, g);return b.apply(this, g);
    }if (!c) return b;var e = Kn(a),
        f;for (f in b) {
      d[f] = b[f];
    }for (f in b.prototype) {
      d.prototype[f] = b.prototype[f];
    }return d;
  }function Kn(a) {
    a = a.split(".");return a[a.length - 1];
  };Y(Km.prototype, { Xa: { name: "applyActionCode", j: [V("code")] }, Ka: { name: "checkActionCode", j: [V("code")] }, $a: { name: "confirmPasswordReset", j: [V("code"), V("newPassword")] }, Xb: { name: "createUserWithEmailAndPassword", j: [V("email"), V("password")] }, $b: { name: "fetchSignInMethodsForEmail", j: [V("email")] }, oa: { name: "getRedirectResult", j: [] }, qc: { name: "isSignInWithEmailLink", j: [V("emailLink")] }, wc: { name: "onAuthStateChanged", j: [X(W(), An(), "nextOrObserver"), An("opt_error", !0), An("opt_completed", !0)] }, xc: { name: "onIdTokenChanged",
      j: [X(W(), An(), "nextOrObserver"), An("opt_error", !0), An("opt_completed", !0)] }, kb: { name: "sendPasswordResetEmail", j: [V("email"), X(W("opt_actionCodeSettings", !0), Bn(null, !0), "opt_actionCodeSettings", !0)] }, lb: { name: "sendSignInLinkToEmail", j: [V("email"), W("actionCodeSettings")] }, mb: { name: "setPersistence", j: [V("persistence")] }, Gc: { name: "signInAndRetrieveDataWithCredential", j: [Fn()] }, ob: { name: "signInAnonymously", j: [] }, Ra: { name: "signInWithCredential", j: [Fn()] }, Hc: { name: "signInWithCustomToken", j: [V("token")] },
    Ic: { name: "signInWithEmailAndPassword", j: [V("email"), V("password")] }, Jc: { name: "signInWithEmailLink", j: [V("email"), V("emailLink", !0)] }, Kc: { name: "signInWithPhoneNumber", j: [V("phoneNumber"), Hn()] }, Lc: { name: "signInWithPopup", j: [Gn()] }, Mc: { name: "signInWithRedirect", j: [Gn()] }, Rc: { name: "updateCurrentUser", j: [X(function (a) {
        return { name: "user", M: "an instance of Firebase User", optional: !!a, N: function N(b) {
            return !!(b && b instanceof Q);
          } };
      }(), Bn(), "user")] }, pb: { name: "signOut", j: [] }, toJSON: { name: "toJSON", j: [V(null, !0)] },
    Tc: { name: "useDeviceLanguage", j: [] }, Uc: { name: "verifyPasswordResetCode", j: [V("code")] } });Jn(Km.prototype, { lc: { name: "languageCode", Ya: X(V(), Bn(), "languageCode") }, ti: { name: "tenantId", Ya: X(V(), Bn(), "tenantId") } });Km.Persistence = nk;Km.Persistence.LOCAL = "local";Km.Persistence.SESSION = "session";Km.Persistence.NONE = "none";
  Y(Q.prototype, { "delete": { name: "delete", j: [] }, dc: { name: "getIdTokenResult", j: [zn("opt_forceRefresh", !0)] }, G: { name: "getIdToken", j: [zn("opt_forceRefresh", !0)] }, rc: { name: "linkAndRetrieveDataWithCredential", j: [Fn()] }, eb: { name: "linkWithCredential", j: [Fn()] }, sc: { name: "linkWithPhoneNumber", j: [V("phoneNumber"), Hn()] }, tc: { name: "linkWithPopup", j: [Gn()] }, uc: { name: "linkWithRedirect", j: [Gn()] }, Ac: { name: "reauthenticateAndRetrieveDataWithCredential", j: [Fn()] }, gb: { name: "reauthenticateWithCredential", j: [Fn()] }, Bc: { name: "reauthenticateWithPhoneNumber",
      j: [V("phoneNumber"), Hn()] }, Cc: { name: "reauthenticateWithPopup", j: [Gn()] }, Dc: { name: "reauthenticateWithRedirect", j: [Gn()] }, reload: { name: "reload", j: [] }, jb: { name: "sendEmailVerification", j: [X(W("opt_actionCodeSettings", !0), Bn(null, !0), "opt_actionCodeSettings", !0)] }, toJSON: { name: "toJSON", j: [V(null, !0)] }, Qc: { name: "unlink", j: [V("provider")] }, rb: { name: "updateEmail", j: [V("email")] }, sb: { name: "updatePassword", j: [V("password")] }, Sc: { name: "updatePhoneNumber", j: [Fn("phone")] }, tb: { name: "updateProfile", j: [W("profile")] } });
  Y(an.prototype, { execute: { name: "execute" }, render: { name: "render" }, reset: { name: "reset" }, getResponse: { name: "getResponse" } });Y($m.prototype, { execute: { name: "execute" }, render: { name: "render" }, reset: { name: "reset" }, getResponse: { name: "getResponse" } });Y(B.prototype, { ka: { name: "finally" }, s: { name: "catch" }, then: { name: "then" } });Jn(Al.prototype, { appVerificationDisabled: { name: "appVerificationDisabledForTesting", Ya: zn("appVerificationDisabledForTesting") } });Y(Bl.prototype, { confirm: { name: "confirm", j: [V("verificationCode")] } });
  Z(jg, "fromJSON", function (a) {
    a = n(a) ? JSON.parse(a) : a;for (var b, c = [ug, Lg, Sg, rg], d = 0; d < c.length; d++) {
      if (b = c[d](a)) return b;
    }return null;
  }, [X(V(), W(), "json")]);Z(Gg, "credential", function (a, b) {
    return new Fg(a, b);
  }, [V("email"), V("password")]);Y(Fg.prototype, { A: { name: "toJSON", j: [V(null, !0)] } });Y(xg.prototype, { wa: { name: "addScope", j: [V("scope")] }, Ea: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(xg, "credential", yg, [X(V(), W(), "token")]);Z(Gg, "credentialWithLink", Mg, [V("email"), V("emailLink")]);
  Y(zg.prototype, { wa: { name: "addScope", j: [V("scope")] }, Ea: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(zg, "credential", Ag, [X(V(), W(), "token")]);Y(Bg.prototype, { wa: { name: "addScope", j: [V("scope")] }, Ea: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(Bg, "credential", Cg, [X(V(), X(W(), Bn()), "idToken"), X(V(), Bn(), "accessToken", !0)]);Y(Dg.prototype, { Ea: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Z(Dg, "credential", Eg, [X(V(), W(), "token"), V("secret", !0)]);
  Y(O.prototype, { wa: { name: "addScope", j: [V("scope")] }, credential: { name: "credential", j: [X(V(), X(W(), Bn()), "optionsOrIdToken"), X(V(), Bn(), "accessToken", !0)] }, Ea: { name: "setCustomParameters", j: [W("customOAuthParameters")] } });Y(sg.prototype, { A: { name: "toJSON", j: [V(null, !0)] } });Y(mg.prototype, { A: { name: "toJSON", j: [V(null, !0)] } });Z(Tg, "credential", Vg, [V("verificationId"), V("verificationCode")]);Y(Tg.prototype, { Va: { name: "verifyPhoneNumber", j: [V("phoneNumber"), Hn()] } });
  Y(Og.prototype, { A: { name: "toJSON", j: [V(null, !0)] } });Y(M.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(dh.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(ch.prototype, { toJSON: { name: "toJSON", j: [V(null, !0)] } });Y(wn.prototype, { clear: { name: "clear", j: [] }, render: { name: "render", j: [] }, verify: { name: "verify", j: [] } });Z(qf, "parseLink", yf, [V("link")]);
  (function () {
    if ("undefined" !== typeof index_esm["a" /* default */] && index_esm["a" /* default */].INTERNAL && index_esm["a" /* default */].INTERNAL.registerService) {
      var a = { ActionCodeInfo: { Operation: { EMAIL_SIGNIN: hf, PASSWORD_RESET: "PASSWORD_RESET", RECOVER_EMAIL: "RECOVER_EMAIL", VERIFY_EMAIL: "VERIFY_EMAIL" } }, Auth: Km, AuthCredential: jg, Error: M };Z(a, "EmailAuthProvider", Gg, []);Z(a, "FacebookAuthProvider", xg, []);Z(a, "GithubAuthProvider", zg, []);Z(a, "GoogleAuthProvider", Bg, []);Z(a, "TwitterAuthProvider", Dg, []);Z(a, "OAuthProvider", O, [V("providerId")]);Z(a, "SAMLAuthProvider", wg, [V("providerId")]);Z(a, "PhoneAuthProvider", Tg, [Dn()]);Z(a, "RecaptchaVerifier", wn, [X(V(), Cn(), "recaptchaContainer"), W("recaptchaParameters", !0), En()]);Z(a, "ActionCodeURL", qf, []);index_esm["a" /* default */].INTERNAL.registerService("auth", function (b, c) {
        b = new Km(b);c({ INTERNAL: { getUid: t(b.getUid, b), getToken: t(b.cc, b), addAuthTokenListener: t(b.Wb, b), removeAuthTokenListener: t(b.Ec, b) } });return b;
      }, a, function (b, c) {
        if ("create" === b) try {
          c.auth();
        } catch (d) {}
      });index_esm["a" /* default */].INTERNAL.extendNamespace({ User: Q });
    } else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
  })();
}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});

//# sourceMappingURL=auth.esm.js.map
// CONCATENATED MODULE: ../node_modules/firebase/auth/dist/index.esm.js

//# sourceMappingURL=index.esm.js.map
// EXTERNAL MODULE: ../node_modules/@firebase/database/dist/index.esm.js
var dist_index_esm = __webpack_require__("4EMW");

// CONCATENATED MODULE: ../node_modules/firebase/database/dist/index.esm.js

//# sourceMappingURL=index.esm.js.map
// CONCATENATED MODULE: ./components/firebase.js




var config = {
	apiKey: 'AIzaSyB_sK0hZM_uLzDpfiCkkrKfelHOY8VkuWY',
	authDomain: 'dscomg-6d3e0.firebaseapp.com',
	databaseURL: 'https://dscomg-6d3e0.firebaseio.com',
	projectId: 'dscomg-6d3e0',
	storageBucket: 'dscomg-6d3e0.appspot.com',
	messagingSenderId: '154730227119',
	appId: '1:154730227119:web:2bcd7929668a1c8125bb5a'
};
index_esm["b" /* firebase */].initializeApp(config);
if (typeof window !== 'undefined') {

	__webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, "JTUh")).then(function () {
		return index_esm["b" /* firebase */].performance();
	});
}
/* harmony default export */ var firebase = (index_esm["b" /* firebase */]);
// EXTERNAL MODULE: ../node_modules/preact-router/match.js
var match = __webpack_require__("sw5u");
var match_default = /*#__PURE__*/__webpack_require__.n(match);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Drawer/index.js
var Drawer = __webpack_require__("ynRT");
var Drawer_default = /*#__PURE__*/__webpack_require__.n(Drawer);

// EXTERNAL MODULE: ../node_modules/preact-material-components/TopAppBar/index.js
var TopAppBar = __webpack_require__("fHKL");
var TopAppBar_default = /*#__PURE__*/__webpack_require__.n(TopAppBar);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Dialog/index.js
var Dialog = __webpack_require__("JtzT");
var Dialog_default = /*#__PURE__*/__webpack_require__.n(Dialog);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Dialog/style.css
var Dialog_style = __webpack_require__("sEh6");
var Dialog_style_default = /*#__PURE__*/__webpack_require__.n(Dialog_style);

// EXTERNAL MODULE: ../node_modules/preact-material-components/TopAppBar/style.css
var TopAppBar_style = __webpack_require__("FnKr");
var TopAppBar_style_default = /*#__PURE__*/__webpack_require__.n(TopAppBar_style);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Drawer/style.css
var Drawer_style = __webpack_require__("RYBc");
var Drawer_style_default = /*#__PURE__*/__webpack_require__.n(Drawer_style);

// EXTERNAL MODULE: ../node_modules/preact-material-components/List/style.css
var List_style = __webpack_require__("u+vq");
var List_style_default = /*#__PURE__*/__webpack_require__.n(List_style);

// EXTERNAL MODULE: ./components/io_logo/style.css
var io_logo_style = __webpack_require__("QK/6");
var io_logo_style_default = /*#__PURE__*/__webpack_require__.n(io_logo_style);

// CONCATENATED MODULE: ./components/io_logo/index.js


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var io_logo__ref2 = Object(preact_min["h"])(
	'svg',
	{
		xmlns: 'http://www.w3.org/2000/svg',
		width: '612',
		height: '280',
		viewBox: '0 0 612 280'
	},
	Object(preact_min["h"])(
		'g',
		{ fill: 'none', fillRule: 'evenodd', stroke: 'none', strokeWidth: '1' },
		Object(preact_min["h"])(
			'g',
			{ transform: 'translate(-24 -190) translate(24 190)' },
			Object(preact_min["h"])(
				'g',
				{ transform: 'translate(0 72)' },
				Object(preact_min["h"])(
					'g',
					{ fill: '#4185F3', transform: 'translate(429.947)' },
					Object(preact_min["h"])('path', {
						d: 'M6.14544674 107.695895L22.4170034 173.490354 60.1950276 198.749937 108.405615 198.749937 152.93206 186.295052 170.605385 145.668455 170.605385 107.695895z',
						opacity: '0.229'
					}),
					Object(preact_min["h"])('path', {
						fillRule: 'nonzero',
						d: 'M90.2 207.548c58.657 0 85.772-40.18 85.772-93.105 0-2.217 0-6.928-.553-11.916H109.29v14.687h49.526c-1.106 45.167-21.304 74.817-68.34 74.817-48.974-.277-73.876-36.578-73.322-88.395.276-52.095 24.348-88.118 73.321-88.118 30.436 0 51.464 16.071 60.871 40.733l15.771-4.987C156.604 20.505 130.318 0 90.2 0 31.82 0 0 41.842 0 103.636c0 62.07 32.096 103.912 90.2 103.912z'
					})
				),
				Object(preact_min["h"])(
					'g',
					{ fill: '#049C59' },
					Object(preact_min["h"])('path', {
						d: 'M5.79994201 107.972996L22.0767817 173.767455 59.8670715 199.027038 108.093312 199.027038 152.634213 186.572153 170.313277 145.945556 170.313277 107.972996z',
						opacity: '0.229'
					}),
					Object(preact_min["h"])('path', {
						fillRule: 'nonzero',
						d: 'M90.506 207.825c59.783 0 90.782-42.673 90.782-103.912C181.288 42.673 150.289 0 90.506 0 30.999 0 0 42.673 0 103.913c0 61.239 30.999 103.912 90.506 103.912zm0-15.517c-48.99-.277-73.9-36.577-73.346-88.395.277-52.095 24.356-88.395 73.346-88.395 48.989.277 73.622 36.3 73.622 88.395 0 51.818-24.633 88.395-73.622 88.395z'
					})
				),
				Object(preact_min["h"])(
					'g',
					{ transform: 'translate(212.092 4.597)' },
					Object(preact_min["h"])('path', {
						fill: '#FFBD00',
						d: 'M11.2763205 103.76463L11.2763205 32.7586188 33.0297424 59.9697864 93.3605357 182.344095 180.161284 23.4068628 186.981828 103.76463 133.528814 103.76463 93.3605357 194.773191 52.163605 103.76463z',
						opacity: '0.294'
					}),
					Object(preact_min["h"])('path', {
						fill: '#FABB07',
						fillRule: 'nonzero',
						d: 'M15.5131075 199.412768L15.5131075 36.5590075 89.7544078 199.412768 103.051357 199.412768 177.292657 36.5590075 177.292657 199.135806 192.805765 199.135806 192.805765 0 177.569677 0 96.4028825 176.424907 14.959068 0 0 0 0 199.412768z'
					})
				)
			),
			Object(preact_min["h"])('path', {
				fill: '#666C73',
				fillRule: 'nonzero',
				d: 'M13.67 41.707c6.326 0 11.408-1.872 15.245-5.617 3.838-3.744 5.757-8.677 5.757-14.797 0-6.083-1.919-11.006-5.757-14.77C25.078 2.76 19.995.878 13.67.878H1v40.83h12.67zm.048-5.048H6.352V5.927h7.366c4.833 0 8.642 1.366 11.426 4.097 2.784 2.732 4.176 6.488 4.176 11.269 0 4.818-1.392 8.584-4.176 11.296-2.784 2.713-6.593 4.07-11.426 4.07zm38.031 5.926c2.865 0 5.43-.662 7.695-1.987 2.265-1.324 4.036-3.16 5.313-5.506l-4.761-2.271c-1.936 3.33-4.607 4.996-8.014 4.996-2.478 0-4.607-.833-6.388-2.498-1.781-1.666-2.71-3.86-2.788-6.586h22.358l.058-.567c0-4.807-1.249-8.544-3.746-11.212-2.497-2.669-5.855-4.003-10.075-4.003-4.104 0-7.472 1.41-10.104 4.23-2.633 2.82-3.95 6.348-3.95 10.587 0 4.277 1.356 7.816 4.066 10.616 2.71 2.801 6.155 4.201 10.336 4.201zm7.898-18.22H43.37c.463-2.075 1.419-3.728 2.867-4.959 1.448-1.23 3.177-1.845 5.185-1.845 2.433 0 4.374.644 5.822 1.932 1.448 1.288 2.25 2.912 2.404 4.873zm23.45 17.342l11.56-27.878h-5.664l-8.438 21.62h-.116l-8.323-21.62h-5.78L77.78 41.707h5.318zm26.63.878c2.865 0 5.43-.662 7.695-1.987 2.265-1.324 4.036-3.16 5.313-5.506l-4.761-2.271c-1.936 3.33-4.607 4.996-8.014 4.996-2.478 0-4.607-.833-6.388-2.498-1.78-1.666-2.71-3.86-2.787-6.586h22.357l.058-.567c0-4.807-1.249-8.544-3.746-11.212-2.497-2.669-5.855-4.003-10.075-4.003-4.104 0-7.472 1.41-10.104 4.23-2.633 2.82-3.95 6.348-3.95 10.587 0 4.277 1.356 7.816 4.066 10.616 2.71 2.801 6.155 4.201 10.337 4.201zm7.898-18.22h-16.278c.463-2.075 1.419-3.728 2.867-4.959 1.449-1.23 3.177-1.845 5.185-1.845 2.433 0 4.374.644 5.822 1.932 1.448 1.288 2.25 2.912 2.404 4.873zm15.61 17.342V.878h-5.352v40.83h5.352zm18.843.878c4.211 0 7.689-1.4 10.432-4.2 2.783-2.763 4.174-6.302 4.174-10.617 0-4.276-1.391-7.815-4.174-10.616-2.743-2.8-6.22-4.2-10.432-4.2-4.212 0-7.71 1.4-10.491 4.2-2.744 2.8-4.115 6.34-4.115 10.616 0 4.277 1.371 7.816 4.115 10.616 2.782 2.801 6.279 4.201 10.49 4.201zm0-4.829c-2.622 0-4.82-.932-6.594-2.795-1.774-1.864-2.66-4.298-2.66-7.302 0-2.967.886-5.382 2.66-7.246 1.812-1.901 4.01-2.852 6.594-2.852 2.583 0 4.78.95 6.593 2.852 1.774 1.864 2.66 4.279 2.66 7.246 0 3.004-.886 5.438-2.66 7.302-1.774 1.863-3.971 2.795-6.593 2.795zM176.258 54V41.72l-.232-3.867h.232c.928 1.44 2.253 2.597 3.974 3.468 1.72.872 3.626 1.308 5.714 1.308 3.752 0 6.923-1.44 9.515-4.32 2.668-2.881 4.003-6.387 4.003-10.519 0-4.093-1.335-7.6-4.003-10.518-2.592-2.88-5.763-4.32-9.515-4.32-2.088 0-3.993.435-5.714 1.307-1.721.872-3.046 2.028-3.974 3.468h-.232v-3.866h-5.106V54h5.338zm8.822-16.244c-2.585 0-4.747-.932-6.483-2.795-1.699-1.902-2.548-4.336-2.548-7.302 0-2.929.85-5.344 2.548-7.246 1.736-1.901 3.898-2.852 6.483-2.852 2.548 0 4.69.95 6.427 2.852 1.736 1.902 2.605 4.317 2.605 7.246 0 2.966-.869 5.381-2.605 7.245-1.737 1.901-3.88 2.852-6.427 2.852zm31.684 4.83c2.865 0 5.43-.663 7.694-1.988 2.265-1.324 4.036-3.16 5.314-5.506l-4.762-2.271c-1.936 3.33-4.607 4.996-8.014 4.996-2.477 0-4.607-.833-6.388-2.498-1.78-1.666-2.71-3.86-2.787-6.586h22.357l.058-.567c0-4.807-1.248-8.544-3.745-11.212-2.497-2.669-5.856-4.003-10.075-4.003-4.104 0-7.472 1.41-10.105 4.23-2.632 2.82-3.949 6.348-3.949 10.587 0 4.277 1.355 7.816 4.065 10.616 2.71 2.801 6.156 4.201 10.337 4.201zm7.675-18.22H208.16c.464-2.076 1.42-3.73 2.868-4.96s3.176-1.845 5.185-1.845c2.433 0 4.373.644 5.822 1.932 1.448 1.288 2.25 2.912 2.404 4.873zm15.83 17.341V26.302c0-2.13.745-3.994 2.238-5.591 1.492-1.598 3.246-2.397 5.261-2.397 1.434 0 2.48.134 3.14.4l1.628-5.078c-1.086-.457-2.403-.685-3.954-.685-1.628 0-3.285.523-4.97 1.57-1.687 1.045-2.801 2.31-3.344 3.793h-.232V13.75h-5.117v27.957h5.35zm38.815.878c3.853 0 7.128-1.062 9.826-3.188 2.658-2.163 3.987-5.029 3.987-8.597 0-2.96-.895-5.456-2.687-7.486-1.792-2.03-4.788-3.748-8.987-5.153-4.123-1.404-6.801-2.618-8.034-3.643-1.117-1.025-1.676-2.24-1.676-3.644 0-1.708.713-3.093 2.138-4.156 1.426-1.139 3.18-1.708 5.26-1.708 1.965 0 3.631.503 5 1.509 1.367 1.006 2.282 2.268 2.744 3.786l4.97-2.05c-.77-2.353-2.31-4.308-4.623-5.864C284.69.797 281.955 0 278.795 0c-3.583 0-6.608 1.063-9.074 3.188-2.427 2.126-3.64 4.688-3.64 7.686 0 4.289 2.195 7.534 6.588 9.735.809.418 2.87 1.215 6.184 2.392 3.275 1.1 5.51 2.239 6.704 3.416 1.272 1.214 1.908 2.675 1.908 4.383 0 2.05-.771 3.691-2.312 4.925s-3.526 1.85-5.953 1.85a8.52 8.52 0 01-3.179-.597 9.852 9.852 0 01-2.745-1.652 10.768 10.768 0 01-2.168-2.533 12.855 12.855 0 01-1.445-3.302l-5.086 2.05c1.002 3.415 2.813 6.11 5.433 8.084 2.62 1.974 5.645 2.96 9.074 2.96zm29.049-.439c1.841 0 3.453-.246 4.834-.74l-1.67-4.666c-.344.152-.718.275-1.121.37a5.38 5.38 0 01-1.237.142c-.921 0-1.746-.332-2.475-.996-.729-.664-1.093-1.925-1.093-3.784V18.585h6.905v-4.78h-6.905V5.268h-5.295v8.537h-4.949v4.78h4.95V34.18c.038 2.504.815 4.458 2.33 5.862 1.515 1.403 3.424 2.105 5.726 2.105zm19.705.44c1.82 0 3.57-.455 5.254-1.365 1.684-.909 2.932-2.045 3.745-3.41h.233v3.865h5.109V13.83h-5.342V29.23c0 2.35-.716 4.367-2.148 6.053-1.432 1.686-3.213 2.529-5.341 2.529-4.568 0-6.91-2.274-7.026-6.82V13.829h-5.341v17.504c0 3.6.938 6.374 2.816 8.326 1.877 1.95 4.557 2.926 8.04 2.926zm32.095 0c2.089 0 3.993-.437 5.714-1.311 1.722-.874 3.046-2.032 3.974-3.476h.232v3.875h5.106V.878h-5.338v12.877l.232 3.874h-.232c-.928-1.443-2.252-2.602-3.974-3.475-1.72-.874-3.625-1.31-5.714-1.31-3.713 0-6.904 1.443-9.572 4.33-2.63 2.924-3.945 6.438-3.945 10.54 0 4.103 1.315 7.616 3.945 10.541 2.668 2.887 5.86 4.33 9.572 4.33zm.866-4.83c-2.548 0-4.69-.95-6.426-2.852-1.737-1.864-2.605-4.279-2.605-7.245 0-2.929.868-5.344 2.605-7.246 1.736-1.901 3.878-2.852 6.426-2.852 2.586 0 4.728.95 6.426 2.852 1.737 1.902 2.605 4.317 2.605 7.246 0 3.004-.868 5.438-2.605 7.302-1.66 1.863-3.802 2.795-6.426 2.795zm32.798 4.83c2.865 0 5.43-.663 7.695-1.988 2.264-1.324 4.036-3.16 5.313-5.506l-4.762-2.271c-1.935 3.33-4.607 4.996-8.013 4.996-2.478 0-4.607-.833-6.388-2.498-1.781-1.666-2.71-3.86-2.788-6.586h22.358l.058-.567c0-4.807-1.249-8.544-3.746-11.212-2.497-2.669-5.855-4.003-10.075-4.003-4.104 0-7.472 1.41-10.105 4.23-2.632 2.82-3.948 6.348-3.948 10.587 0 4.277 1.355 7.816 4.065 10.616 2.71 2.801 6.155 4.201 10.336 4.201zm7.675-18.22h-16.279c.464-2.076 1.42-3.73 2.868-4.96s3.177-1.845 5.185-1.845c2.433 0 4.374.644 5.822 1.932 1.448 1.288 2.25 2.912 2.404 4.873zm15.822 17.341v-15.4c0-2.35.716-4.367 2.148-6.053 1.432-1.686 3.213-2.529 5.342-2.529 4.567 0 6.91 2.273 7.025 6.82v17.162h5.342V24.204c0-3.6-.939-6.375-2.816-8.326-1.877-1.951-4.558-2.927-8.042-2.927-1.819 0-3.57.455-5.254 1.364-1.684.91-2.932 2.046-3.745 3.41h-.232v-3.864h-5.11v27.846h5.342zm35.538.44c1.842 0 3.453-.247 4.834-.74l-1.669-4.667c-.345.152-.72.275-1.122.37a5.38 5.38 0 01-1.237.142c-.92 0-1.746-.332-2.475-.996-.729-.664-1.093-1.925-1.093-3.784V18.585h6.906v-4.78h-6.906V5.268h-5.294v8.537h-4.95v4.78h4.95V34.18c.038 2.504.815 4.458 2.33 5.862 1.516 1.403 3.424 2.105 5.726 2.105zm40.826.438c3.274 0 6.337-.635 9.188-1.907 2.85-1.271 5.259-3.065 7.223-5.38l-3.871-3.7c-3.545 3.985-7.725 5.977-12.54 5.977-4.585 0-8.418-1.518-11.5-4.554-3.044-2.999-4.565-6.908-4.565-11.728 0-4.82 1.521-8.73 4.565-11.728 3.082-3.037 6.915-4.555 11.5-4.555 4.623 0 8.417 1.765 11.384 5.295l3.814-3.644C504.765 2.221 499.699 0 493.458 0c-6.164 0-11.288 2.05-15.372 6.149-4.084 4.023-6.125 9.07-6.125 15.144 0 6.072 2.041 11.14 6.125 15.2 4.122 4.062 9.246 6.092 15.372 6.092zm26.446-.878V.878h-5.352v40.83h5.352zm16.878.878c1.82 0 3.57-.454 5.255-1.364 1.683-.909 2.932-2.045 3.744-3.41h.233v3.865h5.109V13.83h-5.342V29.23c0 2.35-.716 4.367-2.148 6.053-1.432 1.686-3.212 2.529-5.341 2.529-4.568 0-6.91-2.274-7.026-6.82V13.829h-5.341v17.504c0 3.6.938 6.374 2.816 8.326 1.877 1.95 4.557 2.926 8.041 2.926zm35.61 0c3.752 0 6.924-1.443 9.515-4.33 2.669-2.887 4.003-6.4 4.003-10.54 0-4.103-1.334-7.617-4.003-10.541-2.591-2.887-5.763-4.33-9.514-4.33-2.089 0-3.994.436-5.715 1.31-1.721.873-3.046 2.032-3.974 3.475h-.232l.232-3.874V.878h-5.337v40.796h5.105v-3.875h.232c.928 1.444 2.253 2.602 3.974 3.476 1.721.874 3.626 1.31 5.715 1.31zm-.865-4.829c-2.586 0-4.747-.932-6.484-2.795-1.698-1.902-2.547-4.336-2.547-7.302 0-2.929.849-5.344 2.547-7.246 1.737-1.901 3.898-2.852 6.484-2.852 2.547 0 4.69.95 6.426 2.852 1.737 1.902 2.605 4.317 2.605 7.246 0 2.966-.868 5.381-2.605 7.245-1.737 1.901-3.879 2.852-6.426 2.852zm29.032 4.83c3.29 0 6.02-.833 8.189-2.499 2.168-1.665 3.252-3.709 3.252-6.13 0-4.202-2.826-6.983-8.48-8.346l-4.297-1.079c-3.059-.68-4.588-1.816-4.588-3.406 0-.984.552-1.816 1.655-2.498 1.104-.681 2.352-1.022 3.746-1.022 1.51 0 2.875.332 4.095.994 1.22.662 2.1 1.58 2.642 2.753l4.762-1.93c-.813-1.968-2.236-3.539-4.268-4.712-2.033-1.173-4.308-1.76-6.824-1.76-3.291 0-5.992.767-8.102 2.3-2.11 1.532-3.165 3.566-3.165 6.102 0 3.86 2.768 6.472 8.305 7.835l4.878 1.192c2.788.832 4.182 2.138 4.182 3.917 0 .984-.571 1.835-1.713 2.555-1.143.719-2.566 1.078-4.27 1.078-1.587 0-3.048-.463-4.384-1.39-1.336-.928-2.352-2.224-3.049-3.89l-4.762 1.988c.929 2.384 2.478 4.305 4.646 5.762 2.168 1.457 4.685 2.185 7.55 2.185z'
			})
		)
	)
);

var _ref3 = Object(preact_min["h"])('br', null);

var io_logo_IoLogo = function (_Component) {
	_inherits(IoLogo, _Component);

	function IoLogo() {
		_classCallCheck(this, IoLogo);

		return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	}

	IoLogo.prototype.render = function render(_ref) {
		var rootPath = _ref.rootPath;

		return Object(preact_min["h"])(
			'div',
			{ 'class': io_logo_style_default.a.logo_container },
			io_logo__ref2,
			_ref3
		);
	};

	return IoLogo;
}(preact_min["Component"]);


// CONCATENATED MODULE: ./components/SVG/Icons/menu.js


var menu__ref = Object(preact_min["h"])(
	"g",
	null,
	Object(preact_min["h"])("path", { d: "M4,18h16c0.55,0,1-0.45,1-1v0c0-0.55-0.45-1-1-1H4c-0.55,0-1,0.45-1,1v0C3,17.55,3.45,18,4,18z M4,13h16c0.55,0,1-0.45,1-1 v0c0-0.55-0.45-1-1-1H4c-0.55,0-1,0.45-1,1v0C3,12.55,3.45,13,4,13z M3,7L3,7c0,0.55,0.45,1,1,1h16c0.55,0,1-0.45,1-1v0 c0-0.55-0.45-1-1-1H4C3.45,6,3,6.45,3,7z" })
);

var menu_MenuIcon = function MenuIcon(props) {
	return Object(preact_min["h"])(
		"svg",
		props,
		menu__ref
	);
};

/* harmony default export */ var menu = (menu_MenuIcon);
// CONCATENATED MODULE: ./components/SVG/Icons/home.js


var home__ref = Object(preact_min["h"])(
	"div",
	null,
	Object(preact_min["h"])(
		"svg",
		null,
		Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
		Object(preact_min["h"])("path", { d: "M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z" })
	),
	Object(preact_min["h"])(
		"svg",
		{ active: true },
		Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
		Object(preact_min["h"])("path", { d: "M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3zm5 15h-2v-6H9v6H7v-7.81l5-4.5 5 4.5V18z" }),
		Object(preact_min["h"])("path", { opacity: ".3", d: "M7 10.19V18h2v-6h6v6h2v-7.81l-5-4.5z" })
	)
);

var HomeIcon = function HomeIcon() {
	return home__ref;
};

/* harmony default export */ var home = (HomeIcon);
// CONCATENATED MODULE: ./components/SVG/Icons/schedule.js


var schedule__ref = Object(preact_min["h"])(
	"div",
	null,
	Object(preact_min["h"])(
		"svg",
		null,
		Object(preact_min["h"])(
			"g",
			null,
			Object(preact_min["h"])("path", { d: "M19,3h-1V2c0-0.55-0.45-1-1-1h0c-0.55,0-1,0.45-1,1v1H8V2c0-0.55-0.45-1-1-1h0C6.45,1,6,1.45,6,2v1H5 C3.89,3,3.01,3.9,3.01,5L3,19c0,1.1,0.89,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M18,19H6c-0.55,0-1-0.45-1-1V8h14v10 C19,18.55,18.55,19,18,19z M8,10h3c0.55,0,1,0.45,1,1v3c0,0.55-0.45,1-1,1H8c-0.55,0-1-0.45-1-1v-3C7,10.45,7.45,10,8,10z" })
		)
	),
	Object(preact_min["h"])(
		"svg",
		{ active: true },
		Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
		Object(preact_min["h"])("path", { opacity: ".3", d: "M19,3h-1V2c0-0.55-0.45-1-1-1h0c-0.55,0-1,0.45-1,1v1H8V2c0-0.55-0.45-1-1-1h0C6.45,1,6,1.45,6,2v1H5 C3.89,3,3.01,3.9,3.01,5L3,19c0,1.1,0.89,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M18,19H6c-0.55,0-1-0.45-1-1V8h14v10 C19,18.55,18.55,19,18,19z M8,10h3c0.55,0,1,0.45,1,1v3c0,0.55-0.45,1-1,1H8c-0.55,0-1-0.45-1-1v-3C7,10.45,7.45,10,8,10z" }),
		Object(preact_min["h"])("path", { d: "M19,3h-1V2c0-0.55-0.45-1-1-1h0c-0.55,0-1,0.45-1,1v1H8V2c0-0.55-0.45-1-1-1h0C6.45,1,6,1.45,6,2v1H5 C3.89,3,3.01,3.9,3.01,5L3,19c0,1.1,0.89,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M18,19H6c-0.55,0-1-0.45-1-1V8h14v10 C19,18.55,18.55,19,18,19z M8,10h3c0.55,0,1,0.45,1,1v3c0,0.55-0.45,1-1,1H8c-0.55,0-1-0.45-1-1v-3C7,10.45,7.45,10,8,10z" })
	)
);

var schedule_Schedule = function Schedule() {
	return schedule__ref;
};

/* harmony default export */ var Icons_schedule = (schedule_Schedule);
// CONCATENATED MODULE: ./components/SVG/Icons/speaker.js


var speaker__ref = Object(preact_min["h"])(
	"div",
	null,
	Object(preact_min["h"])(
		"svg",
		null,
		Object(preact_min["h"])(
			"g",
			null,
			Object(preact_min["h"])("path", { d: "M16,11c1.66,0,2.99-1.34,2.99-3c0-1.66-1.33-3-2.99-3s-3,1.34-3,3C13,9.66,14.34,11,16,11z" }),
			Object(preact_min["h"])("path", { d: "M8,11c1.66,0,2.99-1.34,2.99-3c0-1.66-1.33-3-2.99-3S5,6.34,5,8C5,9.66,6.34,11,8,11z" }),
			Object(preact_min["h"])("path", { d: "M8,13c-2.33,0-7,1.17-7,3.5V18c0,0.55,0.45,1,1,1h12c0.55,0,1-0.45,1-1v-1.5C15,14.17,10.33,13,8,13z" }),
			Object(preact_min["h"])("path", { d: "M16,13c-0.29,0-0.62,0.02-0.97,0.05c0.02,0.01,0.03,0.03,0.04,0.04C16.21,13.92,17,15.03,17,16.5V18 c0,0.35-0.07,0.69-0.18,1H22c0.55,0,1-0.45,1-1v-1.5C23,14.17,18.33,13,16,13z" })
		)
	),
	Object(preact_min["h"])(
		"svg",
		{ active: true },
		Object(preact_min["h"])(
			"g",
			null,
			Object(preact_min["h"])("path", { d: "M16,11c1.66,0,2.99-1.34,2.99-3c0-1.66-1.33-3-2.99-3s-3,1.34-3,3C13,9.66,14.34,11,16,11z" }),
			Object(preact_min["h"])("path", { d: "M8,11c1.66,0,2.99-1.34,2.99-3c0-1.66-1.33-3-2.99-3S5,6.34,5,8C5,9.66,6.34,11,8,11z" }),
			Object(preact_min["h"])("path", { d: "M8,13c-2.33,0-7,1.17-7,3.5V18c0,0.55,0.45,1,1,1h12c0.55,0,1-0.45,1-1v-1.5C15,14.17,10.33,13,8,13z" }),
			Object(preact_min["h"])("path", { d: "M16,13c-0.29,0-0.62,0.02-0.97,0.05c0.02,0.01,0.03,0.03,0.04,0.04C16.21,13.92,17,15.03,17,16.5V18 c0,0.35-0.07,0.69-0.18,1H22c0.55,0,1-0.45,1-1v-1.5C23,14.17,18.33,13,16,13z" })
		)
	)
);

var SpeakerIcon = function SpeakerIcon() {
	return speaker__ref;
};

/* harmony default export */ var speaker = (SpeakerIcon);
// CONCATENATED MODULE: ./components/SVG/Icons/faq.js


var faq__ref = Object(preact_min["h"])(
	"div",
	null,
	Object(preact_min["h"])(
		"svg",
		null,
		Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
		Object(preact_min["h"])("path", { d: "M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" })
	),
	Object(preact_min["h"])(
		"svg",
		{ active: true },
		Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
		Object(preact_min["h"])("path", { opacity: ".3", d: "M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm1 13h-2v-6h2v6zm0-8h-2V7h2v2z" }),
		Object(preact_min["h"])("path", { d: "M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" })
	)
);

var FaqIcon = function FaqIcon() {
	return faq__ref;
};

/* harmony default export */ var faq = (FaqIcon);
// CONCATENATED MODULE: ./components/SVG/Icons/map.js


var map__ref = Object(preact_min["h"])(
    "div",
    null,
    Object(preact_min["h"])(
        "svg",
        null,
        Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
        Object(preact_min["h"])("path", { d: "M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM10 5.47l4 1.4v11.66l-4-1.4V5.47zm-5 .99l3-1.01v11.7l-3 1.16V6.46zm14 11.08l-3 1.01V6.86l3-1.16v11.84z" })
    ),
    Object(preact_min["h"])(
        "svg",
        { active: true },
        Object(preact_min["h"])("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
        Object(preact_min["h"])("path", { opacity: ".3", d: "M5 18.31l3-1.16V5.45L5 6.46zm11 .24l3-1.01V5.69l-3 1.17z" }),
        Object(preact_min["h"])("path", { d: "M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM8 17.15l-3 1.16V6.46l3-1.01v11.7zm6 1.38l-4-1.4V5.47l4 1.4v11.66zm5-.99l-3 1.01V6.86l3-1.16v11.84z" })
    )
);

var MapIcon = function MapIcon() {
    return map__ref;
};

/* harmony default export */ var map = (MapIcon);
// EXTERNAL MODULE: ./components/navbar/style.css
var navbar_style = __webpack_require__("XUTr");
var navbar_style_default = /*#__PURE__*/__webpack_require__.n(navbar_style);

// CONCATENATED MODULE: ./components/navbar/index.js


function navbar__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function navbar__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function navbar__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }














// import AttendingIcon from '../SVG/Icons/attending';
// import RegistrationIcon from '../SVG/Icons/registration';






var navbar__ref2 = Object(preact_min["h"])(
	'h3',
	null,
	'Sign out?'
);

var navbar__ref3 = Object(preact_min["h"])(
	'p',
	null,
	'All saved events remain synced to your account.'
);

var _ref5 = Object(preact_min["h"])(
	'span',
	null,
	'Schedule'
);

var _ref7 = Object(preact_min["h"])(
	'span',
	null,
	'Speakers'
);

var _ref8 = Object(preact_min["h"])(io_logo_IoLogo, null);

var _ref9 = Object(preact_min["h"])(
	'h2',
	null,
	'24 June 2020'
);

var _ref10 = Object(preact_min["h"])(
	'p',
	null,
	'In a Galaxy not too far away'
);

var _ref15 = Object(preact_min["h"])(home, null);

var _ref16 = Object(preact_min["h"])(
	'span',
	null,
	'Home'
);

var _ref18 = Object(preact_min["h"])(faq, null);

var _ref19 = Object(preact_min["h"])(
	'span',
	null,
	'FAQ'
);

var _ref21 = Object(preact_min["h"])(Icons_schedule, null);

var _ref22 = Object(preact_min["h"])(
	'span',
	null,
	'Schedule'
);

var _ref24 = Object(preact_min["h"])(speaker, null);

var _ref25 = Object(preact_min["h"])(
	'span',
	null,
	'Speakers'
);

var _ref27 = Object(preact_min["h"])(map, null);

var _ref28 = Object(preact_min["h"])(
	'span',
	null,
	'Map'
);

var navbar_NavBar = function (_Component) {
	navbar__inherits(NavBar, _Component);

	function NavBar() {
		var _temp, _this, _ret;

		navbar__classCallCheck(this, NavBar);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = navbar__possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.closeDrawer = function () {
			return _this.setState({ drawerOpened: false });
		}, _this.openDrawer = function () {
			return _this.setState({ drawerOpened: !_this.state.drawerOpened });
		}, _this.signIn = function () {
			firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());
		}, _this.signOut = function () {

			// eslint-disable-next-line no-undef
			gtag('event', 'logout', { method: 'Google' });

			firebase.auth().signOut().then(function () {
				_this.signoutDig.MDComponent.close();
			});
		}, _this.toggleSigninDig = function () {
			// eslint-disable-next-line no-undef
			gtag('event', 'login', { method: 'Google' });

			_this.signIn();
		}, _this.toggleSignoutDig = function () {
			_this.signoutDig.MDComponent.show();
		}, _temp), navbar__possibleConstructorReturn(_this, _ret);
	}

	NavBar.prototype.render = function render(_ref) {
		var _this2 = this;

		var rootPath = _ref.rootPath,
		    user = _ref.user;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(
				'div',
				{ className: [navbar_style_default.a.signout_dialog, 'signout_dialog'].join(' ') },
				Object(preact_min["h"])(
					Dialog_default.a,
					{
						onCancel: this.onClose,
						onAccept: this.onClose,
						ref: function ref(signoutDig) {
							_this2.signoutDig = signoutDig;
						}
					},
					Object(preact_min["h"])(
						'div',
						{ 'class': navbar_style_default.a.dialog_body },
						navbar__ref2,
						navbar__ref3
					),
					Object(preact_min["h"])(
						Dialog_default.a.Footer,
						null,
						Object(preact_min["h"])(
							Dialog_default.a.FooterButton,
							{ 'class': navbar_style_default.a.cancel_btn, accept: true },
							'Not now'
						),
						Object(preact_min["h"])(
							Dialog_default.a.FooterButton,
							{ primary: true,
								'class': navbar_style_default.a.signout_btn,
								onClick: this.signOut
							},
							'Sign out'
						)
					)
				)
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': navbar_style_default.a.toolbar },
				Object(preact_min["h"])(
					TopAppBar_default.a,
					{ className: 'topappbar' },
					Object(preact_min["h"])(
						TopAppBar_default.a.Row,
						null,
						Object(preact_min["h"])(
							TopAppBar_default.a.Section,
							{ 'align-start': true },
							Object(preact_min["h"])(menu, { 'class': navbar_style_default.a.menu_icon, onClick: this.openDrawer })
						),
						Object(preact_min["h"])(
							'div',
							{ 'class': navbar_style_default.a.mobile_title },
							Object(preact_min["h"])(
								match["Match"],
								{ path: rootPath + 'schedule' },
								function (_ref4) {
									var path = _ref4.path;
									return path.startsWith(rootPath + 'schedule') && _ref5;
								}
							),
							Object(preact_min["h"])(
								match["Match"],
								{ path: rootPath + 'speakers' },
								function (_ref6) {
									var path = _ref6.path;
									return path.startsWith(rootPath + 'speakers') && _ref7;
								}
							)
						),
						Object(preact_min["h"])(
							TopAppBar_default.a.Section,
							{ 'align-end': true },
							user ? Object(preact_min["h"])('img', {
								crossorigin: 'anonymous',
								src: user.photoURL,
								onClick: this.toggleSignoutDig
							}) : Object(preact_min["h"])(
								'div',
								{ 'class': navbar_style_default.a.signin_btn, onClick: this.toggleSigninDig },
								'Sign In'
							)
						)
					)
				)
			),
			Object(preact_min["h"])(
				Drawer_default.a,
				{ modal: true, open: this.state.drawerOpened, onClose: this.closeDrawer },
				Object(preact_min["h"])(
					Drawer_default.a.DrawerContent,
					null,
					Object(preact_min["h"])(
						'div',
						{ 'class': navbar_style_default.a.drawer_toolbar },
						_ref8,
						_ref9,
						_ref10
					),
					Object(preact_min["h"])(
						'div',
						{ 'class': navbar_style_default.a.drawer_nav },
						Object(preact_min["h"])(
							match["Link"],
							{
								activeClassName: navbar_style_default.a.active,
								href: rootPath,
								onClick: this.closeDrawer
							},
							'Home'
						),
						Object(preact_min["h"])(
							match["Match"],
							{ path: '/faq' },
							function (_ref11) {
								var path = _ref11.path,
								    url = _ref11.url;
								return Object(preact_min["h"])(
									match["Link"],
									{
										activeClassName: navbar_style_default.a.active,
										href: rootPath + 'faq',
										onClick: _this2.closeDrawer,
										path: path.startsWith(rootPath + 'faq/') ? url : undefined
									},
									'FAQ'
								);
							}
						),
						Object(preact_min["h"])(
							match["Match"],
							{ path: '/schedule' },
							function (_ref12) {
								var path = _ref12.path,
								    url = _ref12.url;
								return Object(preact_min["h"])(
									match["Link"],
									{
										activeClassName: navbar_style_default.a.active,
										href: rootPath + 'schedule',
										onClick: _this2.closeDrawer,
										path: path.startsWith(rootPath + 'schedule/') ? url : undefined
									},
									'Schedule'
								);
							}
						),
						Object(preact_min["h"])(
							match["Match"],
							{ path: '/speakers' },
							function (_ref13) {
								var path = _ref13.path,
								    url = _ref13.url;
								return Object(preact_min["h"])(
									match["Link"],
									{
										activeClassName: navbar_style_default.a.active,
										href: rootPath + 'speakers',
										onClick: _this2.closeDrawer,
										path: path.startsWith(rootPath + 'speakers/') ? url : undefined
									},
									'Speakers'
								);
							}
						),
						Object(preact_min["h"])(
							match["Match"],
							{ path: '/map' },
							function (_ref14) {
								var path = _ref14.path,
								    url = _ref14.url;
								return Object(preact_min["h"])(
									match["Link"],
									{
										activeClassName: navbar_style_default.a.active,
										href: rootPath + 'map',
										onClick: _this2.closeDrawer,
										path: path.startsWith(rootPath + 'map/') ? url : undefined
									},
									'Map'
								);
							}
						)
					)
				)
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': navbar_style_default.a.desktop_toolbar },
				user ? Object(preact_min["h"])('img', {
					crossorigin: 'anonymous',
					src: user.photoURL,
					onClick: this.toggleSignoutDig
				}) : Object(preact_min["h"])(
					'div',
					{ 'class': navbar_style_default.a.signin_btn, onClick: this.toggleSigninDig },
					'Sign In'
				)
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': navbar_style_default.a.navbar },
				Object(preact_min["h"])(
					'div',
					{ 'class': navbar_style_default.a.hamburger },
					Object(preact_min["h"])(menu, { 'class': navbar_style_default.a.menu_icon, onClick: this.openDrawer })
				),
				Object(preact_min["h"])(
					'nav',
					null,
					Object(preact_min["h"])(
						match["Link"],
						{
							activeClassName: navbar_style_default.a.active,
							'class': navbar_style_default.a.nav_item,
							href: rootPath
						},
						_ref15,
						_ref16
					),
					Object(preact_min["h"])(
						match["Match"],
						{ path: '/faq' },
						function (_ref17) {
							var path = _ref17.path,
							    url = _ref17.url;
							return Object(preact_min["h"])(
								match["Link"],
								{
									activeClassName: navbar_style_default.a.active,
									'class': navbar_style_default.a.nav_item,
									href: rootPath + 'faq',
									path: path.startsWith(rootPath + 'faq/') ? url : undefined
								},
								_ref18,
								_ref19
							);
						}
					),
					Object(preact_min["h"])(
						match["Match"],
						{ path: '/schedule' },
						function (_ref20) {
							var path = _ref20.path,
							    url = _ref20.url;
							return Object(preact_min["h"])(
								match["Link"],
								{
									activeClassName: navbar_style_default.a.active,
									'class': navbar_style_default.a.nav_item,
									href: rootPath + 'schedule',
									path: path.startsWith(rootPath + 'schedule/') ? url : undefined
								},
								_ref21,
								_ref22
							);
						}
					),
					Object(preact_min["h"])(
						match["Match"],
						{ path: '/speakers' },
						function (_ref23) {
							var path = _ref23.path,
							    url = _ref23.url;
							return Object(preact_min["h"])(
								match["Link"],
								{
									activeClassName: navbar_style_default.a.active,
									'class': navbar_style_default.a.nav_item,
									href: rootPath + 'speakers',
									path: path.startsWith(rootPath + 'speakers/') ? url : undefined
								},
								_ref24,
								_ref25
							);
						}
					),
					Object(preact_min["h"])(
						match["Match"],
						{ path: '/map' },
						function (_ref26) {
							var path = _ref26.path,
							    url = _ref26.url;
							return Object(preact_min["h"])(
								match["Link"],
								{
									activeClassName: navbar_style_default.a.active,
									'class': navbar_style_default.a.nav_item,
									href: rootPath + 'map',
									path: path.startsWith(rootPath + 'map/') ? url : undefined
								},
								_ref27,
								_ref28
							);
						}
					),
					Object(preact_min["h"])('div', { 'class': navbar_style_default.a.line })
				)
			)
		);
	};

	return NavBar;
}(preact_min["Component"]);


// EXTERNAL MODULE: ../node_modules/idb/lib/node.js
var lib_node = __webpack_require__("C19U");
var node_default = /*#__PURE__*/__webpack_require__.n(lib_node);

// EXTERNAL MODULE: ./components/social_footer/style.css
var social_footer_style = __webpack_require__("7LhK");
var social_footer_style_default = /*#__PURE__*/__webpack_require__.n(social_footer_style);

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function classCallCheck__classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function possibleConstructorReturn__possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js

function inherits__inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// EXTERNAL MODULE: ../node_modules/prop-types/index.js
var prop_types = __webpack_require__("5D9O");
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("vCxL");

// CONCATENATED MODULE: ../node_modules/preact-context/dist/esm/context-value-emitter.js
function createEmitter(initialValue, bitmaskFactory) {
    var registeredUpdaters = [];
    var value = initialValue;
    var diff = function diff(newValue) {
        return bitmaskFactory(value, newValue) | 0;
    };
    return {
        register: function register(updater) {
            registeredUpdaters.push(updater);
            updater(value, diff(value));
        },
        unregister: function unregister(updater) {
            registeredUpdaters = registeredUpdaters.filter(function (i) {
                return i !== updater;
            });
        },
        val: function val(newValue) {
            if (newValue === undefined || newValue == value) {
                return value;
            }
            var bitmask = diff(newValue);
            value = newValue;
            registeredUpdaters.forEach(function (up) {
                return up(newValue, bitmask);
            });
            return value;
        }
    };
}
var noopEmitter = {
    register: function register(_) {
        console.warn("Consumer used without a Provider");
    },
    unregister: function unregister(_) {
        // do nothing
    },
    val: function val(_) {
        //do nothing;
    }
};
// CONCATENATED MODULE: ../node_modules/preact-context/dist/esm/utils.js
/*
 * Extracts the children from the props and returns an object containing the
 * only element of the given array (preact always passes children as an array)
 * or null otherwise. The result contains always a reference to the original
 * array of children
 *
 * @param {RenderableProps<*>} props - the component's properties
 * @return {{ child: JSX.Element | null, children: JSX.Element[]}}
 */
function getOnlyChildAndChildren(props) {
  var children = props.children;
  var child = children.length === 1 ? children[0] : null;
  return { child: child, children: children };
}
// CONCATENATED MODULE: ../node_modules/preact-context/dist/esm/context.js




function getRenderer(props) {
    var child = getOnlyChildAndChildren(props).child;
    // TODO: "render" in props check is only done to make TS happy
    return child || "render" in props && props.render;
}
var MAX_SIGNED_31_BIT_INT = 1073741823;
var defaultBitmaskFactory = function defaultBitmaskFactory() {
    return MAX_SIGNED_31_BIT_INT;
};
var ids = 0;
function _createContext(value, bitmaskFactory) {
    var key = "_preactContextProvider-" + ids++;
    var Provider = /** @class */function (_super) {
        tslib_es6["c" /* __extends */](Provider, _super);
        function Provider(props) {
            var _this = _super.call(this, props) || this;
            _this._emitter = createEmitter(props.value, bitmaskFactory || defaultBitmaskFactory);
            return _this;
        }
        Provider.prototype.getChildContext = function () {
            var _a;
            return _a = {}, _a[key] = this._emitter, _a;
        };
        Provider.prototype.componentDidUpdate = function () {
            this._emitter.val(this.props.value);
        };
        Provider.prototype.render = function () {
            var _a = getOnlyChildAndChildren(this.props),
                child = _a.child,
                children = _a.children;
            if (child) {
                return child;
            }
            // preact does not support fragments,
            // therefore we wrap the children in a span
            return Object(preact_min["h"])("span", null, children);
        };
        return Provider;
    }(preact_min["Component"]);
    var Consumer = /** @class */function (_super) {
        tslib_es6["c" /* __extends */](Consumer, _super);
        function Consumer(props, ctx) {
            var _this = _super.call(this, props, ctx) || this;
            _this._updateContext = function (value, bitmask) {
                var unstable_observedBits = _this.props.unstable_observedBits;
                var observed = unstable_observedBits === undefined || unstable_observedBits === null ? MAX_SIGNED_31_BIT_INT : unstable_observedBits;
                observed = observed | 0;
                if ((observed & bitmask) === 0) {
                    return;
                }
                _this.setState({ value: value });
            };
            _this.state = { value: _this._getEmitter().val() || value };
            return _this;
        }
        Consumer.prototype.componentDidMount = function () {
            this._getEmitter().register(this._updateContext);
        };
        Consumer.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            return this.state.value !== nextState.value || getRenderer(this.props) !== getRenderer(nextProps);
        };
        Consumer.prototype.componentWillUnmount = function () {
            this._getEmitter().unregister(this._updateContext);
        };
        Consumer.prototype.componentDidUpdate = function (_, __, prevCtx) {
            var previousProvider = prevCtx[key];
            if (previousProvider === this.context[key]) {
                return;
            }
            (previousProvider || noopEmitter).unregister(this._updateContext);
            this.componentDidMount();
        };
        Consumer.prototype.render = function () {
            // TODO: "render" in props check is only done to make TS happy
            var render = "render" in this.props && this.props.render;
            var r = getRenderer(this.props);
            if (render && render !== r) {
                console.warn("Both children and a render function are defined. Children will be used");
            }
            if (typeof r === "function") {
                return r(this.state.value);
            }
            console.warn("Consumer is expecting a function as one and only child but didn't find any");
        };
        Consumer.prototype._getEmitter = function () {
            return this.context[key] || noopEmitter;
        };
        return Consumer;
    }(preact_min["Component"]);
    return {
        Provider: Provider,
        Consumer: Consumer
    };
}
// named and default export in order to have less problems with bundlers
/* harmony default export */ var esm_context = (_createContext);
var createContext = _createContext;
// CONCATENATED MODULE: ../node_modules/preact-compat/dist/preact-compat.es.js







var version = '15.1.0'; // trick libraries to think we are react

var ELEMENTS = 'a abbr address area article aside audio b base bdi bdo big blockquote body br button canvas caption cite code col colgroup data datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins kbd keygen label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td textarea tfoot th thead time title tr track u ul var video wbr circle clipPath defs ellipse g image line linearGradient mask path pattern polygon polyline radialGradient rect stop svg text tspan'.split(' ');

var REACT_ELEMENT_TYPE = typeof Symbol !== 'undefined' && Symbol.for && Symbol.for('react.element') || 0xeac7;

var COMPONENT_WRAPPER_KEY = typeof Symbol !== 'undefined' && Symbol.for ? Symbol.for('__preactCompatWrapper') : '__preactCompatWrapper';

// don't autobind these methods since they already have guaranteed context.
var AUTOBIND_BLACKLIST = {
	constructor: 1,
	render: 1,
	shouldComponentUpdate: 1,
	componentWillReceiveProps: 1,
	componentWillUpdate: 1,
	componentDidUpdate: 1,
	componentWillMount: 1,
	componentDidMount: 1,
	componentWillUnmount: 1,
	componentDidUnmount: 1
};

var CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;

var BYPASS_HOOK = {};

/*global process*/
var DEV = false;
try {
	DEV = "production" !== 'production';
} catch (e) {}

// a component that renders nothing. Used to replace components for unmountComponentAtNode.
function EmptyComponent() {
	return null;
}

// make react think we're react.
var VNode = Object(preact_min["h"])('a', null).constructor;
VNode.prototype.$$typeof = REACT_ELEMENT_TYPE;
VNode.prototype.preactCompatUpgraded = false;
VNode.prototype.preactCompatNormalized = false;

Object.defineProperty(VNode.prototype, 'type', {
	get: function get() {
		return this.nodeName;
	},
	set: function set(v) {
		this.nodeName = v;
	},
	configurable: true
});

Object.defineProperty(VNode.prototype, 'props', {
	get: function get() {
		return this.attributes;
	},
	set: function set(v) {
		this.attributes = v;
	},
	configurable: true
});

var oldEventHook = preact_min["options"].event;
preact_min["options"].event = function (e) {
	if (oldEventHook) {
		e = oldEventHook(e);
	}
	e.persist = Object;
	e.nativeEvent = e;
	return e;
};

var oldVnodeHook = preact_min["options"].vnode;
preact_min["options"].vnode = function (vnode) {
	if (!vnode.preactCompatUpgraded) {
		vnode.preactCompatUpgraded = true;

		var tag = vnode.nodeName,
		    attrs = vnode.attributes = vnode.attributes == null ? {} : extend({}, vnode.attributes);

		if (typeof tag === 'function') {
			if (tag[COMPONENT_WRAPPER_KEY] === true || tag.prototype && 'isReactComponent' in tag.prototype) {
				if (vnode.children && String(vnode.children) === '') {
					vnode.children = undefined;
				}
				if (vnode.children) {
					attrs.children = vnode.children;
				}

				if (!vnode.preactCompatNormalized) {
					normalizeVNode(vnode);
				}
				handleComponentVNode(vnode);
			}
		} else {
			if (vnode.children && String(vnode.children) === '') {
				vnode.children = undefined;
			}
			if (vnode.children) {
				attrs.children = vnode.children;
			}

			if (attrs.defaultValue) {
				if (!attrs.value && attrs.value !== 0) {
					attrs.value = attrs.defaultValue;
				}
				delete attrs.defaultValue;
			}

			handleElementVNode(vnode, attrs);
		}
	}

	if (oldVnodeHook) {
		oldVnodeHook(vnode);
	}
};

function handleComponentVNode(vnode) {
	var tag = vnode.nodeName,
	    a = vnode.attributes;

	vnode.attributes = {};
	if (tag.defaultProps) {
		extend(vnode.attributes, tag.defaultProps);
	}
	if (a) {
		extend(vnode.attributes, a);
	}
}

function handleElementVNode(vnode, a) {
	var shouldSanitize, attrs, i;
	if (a) {
		for (i in a) {
			if (shouldSanitize = CAMEL_PROPS.test(i)) {
				break;
			}
		}
		if (shouldSanitize) {
			attrs = vnode.attributes = {};
			for (i in a) {
				if (a.hasOwnProperty(i)) {
					attrs[CAMEL_PROPS.test(i) ? i.replace(/([A-Z0-9])/, '-$1').toLowerCase() : i] = a[i];
				}
			}
		}
	}
}

// proxy render() since React returns a Component reference.
function render$1(vnode, parent, callback) {
	var prev = parent && parent._preactCompatRendered && parent._preactCompatRendered.base;

	// ignore impossible previous renders
	if (prev && prev.parentNode !== parent) {
		prev = null;
	}

	// default to first Element child
	if (!prev && parent) {
		prev = parent.firstElementChild;
	}

	// remove unaffected siblings
	for (var i = parent.childNodes.length; i--;) {
		if (parent.childNodes[i] !== prev) {
			parent.removeChild(parent.childNodes[i]);
		}
	}

	var out = Object(preact_min["render"])(vnode, parent, prev);
	if (parent) {
		parent._preactCompatRendered = out && (out._component || { base: out });
	}
	if (typeof callback === 'function') {
		callback();
	}
	return out && out._component || out;
}

var ContextProvider = function ContextProvider() {};

ContextProvider.prototype.getChildContext = function () {
	return this.props.context;
};
ContextProvider.prototype.render = function (props) {
	return props.children[0];
};

function renderSubtreeIntoContainer(parentComponent, vnode, container, callback) {
	var wrap = Object(preact_min["h"])(ContextProvider, { context: parentComponent.context }, vnode);
	var renderContainer = render$1(wrap, container);
	var component = renderContainer._component || renderContainer.base;
	if (callback) {
		callback.call(component, renderContainer);
	}
	return component;
}

function Portal(props) {
	renderSubtreeIntoContainer(this, props.vnode, props.container);
}

function createPortal(vnode, container) {
	return Object(preact_min["h"])(Portal, { vnode: vnode, container: container });
}

function unmountComponentAtNode(container) {
	var existing = container._preactCompatRendered && container._preactCompatRendered.base;
	if (existing && existing.parentNode === container) {
		Object(preact_min["render"])(Object(preact_min["h"])(EmptyComponent), container, existing);
		return true;
	}
	return false;
}

var ARR = [];

// This API is completely unnecessary for Preact, so it's basically passthrough.
var Children = {
	map: function map(children, fn, ctx) {
		if (children == null) {
			return null;
		}
		children = Children.toArray(children);
		if (ctx && ctx !== children) {
			fn = fn.bind(ctx);
		}
		return children.map(fn);
	},
	forEach: function forEach(children, fn, ctx) {
		if (children == null) {
			return null;
		}
		children = Children.toArray(children);
		if (ctx && ctx !== children) {
			fn = fn.bind(ctx);
		}
		children.forEach(fn);
	},
	count: function count(children) {
		return children && children.length || 0;
	},
	only: function only(children) {
		children = Children.toArray(children);
		if (children.length !== 1) {
			throw new Error('Children.only() expects only one child.');
		}
		return children[0];
	},
	toArray: function toArray(children) {
		if (children == null) {
			return [];
		}
		return ARR.concat(children);
	}
};

/** Track current render() component for ref assignment */
var currentComponent;

function createFactory(type) {
	return createElement.bind(null, type);
}

var DOM = {};
for (var preact_compat_es_i = ELEMENTS.length; preact_compat_es_i--;) {
	DOM[ELEMENTS[preact_compat_es_i]] = createFactory(ELEMENTS[preact_compat_es_i]);
}

function upgradeToVNodes(arr, offset) {
	for (var i = offset || 0; i < arr.length; i++) {
		var obj = arr[i];
		if (Array.isArray(obj)) {
			upgradeToVNodes(obj);
		} else if (obj && typeof obj === 'object' && !isValidElement(obj) && (obj.props && obj.type || obj.attributes && obj.nodeName || obj.children)) {
			arr[i] = createElement(obj.type || obj.nodeName, obj.props || obj.attributes, obj.children);
		}
	}
}

function isStatelessComponent(c) {
	return typeof c === 'function' && !(c.prototype && c.prototype.render);
}

// wraps stateless functional components in a PropTypes validator
function wrapStatelessComponent(WrappedComponent) {
	return createClass({
		displayName: WrappedComponent.displayName || WrappedComponent.name,
		render: function render() {
			return WrappedComponent(this.props, this.context);
		}
	});
}

function statelessComponentHook(Ctor) {
	var Wrapped = Ctor[COMPONENT_WRAPPER_KEY];
	if (Wrapped) {
		return Wrapped === true ? Ctor : Wrapped;
	}

	Wrapped = wrapStatelessComponent(Ctor);

	Object.defineProperty(Wrapped, COMPONENT_WRAPPER_KEY, { configurable: true, value: true });
	Wrapped.displayName = Ctor.displayName;
	Wrapped.propTypes = Ctor.propTypes;
	Wrapped.defaultProps = Ctor.defaultProps;

	Object.defineProperty(Ctor, COMPONENT_WRAPPER_KEY, { configurable: true, value: Wrapped });

	return Wrapped;
}

function createElement() {
	var args = [],
	    len = arguments.length;
	while (len--) {
		args[len] = arguments[len];
	}upgradeToVNodes(args, 2);
	return normalizeVNode(preact_min["h"].apply(void 0, args));
}

function normalizeVNode(vnode) {
	vnode.preactCompatNormalized = true;

	applyClassName(vnode);

	if (isStatelessComponent(vnode.nodeName)) {
		vnode.nodeName = statelessComponentHook(vnode.nodeName);
	}

	var ref = vnode.attributes.ref,
	    type = ref && typeof ref;
	if (currentComponent && (type === 'string' || type === 'number')) {
		vnode.attributes.ref = createStringRefProxy(ref, currentComponent);
	}

	applyEventNormalization(vnode);

	return vnode;
}

function cloneElement$1(element, props) {
	var children = [],
	    len = arguments.length - 2;
	while (len-- > 0) {
		children[len] = arguments[len + 2];
	}if (!isValidElement(element)) {
		return element;
	}
	var elementProps = element.attributes || element.props;
	var node = Object(preact_min["h"])(element.nodeName || element.type, extend({}, elementProps), element.children || elementProps && elementProps.children);
	// Only provide the 3rd argument if needed.
	// Arguments 3+ overwrite element.children in preactCloneElement
	var cloneArgs = [node, props];
	if (children && children.length) {
		cloneArgs.push(children);
	} else if (props && props.children) {
		cloneArgs.push(props.children);
	}
	return normalizeVNode(preact_min["cloneElement"].apply(void 0, cloneArgs));
}

function isValidElement(element) {
	return element && (element instanceof VNode || element.$$typeof === REACT_ELEMENT_TYPE);
}

function createStringRefProxy(name, component) {
	return component._refProxies[name] || (component._refProxies[name] = function (resolved) {
		if (component && component.refs) {
			component.refs[name] = resolved;
			if (resolved === null) {
				delete component._refProxies[name];
				component = null;
			}
		}
	});
}

function applyEventNormalization(ref) {
	var nodeName = ref.nodeName;
	var attributes = ref.attributes;

	if (!attributes || typeof nodeName !== 'string') {
		return;
	}
	var props = {};
	for (var i in attributes) {
		props[i.toLowerCase()] = i;
	}
	if (props.ondoubleclick) {
		attributes.ondblclick = attributes[props.ondoubleclick];
		delete attributes[props.ondoubleclick];
	}
	// for *textual inputs* (incl textarea), normalize `onChange` -> `onInput`:
	if (props.onchange && (nodeName === 'textarea' || nodeName.toLowerCase() === 'input' && !/^fil|che|rad/i.test(attributes.type))) {
		var normalized = props.oninput || 'oninput';
		if (!attributes[normalized]) {
			attributes[normalized] = multihook([attributes[normalized], attributes[props.onchange]]);
			delete attributes[props.onchange];
		}
	}
}

function applyClassName(vnode) {
	var a = vnode.attributes || (vnode.attributes = {});
	classNameDescriptor.enumerable = 'className' in a;
	if (a.className) {
		a.class = a.className;
	}
	Object.defineProperty(a, 'className', classNameDescriptor);
}

var classNameDescriptor = {
	configurable: true,
	get: function get() {
		return this.class;
	},
	set: function set(v) {
		this.class = v;
	}
};

function extend(base, props) {
	var arguments$1 = arguments;

	for (var i = 1, obj = void 0; i < arguments.length; i++) {
		if (obj = arguments$1[i]) {
			for (var key in obj) {
				if (obj.hasOwnProperty(key)) {
					base[key] = obj[key];
				}
			}
		}
	}
	return base;
}

function shallowDiffers(a, b) {
	for (var i in a) {
		if (!(i in b)) {
			return true;
		}
	}
	for (var i$1 in b) {
		if (a[i$1] !== b[i$1]) {
			return true;
		}
	}
	return false;
}

function findDOMNode(component) {
	return component && (component.base || component.nodeType === 1 && component) || null;
}

function preact_compat_es_F() {}

function createClass(obj) {
	function cl(props, context) {
		bindAll(this);
		Component$1.call(this, props, context, BYPASS_HOOK);
		newComponentHook.call(this, props, context);
	}

	obj = extend({ constructor: cl }, obj);

	// We need to apply mixins here so that getDefaultProps is correctly mixed
	if (obj.mixins) {
		applyMixins(obj, collateMixins(obj.mixins));
	}
	if (obj.statics) {
		extend(cl, obj.statics);
	}
	if (obj.propTypes) {
		cl.propTypes = obj.propTypes;
	}
	if (obj.defaultProps) {
		cl.defaultProps = obj.defaultProps;
	}
	if (obj.getDefaultProps) {
		cl.defaultProps = obj.getDefaultProps.call(cl);
	}

	preact_compat_es_F.prototype = Component$1.prototype;
	cl.prototype = extend(new preact_compat_es_F(), obj);

	cl.displayName = obj.displayName || 'Component';

	return cl;
}

// Flatten an Array of mixins to a map of method name to mixin implementations
function collateMixins(mixins) {
	var keyed = {};
	for (var i = 0; i < mixins.length; i++) {
		var mixin = mixins[i];
		for (var key in mixin) {
			if (mixin.hasOwnProperty(key) && typeof mixin[key] === 'function') {
				(keyed[key] || (keyed[key] = [])).push(mixin[key]);
			}
		}
	}
	return keyed;
}

// apply a mapping of Arrays of mixin methods to a component prototype
function applyMixins(proto, mixins) {
	for (var key in mixins) {
		if (mixins.hasOwnProperty(key)) {
			proto[key] = multihook(mixins[key].concat(proto[key] || ARR), key === 'getDefaultProps' || key === 'getInitialState' || key === 'getChildContext');
		}
	}
}

function bindAll(ctx) {
	for (var i in ctx) {
		var v = ctx[i];
		if (typeof v === 'function' && !v.__bound && !AUTOBIND_BLACKLIST.hasOwnProperty(i)) {
			(ctx[i] = v.bind(ctx)).__bound = true;
		}
	}
}

function callMethod(ctx, m, args) {
	if (typeof m === 'string') {
		m = ctx.constructor.prototype[m];
	}
	if (typeof m === 'function') {
		return m.apply(ctx, args);
	}
}

function multihook(hooks, skipDuplicates) {
	return function () {
		var arguments$1 = arguments;
		var this$1 = this;

		var ret;
		for (var i = 0; i < hooks.length; i++) {
			var r = callMethod(this$1, hooks[i], arguments$1);

			if (skipDuplicates && r != null) {
				if (!ret) {
					ret = {};
				}
				for (var key in r) {
					if (r.hasOwnProperty(key)) {
						ret[key] = r[key];
					}
				}
			} else if (typeof r !== 'undefined') {
				ret = r;
			}
		}
		return ret;
	};
}

function newComponentHook(props, context) {
	propsHook.call(this, props, context);
	this.componentWillReceiveProps = multihook([propsHook, this.componentWillReceiveProps || 'componentWillReceiveProps']);
	this.render = multihook([propsHook, beforeRender, this.render || 'render', afterRender]);
}

function propsHook(props, context) {
	if (!props) {
		return;
	}

	// React annoyingly special-cases single children, and some react components are ridiculously strict about this.
	var c = props.children;
	if (c && Array.isArray(c) && c.length === 1 && (typeof c[0] === 'string' || typeof c[0] === 'function' || c[0] instanceof VNode)) {
		props.children = c[0];

		// but its totally still going to be an Array.
		if (props.children && typeof props.children === 'object') {
			props.children.length = 1;
			props.children[0] = props.children;
		}
	}

	// add proptype checking
	if (DEV) {
		var ctor = typeof this === 'function' ? this : this.constructor,
		    propTypes = this.propTypes || ctor.propTypes;
		var displayName = this.displayName || ctor.name;

		if (propTypes) {
			prop_types_default.a.checkPropTypes(propTypes, props, 'prop', displayName);
		}
	}
}

function beforeRender(props) {
	currentComponent = this;
}

function afterRender() {
	if (currentComponent === this) {
		currentComponent = null;
	}
}

function Component$1(props, context, opts) {
	preact_min["Component"].call(this, props, context);
	this.state = this.getInitialState ? this.getInitialState() : {};
	this.refs = {};
	this._refProxies = {};
	if (opts !== BYPASS_HOOK) {
		newComponentHook.call(this, props, context);
	}
}
extend(Component$1.prototype = new preact_min["Component"](), {
	constructor: Component$1,

	isReactComponent: {},

	replaceState: function replaceState(state, callback) {
		var this$1 = this;

		this.setState(state, callback);
		for (var i in this$1.state) {
			if (!(i in state)) {
				delete this$1.state[i];
			}
		}
	},

	getDOMNode: function getDOMNode() {
		return this.base;
	},

	isMounted: function isMounted() {
		return !!this.base;
	}
});

function PureComponent(props, context) {
	Component$1.call(this, props, context);
}
preact_compat_es_F.prototype = Component$1.prototype;
PureComponent.prototype = new preact_compat_es_F();
PureComponent.prototype.isPureReactComponent = true;
PureComponent.prototype.shouldComponentUpdate = function (props, state) {
	return shallowDiffers(this.props, props) || shallowDiffers(this.state, state);
};

function unstable_batchedUpdates(callback) {
	callback();
}

var preact_compat_es_index = {
	version: version,
	DOM: DOM,
	PropTypes: prop_types_default.a,
	Children: Children,
	render: render$1,
	hydrate: render$1,
	createClass: createClass,
	createContext: createContext,
	createPortal: createPortal,
	createFactory: createFactory,
	createElement: createElement,
	cloneElement: cloneElement$1,
	createRef: preact_min["createRef"],
	isValidElement: isValidElement,
	findDOMNode: findDOMNode,
	unmountComponentAtNode: unmountComponentAtNode,
	Component: Component$1,
	PureComponent: PureComponent,
	unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer,
	unstable_batchedUpdates: unstable_batchedUpdates,
	__spread: extend
};

/* harmony default export */ var preact_compat_es = (preact_compat_es_index);

//# sourceMappingURL=preact-compat.es.js.map
// EXTERNAL MODULE: ../node_modules/react-proptype-conditional-require/dist/isRequiredIf.js
var isRequiredIf = __webpack_require__("Gr/Z");
var isRequiredIf_default = /*#__PURE__*/__webpack_require__.n(isRequiredIf);

// EXTERNAL MODULE: ../node_modules/exenv/index.js
var exenv = __webpack_require__("RKsu");
var exenv_default = /*#__PURE__*/__webpack_require__.n(exenv);

// CONCATENATED MODULE: ../node_modules/react-twitter-embed/dist/index.es.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };












var twitterWidgetJs = 'https://platform.twitter.com/widgets.js';

var index_es_TwitterTimelineEmbed =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterTimelineEmbed, _Component);

  function TwitterTimelineEmbed(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterTimelineEmbed);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterTimelineEmbed).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterTimelineEmbed, [{
    key: "buildChromeOptions",
    value: function buildChromeOptions(options) {
      options.chrome = '';

      if (this.props.noHeader) {
        options.chrome = options.chrome + ' noheader';
      }

      if (this.props.noFooter) {
        options.chrome = options.chrome + ' nofooter';
      }

      if (this.props.noBorders) {
        options.chrome = options.chrome + ' noborders';
      }

      if (this.props.noScrollbar) {
        options.chrome = options.chrome + ' noscrollbar';
      }

      if (this.props.transparent) {
        options.chrome = options.chrome + ' transparent';
      }

      return options;
    }
  }, {
    key: "buildOptions",
    value: function buildOptions() {
      var options = _extends({}, this.props.options);

      if (this.props.autoHeight) {
        options.height = this.refs.embedContainer.parentNode.offsetHeight;
      }

      options = _extends({}, options, {
        theme: this.props.theme,
        linkColor: this.props.linkColor,
        borderColor: this.props.borderColor,
        lang: this.props.lang
      });
      return options;
    }
  }, {
    key: "renderWidget",
    value: function renderWidget(options) {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (!this.isMountCanceled) {
        window.twttr.widgets.createTimeline({
          sourceType: this.props.sourceType,
          screenName: this.props.screenName,
          userId: this.props.userId,
          ownerScreenName: this.props.ownerScreenName,
          slug: this.props.slug,
          id: this.props.id || this.props.widgetId,
          url: this.props.url
        }, this.refs.embedContainer, options).then(function (element) {
          _this2.setState({
            isLoading: false
          });

          if (onLoad) {
            onLoad(element);
          }
        });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this3 = this;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterTimelineEmbed, aborting load.');
            return;
          }

          var options = _this3.buildOptions();
          /** Append chrome options */

          options = _this3.buildChromeOptions(options);

          _this3.renderWidget(options);
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterTimelineEmbed;
}(Component$1);

_defineProperty(index_es_TwitterTimelineEmbed, "propTypes", {
  /**
       * This can be either of profile, likes, list, collection, URL, widget
       */
  sourceType: prop_types_default.a.oneOf(['profile', 'likes', 'list', 'collection', 'url', 'widget']).isRequired,

  /**
       * username of twitter handle as String
       */
  screenName: isRequiredIf_default()(prop_types_default.a.string, function (props) {
    return !props.hasOwnProperty('userId') && (props.sourceType === 'profile' || props.sourceType === 'likes');
  }),

  /**
       * UserId of twitter handle as number
       */
  userId: isRequiredIf_default()(prop_types_default.a.number, function (props) {
    return !props.hasOwnProperty('screenName') && (props.sourceType === 'profile' || props.sourceType === 'likes');
  }),

  /**
       * To show list, used along with slug
       */
  ownerScreenName: isRequiredIf_default()(prop_types_default.a.string, function (props) {
    return props.sourceType === 'list' && !props.hasOwnProperty('id');
  }),

  /**
       * To show list, used along with ownerScreenName
       */
  slug: isRequiredIf_default()(prop_types_default.a.string, function (props) {
    return props.sourceType === 'list' && !props.hasOwnProperty('id');
  }),

  /**
       * To show list, unique list id
       * Also used with collections, in that case its valid collection id
       */
  id: isRequiredIf_default()(prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]), function (props) {
    return props.sourceType === 'list' && !props.hasOwnProperty('ownerScreenName') && !props.hasOwnProperty('slug') || props.sourceType === 'collection';
  }),

  /**
       * To show twitter content with url.
       * Supported content includes profiles, likes, lists, and collections.
       */
  url: isRequiredIf_default()(prop_types_default.a.string, function (props) {
    return props.sourceType === 'url';
  }),

  /**
       * To show custom widget
       */
  widgetId: isRequiredIf_default()(prop_types_default.a.string, function (props) {
    return props.sourceType === 'widget';
  }),

  /**
       * Additional options to pass to twitter widget plugin
       */
  options: prop_types_default.a.object,

  /**
       * Automatically fit into parent container height
       */
  autoHeight: prop_types_default.a.bool,

  /**
       * With dark or light theme
       */
  theme: prop_types_default.a.oneOf(['dark', 'light']),

  /**
       * With custom link colors. Note: Only Hex colors are supported.
       */
  linkColor: prop_types_default.a.string,

  /**
       * With custom border colors. Note: Only Hex colors are supported.
       */
  borderColor: prop_types_default.a.string,

  /**
       * Hide the header from timeline
       */
  noHeader: prop_types_default.a.bool,

  /**
       * Hide the footer from timeline
       */
  noFooter: prop_types_default.a.bool,

  /**
       * Hide the border from timeline
       */
  noBorders: prop_types_default.a.bool,

  /**
       * Hide the scrollbars
       */
  noScrollbar: prop_types_default.a.bool,

  /**
       * Enable Transparancy
       */
  transparent: prop_types_default.a.bool,

  /**
       * Custom language code. Supported codes here: https://developer.twitter.com/en/docs/twitter-for-websites/twitter-for-websites-supported-languages/overview.html
       */
  lang: prop_types_default.a.string,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterShareButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterShareButton, _Component);

  function TwitterShareButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterShareButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterShareButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterShareButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterShareButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createShareButton(_this2.props.url, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterShareButton;
}(Component$1);

_defineProperty(index_es_TwitterShareButton, "propTypes", {
  /**
  * Url for sharing
  */
  url: prop_types_default.a.string.isRequired,

  /**
  * Additional options for overriding config. Details at : https://dev.twitter.com/web/tweet-button/parameters
  */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterFollowButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterFollowButton, _Component);

  function TwitterFollowButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterFollowButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterFollowButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterFollowButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterFollowButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createFollowButton(_this2.props.screenName, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterFollowButton;
}(Component$1);

_defineProperty(index_es_TwitterFollowButton, "propTypes", {
  /**
       * Username of twitter user which will be followed on click
       */
  screenName: prop_types_default.a.string.isRequired,

  /**
       * Additional options to be added to the button
       */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterHashtagButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterHashtagButton, _Component);

  function TwitterHashtagButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterHashtagButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterHashtagButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterHashtagButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterHashtagButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createHashtagButton(_this2.props.tag, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterHashtagButton;
}(Component$1);

_defineProperty(index_es_TwitterHashtagButton, "propTypes", {
  /**
       * Tag name for hashtag button
       */
  tag: prop_types_default.a.string.isRequired,

  /**
       * Additional options to be added to the button
       */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterMentionButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterMentionButton, _Component);

  function TwitterMentionButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterMentionButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterMentionButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterMentionButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterMentionButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createMentionButton(_this2.props.screenName, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterMentionButton;
}(Component$1);

_defineProperty(index_es_TwitterMentionButton, "propTypes", {
  /**
   * Username to which you will need to tweet
   */
  screenName: prop_types_default.a.string.isRequired,

  /**
   * Additional options for overriding config.
   */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterTweetEmbed =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterTweetEmbed, _Component);

  function TwitterTweetEmbed(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterTweetEmbed);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterTweetEmbed).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterTweetEmbed, [{
    key: "renderWidget",
    value: function renderWidget() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (!window.twttr) {
        console.error('Failure to load window.twttr in TwitterTweetEmbed, aborting load.');
        return;
      }

      if (!this.isMountCanceled) {
        window.twttr.widgets.createTweet(this.props.tweetId, this.refs.embedContainer, this.props.options).then(function (element) {
          _this2.setState({
            isLoading: false
          });

          if (onLoad) {
            onLoad(element);
          }
        });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this3 = this;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          _this3.renderWidget();
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterTweetEmbed;
}(Component$1);

_defineProperty(index_es_TwitterTweetEmbed, "propTypes", {
  /**
       * Tweet id that needs to be shown
       */
  tweetId: prop_types_default.a.string.isRequired,

  /**
       * Additional options to pass to twitter widget plugin
       */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterMomentShare =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterMomentShare, _Component);

  function TwitterMomentShare(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterMomentShare);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterMomentShare).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterMomentShare, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterMomentShare, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createMoment(_this2.props.momentId, _this2.refs.shareMoment, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "shareMoment"
      }));
    }
  }]);

  return TwitterMomentShare;
}(Component$1);

_defineProperty(index_es_TwitterMomentShare, "propTypes", {
  /**
   * id of Twitter moment to show
   */
  momentId: prop_types_default.a.string.isRequired,

  /**
   * Additional options for overriding config.
   */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterDMButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterDMButton, _Component);

  function TwitterDMButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterDMButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterDMButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterDMButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterDMButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createDMButton(_this2.props.id, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterDMButton;
}(Component$1);

_defineProperty(index_es_TwitterDMButton, "propTypes", {
  /**
  * Twitter user id for DM button
  */
  id: prop_types_default.a.number.isRequired,

  /**
  * Additional options to be added to the button
  */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterVideoEmbed =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterVideoEmbed, _Component);

  function TwitterVideoEmbed(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterVideoEmbed);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterVideoEmbed).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterVideoEmbed, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterVideoEmbed, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createVideo(_this2.props.id, _this2.refs.embedContainer).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterVideoEmbed;
}(Component$1);

_defineProperty(index_es_TwitterVideoEmbed, "propTypes", {
  /**
       * Id of video tweet.
       */
  id: prop_types_default.a.string.isRequired,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});

var index_es_TwitterOnAirButton =
/*#__PURE__*/
function (_Component) {
  inherits__inherits(TwitterOnAirButton, _Component);

  function TwitterOnAirButton(props) {
    var _this;

    classCallCheck__classCallCheck(this, TwitterOnAirButton);

    _this = possibleConstructorReturn__possibleConstructorReturn(this, _getPrototypeOf(TwitterOnAirButton).call(this, props));
    _this.state = {
      isLoading: true
    };
    return _this;
  }

  _createClass(TwitterOnAirButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var onLoad = this.props.onLoad;

      if (exenv_default.a.canUseDOM) {
        var script = __webpack_require__("Os0n");

        script(twitterWidgetJs, 'twitter-embed', function () {
          if (!window.twttr) {
            console.error('Failure to load window.twttr in TwitterOnAirButton, aborting load.');
            return;
          }

          if (!_this2.isMountCanceled) {
            window.twttr.widgets.createPeriscopeOnAirButton(_this2.props.username, _this2.refs.embedContainer, _this2.props.options).then(function (element) {
              _this2.setState({
                isLoading: false
              });

              if (onLoad) {
                onLoad(element);
              }
            });
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.isMountCanceled = true;
    }
  }, {
    key: "render",
    value: function render() {
      var isLoading = this.state.isLoading;
      var placeholder = this.props.placeholder;
      return preact_compat_es.createElement(preact_compat_es.Fragment, null, isLoading && placeholder, preact_compat_es.createElement("div", {
        ref: "embedContainer"
      }));
    }
  }]);

  return TwitterOnAirButton;
}(Component$1);

_defineProperty(index_es_TwitterOnAirButton, "propTypes", {
  /**
   * Username for which you require periscope on air button
   */
  username: prop_types_default.a.string.isRequired,

  /**
   * Additional options for overriding config.
   */
  options: prop_types_default.a.object,

  /**
   * Placeholder while tweet is loading
   */
  placeholder: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.element]),

  /**
   * Function to execute after load, return html element
   */
  onLoad: prop_types_default.a.func
});


//# sourceMappingURL=index.es.js.map
// CONCATENATED MODULE: ./components/social_footer/index.js


function social_footer__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function social_footer__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function social_footer__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var social_footer__ref2 = Object(preact_min["h"])(
    'p',
    null,
    'Keep in touch with Developer Student Clubs for the latest OMG announcements'
);

var social_footer__ref3 = Object(preact_min["h"])(
    'div',
    null,
    Object(preact_min["h"])(
        'a',
        { href: 'https://twitter.com/OmgDsc', target: '_blank', rel: 'noopener noreferrer' },
        Object(preact_min["h"])(
            'svg',
            { width: '40', height: '40', viewBox: '0 0 40 40', xmlns: 'http://www.w3.org/2000/svg' },
            Object(preact_min["h"])(
                'title',
                null,
                'Developer Student Clubs OMG Twitter Page'
            ),
            Object(preact_min["h"])(
                'g',
                null,
                Object(preact_min["h"])('path', {
                    style: ' stroke:none;fill-rule:nonzero;fill:rgb(10.196078%,45.098039%,90.980392%);fill-opacity:1;',
                    d: 'M 20 40 C 8.953125 40 0 31.046875 0 20 C 0 8.953125 8.953125 0 20 0 C 31.046875 0 40 8.953125 40 20 C 40 31.046875 31.046875 40 20 40 Z M 20 40 ' }),
                Object(preact_min["h"])('path', {
                    style: ' stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;',
                    d: 'M 31.273438 12.648438 C 30.445312 13.015625 29.554688 13.261719 28.613281 13.375 C 29.570312 12.808594 30.304688 11.902344 30.652344 10.835938 C 29.757812 11.359375 28.765625 11.742188 27.710938 11.945312 C 26.871094 11.054688 25.667969 10.5 24.339844 10.5 C 21.78125 10.5 19.710938 12.554688 19.710938 15.085938 C 19.710938 15.445312 19.753906 15.792969 19.832031 16.132812 C 15.988281 15.9375 12.578125 14.109375 10.296875 11.335938 C 9.894531 12.015625 9.667969 12.808594 9.667969 13.644531 C 9.667969 15.238281 10.484375 16.640625 11.726562 17.464844 C 10.96875 17.441406 10.253906 17.230469 9.628906 16.890625 C 9.628906 16.90625 9.628906 16.925781 9.628906 16.945312 C 9.628906 19.171875 11.222656 21.023438 13.339844 21.445312 C 12.953125 21.550781 12.542969 21.609375 12.125 21.609375 C 11.824219 21.609375 11.53125 21.574219 11.25 21.523438 C 11.839844 23.34375 13.546875 24.671875 15.570312 24.710938 C 13.988281 25.9375 11.992188 26.671875 9.824219 26.671875 C 9.449219 26.671875 9.085938 26.652344 8.722656 26.609375 C 10.769531 27.90625 13.203125 28.667969 15.816406 28.667969 C 24.324219 28.667969 28.980469 21.679688 28.980469 15.617188 C 28.980469 15.417969 28.976562 15.21875 28.964844 15.023438 C 29.875 14.382812 30.65625 13.574219 31.273438 12.648438 ' })
            )
        )
    ),
    Object(preact_min["h"])(
        'a',
        { href: 'https://www.youtube.com/channel/UCCR8rHzvm0l9E7DNa6Y_OGA', target: '_blank',
            rel: 'noopener noreferrer' },
        Object(preact_min["h"])(
            'svg',
            { width: '40', height: '40', viewBox: '0 0 40 40', xmlns: 'http://www.w3.org/2000/svg' },
            Object(preact_min["h"])(
                'title',
                null,
                'Developer Student Clubs OMG Youtube Page'
            ),
            Object(preact_min["h"])(
                'g',
                null,
                Object(preact_min["h"])('path', {
                    style: ' stroke:none;fill-rule:nonzero;fill:rgb(10.196078%,45.098039%,90.980392%);fill-opacity:1;',
                    d: 'M 20 40 C 8.953125 40 0 31.046875 0 20 C 0 8.953125 8.953125 0 20 0 C 31.046875 0 40 8.953125 40 20 C 40 31.046875 31.046875 40 20 40 Z M 20 40 ' }),
                Object(preact_min["h"])('path', {
                    style: ' stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;',
                    d: 'M 31.976562 12.734375 C 31.691406 11.65625 30.84375 10.808594 29.765625 10.523438 C 27.816406 10 20 10 20 10 C 20 10 12.183594 10 10.234375 10.523438 C 9.15625 10.808594 8.308594 11.65625 8.023438 12.734375 C 7.5 14.683594 7.5 20 7.5 20 C 7.5 20 7.5 25.316406 8.023438 27.265625 C 8.308594 28.34375 9.15625 29.191406 10.234375 29.476562 C 12.183594 30 20 30 20 30 C 20 30 27.816406 30 29.765625 29.476562 C 30.84375 29.191406 31.691406 28.34375 31.976562 27.265625 C 32.5 25.316406 32.5 20 32.5 20 C 32.5 20 32.5 14.683594 31.976562 12.734375 Z M 17.5 23.246094 L 17.5 16.753906 C 17.5 16.269531 18.019531 15.972656 18.4375 16.210938 L 24.0625 19.457031 C 24.480469 19.699219 24.480469 20.300781 24.0625 20.542969 L 18.4375 23.789062 C 18.019531 24.03125 17.5 23.730469 17.5 23.246094 Z M 17.5 23.246094 ' })
            )
        )
    ),
    Object(preact_min["h"])(
        'a',
        { href: 'https://www.instagram.com/omgdsc', target: '_blank', rel: 'noopener noreferrer' },
        Object(preact_min["h"])(
            'svg',
            { xmlns: 'http://www.w3.org/2000/svg', width: '40', height: '40', viewBox: '0 0 40 40' },
            Object(preact_min["h"])(
                'title',
                null,
                'Developer Student Clubs OMG Instagram Page'
            ),
            Object(preact_min["h"])('path', {
                style: ' stroke:none;fill-rule:nonzero;fill:rgb(10.196078%,45.098039%,90.980392%);fill-opacity:1;',
                d: 'M 20 40 C 8.953125 40 0 31.046875 0 20 C 0 8.953125 8.953125 0 20 0 C 31.046875 0 40 8.953125 40 20 C 40 31.046875 31.046875 40 20 40 Z M 20 40 ' }),
            Object(preact_min["h"])('path', { style: ' stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;',
                d: 'M 14.667969 8 C 10.984375 8 8 10.984375 8 14.667969 L 8 25.332031 C 8 29.015625 10.984375 32 14.667969 32 L 25.332031 32 C 29.015625 32 32 29.015625 32 25.332031 L 32 14.667969 C 32 10.984375 29.015625 8 25.332031 8 Z M 28 10.667969 C 28.734375 10.667969 29.332031 11.265625 29.332031 12 C 29.332031 12.734375 28.734375 13.332031 28 13.332031 C 27.265625 13.332031 26.667969 12.734375 26.667969 12 C 26.667969 11.265625 27.265625 10.667969 28 10.667969 Z M 20 13.332031 C 23.679688 13.332031 26.667969 16.320312 26.667969 20 C 26.667969 23.679688 23.679688 26.667969 20 26.667969 C 16.320312 26.667969 13.332031 23.679688 13.332031 20 C 13.332031 16.320312 16.320312 13.332031 20 13.332031 Z M 20 16 C 17.789062 16 16 17.789062 16 20 C 16 22.210938 17.789062 24 20 24 C 22.210938 24 24 22.210938 24 20 C 24 17.789062 22.210938 16 20 16 Z M 20 16 ' })
        )
    ),
    Object(preact_min["h"])(
        'a',
        { href: 'https://developers.google.com/community/dsc', target: '_blank', rel: 'noopener noreferrer' },
        Object(preact_min["h"])(
            'svg',
            { xmlns: 'http://www.w3.org/2000/svg', width: '40', height: '40', viewBox: '0 0 40 40' },
            Object(preact_min["h"])(
                'title',
                null,
                'Developer Student Clubs'
            ),
            Object(preact_min["h"])('path', { 'fill-rule': 'evenodd', 'clip-rule': 'evenodd', fill: '#1A73E8',
                d: 'M20.6,40.2c10.9,0,19.8-8.9,19.8-19.8c0-10.9-8.9-19.8-19.8-19.8C9.6,0.5,0.7,9.4,0.7,20.4C0.7,31.3,9.6,40.2,20.6,40.2z' }),
            Object(preact_min["h"])(
                'g',
                null,
                Object(preact_min["h"])('path', { className: 'st1',
                    d: 'M17.9,23l-7.4-4.3c-0.3-0.2-0.7-0.3-1.1-0.3c-0.7,0-1.4,0.4-1.8,1.1c-0.6,1-0.2,2.3,0.8,2.9l7.4,4.3c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.4-0.4,1.8-1.1C19.3,24.8,18.9,23.5,17.9,23z',
                    fill: 'white' }),
                Object(preact_min["h"])('path', { className: 'st1',
                    d: 'M32.7,18.7l-7.4-4.3c-0.3-0.2-0.7-0.3-1.1-0.3c-0.7,0-1.4,0.4-1.8,1.1c-0.6,1-0.2,2.3,0.8,2.9l7.4,4.3c0.3,0.2,0.7,0.3,1.1,0.3c0.7,0,1.4-0.4,1.8-1.1C34.1,20.5,33.8,19.3,32.7,18.7z',
                    fill: 'white' }),
                Object(preact_min["h"])(
                    'g',
                    null,
                    Object(preact_min["h"])('path', { className: 'st1',
                        d: 'M30.3,22.8l-3.5-2L23.2,23c-1,0.6-1.4,1.9-0.8,2.9c0.4,0.7,1.1,1.1,1.8,1.1c0.4,0,0.7-0.1,1.1-0.3l6-3.4C31,23.1,30.6,23,30.3,22.8z',
                        fill: 'white' })
                ),
                Object(preact_min["h"])(
                    'g',
                    null,
                    Object(preact_min["h"])('path', { className: 'st1',
                        d: 'M10.8,18.2l3.5,2l3.7-2.1c1-0.6,1.4-1.9,0.8-2.9c-0.6-1-1.9-1.4-2.9-0.8l-6,3.4C10.2,17.9,10.5,18,10.8,18.2z',
                        fill: 'white' })
                )
            )
        )
    )
);

var _ref4 = Object(preact_min["h"])(
    'svg',
    { xmlns: 'http://www.w3.org/2000/svg', width: '129', height: '162', viewBox: '0 0 129.54 162.45' },
    Object(preact_min["h"])('path', {
        d: 'M48.61 127.61C59.48 136.9 65.9 148 67 159.16H3.29v-31.55h45.32m1.2-3.29H0v38.13h70.39c0-14.61-8.29-27.95-20.58-38.13z',
        fill: '#fde293' }),
    Object(preact_min["h"])('path', { d: 'M0 76.27h129.54c0-40.7-33.83-74.78-73.38-76.27H0z', fill: '#fbbc04' }),
    Object(preact_min["h"])('path', { d: 'M0 76.27v48.05h99.91c0-17.15-7-33.92-18.85-48z', fill: '#fdedc5' })
);

var social_footer__ref5 = Object(preact_min["h"])(
    'svg',
    { height: '201', viewBox: '0 0 409 501', width: '209', xmlns: 'http://www.w3.org/2000/svg' },
    Object(preact_min["h"])(
        'g',
        { fill: 'none', 'fill-rule': 'evenodd', 'stroke-linecap': 'square', 'stroke-width': '10' },
        Object(preact_min["h"])('path', { d: 'm11.929 116.176h267.61v248.957', stroke: '#fad2cf' }),
        Object(preact_min["h"])('path', { d: 'm11.929 365.133h386.668m-247.025-125.619v-227.584h-139.643m0 227.584v248.647',
            stroke: '#fce8e6' }),
        Object(preact_min["h"])('path', { d: 'm11.929 121.176v118.338h386.668v247.647', stroke: '#ee675c' }),
        Object(preact_min["h"])('path', { d: 'm399.597 488.161h-387.668', stroke: '#fce8e6' }),
        Object(preact_min["h"])('path', { d: 'm11.929 11.93v104.246', stroke: '#fad2cf' })
    )
);

var _ref6 = Object(preact_min["h"])(
    'svg',
    { width: '140', height: '90', viewBox: '0 0 299 150', xmlns: 'http://www.w3.org/2000/svg' },
    Object(preact_min["h"])('path', { d: 'M293.916 5C291.29 82.77 227.634 145 149.5 145S7.71 82.77 5.084 5h288.832z',
        stroke: '#FAD2CF', 'stroke-width': '10', fill: 'none', 'fill-rule': 'evenodd' })
);

var social_footer__ref7 = Object(preact_min["h"])(
    'svg',
    { 'aria-hidden': 'true', width: '112', height: '80', viewBox: '0 0 512 257',
        xmlns: 'http://www.w3.org/2000/svg' },
    Object(preact_min["h"])('path', { d: 'M488 245c0-128.683-103.87-233-232-233S24 116.317 24 245h464z', stroke: '#1a73e8',
        'stroke-width': '18', fill: 'none' })
);

var social_footer_SocialFooter = function (_Component) {
    social_footer__inherits(SocialFooter, _Component);

    function SocialFooter(props) {
        social_footer__classCallCheck(this, SocialFooter);

        var _this = social_footer__possibleConstructorReturn(this, _Component.call(this, props));

        if (typeof window !== "undefined") {
            _this.io = new IntersectionObserver(function (entries) {
                var visibleEntries = entries.filter(function (e) {
                    return e.isIntersecting;
                });

                visibleEntries.filter(function (e) {
                    return e.target instanceof HTMLImageElement;
                }).forEach(function (e) {
                    e.target.src = e.target.dataset.src;
                });
            }, {
                /* Using default options. Details below */
            });
        }
        return _this;
    }

    SocialFooter.prototype.componentDidMount = function componentDidMount() {
        var ele = document.querySelector('.social_gif');

        if (!this.io || !ele) return;

        this.io.observe(ele);
    };

    SocialFooter.prototype.componentWillUnmount = function componentWillUnmount() {
        if (!this.io) return;
        this.io.disconnect();
    };

    SocialFooter.prototype.render = function render(_ref) {
        var rootPath = _ref.rootPath;

        return Object(preact_min["h"])(
            'div',
            { 'class': social_footer_style_default.a.social_footer },
            Object(preact_min["h"])(
                'div',
                { 'class': social_footer_style_default.a.social_body },
                social_footer__ref2,
                social_footer__ref3
            ),
            Object(preact_min["h"])(
                'div',
                { className: social_footer_style_default.a.social_twitter_wall },
                Object(preact_min["h"])(index_es_TwitterTimelineEmbed, {
                    sourceType: 'likes',
                    screenName: 'omgdsc',
                    noFooter: true,
                    noHeader: true,
                    options: { height: 325, width: 600 }
                })
            ),
            Object(preact_min["h"])(
                'div',
                { 'class': social_footer_style_default.a.social_gif },
                _ref4,
                social_footer__ref5,
                _ref6,
                social_footer__ref7
            )
        );
    };

    return SocialFooter;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./components/footer/style.css
var footer_style = __webpack_require__("ZMjw");
var footer_style_default = /*#__PURE__*/__webpack_require__.n(footer_style);

// CONCATENATED MODULE: ./components/footer/index.js


function footer__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function footer__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function footer__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var footer__ref2 = Object(preact_min["h"])(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "337",
    height: "88",
    viewBox: "0 0 3537 258"
  },
  Object(preact_min["h"])(
    "g",
    { fill: "none", fillRule: "evenodd", stroke: "none", strokeWidth: "1" },
    Object(preact_min["h"])(
      "g",
      { transform: "translate(-175 -201) translate(175 201)" },
      Object(preact_min["h"])(
        "g",
        { transform: "translate(2849.64)" },
        Object(preact_min["h"])(
          "g",
          { fill: "#4185F3", transform: "translate(486.606 .314)" },
          Object(preact_min["h"])("path", {
            d: "M6.97423671 122.036951L25.4402153 196.592765 68.3130762 225.215978 123.025461 225.215978 173.556851 211.102569 193.613645 165.066032 193.613645 122.036951z",
            opacity: "0.229"
          }),
          Object(preact_min["h"])("path", {
            fillRule: "nonzero",
            d: "M102.364 235.186c66.568 0 97.34-45.53 97.34-105.504 0-2.512 0-7.85-.628-13.502H124.03v16.642h56.206c-1.256 51.182-24.178 84.78-77.558 84.78-55.578-.314-83.838-41.448-83.21-100.166.314-59.032 27.632-99.852 83.21-99.852 34.54 0 58.404 18.212 69.08 46.158l17.898-5.652C177.724 23.236 147.894 0 102.364 0 36.11 0 0 47.414 0 117.436c0 70.336 36.424 117.75 102.364 117.75z"
          })
        ),
        Object(preact_min["h"])(
          "g",
          { fill: "#049C59" },
          Object(preact_min["h"])("path", {
            d: "M6.58 122.350951L25.0459786 196.906765 67.9188395 225.529978 122.631224 225.529978 173.162615 211.416569 193.219408 165.380032 193.219408 122.350951z",
            opacity: "0.229"
          }),
          Object(preact_min["h"])("path", {
            fillRule: "nonzero",
            d: "M102.678 235.5c67.824 0 102.992-48.356 102.992-117.75S170.502 0 102.678 0C35.168 0 0 48.356 0 117.75S35.168 235.5 102.678 235.5zm0-17.584c-55.578-.314-83.838-41.448-83.21-100.166.314-59.032 27.632-100.166 83.21-100.166 55.578.314 83.524 41.134 83.524 100.166 0 58.718-27.946 100.166-83.524 100.166z"
          })
        ),
        Object(preact_min["h"])(
          "g",
          { transform: "translate(240.56 4.71)" },
          Object(preact_min["h"])("path", {
            fill: "#FFBD00",
            d: "M12.7816312 117.640951L12.7816312 37.1393898 37.4389844 67.9894745 105.823521 206.728754 204.211569 26.5370346 211.942608 117.640951 151.353987 117.640951 105.823521 220.819978 59.1270852 117.640951z",
            opacity: "0.294"
          }),
          Object(preact_min["h"])("path", {
            fill: "#FABB07",
            fillRule: "nonzero",
            d: "M17.584 226.08L17.584 41.448 101.736 226.08 116.808 226.08 200.96 41.448 200.96 225.766 218.544 225.766 218.544 0 201.274 0 109.272 200.018 16.956 0 0 0 0 226.08z"
          })
        )
      ),
      Object(preact_min["h"])("path", {
        fill: "#666C73",
        fillRule: "nonzero",
        d: "M56.82 202c28.366 0 51.155-8.53 68.365-25.588C142.395 159.353 151 136.882 151 109c0-27.71-8.605-50.137-25.815-67.282C107.975 24.573 85.186 16 56.82 16H0v186h56.82zm.213-23H24V39h33.033c21.675 0 38.755 6.222 51.24 18.667C120.758 70.11 127 87.222 127 109c0 21.95-6.242 39.105-18.727 51.463C95.788 172.821 78.708 179 57.033 179zm170.55 27c12.848 0 24.35-3.017 34.506-9.052 10.156-6.034 18.099-14.396 23.828-25.086l-21.354-10.345c-8.681 15.173-20.66 22.759-35.938 22.759-11.111 0-20.66-3.793-28.646-11.38-7.986-7.586-12.153-17.586-12.5-30h100.26l.261-2.586c0-21.896-5.599-38.922-16.797-51.077C260.005 77.078 244.944 71 226.021 71c-18.403 0-33.507 6.422-45.313 19.267C168.903 103.112 163 119.19 163 138.5c0 19.483 6.076 35.603 18.23 48.362C193.381 199.621 208.832 206 227.582 206zM263 123h-73c2.078-9.458 6.365-16.989 12.86-22.593C209.353 94.802 217.103 92 226.11 92c10.911 0 19.614 2.934 26.109 8.8 6.495 5.868 10.088 13.268 10.781 22.2zm105.163 79L420 75h-25.4l-37.84 98.49h-.52L318.919 75H293l51.318 127h23.845zm119.42 4c12.848 0 24.35-3.017 34.506-9.052 10.156-6.034 18.098-14.396 23.828-25.086l-21.355-10.345c-8.68 15.173-20.66 22.759-35.937 22.759-11.111 0-20.66-3.793-28.646-11.38-7.986-7.586-12.153-17.586-12.5-30h100.26l.261-2.586c0-21.896-5.599-38.922-16.797-51.077C520.005 77.078 504.944 71 486.021 71c-18.403 0-33.507 6.422-45.313 19.267C428.903 103.112 423 119.19 423 138.5c0 19.483 6.076 35.603 18.23 48.362C453.381 199.621 468.832 206 487.582 206zM523 123h-73c2.078-9.458 6.365-16.989 12.86-22.593C469.353 94.802 477.103 92 486.11 92c10.911 0 19.614 2.934 26.109 8.8 6.495 5.868 10.088 13.268 10.781 22.2zm70 79V16h-24v186h24zm84.5 4c18.888 0 34.483-6.38 46.786-19.138C736.762 174.276 743 158.155 743 138.5c0-19.483-6.238-35.603-18.714-48.362C711.983 77.379 696.388 71 677.5 71s-34.57 6.38-47.046 19.138C618.151 102.897 612 119.018 612 138.5c0 19.483 6.151 35.603 18.454 48.362C642.931 199.621 658.612 206 677.5 206zm0-22c-11.758 0-21.615-4.245-29.569-12.734C639.977 162.776 636 151.687 636 138c0-13.514 3.977-24.516 11.931-33.006C656.058 96.331 665.915 92 677.5 92c11.585 0 21.442 4.331 29.569 12.994C715.023 113.484 719 124.486 719 138c0 13.687-3.977 24.776-11.931 33.266-7.954 8.49-17.81 12.734-29.569 12.734zm108.435 74v-55.945l-1.04-17.612h1.04c4.163 6.562 10.103 11.828 17.821 15.8 7.718 3.97 16.26 5.956 25.626 5.956 16.824 0 31.046-6.561 42.667-19.684C884.016 173.392 890 157.421 890 138.6c0-18.648-5.984-34.62-17.951-47.916C860.429 77.561 846.206 71 829.382 71c-9.366 0-17.908 1.986-25.626 5.957s-13.658 9.238-17.821 15.8h-1.04V75.143H762V258h23.935zm39.565-74c-11.596 0-21.288-4.245-29.077-12.734C788.808 162.603 785 151.514 785 138c0-13.34 3.808-24.343 11.423-33.006C804.212 96.331 813.903 92 825.5 92c11.423 0 21.029 4.331 28.817 12.994C862.106 113.657 866 124.66 866 138c0 13.514-3.894 24.516-11.683 33.006C846.53 179.669 836.923 184 825.5 184zm142.083 22c12.848 0 24.35-3.017 34.506-9.052 10.156-6.034 18.098-14.396 23.828-25.086l-21.354-10.345c-8.681 15.173-20.66 22.759-35.938 22.759-11.111 0-20.66-3.793-28.646-11.38-7.986-7.586-12.153-17.586-12.5-30h100.26l.261-2.586c0-21.896-5.599-38.922-16.797-51.077C1000.005 77.078 984.944 71 966.021 71c-18.403 0-33.507 6.422-45.313 19.267C908.903 103.112 903 119.19 903 138.5c0 19.483 6.076 35.603 18.23 48.362C933.381 199.621 948.832 206 967.582 206zM1002 123h-73c2.078-9.458 6.365-16.989 12.86-22.593C948.353 94.802 956.103 92 965.11 92c10.911 0 19.614 2.934 26.109 8.8 6.495 5.868 10.088 13.268 10.781 22.2zm70.987 79v-70.179c0-9.703 3.346-18.194 10.038-25.472 6.692-7.278 14.557-10.916 23.595-10.916 6.432 0 11.125.606 14.08 1.819l7.3-23.133c-4.867-2.08-10.777-3.119-17.73-3.119-7.3 0-14.73 2.383-22.291 7.148-7.562 4.765-12.559 10.527-14.992 17.285h-1.043V74.639H1049V202h23.987zm174.068 4c17.279 0 31.966-4.841 44.061-14.524 11.923-9.856 17.884-22.91 17.884-39.163 0-13.487-4.017-24.855-12.052-34.106-8.035-9.25-21.47-17.074-40.303-23.472-18.489-6.397-30.497-11.93-36.027-16.599-5.01-4.668-7.516-10.201-7.516-16.599 0-7.78 3.197-14.091 9.59-18.933 6.393-5.187 14.255-7.78 23.586-7.78 8.812 0 16.285 2.29 22.419 6.873 6.134 4.582 10.238 10.33 12.311 17.247l22.29-9.337c-3.456-10.72-10.367-19.625-20.735-26.714C1272.196 15.631 1259.928 12 1245.76 12c-16.07 0-29.633 4.841-40.692 14.524-10.885 9.683-16.328 21.354-16.328 35.013 0 19.539 9.849 34.322 29.547 44.35 3.628 1.903 12.872 5.534 27.732 10.894 14.687 5.014 24.71 10.201 30.066 15.561 5.702 5.533 8.553 12.19 8.553 19.97 0 9.338-3.456 16.816-10.368 22.435-6.911 5.62-15.81 8.43-26.696 8.43-5.01 0-9.762-.908-14.255-2.724a44.048 44.048 0 01-12.31-7.521c-3.716-3.199-6.956-7.046-9.72-11.542-2.765-4.495-4.925-9.51-6.48-15.042L1182 155.684c4.493 15.562 12.614 27.838 24.363 36.83 11.75 8.99 25.314 13.486 40.692 13.486zm130.268-2c8.258 0 15.483-1.123 21.677-3.37l-7.484-21.26a28.687 28.687 0 01-5.032 1.686 23.767 23.767 0 01-5.549.648c-4.129 0-7.827-1.513-11.096-4.537-3.27-3.025-4.904-8.772-4.904-17.241v-63.26h30.968V74.89h-30.968V36h-23.741v38.889H1319v21.778h22.194v71.037c.172 11.407 3.655 20.308 10.451 26.703 6.796 6.395 15.355 9.593 25.678 9.593zm88.366 2c8.158 0 16.013-2.071 23.563-6.213 7.551-4.143 13.149-9.32 16.794-15.534h1.042v17.605H1530V75h-23.954v70.16c0 10.701-3.211 19.892-9.634 27.572-6.422 7.68-14.407 11.521-23.953 11.521-20.483 0-30.984-10.356-31.505-31.067V75H1417v79.74c0 16.396 4.21 29.038 12.628 37.927S1450.067 206 1465.688 206zm143.929 0c9.366 0 17.908-1.99 25.626-5.97 7.718-3.98 13.658-9.258 17.821-15.833h1.04v17.65H1677V16h-23.935v58.661l1.04 17.65h-1.04c-4.163-6.575-10.103-11.853-17.821-15.833-7.718-3.98-16.26-5.97-25.626-5.97-16.65 0-30.96 6.576-42.927 19.727-11.794 13.324-17.691 29.33-17.691 48.02 0 18.688 5.897 34.694 17.691 48.018 11.968 13.151 26.276 19.727 42.927 19.727zm3.882-22c-11.423 0-21.029-4.331-28.817-12.994-7.789-8.49-11.683-19.492-11.683-33.006 0-13.34 3.894-24.343 11.683-33.006C1592.47 96.331 1602.077 92 1613.5 92c11.596 0 21.202 4.331 28.817 12.994C1650.106 113.657 1654 124.66 1654 138c0 13.687-3.894 24.776-11.683 33.266-7.442 8.49-17.048 12.734-28.817 12.734zm147.083 22c12.848 0 24.35-3.017 34.506-9.052 10.156-6.034 18.099-14.396 23.828-25.086l-21.354-10.345c-8.681 15.173-20.66 22.759-35.938 22.759-11.111 0-20.66-3.793-28.646-11.38-7.986-7.586-12.153-17.586-12.5-30h100.26l.261-2.586c0-21.896-5.599-38.922-16.797-51.077C1793.005 77.078 1777.944 71 1759.021 71c-18.403 0-33.507 6.422-45.313 19.267C1701.903 103.112 1696 119.19 1696 138.5c0 19.483 6.076 35.603 18.23 48.362 12.152 12.759 27.603 19.138 46.353 19.138zM1795 123h-73c2.078-9.458 6.365-16.989 12.86-22.593 6.494-5.605 14.244-8.407 23.25-8.407 10.911 0 19.614 2.934 26.109 8.8 6.495 5.868 10.088 13.268 10.781 22.2zm70.954 79v-70.16c0-10.701 3.211-19.892 9.634-27.572 6.422-7.68 14.407-11.521 23.953-11.521 20.483 0 30.984 10.356 31.505 31.067V202H1955v-79.74c0-16.396-4.21-29.038-12.628-37.927S1921.933 71 1906.312 71c-8.16 0-16.014 2.071-23.564 6.213-7.551 4.143-13.149 9.32-16.794 15.534h-1.042V75.142H1842V202h23.954zm159.369 2c8.258 0 15.483-1.123 21.677-3.37l-7.484-21.26a28.687 28.687 0 01-5.032 1.686 23.767 23.767 0 01-5.549.648c-4.129 0-7.827-1.513-11.096-4.537-3.27-3.025-4.904-8.772-4.904-17.241v-63.26h30.968V74.89h-30.968V36h-23.741v38.889H1967v21.778h22.194v71.037c.172 11.407 3.655 20.308 10.451 26.703 6.796 6.395 15.355 9.593 25.678 9.593zm183.08 2c14.684 0 28.42-2.896 41.204-8.689 12.784-5.792 23.582-13.962 32.393-24.509l-17.363-16.858c-15.894 18.155-34.639 27.232-56.235 27.232-20.559 0-37.749-6.916-51.57-20.748-13.648-13.66-20.472-31.469-20.472-53.428 0-21.959 6.824-39.768 20.472-53.428 13.821-13.832 31.012-20.748 51.57-20.748 20.732 0 37.75 8.04 51.052 24.12l17.104-16.6C2259.108 22.116 2236.39 12 2208.402 12c-27.642 0-50.62 9.337-68.932 28.01C2121.157 58.34 2112 81.336 2112 109c0 27.665 9.157 50.748 27.47 69.249 18.485 18.5 41.463 27.751 68.932 27.751zM2327 202V16h-24v186h24zm75.689 4c8.158 0 16.013-2.071 23.563-6.213 7.551-4.143 13.149-9.32 16.794-15.534h1.042v17.605H2467V75h-23.954v70.16c0 10.701-3.211 19.892-9.634 27.572-6.422 7.68-14.407 11.521-23.953 11.521-20.483 0-30.984-10.356-31.505-31.067V75H2354v79.74c0 16.396 4.21 29.038 12.628 37.927S2387.067 206 2402.688 206zm159.693 0c16.824 0 31.046-6.576 42.667-19.727 11.967-13.151 17.951-29.157 17.951-48.019 0-18.688-5.984-34.695-17.951-48.019-11.62-13.151-25.843-19.727-42.667-19.727-9.366 0-17.908 1.99-25.626 5.97-7.718 3.98-13.658 9.258-17.821 15.833h-1.04l1.04-17.65V16H2495v185.847h22.894v-17.65h1.041c4.163 6.575 10.103 11.853 17.821 15.833 7.718 3.98 16.26 5.97 25.626 5.97zm-3.882-22c-11.596 0-21.288-4.245-29.077-12.734C2521.808 162.603 2518 151.514 2518 138c0-13.34 3.808-24.343 11.423-33.006C2537.212 96.331 2546.903 92 2558.5 92c11.423 0 21.029 4.331 28.817 12.994C2595.106 113.657 2599 124.66 2599 138c0 13.514-3.894 24.516-11.683 33.006-7.788 8.663-17.394 12.994-28.817 12.994zm130.193 22c14.758 0 27-3.793 36.722-11.38 9.723-7.586 14.585-16.896 14.585-27.93 0-19.138-12.675-31.81-38.025-38.018l-19.272-4.913c-13.717-3.104-20.575-8.276-20.575-15.518 0-4.482 2.474-8.275 7.422-11.379 4.949-3.103 10.548-4.655 16.799-4.655 6.771 0 12.892 1.509 18.361 4.526 5.47 3.017 9.42 7.198 11.85 12.543l21.356-8.793c-3.646-8.966-10.027-16.12-19.142-21.466-9.116-5.345-19.316-8.017-30.602-8.017-14.758 0-26.869 3.491-36.332 10.474-9.462 6.983-14.194 16.25-14.194 27.802 0 17.586 12.415 29.483 37.243 35.69l21.878 5.43c12.5 3.794 18.751 9.742 18.751 17.845 0 4.483-2.56 8.362-7.683 11.638-5.122 3.276-11.502 4.914-19.142 4.914-7.119 0-13.673-2.112-19.664-6.336-5.99-4.224-10.547-10.13-13.673-17.716L2634 169.793c4.167 10.862 11.112 19.612 20.835 26.25 9.724 6.638 21.01 9.957 33.858 9.957z"
      })
    )
  )
);

var footer__ref3 = Object(preact_min["h"])(
  "a",
  { href: "https://events.gdgkl.org/ioxkl19/" },
  "DSCOMG 2020"
);

var footer_Footer = function (_Component) {
  footer__inherits(Footer, _Component);

  function Footer(props) {
    footer__classCallCheck(this, Footer);

    var _this = footer__possibleConstructorReturn(this, _Component.call(this, props));

    if (typeof window !== "undefined") {
      _this.io = new IntersectionObserver(function (entries) {
        var visibleEntries = entries.filter(function (e) {
          return e.isIntersecting;
        });

        visibleEntries.filter(function (e) {
          return e.target instanceof HTMLImageElement;
        }).forEach(function (e) {
          e.target.src = e.target.dataset.src;
        });
      }, {
        /* Using default options. Details below */
      });
    }
    return _this;
  }

  Footer.prototype.componentDidMount = function componentDidMount() {
    var ele = document.querySelector(".footer_logo");

    if (!this.io || !ele) return;

    this.io.observe(ele);
  };

  Footer.prototype.componentWillUnmount = function componentWillUnmount() {
    if (!this.io) return;
    this.io.disconnect();
  };

  Footer.prototype.render = function render(_ref) {
    var rootPath = _ref.rootPath;

    return Object(preact_min["h"])(
      "div",
      { "class": footer_style_default.a.footer },
      Object(preact_min["h"])(
        "div",
        { "class": footer_style_default.a.footer_logo },
        footer__ref2
      ),
      Object(preact_min["h"])(
        "div",
        { "class": footer_style_default.a.footer_links },
        Object(preact_min["h"])(
          "div",
          { "class": footer_style_default.a.footer_link },
          footer__ref3,
          Object(preact_min["h"])(
            "a",
            { href: rootPath + "schedule" },
            "Schedule"
          ),
          Object(preact_min["h"])(
            "a",
            { href: rootPath + "speakers" },
            "Speakers"
          ),
          Object(preact_min["h"])(
            "a",
            { href: rootPath + "faq" },
            "FAQ"
          ),
          Object(preact_min["h"])(
            "a",
            { href: rootPath + "faq/communityguidelines" },
            "Community Guidelines"
          )
        )
      )
    );
  };

  return Footer;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./components/gallery_block/style.css
var gallery_block_style = __webpack_require__("Ci/U");
var gallery_block_style_default = /*#__PURE__*/__webpack_require__.n(gallery_block_style);

// CONCATENATED MODULE: ./components/gallery_block/index.js


function gallery_block__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function gallery_block__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function gallery_block__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Copyright 2016 Oleh Zasadnyy, GDG Lviv
 * Source: https://github.com/gdg-x/hoverboard
 */




var gallery_block__ref = Object(preact_min["h"])(
  "div",
  null,
  Object(preact_min["h"])(
    "h2",
    null,
    "Developer Student Club India highlights"
  ),
  Object(preact_min["h"])(
    "p",
    null,
    "Developer Student Clubs has been a vibrant community for Developers across the world. Check out photos from featured talks, hands-on learning sessions, and after-hours fun."
  )
);

var gallery_block_GalleryBlock = function (_Component) {
  gallery_block__inherits(GalleryBlock, _Component);

  function GalleryBlock(props) {
    gallery_block__classCallCheck(this, GalleryBlock);

    var _this = gallery_block__possibleConstructorReturn(this, _Component.call(this, props));

    if (typeof window !== "undefined") {
      _this.io = new IntersectionObserver(function (entries) {
        var visibleEntries = entries.filter(function (e) {
          return e.isIntersecting;
        });

        visibleEntries.filter(function (e) {
          return e.target instanceof HTMLImageElement;
        }).forEach(function (e) {
          e.target.src = e.target.dataset.src;
        });
      }, {
        /* Using default options. Details below */
      });
    }
    return _this;
  }

  GalleryBlock.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    if (!this.io) return;

    var elements = document.querySelectorAll("." + gallery_block_style_default.a.grid_item);

    elements.forEach(function (element) {
      return _this2.io.observe(element);
    });
  };

  GalleryBlock.prototype.componentWillUnmount = function componentWillUnmount() {
    if (!this.io) return;

    this.io.disconnect();
  };

  GalleryBlock.prototype.render = function render() {
    return Object(preact_min["h"])(
      "div",
      { "class": gallery_block_style_default.a.photos_grid },
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591282863/DSCOMG/20190824_141027.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591282861/DSCOMG/992162d2-175b-4360-b6ef-78d8ab082155.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591282679/DSCOMG/IMG_20190824_190220.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591282674/DSCOMG/IMG_20190823_212816.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/limhenry/image/upload/v1537072841/devfestkl18_pwa/gallery/5.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591282674/DSCOMG/IMG_20190823_204504.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591950808/DSCOMG/IMG_0895.jpg"
      }),
      Object(preact_min["h"])("img", {
        crossorigin: "anonymous",
        "class": gallery_block_style_default.a.grid_item,
        "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591950925/DSCOMG/IMG_1005.jpg"
      }),
      Object(preact_min["h"])(
        "div",
        { crossorigin: "anonymous", "class": gallery_block_style_default.a.gallery_info },
        gallery_block__ref
      )
    );
  };

  return GalleryBlock;
}(preact_min["Component"]);


// CONCATENATED MODULE: ./components/Countdown/bodymovinAnimationData.js
var ANIMATIONS = {
	nine: {
		v: '5.4.3',
		fr: 30,
		ip: 0,
		op: 300,
		w: 135,
		h: 195,
		nm: '.9-0',
		ddd: 0,
		assets: [{
			id: 'comp_0',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-61, 97, 0],
							e: [69, 97, 0],
							to: [21.6666660308838, 0, 0],
							ti: [-21.6666660308838, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [-61, 97, 0],
							to: [-21.6666660308838, 0, 0],
							ti: [21.6666660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 31.5, 0],
							e: [69, 97, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, {
							i: { x: 0.629, y: 0.629 },
							o: { x: 0.912, y: 0.912 },
							n: '0p629_0p629_0p912_0p912',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [69, 31.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-0 .lightstroke',
				cl: 'number-0 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -34.875], [-3.939, -93.875], [57.51, -34.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_1',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-1',
				cl: 'number-1',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-1 .darkfill',
				cl: 'number-1 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [34.5, 162, 0],
							e: [34.5, 96.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [34.5, 96.5, 0],
							e: [34.5, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [34.5, 96.5, 0],
							e: [34.5, 162, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [-9.065, -74.875], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-1 .lightstroke',
				cl: 'number-1 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.85, 93.625], [-1.85, -29.375], [57.15, -29.375], [57.15, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.996078431373, 0.937254901961, 0.764705882353, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 6, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_2',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.833, y: 0.833 },
							o: { x: 0.167, y: 0.167 },
							n: '0p833_0p833_0p167_0p167',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, { t: 30 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-2 .darkfill',
				cl: 'number-2 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.271, y: 0.895 },
							o: { x: 0.912, y: 0 },
							n: '0p271_0p895_0p912_0',
							t: 0,
							s: [69, 29, 0],
							e: [69, 94.843, 0],
							to: [0, 10.7926044464111, 0],
							ti: [0, -11.9904975891113, 0]
						}, {
							i: { x: 0.629, y: 1 },
							o: { x: 0.138, y: 1 },
							n: '0p629_1_0p138_1',
							t: 13,
							s: [69, 94.843, 0],
							e: [69, 95, 0],
							to: [0, 0.23041497170925, 0],
							ti: [0, -0.20739570260048, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 95, 0],
							e: [69, 29, 0],
							to: [0, -11, 0],
							ti: [0, 11, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-2 .lightfill',
				cl: 'number-2 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-58.5, 94, 0],
							e: [70, 94, 0],
							to: [21.4166660308838, 0, 0],
							ti: [-21.4166660308838, 0, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [70, 94, 0],
							e: [70, 94, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [70, 94, 0],
							e: [-58.5, 94, 0],
							to: [-21.4166660308838, 0, 0],
							ti: [21.4166660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-2 .darkstroke',
				cl: 'number-2 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-63.429, 30.125], [-26.554, -28.875], [-6.439, -28.875], [-6.439, 30.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-2 .lightstroke',
				cl: 'number-2 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -33.875], [-3.939, -92.875], [57.51, -33.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_3',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-3 .darkstroke',
				cl: 'number-3 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [73.5, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.439, 30.125], [-1.439, -28.875], [57.561, -28.875], [57.561, 30.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.658823549747, 0.854901969433, 0.709803938866, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-3',
				cl: 'number-3',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [73.5, 32, 0],
							e: [73.5, 97, 0],
							to: [0, 10.8333330154419, 0],
							ti: [0, -10.8333330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [73.5, 97, 0],
							e: [73.5, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [73.5, 97, 0],
							e: [73.5, 32, 0],
							to: [0, -10.8333330154419, 0],
							ti: [0, 10.8333330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 96.625], [60.061, 32.625], [-67.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-3 .lightfill',
				cl: 'number-3 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [74, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 96.625], [60.061, 32.625], [-67.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-3',
				cl: 'number-3',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [74, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [-17.673, 0], [0, 0]],
								o: [[0, 17.673], [0, 0], [-17.673, 0]],
								v: [[-35.939, 0.625], [-3.939, 32.625], [-3.939, -31.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-3 .darkfill',
				cl: 'number-3 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [108.5, 97, 0],
							e: [73.5, 97, 0],
							to: [-5.83333349227905, 0, 0],
							ti: [5.83333349227905, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [73.5, 97, 0],
							e: [73.5, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [73.5, 97, 0],
							e: [108.5, 97, 0],
							to: [5.83333349227905, 0, 0],
							ti: [-5.83333349227905, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [-17.673, 0], [0, 0]],
								o: [[0, 17.673], [0, 0], [-17.673, 0]],
								v: [[-35.939, 0.625], [-3.939, 32.625], [-3.939, -31.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-3 .lightstroke',
				cl: 'number-3 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [73.5, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -33.875], [-3.939, -92.875], [57.51, -33.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_4',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-4',
				cl: 'number-4',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-4 .darkfill',
				cl: 'number-4 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [3, 96.5, 0],
							e: [68, 96.5, 0],
							to: [10.8333330154419, 0, 0],
							ti: [-10.8333330154419, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [68, 96.5, 0],
							e: [68, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [68, 96.5, 0],
							e: [3, 96.5, 0],
							to: [-10.8333330154419, 0, 0],
							ti: [10.8333330154419, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-4 .lightstroke',
				cl: 'number-4 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-65.439, 29.625], [-65.439, -54.489], [-6.439, -91.364], [-6.439, 29.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.980392158031, 0.823529422283, 0.811764717102, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-4 .darkstroke',
				cl: 'number-4 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.439, 93.625], [-1.439, 34.625], [57.561, 34.625], [57.561, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.980392158031, 0.823529422283, 0.811764717102, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-4 .darkfill',
				cl: 'number-4 darkfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 32.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-4 .lightfill',
				cl: 'number-4 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [68, 160, 0],
							e: [68, 96.5, 0],
							to: [0, -10.5833330154419, 0],
							ti: [0, 10.5833330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [68, 96.5, 0],
							e: [68, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [68, 96.5, 0],
							e: [68, 160, 0],
							to: [0, 10.5833330154419, 0],
							ti: [0, -10.5833330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [17.673, 0], [0, 17.673], [-17.673, 0]],
								o: [[0, 17.673], [-17.673, 0], [0, -17.673], [17.673, 0]],
								v: [[60.061, -63.875], [28.061, -31.875], [-3.939, -63.875], [28.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.988235294819, 0.909803926945, 0.901960790157, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_5',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-5 .lightstroke',
				cl: 'number-5 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[16.266, 0], [0, 16.266], [-16.266, 0], [0, -16.266]],
								o: [[-16.266, 0], [0, -16.266], [16.266, 0], [0, 16.266]],
								v: [[-35.939, 93.625], [-65.439, 64.125], [-35.939, 34.625], [-6.439, 64.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-5',
				cl: 'number-5',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [65.061, 34.125, 0], ix: 2 },
					a: { a: 0, k: [-3.939, -63.875, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-5 .lightfill',
				cl: 'number-5 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-61, 97.5, 0],
							e: [69, 97.5, 0],
							to: [21.6666660308838, 0, 0],
							ti: [-21.6666660308838, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [-61, 97.5, 0],
							to: [-21.6666660308838, 0, 0],
							ti: [21.6666660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-5 .darkstroke',
				cl: 'number-5 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, -33.073], [32.755, -1.317]],
								o: [[32.755, 1.317], [0, 33.073], [0, 0]],
								v: [[-1.439, -29.325], [57.561, 32.125], [-1.439, 93.575]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-5',
				cl: 'number-5',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.833, y: 0.833 },
							o: { x: 0.167, y: 0.167 },
							n: '0p833_0p833_0p167_0p167',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, { t: 30 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [-67.939, -7.875], [-67.939, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-5 .darkfill',
				cl: 'number-5 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 32.5, 0],
							e: [69, 97.5, 0],
							to: [0, 10.8333330154419, 0],
							ti: [0, -10.8333330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [69, 32.5, 0],
							to: [0, -10.8333330154419, 0],
							ti: [0, 10.8333330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [-67.939, -7.875], [-67.939, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_6',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-6',
				cl: 'number-6',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.688, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[35.346, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, -35.346]],
								v: [[-3.939, -32.375], [-3.939, 31.625], [60.061, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-6 .darkfill',
				cl: 'number-6 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [2, 97.75, 0],
							e: [69, 97.75, 0],
							to: [11.1666669845581, 0, 0],
							ti: [-11.1666669845581, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.75, 0],
							e: [69, 97.75, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.75, 0],
							e: [2, 97.75, 0],
							to: [-11.1666669845581, 0, 0],
							ti: [11.1666669845581, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[35.346, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, -35.346]],
								v: [[-3.939, -32.375], [-3.939, 31.625], [60.061, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-6',
				cl: 'number-6',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-6 .lightfill',
				cl: 'number-6 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 31.5, 0],
							e: [69, 97.5, 0],
							to: [0, 11, 0],
							ti: [0, -11, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [69, 31.5, 0],
							to: [0, -11, 0],
							ti: [0, 11, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-6 .darkstroke',
				cl: 'number-6 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [-32.755, 1.317], [0, 0]],
								o: [[0, 0], [0, -33.073], [0, 0], [0, 0]],
								v: [[-65.439, 29.125], [-65.439, -32.375], [-6.439, -93.825], [-6.439, 29.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.658823549747, 0.854901969433, 0.709803938866, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-6 .lightstroke',
				cl: 'number-6 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[16.266, 0], [0, 16.266], [-16.266, 0], [0, -16.266]],
								o: [[-16.266, 0], [0, -16.266], [16.266, 0], [0, 16.266]],
								v: [[28.061, -34.875], [-1.439, -64.375], [28.061, -93.875], [57.561, -64.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_7',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-7 .lightstroke',
				cl: 'number-7 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69.5, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-65.439, 93.625], [-65.439, 9.511], [-6.439, -27.364], [-6.439, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.980392158031, 0.823529422283, 0.811764717102, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-7',
				cl: 'number-7',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.875], [-3.939, -31.875], [-3.939, 32.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-7 .darkfill',
				cl: 'number-7 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [4, 97, 0],
							e: [69, 97, 0],
							to: [10.8333330154419, 0, 0],
							ti: [-10.8333330154419, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [4, 97, 0],
							to: [-10.8333330154419, 0, 0],
							ti: [10.8333330154419, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.875], [-3.939, -31.875], [-3.939, 32.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-7',
				cl: 'number-7',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.988235294819, 0.909803926945, 0.901960790157, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-7 .lightfill',
				cl: 'number-7 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [200, 97, 0],
							e: [69, 97, 0],
							to: [-21.8333339691162, 0, 0],
							ti: [21.8333339691162, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [200, 97, 0],
							to: [21.8333339691162, 0, 0],
							ti: [-21.8333339691162, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.988235294819, 0.909803926945, 0.901960790157, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_8',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-8',
				cl: 'number-8',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 94.875], [60.061, 30.875], [-67.939, 30.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-8 .darkfill',
				cl: 'number-8 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 31.5, 0],
							e: [69, 97.5, 0],
							to: [0, 11, 0],
							ti: [0, -11, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [69, 31.5, 0],
							to: [0, -11, 0],
							ti: [0, 11, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 94.875], [60.061, 30.875], [-67.939, 30.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-8 .darkstroke',
				cl: 'number-8 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, 28.375], [-3.939, -30.625], [57.51, 28.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-8',
				cl: 'number-8',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[35.346, 0], [0, -35.346], [0, 0]],
								o: [[-35.346, 0], [0, 0], [0, -35.346]],
								v: [[-3.939, -97.125], [-67.939, -33.125], [60.061, -33.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-8 .lightfill',
				cl: 'number-8 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 167.5, 0],
							e: [69, 97.5, 0],
							to: [0, -11.6666669845581, 0],
							ti: [0, 11.6666669845581, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [69, 167.5, 0],
							to: [0, 11.6666669845581, 0],
							ti: [0, -11.6666669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[35.346, 0], [0, -35.346], [0, 0]],
								o: [[-35.346, 0], [0, 0], [0, -35.346]],
								v: [[-3.939, -97.125], [-67.939, -33.125], [60.061, -33.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_9',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-9 .lightstroke',
				cl: 'number-9 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68.5, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.939, 93.625], [-1.939, -91.364], [57.061, -54.489], [57.061, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.992156863213, 0.929411768913, 0.772549033165, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 6, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-9',
				cl: 'number-9',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69.5, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -35.346], [-35.346, 0], [0, 0]],
								o: [[0, 35.346], [0, 0], [-35.346, 0]],
								v: [[-68.44, -31.875], [-4.44, 32.125], [-4.44, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.972549021244, 0.721568644047, 0.223529413342, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-9 .darkfill',
				cl: 'number-9 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [138.5, 97.5, 0],
							e: [68.5, 97.5, 0],
							to: [-11.6666669845581, 0, 0],
							ti: [11.6666669845581, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [68.5, 97.5, 0],
							e: [68.5, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [68.5, 97.5, 0],
							e: [138.5, 97.5, 0],
							to: [11.6666669845581, 0, 0],
							ti: [-11.6666669845581, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -35.346], [-35.346, 0], [0, 0]],
								o: [[0, 35.346], [0, 0], [-35.346, 0]],
								v: [[-68.44, -31.875], [-4.44, 32.125], [-4.44, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.972549021244, 0.721568644047, 0.223529413342, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}],
		layers: [{
			ddd: 0,
			ind: 1,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 285,
			op: 330,
			st: 285,
			bm: 0
		}, {
			ddd: 0,
			ind: 2,
			ty: 0,
			nm: '01',
			refId: 'comp_1',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97, 0], ix: 2 },
				a: { a: 0, k: [47.5, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 95,
			h: 193,
			ip: 255,
			op: 300,
			st: 255,
			bm: 0
		}, {
			ddd: 0,
			ind: 3,
			ty: 0,
			nm: '02',
			refId: 'comp_2',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 99, 0], ix: 2 },
				a: { a: 0, k: [65, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 193,
			ip: 225,
			op: 270,
			st: 225,
			bm: 0
		}, {
			ddd: 0,
			ind: 4,
			ty: 0,
			nm: '03',
			refId: 'comp_3',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [70, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 140,
			h: 194,
			ip: 195,
			op: 240,
			st: 195,
			bm: 0
		}, {
			ddd: 0,
			ind: 5,
			ty: 0,
			nm: '04',
			refId: 'comp_4',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 193,
			ip: 165,
			op: 210,
			st: 165,
			bm: 0
		}, {
			ddd: 0,
			ind: 6,
			ty: 0,
			nm: '05',
			refId: 'comp_5',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 195,
			ip: 135,
			op: 180,
			st: 135,
			bm: 0
		}, {
			ddd: 0,
			ind: 7,
			ty: 0,
			nm: '06',
			refId: 'comp_6',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 195,
			ip: 105,
			op: 150,
			st: 105,
			bm: 0
		}, {
			ddd: 0,
			ind: 8,
			ty: 0,
			nm: '07',
			refId: 'comp_7',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 75,
			op: 120,
			st: 75,
			bm: 0
		}, {
			ddd: 0,
			ind: 9,
			ty: 0,
			nm: '08',
			refId: 'comp_8',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 195,
			ip: 45,
			op: 90,
			st: 45,
			bm: 0
		}, {
			ddd: 0,
			ind: 10,
			ty: 0,
			nm: '09',
			refId: 'comp_9',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 195,
			ip: 15,
			op: 60,
			st: 15,
			bm: 0
		}, {
			ddd: 0,
			ind: 11,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: -15,
			op: 30,
			st: -15,
			bm: 0
		}],
		markers: [{ tm: 15, cm: '1', dr: 0 }, { tm: 30, cm: '2', dr: 0 }]
	},
	five: {
		v: '5.4.3',
		fr: 30,
		ip: 0,
		op: 180,
		w: 135,
		h: 195,
		nm: '.5-0',
		ddd: 0,
		assets: [{
			id: 'comp_0',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-61, 97, 0],
							e: [69, 97, 0],
							to: [21.6666660308838, 0, 0],
							ti: [-21.6666660308838, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [-61, 97, 0],
							to: [-21.6666660308838, 0, 0],
							ti: [21.6666660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 31.5, 0],
							e: [69, 97, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, {
							i: { x: 0.629, y: 0.629 },
							o: { x: 0.912, y: 0.912 },
							n: '0p629_0p629_0p912_0p912',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [69, 31.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-0 .lightstroke',
				cl: 'number-0 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -34.875], [-3.939, -93.875], [57.51, -34.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_1',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-1',
				cl: 'number-1',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-1 .darkfill',
				cl: 'number-1 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [34.5, 162, 0],
							e: [34.5, 96.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [34.5, 96.5, 0],
							e: [34.5, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [34.5, 96.5, 0],
							e: [34.5, 162, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [-9.065, -74.875], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-1 .lightstroke',
				cl: 'number-1 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.85, 93.625], [-1.85, -29.375], [57.15, -29.375], [57.15, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.996078431373, 0.937254901961, 0.764705882353, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 6, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_2',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.833, y: 0.833 },
							o: { x: 0.167, y: 0.167 },
							n: '0p833_0p833_0p167_0p167',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, { t: 30 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-2 .darkfill',
				cl: 'number-2 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.271, y: 0.895 },
							o: { x: 0.912, y: 0 },
							n: '0p271_0p895_0p912_0',
							t: 0,
							s: [69, 29, 0],
							e: [69, 94.843, 0],
							to: [0, 10.7926044464111, 0],
							ti: [0, -11.9904975891113, 0]
						}, {
							i: { x: 0.629, y: 1 },
							o: { x: 0.138, y: 1 },
							n: '0p629_1_0p138_1',
							t: 13,
							s: [69, 94.843, 0],
							e: [69, 95, 0],
							to: [0, 0.23041497170925, 0],
							ti: [0, -0.20739570260048, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 95, 0],
							e: [69, 29, 0],
							to: [0, -11, 0],
							ti: [0, 11, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-2 .lightfill',
				cl: 'number-2 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-58.5, 94, 0],
							e: [70, 94, 0],
							to: [21.4166660308838, 0, 0],
							ti: [-21.4166660308838, 0, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [70, 94, 0],
							e: [70, 94, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [70, 94, 0],
							e: [-58.5, 94, 0],
							to: [-21.4166660308838, 0, 0],
							ti: [21.4166660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-2 .darkstroke',
				cl: 'number-2 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-63.429, 30.125], [-26.554, -28.875], [-6.439, -28.875], [-6.439, 30.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-2 .lightstroke',
				cl: 'number-2 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -33.875], [-3.939, -92.875], [57.51, -33.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_3',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-3 .darkstroke',
				cl: 'number-3 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [73.5, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.439, 30.125], [-1.439, -28.875], [57.561, -28.875], [57.561, 30.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.658823549747, 0.854901969433, 0.709803938866, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-3',
				cl: 'number-3',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [73.5, 32, 0],
							e: [73.5, 97, 0],
							to: [0, 10.8333330154419, 0],
							ti: [0, -10.8333330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [73.5, 97, 0],
							e: [73.5, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [73.5, 97, 0],
							e: [73.5, 32, 0],
							to: [0, -10.8333330154419, 0],
							ti: [0, 10.8333330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 96.625], [60.061, 32.625], [-67.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-3 .lightfill',
				cl: 'number-3 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [74, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 96.625], [60.061, 32.625], [-67.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-3',
				cl: 'number-3',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [74, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [-17.673, 0], [0, 0]],
								o: [[0, 17.673], [0, 0], [-17.673, 0]],
								v: [[-35.939, 0.625], [-3.939, 32.625], [-3.939, -31.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-3 .darkfill',
				cl: 'number-3 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [108.5, 97, 0],
							e: [73.5, 97, 0],
							to: [-5.83333349227905, 0, 0],
							ti: [5.83333349227905, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [73.5, 97, 0],
							e: [73.5, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [73.5, 97, 0],
							e: [108.5, 97, 0],
							to: [5.83333349227905, 0, 0],
							ti: [-5.83333349227905, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [-17.673, 0], [0, 0]],
								o: [[0, 17.673], [0, 0], [-17.673, 0]],
								v: [[-35.939, 0.625], [-3.939, 32.625], [-3.939, -31.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-3 .lightstroke',
				cl: 'number-3 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [73.5, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -33.875], [-3.939, -92.875], [57.51, -33.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_4',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-4',
				cl: 'number-4',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-4 .darkfill',
				cl: 'number-4 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [3, 96.5, 0],
							e: [68, 96.5, 0],
							to: [10.8333330154419, 0, 0],
							ti: [-10.8333330154419, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [68, 96.5, 0],
							e: [68, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [68, 96.5, 0],
							e: [3, 96.5, 0],
							to: [-10.8333330154419, 0, 0],
							ti: [10.8333330154419, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-4 .lightstroke',
				cl: 'number-4 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-65.439, 29.625], [-65.439, -54.489], [-6.439, -91.364], [-6.439, 29.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.980392158031, 0.823529422283, 0.811764717102, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-4 .darkstroke',
				cl: 'number-4 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.439, 93.625], [-1.439, 34.625], [57.561, 34.625], [57.561, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.980392158031, 0.823529422283, 0.811764717102, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-4 .darkfill',
				cl: 'number-4 darkfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [68, 32.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [60.061, 32.125], [60.061, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.898039221764, 0.266666680574, 0.247058823705, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-4 .lightfill',
				cl: 'number-4 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [68, 160, 0],
							e: [68, 96.5, 0],
							to: [0, -10.5833330154419, 0],
							ti: [0, 10.5833330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [68, 96.5, 0],
							e: [68, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [68, 96.5, 0],
							e: [68, 160, 0],
							to: [0, 10.5833330154419, 0],
							ti: [0, -10.5833330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, -17.673], [17.673, 0], [0, 17.673], [-17.673, 0]],
								o: [[0, 17.673], [-17.673, 0], [0, -17.673], [17.673, 0]],
								v: [[60.061, -63.875], [28.061, -31.875], [-3.939, -63.875], [28.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.988235294819, 0.909803926945, 0.901960790157, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_5',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-5 .lightstroke',
				cl: 'number-5 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[16.266, 0], [0, 16.266], [-16.266, 0], [0, -16.266]],
								o: [[-16.266, 0], [0, -16.266], [16.266, 0], [0, 16.266]],
								v: [[-35.939, 93.625], [-65.439, 64.125], [-35.939, 34.625], [-6.439, 64.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-5',
				cl: 'number-5',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [65.061, 34.125, 0], ix: 2 },
					a: { a: 0, k: [-3.939, -63.875, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-5 .lightfill',
				cl: 'number-5 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-61, 97.5, 0],
							e: [69, 97.5, 0],
							to: [21.6666660308838, 0, 0],
							ti: [-21.6666660308838, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [-61, 97.5, 0],
							to: [-21.6666660308838, 0, 0],
							ti: [21.6666660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, -31.875], [-67.939, -31.875], [-67.939, -95.875], [60.061, -95.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-5 .darkstroke',
				cl: 'number-5 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, -33.073], [32.755, -1.317]],
								o: [[32.755, 1.317], [0, 33.073], [0, 0]],
								v: [[-1.439, -29.325], [57.561, 32.125], [-1.439, 93.575]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-5',
				cl: 'number-5',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.833, y: 0.833 },
							o: { x: 0.167, y: 0.167 },
							n: '0p833_0p833_0p167_0p167',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, { t: 30 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [-67.939, -7.875], [-67.939, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-5 .darkfill',
				cl: 'number-5 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 32.5, 0],
							e: [69, 97.5, 0],
							to: [0, 10.8333330154419, 0],
							ti: [0, -10.8333330154419, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97.5, 0],
							e: [69, 97.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97.5, 0],
							e: [69, 32.5, 0],
							to: [0, -10.8333330154419, 0],
							ti: [0, 10.8333330154419, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-3.939, 32.125], [-67.939, -7.875], [-67.939, -31.875], [-3.939, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}],
		layers: [{
			ddd: 0,
			ind: 1,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 165,
			op: 180,
			st: 165,
			bm: 0
		}, {
			ddd: 0,
			ind: 2,
			ty: 0,
			nm: '01',
			refId: 'comp_1',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [47.5, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 95,
			h: 193,
			ip: 135,
			op: 180,
			st: 135,
			bm: 0
		}, {
			ddd: 0,
			ind: 3,
			ty: 0,
			nm: '02',
			refId: 'comp_2',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 193,
			ip: 105,
			op: 150,
			st: 105,
			bm: 0
		}, {
			ddd: 0,
			ind: 4,
			ty: 0,
			nm: '03',
			refId: 'comp_3',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [70, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 140,
			h: 194,
			ip: 75,
			op: 120,
			st: 75,
			bm: 0
		}, {
			ddd: 0,
			ind: 5,
			ty: 0,
			nm: '04',
			refId: 'comp_4',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 193,
			ip: 45,
			op: 90,
			st: 45,
			bm: 0
		}, {
			ddd: 0,
			ind: 6,
			ty: 0,
			nm: '05',
			refId: 'comp_5',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 195,
			ip: 15,
			op: 60,
			st: 15,
			bm: 0
		}, {
			ddd: 0,
			ind: 7,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 0,
			op: 30,
			st: -15,
			bm: 0
		}],
		markers: [{ tm: 15, cm: '1', dr: 0 }, { tm: 30, cm: '2', dr: 0 }]
	},
	two: {
		v: '5.4.3',
		fr: 30,
		ip: 0,
		op: 90,
		w: 135,
		h: 195,
		nm: '.2-0',
		ddd: 0,
		assets: [{
			id: 'comp_0',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-0 .darkfill',
				cl: 'number-0 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-61, 97, 0],
							e: [69, 97, 0],
							to: [21.6666660308838, 0, 0],
							ti: [-21.6666660308838, 0, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [-61, 97, 0],
							to: [-21.6666660308838, 0, 0],
							ti: [21.6666660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 31.625], [-67.939, 31.625], [-67.939, -32.375], [60.061, -32.375]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.203921571374, 0.658823549747, 0.32549020648, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-0 .lightfill',
				cl: 'number-0 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [69, 31.5, 0],
							e: [69, 97, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, {
							i: { x: 0.629, y: 0.629 },
							o: { x: 0.912, y: 0.912 },
							n: '0p629_0p629_0p912_0p912',
							t: 15,
							s: [69, 97, 0],
							e: [69, 97, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 97, 0],
							e: [69, 31.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-35.346, 0], [0, 35.346], [0, 0]],
								o: [[35.346, 0], [0, 0], [0, 35.346]],
								v: [[-3.939, 95.625], [60.061, 31.625], [-67.939, 31.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-0 .lightstroke',
				cl: 'number-0 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 97, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -34.875], [-3.939, -93.875], [57.51, -34.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.807843148708, 0.917647063732, 0.839215695858, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_1',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-1',
				cl: 'number-1',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-1 .darkfill',
				cl: 'number-1 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [34.5, 162, 0],
							e: [34.5, 96.5, 0],
							to: [0, -10.9166669845581, 0],
							ti: [0, 10.9166669845581, 0]
						}, {
							i: { x: 0.16, y: 0.16 },
							o: { x: 0.84, y: 0.84 },
							n: '0p16_0p16_0p84_0p84',
							t: 15,
							s: [34.5, 96.5, 0],
							e: [34.5, 96.5, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [34.5, 96.5, 0],
							e: [34.5, 162, 0],
							to: [0, 10.9166669845581, 0],
							ti: [0, -10.9166669845581, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[-0.833, 1.332], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-1.571, 0]],
								v: [[-34.027, -34.935], [-9.065, -74.875], [4.061, -95.875], [60.061, -95.875], [60.061, -31.875], [-32.331, -31.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.984313726425, 0.737254917622, 0.015686275437, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-1 .lightstroke',
				cl: 'number-1 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [34.5, 96.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-1.85, 93.625], [-1.85, -29.375], [57.15, -29.375], [57.15, 93.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.996078431373, 0.937254901961, 0.764705882353, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 6, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}, {
			id: 'comp_2',
			layers: [{
				ddd: 0,
				ind: 1,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.833, y: 0.833 },
							o: { x: 0.167, y: 0.167 },
							n: '0p833_0p833_0p167_0p167',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, { t: 30 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 2,
				ty: 4,
				nm: '.number-2 .darkfill',
				cl: 'number-2 darkfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.271, y: 0.895 },
							o: { x: 0.912, y: 0 },
							n: '0p271_0p895_0p912_0',
							t: 0,
							s: [69, 29, 0],
							e: [69, 94.843, 0],
							to: [0, 10.7926044464111, 0],
							ti: [0, -11.9904975891113, 0]
						}, {
							i: { x: 0.629, y: 1 },
							o: { x: 0.138, y: 1 },
							n: '0p629_1_0p138_1',
							t: 13,
							s: [69, 94.843, 0],
							e: [69, 95, 0],
							to: [0, 0.23041497170925, 0],
							ti: [0, -0.20739570260048, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [69, 95, 0],
							e: [69, 95, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [69, 95, 0],
							e: [69, 29, 0],
							to: [0, -11, 0],
							ti: [0, 11, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 35.346], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [35.346, 0]],
								v: [[60.061, -31.375], [-3.939, -31.375], [-3.939, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.258823543787, 0.521568655968, 0.956862747669, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 3,
				ty: 4,
				nm: '.number-2',
				cl: 'number-2',
				td: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: 'Group 1',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 4,
				ty: 4,
				nm: '.number-2 .lightfill',
				cl: 'number-2 lightfill',
				tt: 1,
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: {
						a: 1,
						k: [{
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 0,
							s: [-58.5, 94, 0],
							e: [70, 94, 0],
							to: [21.4166660308838, 0, 0],
							ti: [-21.4166660308838, 0, 0]
						}, {
							i: { x: -0.037, y: -0.037 },
							o: { x: 0.545, y: 0.545 },
							n: '-0p037_-0p037_0p545_0p545',
							t: 15,
							s: [70, 94, 0],
							e: [70, 94, 0],
							to: [0, 0, 0],
							ti: [0, 0, 0]
						}, {
							i: { x: 0.16, y: 1 },
							o: { x: 0.84, y: 0 },
							n: '0p16_1_0p84_0',
							t: 30,
							s: [70, 94, 0],
							e: [-58.5, 94, 0],
							to: [-21.4166660308838, 0, 0],
							ti: [21.4166660308838, 0, 0]
						}, { t: 44 }],
						ix: 2
					},
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[60.061, 96.625], [-67.939, 96.625], [-67.939, 32.625], [60.061, 32.625]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'fl',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 4
						},
						o: { a: 0, k: 100, ix: 5 },
						r: 1,
						bm: 0,
						nm: 'Fill 1',
						mn: 'ADBE Vector Graphic - Fill',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightfill',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightfill'
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 5,
				ty: 4,
				nm: '.number-2 .darkstroke',
				cl: 'number-2 darkstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [0, 0], [0, 0], [0, 0]],
								o: [[0, 0], [0, 0], [0, 0], [0, 0]],
								v: [[-63.429, 30.125], [-26.554, -28.875], [-6.439, -28.875], [-6.439, 30.125]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.68235296011, 0.796078443527, 0.96862745285, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.darkstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'darkstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}, {
				ddd: 0,
				ind: 6,
				ty: 4,
				nm: '.number-2 .lightstroke',
				cl: 'number-2 lightstroke',
				sr: 1,
				ks: {
					o: { a: 0, k: 100, ix: 11 },
					r: { a: 0, k: 0, ix: 10 },
					p: { a: 0, k: [69, 95.5, 0], ix: 2 },
					a: { a: 0, k: [0, 0, 0], ix: 1 },
					s: { a: 0, k: [100, 100, 100], ix: 6 }
				},
				ao: 0,
				shapes: [{
					ty: 'gr',
					it: [{
						ind: 0,
						ty: 'sh',
						ix: 1,
						ks: {
							a: 0,
							k: {
								i: [[0, 0], [-33.073, 0], [-1.317, -32.755]],
								o: [[1.317, -32.755], [33.073, 0], [0, 0]],
								v: [[-65.389, -33.875], [-3.939, -92.875], [57.51, -33.875]],
								c: true
							},
							ix: 2
						},
						nm: 'Path 1',
						mn: 'ADBE Vector Shape - Group',
						hd: false
					}, {
						ty: 'st',
						c: {
							a: 0,
							k: [0.823529422283, 0.890196084976, 0.988235294819, 1],
							ix: 3
						},
						o: { a: 0, k: 100, ix: 4 },
						w: { a: 0, k: 5, ix: 5 },
						lc: 1,
						lj: 1,
						ml: 10,
						ml2: { a: 0, k: 10, ix: 8 },
						bm: 0,
						nm: 'Stroke 1',
						mn: 'ADBE Vector Graphic - Stroke',
						hd: false
					}, {
						ty: 'tr',
						p: { a: 0, k: [0, 0], ix: 2 },
						a: { a: 0, k: [0, 0], ix: 1 },
						s: { a: 0, k: [100, 100], ix: 3 },
						r: { a: 0, k: 0, ix: 6 },
						o: { a: 0, k: 100, ix: 7 },
						sk: { a: 0, k: 0, ix: 4 },
						sa: { a: 0, k: 0, ix: 5 },
						nm: 'Transform'
					}],
					nm: '.lightstroke',
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: 'ADBE Vector Group',
					hd: false,
					cl: 'lightstroke'
				}, {
					ty: 'tm',
					s: {
						a: 1,
						k: [{
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 0,
							s: [100],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 15,
							s: [0],
							e: [0]
						}, {
							i: { x: [0.16], y: [1] },
							o: { x: [0.84], y: [0] },
							n: ['0p16_1_0p84_0'],
							t: 30,
							s: [0],
							e: [100]
						}, { t: 44 }],
						ix: 1
					},
					e: { a: 0, k: 100, ix: 2 },
					o: { a: 0, k: 0, ix: 3 },
					m: 1,
					ix: 2,
					nm: 'Trim Paths 1',
					mn: 'ADBE Vector Filter - Trim',
					hd: false
				}],
				ip: 0,
				op: 45,
				st: 0,
				bm: 0
			}]
		}],
		layers: [{
			ddd: 0,
			ind: 1,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 75,
			op: 90,
			st: 75,
			bm: 0
		}, {
			ddd: 0,
			ind: 2,
			ty: 0,
			nm: '01',
			refId: 'comp_1',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [47.5, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 95,
			h: 193,
			ip: 45,
			op: 90,
			st: 45,
			bm: 0
		}, {
			ddd: 0,
			ind: 3,
			ty: 0,
			nm: '02',
			refId: 'comp_2',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 96.5, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 193,
			ip: 15,
			op: 60,
			st: 15,
			bm: 0
		}, {
			ddd: 0,
			ind: 4,
			ty: 0,
			nm: '00',
			refId: 'comp_0',
			sr: 1,
			ks: {
				o: { a: 0, k: 100, ix: 11 },
				r: { a: 0, k: 0, ix: 10 },
				p: { a: 0, k: [67.5, 97.5, 0], ix: 2 },
				a: { a: 0, k: [65, 97, 0], ix: 1 },
				s: { a: 0, k: [100, 100, 100], ix: 6 }
			},
			ao: 0,
			w: 130,
			h: 194,
			ip: 0,
			op: 30,
			st: -15,
			bm: 0
		}],
		markers: [{ tm: 15, cm: '1', dr: 0 }, { tm: 30, cm: '2', dr: 0 }]
	}
};
// EXTERNAL MODULE: ../node_modules/lodash/lodash.js
var lodash = __webpack_require__("B1iE");
var lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);

// EXTERNAL MODULE: ../node_modules/lottie-web/build/player/lottie_light_html.js
var lottie_light_html = __webpack_require__("UtcG");
var lottie_light_html_default = /*#__PURE__*/__webpack_require__.n(lottie_light_html);

// CONCATENATED MODULE: ./components/Countdown/Countdown.js
function Countdown__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





// Google I/O 2019 start time
var EVENT_DATE = new Date('June 24, 2020 08:00 GMT+8');

var FRAME_RANGES = {
	nine: {
		0: [285, 307],
		1: [255, 277],
		2: [225, 247],
		3: [195, 217],
		4: [165, 187],
		5: [135, 157],
		6: [105, 127],
		7: [75, 97],
		8: [45, 67],
		9: [15, 37]
	},

	five: {
		0: [165, 180],
		1: [135, 157],
		2: [105, 127],
		3: [75, 97],
		4: [45, 67],
		5: [15, 37]
	},

	two: {
		0: [75, 90],
		1: [45, 67],
		2: [15, 37]
	}
};

var COLORS = ['blue', 'red', 'yellow', 'green'];

var Countdown_Countdown = function () {
	function Countdown(style, container, isReset) {
		Countdown__classCallCheck(this, Countdown);

		this.countdownContainer = container;
		this.style = style;
		this.endTime = Date.parse(EVENT_DATE.toString()) / 1000;
		this.daysCounter = null;
		this.hoursCounter = null;
		this.isReset = isReset;
		this.minutesCounter = null;
		this.secondsCounter = null;
		this.render = this.render.bind(this);
		this.getRandomColorNotMatchingSiblings = this.getRandomColorNotMatchingSiblings.bind(this);
		this.assignRandomColor = this.assignRandomColor.bind(this);
		this.digitObjects = [];
		this.currentDigits = {
			seconds: {
				firstDigit: null,
				secondDigit: null
			},
			minutes: {
				firstDigit: null,
				secondDigit: null
			},
			hours: {
				firstDigit: null,
				secondDigit: null
			},
			days: {
				firstDigit: null,
				secondDigit: null
			}
		};
	}

	Countdown.prototype.init = function init() {
		var _this = this;

		var digitsElements = Array.from(this.countdownContainer.querySelectorAll('.js-digit'));
		var numDigits = digitsElements.length;
		var numRows = 2;
		var numDigitsPerRow = numDigits / numRows;

		this.digitObjects = digitsElements.map(function (digit, index) {
			var maxNumber = digit.dataset.maxNumber;
			var isDigitInFirstRow = void 0;
			var color = void 0;

			if (index < numDigitsPerRow) {
				isDigitInFirstRow = true;
				color = COLORS[index];
			} else {
				isDigitInFirstRow = false;
				color = null;
			}

			return {
				element: digit,
				animation: lottie_light_html_default.a.loadAnimation({
					container: digit,
					renderer: 'svg',
					loop: false,
					autoplay: false,
					animationData: ANIMATIONS[maxNumber]
				}),
				frameRanges: FRAME_RANGES[maxNumber],
				lastColor: null,
				currentColor: color,
				currentNumber: null,
				lastNumber: null,
				prevDigitObject: null,
				nextDigitObject: null,
				firstRowDigit: isDigitInFirstRow
			};
		});

		this.digitObjects.forEach(function (digitObject, index) {
			for (var i = 0; i < numRows; i++) {
				if (numDigitsPerRow * (i + 1) - numDigitsPerRow === index) {
					digitObject.prevDigitObject = null;
					digitObject.nextDigitObject = _this.digitObjects[index + 1];
				} else if (numDigitsPerRow * (i + 1) - 1 === index) {
					digitObject.prevDigitObject = _this.digitObjects[index - 1];
					digitObject.nextDigitObject = null;
				} else {
					digitObject.prevDigitObject = _this.digitObjects[index - 1];
					digitObject.nextDigitObject = _this.digitObjects[index + 1];
				}
			}

			digitObject.animation.addEventListener('enterFrame', function (event) {
				if (event.currentTime === 21) {
					if (digitObject.lastNumber) {
						digitObject.element.querySelectorAll('.number-' + digitObject.lastNumber).forEach(function (el) {
							el.classList.remove(_this.style[digitObject.lastColor]);
						});
					}
				}
			});
		});

		this.patchBodymovinClasses(['lightfill', 'darkfill', 'lightstroke', 'darkstroke']);

		this.checkAndSetTime();
		this.render();
	};

	Countdown.prototype.reset = function reset(isReset) {
		this.digitObjects.forEach(function (digitObject) {
			while (digitObject.element.firstChild) {
				digitObject.element.removeChild(digitObject.element.firstChild);
			}
		});
		this.digitObjects = null;
		this.isReset = isReset;
	};

	Countdown.prototype.patchBodymovinClasses = function patchBodymovinClasses(classNames) {
		var _this2 = this;

		classNames.forEach(function (className) {
			_this2.countdownContainer.querySelectorAll('.' + className).forEach(function (el) {
				el.classList.add(_this2.style[className]);
			});
		});
	};

	Countdown.prototype.getFormattedLabel = function getFormattedLabel(num) {
		var numberString = num.toString();
		return num < 10 ? '0' + numberString : numberString;
	};

	Countdown.prototype.getFormattedFirstDigit = function getFormattedFirstDigit(num) {
		return Object(lodash["padStart"])(num.toString(), 2, '0')[0];
	};

	Countdown.prototype.getFormattedSecondDigit = function getFormattedSecondDigit(num) {
		return Object(lodash["padStart"])(num.toString(), 2, '0')[1];
	};

	Countdown.prototype.getRandomColorNotMatchingSiblings = function getRandomColorNotMatchingSiblings(siblingColors) {
		var colorSet = new Set(COLORS);

		if (siblingColors) {
			siblingColors.forEach(function (color) {
				colorSet.delete(color);
			});
		}

		var colorArray = Array.from(colorSet);
		var randomIndex = Math.floor(Math.random() * colorArray.length);

		return colorArray[randomIndex];
	};

	Countdown.prototype.assignRandomColor = function assignRandomColor(digit, leftDigit, rightDigit) {
		var _this3 = this;

		var color = void 0;

		if (digit.firstRowDigit && this.onInitialLoadout) {
			color = digit.currentColor;
		} else if (leftDigit && rightDigit) {
			color = this.getRandomColorNotMatchingSiblings([leftDigit.currentColor, rightDigit.currentColor]);
		} else if (leftDigit) {
			color = this.getRandomColorNotMatchingSiblings([leftDigit.currentColor]);
		} else if (rightDigit) {
			color = this.getRandomColorNotMatchingSiblings([rightDigit.currentColor]);
		}

		digit.element.querySelectorAll('.number-' + digit.currentNumber).forEach(function (el) {
			el.classList.add(_this3.style[color]);
		});

		digit.lastColor = digit.currentColor;
		digit.currentColor = color;
	};

	Countdown.prototype.compareDigits = function compareDigits(firstDigitObj, secondDigitObj, label, currentDigits) {
		var currentFirstDigit = this.getFormattedFirstDigit(label);
		var currentSecondDigit = this.getFormattedSecondDigit(label);

		if (currentFirstDigit !== currentDigits.firstDigit) {
			firstDigitObj.lastNumber = currentDigits.firstDigit;
			firstDigitObj.currentNumber = parseInt(currentFirstDigit, 10);

			this.assignRandomColor(firstDigitObj, firstDigitObj.prevDigitObject, firstDigitObj.nextDigitObject);

			firstDigitObj.animation.playSegments([firstDigitObj.frameRanges[currentFirstDigit]], true);

			currentDigits.firstDigit = currentFirstDigit;
		}

		if (currentSecondDigit !== currentDigits.secondDigit) {
			secondDigitObj.lastNumber = currentDigits.secondDigit;
			secondDigitObj.currentNumber = parseInt(currentSecondDigit, 10);

			this.assignRandomColor(secondDigitObj, secondDigitObj.prevDigitObject, secondDigitObj.nextDigitObject);

			secondDigitObj.animation.playSegments([secondDigitObj.frameRanges[currentSecondDigit]], true);

			currentDigits.secondDigit = currentSecondDigit;
		}
	};

	Countdown.prototype.getTime = function getTime() {
		var now = Date.now() / 1000;
		var timeLeft = Math.max(this.endTime - now, 0);
		var daysLeft = Math.floor(timeLeft / 86400);
		var hoursLeft = Math.floor((timeLeft - daysLeft * 86400) / 3600);
		var minutesLeft = Math.floor((timeLeft - daysLeft * 86400 - hoursLeft * 3600) / 60);
		var secondsLeft = Math.floor(timeLeft - daysLeft * 86400 - hoursLeft * 3600 - minutesLeft * 60);

		return {
			now: now,
			timeLeft: timeLeft,
			daysLeft: daysLeft,
			hoursLeft: hoursLeft,
			minutesLeft: minutesLeft,
			secondsLeft: secondsLeft
		};
	};

	Countdown.prototype.checkAndSetTime = function checkAndSetTime() {
		var time = this.getTime();

		if (this.secondsCounter !== time.secondsLeft) {
			this.setSeconds(time);
		}

		if (this.minutesCounter !== time.minutesLeft) {
			this.setMinutes(time);
		}

		if (this.hoursCounter !== time.hoursLeft) {
			this.setHours(time);
		}

		if (this.daysCounter !== time.daysLeft) {
			this.setDays(time);
			this.setAriaLabel(time.daysLeft);
		}
	};

	/**
     * Sets aria label for the countdown container
     * @param {number} daysLeft the number of days left
     */

	Countdown.prototype.setAriaLabel = function setAriaLabel(daysLeft) {
		this.countdownContainer.setAttribute('aria-label', 'Countdown to I/O: ' + daysLeft + ' days left');
	};

	Countdown.prototype.setDays = function setDays(time) {
		var daysLabel = this.getFormattedLabel(time.daysLeft);
		var currentDigits = this.currentDigits.days;

		this.compareDigits(this.digitObjects[0], this.digitObjects[1], daysLabel, currentDigits);

		this.daysCounter = time.daysLeft;
	};

	Countdown.prototype.setHours = function setHours(time) {
		var hoursLabel = this.getFormattedLabel(time.hoursLeft);
		var currentDigits = this.currentDigits.hours;

		this.compareDigits(this.digitObjects[2], this.digitObjects[3], hoursLabel, currentDigits);

		this.hoursCounter = time.hoursLeft;
	};

	Countdown.prototype.setMinutes = function setMinutes(time) {
		var minutesLabel = this.getFormattedLabel(time.minutesLeft);
		var currentDigits = this.currentDigits.minutes;

		this.compareDigits(this.digitObjects[4], this.digitObjects[5], minutesLabel, currentDigits);

		this.minutesCounter = time.minutesLeft;
	};

	Countdown.prototype.setSeconds = function setSeconds(time) {
		var secondsLabel = this.getFormattedLabel(time.secondsLeft);
		var currentDigits = this.currentDigits.seconds;

		this.compareDigits(this.digitObjects[6], this.digitObjects[7], secondsLabel, currentDigits);

		this.secondsCounter = time.secondsLeft;
	};

	Countdown.prototype.render = function render() {
		if (this.isReset) {
			return false;
		}

		this.onInitialLoadout = false;
		this.checkAndSetTime();

		requestAnimationFrame(this.render);
	};

	return Countdown;
}();
// CONCATENATED MODULE: ./components/Countdown/index.js


function components_Countdown__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Countdown__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function Countdown__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Countdown_style = __webpack_require__("mTzT");



var components_Countdown_Countdown = function (_Component) {
	Countdown__inherits(Countdown, _Component);

	function Countdown() {
		var _temp, _this, _ret;

		components_Countdown__classCallCheck(this, Countdown);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = Countdown__possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
			isReset: false
		}, _temp), Countdown__possibleConstructorReturn(_this, _ret);
	}

	Countdown.prototype.componentDidMount = function componentDidMount() {
		if (!this.controller) {
			this.controller = new Countdown_Countdown(Countdown_style, this.countdownContainer, this.state.isReset);
			this.controller.reset(this.state.isReset);
			this.controller.init();
		}
	};

	Countdown.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		return !this.controller.isReset;
	};

	Countdown.prototype.componentWillUnmount = function componentWillUnmount() {
		this.setState({
			isReset: true
		});

		this.controller.reset(this.state.isReset);
	};

	Countdown.prototype.render = function render() {
		var _this2 = this;

		return Object(preact_min["h"])(
			'div',
			{ 'class': Countdown_style.countdownContainer, ref: function ref(div) {
					return _this2.countdownContainer = div;
				} },
			Object(preact_min["h"])(
				'div',
				{
					'class': '' + Countdown_style.countdown,
					'aria-hidden': 'true',
					role: 'presentation'
				},
				Object(preact_min["h"])(
					'div',
					{ 'class': '' + Countdown_style.unitWrapper },
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'days',
						'data-max-number': 'nine'
					}),
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'days',
						'data-max-number': 'nine'
					}),
					Object(preact_min["h"])(
						'span',
						{ 'class': '' + Countdown_style.unitLabel },
						'D'
					)
				),
				Object(preact_min["h"])(
					'div',
					{ 'class': '' + Countdown_style.unitWrapper },
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'hours',
						'data-max-number': 'two'
					}),
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'hours',
						'data-max-number': 'nine'
					}),
					Object(preact_min["h"])(
						'span',
						{ 'class': '' + Countdown_style.unitLabel },
						'H'
					)
				),
				Object(preact_min["h"])(
					'div',
					{ 'class': '' + Countdown_style.unitWrapper },
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'minutes',
						'data-max-number': 'five'
					}),
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'minutes',
						'data-max-number': 'nine'
					}),
					Object(preact_min["h"])(
						'span',
						{ 'class': '' + Countdown_style.unitLabel },
						'M'
					)
				),
				Object(preact_min["h"])(
					'div',
					{ 'class': '' + Countdown_style.unitWrapper },
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'seconds',
						'data-max-number': 'five'
					}),
					Object(preact_min["h"])('div', {
						'class': Countdown_style.digit + ' js-digit',
						'data-unit': 'seconds',
						'data-max-number': 'nine'
					}),
					Object(preact_min["h"])(
						'span',
						{ 'class': '' + Countdown_style.unitLabel },
						'S'
					)
				)
			)
		);
	};

	return Countdown;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./routes/home/style.css
var home_style = __webpack_require__("ZAL5");
var home_style_default = /*#__PURE__*/__webpack_require__.n(home_style);

// CONCATENATED MODULE: ./routes/home/index.js


function home__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function home__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function home__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }













var home__ref2 = Object(preact_min["h"])(
  "h3",
  null,
  "Sign out?"
);

var home__ref3 = Object(preact_min["h"])(
  "p",
  null,
  "All saved events remain synced to your account."
);

var home__ref4 = Object(preact_min["h"])(
  "h2",
  null,
  "Developer Student Clubs OMG brings together developers from around the globe for talks, hands-on learning with Developer Student Club Leads and Google experts, and a first look at some of the amazing Community Projects."
);

var home__ref5 = Object(preact_min["h"])("br", null);

var home__ref6 = Object(preact_min["h"])(
  "h4",
  null,
  "24 June 2020 \xB7 In a Galaxy not too far away"
);

var home__ref7 = Object(preact_min["h"])("br", null);

var home__ref8 = Object(preact_min["h"])(
  "h4",
  null,
  "Hello there, welcome to OMG \uD83E\uDD73"
);

var home__ref9 = Object(preact_min["h"])(components_Countdown_Countdown, null);

var home__ref10 = Object(preact_min["h"])("img", {
  id: "cover",
  crossorigin: "anonymous",
  "data-src": "https://res.cloudinary.com/distortedaura/image/upload/v1591563925/DSCOMG/IMG_6116.jpg"
});

var home__ref11 = Object(preact_min["h"])(
  "h3",
  null,
  "What you need to know, before you ask."
);

var home__ref12 = Object(preact_min["h"])(
  "p",
  null,
  "The Online Mega Gathering - aka OMG brings together the world class experts in Design, Android, Web, Machine Learning, Cloud technologies and much more for a week of sessions, workshops and showcases."
);

var home__ref13 = Object(preact_min["h"])(gallery_block_GalleryBlock, null);

var home_Home = function (_Component) {
  home__inherits(Home, _Component);

  function Home(props) {
    home__classCallCheck(this, Home);

    var _this = home__possibleConstructorReturn(this, _Component.call(this, props));

    _this.signIn = function () {
      firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());
    };

    _this.signOut = function () {

      // eslint-disable-next-line no-undef
      gtag('event', 'logout', { method: 'Google' });

      firebase.auth().signOut().then(function () {
        _this.signoutDig.MDComponent.close();
      });
    };

    _this.toggleSigninDig = function () {
      // eslint-disable-next-line no-undef
      gtag('event', 'login', { method: 'Google' });

      _this.signIn();
    };

    _this.toggleSignoutDig = function () {
      _this.signoutDig.MDComponent.show();
    };

    if (typeof window !== "undefined") {
      _this.io = new IntersectionObserver(function (entries) {
        var visibleEntries = entries.filter(function (e) {
          return e.isIntersecting;
        });

        visibleEntries.filter(function (e) {
          return e.target instanceof HTMLImageElement;
        }).forEach(function (e) {
          e.target.src = e.target.dataset.src;
        });
      }, {
        /* Using default options. Details below */
      });
    }
    return _this;
  }

  Home.prototype.handleScroll = function handleScroll() {
    var ele = document.querySelector(".topappbar.mdc-top-app-bar");
    if (document.documentElement.scrollTop < 56) {
      ele.setAttribute("top", true);
    } else {
      ele.removeAttribute("top");
    }
  };

  Home.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    document.title = "DSCOMG 2020";
    window.addEventListener("scroll", this.handleScroll, { passive: true });
    this.handleScroll();

    var ele = document.querySelector(".belt");
    var cover = document.querySelector("#cover");
    var sponsorLogos = document.querySelectorAll(".sponsor_logo");

    if (!this.io) return;

    this.io.observe(ele);
    this.io.observe(cover);
    sponsorLogos.forEach(function (logo) {
      return _this2.io.observe(logo);
    });
  };

  Home.prototype.componentWillUnmount = function componentWillUnmount() {
    window.removeEventListener("scroll", this.handleScroll);
    document.querySelector(".topappbar.mdc-top-app-bar").removeAttribute("top");

    if (!this.io) return;
    this.io.disconnect();
  };

  Home.prototype.render = function render(_ref) {
    var _this3 = this;

    var rootPath = _ref.rootPath,
        user = _ref.user;

    return Object(preact_min["h"])(
      "div",
      null,
      Object(preact_min["h"])(
        "div",
        { className: [home_style_default.a.signout_dialog, 'signout_dialog'].join(' ') },
        Object(preact_min["h"])(
          Dialog_default.a,
          {
            onCancel: this.onClose,
            onAccept: this.onClose,
            ref: function ref(signoutDig) {
              _this3.signoutDig = signoutDig;
            }
          },
          Object(preact_min["h"])(
            "div",
            { "class": home_style_default.a.dialog_body },
            home__ref2,
            home__ref3
          ),
          Object(preact_min["h"])(
            Dialog_default.a.Footer,
            null,
            Object(preact_min["h"])(
              Dialog_default.a.FooterButton,
              { "class": home_style_default.a.cancel_btn, accept: true },
              "Not now"
            ),
            Object(preact_min["h"])(
              Dialog_default.a.FooterButton,
              { primary: true,
                "class": home_style_default.a.signout_btn,
                onClick: this.signOut
              },
              "Sign out"
            )
          )
        )
      ),
      Object(preact_min["h"])(
        "div",
        { "class": home_style_default.a.hero + " hero" },
        Object(preact_min["h"])(
          "div",
          { "class": home_style_default.a.hero_title },
          Object(preact_min["h"])(io_logo_IoLogo, { rootPath: rootPath }),
          home__ref4,
          home__ref5,
          home__ref6,
          home__ref7,
          Object(preact_min["h"])(
            "div",
            { "class": home_style_default.a.button_holder },
            user ? home__ref8 : Object(preact_min["h"])(
              "div",
              { "class": home_style_default.a.action_button, onClick: this.toggleSigninDig },
              "Sign-In to Register"
            )
          )
        ),
        home__ref9
      ),
      Object(preact_min["h"])(
        "div",
        { "class": home_style_default.a.belt + " belt" },
        home__ref10
      ),
      Object(preact_min["h"])(
        "div",
        { "class": home_style_default.a.home_info },
        Object(preact_min["h"])(
          "div",
          { "class": home_style_default.a.text },
          home__ref11,
          home__ref12
        ),
        Object(preact_min["h"])(
          "div",
          { "class": home_style_default.a.stats },
          Object(preact_min["h"])(
            "div",
            { "class": home_style_default.a.stat },
            Object(preact_min["h"])(
              "div",
              { "class": home_style_default.a.number },
              "30+"
            ),
            Object(preact_min["h"])(
              "div",
              { "class": home_style_default.a.label },
              "Sessions"
            )
          ),
          Object(preact_min["h"])(
            "div",
            { "class": home_style_default.a.stat },
            Object(preact_min["h"])(
              "div",
              { "class": home_style_default.a.number },
              "7"
            ),
            Object(preact_min["h"])(
              "div",
              { "class": home_style_default.a.label },
              "Days"
            )
          )
        )
      ),
      home__ref13,
      Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
      Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
    );
  };

  return Home;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./routes/attending/style.css
var attending_style = __webpack_require__("yH7v");
var attending_style_default = /*#__PURE__*/__webpack_require__.n(attending_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/attending/index.js


function attending__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function attending__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function attending__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var attending_Attending = function (_Component) {
	attending__inherits(Attending, _Component);

	Attending.prototype.handleScroll = function handleScroll() {
		var ele = document.querySelector('.topappbar.mdc-top-app-bar');
		if (document.documentElement.scrollTop < 56) {
			ele.setAttribute('top', true);
		} else {
			ele.removeAttribute('top');
		}
	};

	Attending.prototype.checkResize = function checkResize() {
		if (this.windowWidth !== window.innerWidth) {
			this.resize();
		}
	};

	Attending.prototype.resize = function resize() {
		if (window.innerWidth > 768 && this.state.isMobile) {
			this.setState({ isMobile: false, showTravel: true, showEvent: true });
		}
		if (window.innerWidth <= 768 && !this.state.isMobile) {
			this.setState({ isMobile: true, showTravel: false, showEvent: true });
		}
	};

	function Attending(props) {
		attending__classCallCheck(this, Attending);

		var _this = attending__possibleConstructorReturn(this, _Component.call(this, props));

		_this.state = {
			isMobile: false,
			showTravel: true,
			showEvent: true
		};

		_this.showTravel = function (state) {
			return function (e) {
				_this.setState({ showTravel: state, showEvent: !state });
			};
		};

		_this.checkResize = _this.checkResize.bind(_this);
		return _this;
	}

	Attending.prototype.componentDidMount = function componentDidMount() {
		document.title = 'Attending - DSCOMG 2020';
		this.windowWidth = window.innerWidth;
		window.addEventListener('scroll', this.handleScroll, { passive: true });
		window.addEventListener('resize', this.checkResize);
		this.resize();
		this.handleScroll();
	};

	Attending.prototype.componentWillUnmount = function componentWillUnmount() {
		window.removeEventListener('scroll', this.handleScroll);
		window.removeEventListener('resize', this.checkResize);
		document.querySelector('.topappbar.mdc-top-app-bar').removeAttribute('top');
	};

	Attending.prototype.render = function render(_ref, _ref2) {
		var rootPath = _ref.rootPath,
		    info = _ref.info;
		var showTravel = _ref2.showTravel,
		    showEvent = _ref2.showEvent;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(
				'div',
				{ 'class': attending_style_default.a.footer },
				Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
				Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
			)
		);
	};

	return Attending;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./routes/communityguidelines/style.css
var communityguidelines_style = __webpack_require__("Pt3o");
var communityguidelines_style_default = /*#__PURE__*/__webpack_require__.n(communityguidelines_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/communityguidelines/index.js


function communityguidelines__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function communityguidelines__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function communityguidelines__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var communityguidelines_Register = function (_Component) {
	communityguidelines__inherits(Register, _Component);

	function Register() {
		communityguidelines__classCallCheck(this, Register);

		return communityguidelines__possibleConstructorReturn(this, _Component.apply(this, arguments));
	}

	Register.prototype.handleScroll = function handleScroll() {
		var ele = document.querySelector('.topappbar.mdc-top-app-bar');
		if (document.documentElement.scrollTop < 56) {
			ele.setAttribute('top', true);
		} else {
			ele.removeAttribute('top');
		}
	};

	Register.prototype.componentDidMount = function componentDidMount() {
		document.title = 'Community Guidelines - DSCOMG 2020';
		window.addEventListener('scroll', this.handleScroll, { passive: true });
		this.handleScroll();
	};

	Register.prototype.componentWillUnmount = function componentWillUnmount() {
		window.removeEventListener('scroll', this.handleScroll);
		document.querySelector('.topappbar.mdc-top-app-bar').removeAttribute('top');
	};

	Register.prototype.render = function render(_ref) {
		var rootPath = _ref.rootPath;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
			Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
		);
	};

	return Register;
}(preact_min["Component"]);


// CONCATENATED MODULE: ./components/SVG/404.js


var _04__ref = Object(preact_min["h"])(
	"svg",
	{ "aria-hidden": "true", width: "332", height: "156", viewBox: "0 0 332 156", xmlns: "http://www.w3.org/2000/svg" },
	Object(preact_min["h"])(
		"g",
		{ fill: "none", "fill-rule": "evenodd" },
		Object(preact_min["h"])("path", { d: "M169 0c-28.72 0-52 23.281-52 52h104c0-28.719-23.281-52-52-52m0 4.063c25.065 0 45.698 19.335 47.767 43.874h-95.534C123.302 23.398 143.935 4.063 169 4.063", fill: "#DADCE0" }),
		Object(preact_min["h"])("path", { d: "M169 156c28.72 0 52-23.281 52-52H117c0 28.719 23.28 52 52 52", fill: "#F1F3F4" }),
		Object(preact_min["h"])("path", { fill: "#9AA0A6", d: "M117 104h104V52H117z" }),
		Object(preact_min["h"])("path", { d: "M104 26c0 14.36-11.64 26-26 26S52 40.36 52 26 63.64 0 78 0s26 11.64 26 26", fill: "#F1F3F4" }),
		Object(preact_min["h"])("path", { d: "M52 156h52v-52H52v52zm4.063-4.063h43.874v-43.875H56.063v43.876zM52 0L0 32.5V104h52V0zm-4.063 7.33v92.608H4.063V34.75L47.937 7.33z", fill: "#DADCE0" }),
		Object(preact_min["h"])("path", { fill: "#9AA0A6", d: "M52 104h52V52H52z" }),
		Object(preact_min["h"])("path", { d: "M331.5 26c0 14.36-11.64 26-26 26s-26-11.64-26-26 11.64-26 26-26 26 11.64 26 26", fill: "#F1F3F4" }),
		Object(preact_min["h"])("path", { d: "M279.5 156h52v-52h-52v52zm4.875-4.875h42.25v-42.25h-42.25v42.25zM279.5 0l-52 32.5V104h52V0zm-4.875 8.795v90.33h-42.25V35.202l42.25-26.407z", fill: "#DADCE0" }),
		Object(preact_min["h"])("path", { fill: "#9AA0A6", d: "M279.5 104h52V52h-52z" })
	)
);

var Svg404 = function Svg404() {
	return _04__ref;
};

/* harmony default export */ var _04 = (Svg404);
// EXTERNAL MODULE: ./routes/404/style.css
var _04_style = __webpack_require__("xxi1");
var _04_style_default = /*#__PURE__*/__webpack_require__.n(_04_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/404/index.js






var _04__ref2 = Object(preact_min["h"])(_04, null);

var _04_NotFoundPage = function NotFoundPage(_ref) {
	var rootPath = _ref.rootPath;
	return Object(preact_min["h"])(
		'div',
		null,
		Object(preact_min["h"])(
			'main',
			{ 'class': _04_style_default.a.main, style: 'min-height: 60vh;' },
			_04__ref2,
			Object(preact_min["h"])(
				'h6',
				{ 'class': _04_style_default.a.errorMessage },
				'Error: The URL you requested could not be found.'
			)
		),
		Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
		Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
	);
};

/* harmony default export */ var dummy_loader_js_routes_404 = (_04_NotFoundPage);
// EXTERNAL MODULE: ./routes/faq/style.css
var faq_style = __webpack_require__("kvG9");
var faq_style_default = /*#__PURE__*/__webpack_require__.n(faq_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/faq/index.js


function faq__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function faq__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function faq__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var faq__ref2 = Object(preact_min["h"])(
	'h2',
	null,
	'FAQ'
);

var faq__ref3 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'Session Schedule'
	)
);

var faq__ref4 = Object(preact_min["h"])('br', null);

var faq__ref5 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'When and Where'
	)
);

var faq__ref6 = Object(preact_min["h"])(
	'p',
	null,
	'Developer Student Clubs OMG will take place from June 24th to June 30th 2020 in a virtual format through livestreams.'
);

var faq__ref7 = Object(preact_min["h"])('br', null);

var faq__ref8 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'What is the Developer Student Clubs OMG? Why should I attend it?'
	)
);

var faq__ref9 = Object(preact_min["h"])(
	'p',
	null,
	'Developer Students Clubs is a platform for you to come and learn from the Developer Student Club Leads from all across the country. A free and open platform for anyone to learn and grow.'
);

var faq__ref10 = Object(preact_min["h"])('br', null);

var faq__ref11 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'Who is behind Developer Student Clubs OMG?'
	)
);

var faq__ref12 = Object(preact_min["h"])(
	'p',
	null,
	'Developer Student Clubs OMG is a community driven event which is being organised by the culmination of over 199 leads from 120 cities across the country. '
);

var faq__ref13 = Object(preact_min["h"])('br', null);

var faq__ref14 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'What would be the language of the event?'
	)
);

var faq__ref15 = Object(preact_min["h"])(
	'p',
	null,
	'All presentations at Developer Student Clubs OMG will be in English.'
);

var faq__ref16 = Object(preact_min["h"])('br', null);

var faq__ref17 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'What all sessions will be there in Developer Student Clubs OMG?'
	)
);

var faq__ref18 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'How can I register for Developer Student Clubs OMG?'
	)
);

var faq__ref19 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'Registrations are now open.  Sign In to ',
		Object(preact_min["h"])(
			'a',
			{ href: 'https://dscomg.com' },
			'dscomg.com'
		),
		' to Register'
	)
);

var faq__ref20 = Object(preact_min["h"])('br', null);

var faq__ref21 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'What is the cost of a Developer Student Clubs OMG ticket?'
	)
);

var faq__ref22 = Object(preact_min["h"])(
	'p',
	null,
	'Developer Student Clubs OMG event has no cost to attend.'
);

var faq__ref23 = Object(preact_min["h"])('br', null);

var faq__ref24 = Object(preact_min["h"])(
	'p',
	null,
	Object(preact_min["h"])(
		'b',
		null,
		'Can I register for someone else?'
	)
);

var faq__ref25 = Object(preact_min["h"])(
	'p',
	null,
	'It is highly recommended that each person submit their own registration.'
);

var faq__ref26 = Object(preact_min["h"])('br', null);

var faq_Faq = function (_Component) {
	faq__inherits(Faq, _Component);

	function Faq() {
		faq__classCallCheck(this, Faq);

		return faq__possibleConstructorReturn(this, _Component.apply(this, arguments));
	}

	Faq.prototype.handleScroll = function handleScroll() {
		var ele = document.querySelector('.topappbar.mdc-top-app-bar');
		if (document.documentElement.scrollTop < 56) {
			ele.setAttribute('top', true);
		} else {
			ele.removeAttribute('top');
		}
	};

	Faq.prototype.componentDidMount = function componentDidMount() {
		document.title = 'FAQ - DSCOMG 2020';
		window.addEventListener('scroll', this.handleScroll, { passive: true });
		this.handleScroll();
	};

	Faq.prototype.componentWillUnmount = function componentWillUnmount() {
		window.removeEventListener('scroll', this.handleScroll);
		document.querySelector('.topappbar.mdc-top-app-bar').removeAttribute('top');
	};

	Faq.prototype.render = function render(_ref) {
		var rootPath = _ref.rootPath;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(
				'div',
				{ 'class': 'hero' },
				Object(preact_min["h"])(io_logo_IoLogo, { rootPath: rootPath }),
				faq__ref2
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': faq_style_default.a.faq },
				Object(preact_min["h"])(
					'div',
					{ 'class': faq_style_default.a.faq_item },
					Object(preact_min["h"])(
						'div',
						{ 'class': faq_style_default.a.faq_title },
						'General'
					),
					Object(preact_min["h"])(
						'div',
						{ 'class': faq_style_default.a.faq_content },
						faq__ref3,
						Object(preact_min["h"])(
							'p',
							null,
							'The schedule can be found ',
							Object(preact_min["h"])(
								'a',
								{ href: rootPath + 'schedule' },
								'here'
							),
							'.'
						),
						faq__ref4,
						faq__ref5,
						faq__ref6,
						faq__ref7,
						faq__ref8,
						faq__ref9,
						faq__ref10,
						faq__ref11,
						faq__ref12,
						faq__ref13,
						faq__ref14,
						faq__ref15,
						faq__ref16,
						faq__ref17,
						Object(preact_min["h"])(
							'p',
							null,
							'Developer Student Clubs OMG covers a wide range of technical as well lightning talks, head over to ',
							Object(preact_min["h"])(
								'a',
								{ href: rootPath + 'schedule' },
								'schedule'
							),
							' tab to know more.'
						)
					)
				)
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': faq_style_default.a.faq },
				Object(preact_min["h"])(
					'div',
					{ 'class': faq_style_default.a.faq_item },
					Object(preact_min["h"])(
						'div',
						{ 'class': faq_style_default.a.faq_title },
						'Registration'
					),
					Object(preact_min["h"])(
						'div',
						{ 'class': faq_style_default.a.faq_content },
						faq__ref18,
						faq__ref19,
						faq__ref20,
						faq__ref21,
						faq__ref22,
						faq__ref23,
						faq__ref24,
						faq__ref25,
						faq__ref26
					)
				)
			),
			Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
			Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
		);
	};

	return Faq;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./routes/map/style.css
var map_style = __webpack_require__("Dg08");
var map_style_default = /*#__PURE__*/__webpack_require__.n(map_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/map/index.js


function map__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function map__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function map__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var map_EventMapPage = function (_Component) {
	map__inherits(EventMapPage, _Component);

	function EventMapPage() {
		map__classCallCheck(this, EventMapPage);

		return map__possibleConstructorReturn(this, _Component.apply(this, arguments));
	}

	EventMapPage.prototype.handleScroll = function handleScroll() {
		var ele = document.querySelector('.topappbar.mdc-top-app-bar');
		if (document.documentElement.scrollTop < 56) {
			ele.setAttribute('top', true);
		} else {
			ele.removeAttribute('top');
		}
	};

	EventMapPage.prototype.componentDidMount = function componentDidMount() {
		document.title = 'Event Map - DSCOMG 2020';
		window.addEventListener('scroll', this.handleScroll, { passive: true });
		this.handleScroll();
	};

	EventMapPage.prototype.componentWillUnmount = function componentWillUnmount() {
		document.querySelector('.topappbar.mdc-top-app-bar').removeAttribute('top');
	};

	EventMapPage.prototype.render = function render(_ref) {
		var rootPath = _ref.rootPath,
		    info = _ref.info;

		return Object(preact_min["h"])(
			'div',
			{ 'class': map_style_default.a.scrollbar },
			Object(preact_min["h"])(
				'div',
				{ 'class': map_style_default.a.footer },
				Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
				Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
			)
		);
	};

	return EventMapPage;
}(preact_min["Component"]);


// EXTERNAL MODULE: ../node_modules/preact-material-components/Button/index.js
var Button = __webpack_require__("7/cg");
var Button_default = /*#__PURE__*/__webpack_require__.n(Button);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Button/style.css
var Button_style = __webpack_require__("aqQ4");
var Button_style_default = /*#__PURE__*/__webpack_require__.n(Button_style);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Theme/style.css
var Theme_style = __webpack_require__("a81U");
var Theme_style_default = /*#__PURE__*/__webpack_require__.n(Theme_style);

// EXTERNAL MODULE: ./components/dialog/style.css
var dialog_style = __webpack_require__("dkia");
var dialog_style_default = /*#__PURE__*/__webpack_require__.n(dialog_style);

// CONCATENATED MODULE: ./components/dialog/index.js


function dialog__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dialog__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function dialog__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable keyword-spacing */
/* eslint-disable no-new-wrappers */
/* eslint-disable react/jsx-no-bind */
/* eslint-disable no-mixed-spaces-and-tabs */
/* eslint-disable react/jsx-indent-props */










var dialog__ref3 = Object(preact_min["h"])(
  'svg',
  null,
  Object(preact_min["h"])('path', { d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z' })
);

var dialog__ref4 = Object(preact_min["h"])(
  'svg',
  null,
  Object(preact_min["h"])('path', { d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z' })
);

var dialog__ref5 = Object(preact_min["h"])(
  'svg',
  null,
  Object(preact_min["h"])('path', { d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z' })
);

var dialog__ref6 = Object(preact_min["h"])('path', {
  fill: '#4768FD',
  d: 'M12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.72l3.67-3.18c0.67-0.58,0.31-1.68-0.57-1.75l-4.83-0.41 l-1.89-4.46c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75l3.67,3.18l-1.1,4.72 c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27z'
});

var dialog__ref7 = Object(preact_min["h"])('path', { d: 'M19.65,9.04l-4.84-0.42l-1.89-4.45c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75 l3.67,3.18l-1.1,4.72c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.73l3.67-3.18 C20.88,10.21,20.53,9.11,19.65,9.04z M12,15.4l-3.76,2.27l1-4.28l-3.32-2.88l4.38-0.38L12,6.1l1.71,4.04l4.38,0.38l-3.32,2.88 l1,4.28L12,15.4z' });

var dialog__ref8 = Object(preact_min["h"])('path', { d: 'M19.65,9.04l-4.84-0.42l-1.89-4.45c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75 l3.67,3.18l-1.1,4.72c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.73l3.67-3.18 C20.88,10.21,20.53,9.11,19.65,9.04z M12,15.4l-3.76,2.27l1-4.28l-3.32-2.88l4.38-0.38L12,6.1l1.71,4.04l4.38,0.38l-3.32,2.88 l1,4.28L12,15.4z' });

var dialog__ref9 = Object(preact_min["h"])('span', { 'class': 'session_topic_dot' });

var dialog__ref10 = Object(preact_min["h"])(
  'h3',
  null,
  'Speakers '
);

var dialog__ref11 = Object(preact_min["h"])(
  'svg',
  null,
  Object(preact_min["h"])(
    'g',
    null,
    Object(preact_min["h"])('path', { d: 'M5,13h11.17l-4.88,4.88c-0.39,0.39-0.39,1.03,0,1.42l0,0c0.39,0.39,1.02,0.39,1.41,0l6.59-6.59c0.39-0.39,0.39-1.02,0-1.41 L12.71,4.7c-0.39-0.39-1.02-0.39-1.41,0l0,0c-0.39,0.39-0.39,1.02,0,1.41L16.17,11H5c-0.55,0-1,0.45-1,1v0C4,12.55,4.45,13,5,13z' })
  )
);

var dialog__ref12 = Object(preact_min["h"])('path', {
  fill: '#4768FD',
  d: 'M12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.72l3.67-3.18c0.67-0.58,0.31-1.68-0.57-1.75l-4.83-0.41 l-1.89-4.46c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75l3.67,3.18l-1.1,4.72 c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27z'
});

var dialog__ref13 = Object(preact_min["h"])('path', { d: 'M19.65,9.04l-4.84-0.42l-1.89-4.45c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75 l3.67,3.18l-1.1,4.72c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.73l3.67-3.18 C20.88,10.21,20.53,9.11,19.65,9.04z M12,15.4l-3.76,2.27l1-4.28l-3.32-2.88l4.38-0.38L12,6.1l1.71,4.04l4.38,0.38l-3.32,2.88 l1,4.28L12,15.4z' });

var dialog__ref14 = Object(preact_min["h"])('path', { d: 'M19.65,9.04l-4.84-0.42l-1.89-4.45c-0.34-0.81-1.5-0.81-1.84,0L9.19,8.63L4.36,9.04c-0.88,0.07-1.24,1.17-0.57,1.75 l3.67,3.18l-1.1,4.72c-0.2,0.86,0.73,1.54,1.49,1.08L12,17.27l4.15,2.51c0.76,0.46,1.69-0.22,1.49-1.08l-1.1-4.73l3.67-3.18 C20.88,10.21,20.53,9.11,19.65,9.04z M12,15.4l-3.76,2.27l1-4.28l-3.32-2.88l4.38-0.38L12,6.1l1.71,4.04l4.38,0.38l-3.32,2.88 l1,4.28L12,15.4z' });

var dialog__ref15 = Object(preact_min["h"])(
  'svg',
  null,
  Object(preact_min["h"])('path', { d: 'M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z' })
);

var dialog_CustomDialog = function (_Component) {
  dialog__inherits(CustomDialog, _Component);

  CustomDialog.prototype.toggle = function toggle(dataId, dataItem, dataType) {
    this.dialogContainer.scrollTop = 0;
    this.setState({
      data: dataItem,
      id: dataId,
      type: dataType,
      showSpeaker: false
    });
    if (this.scrollingDlg) {
      this.scrollingDlg.MDComponent.show();
    }
    if (dataType === 'speakers') {
      this.setState({ showSpeaker: true, speakerId: dataId });
    }
  };

  CustomDialog.prototype.close = function close() {
    this.scrollingDlg.MDComponent.close();
  };

  CustomDialog.prototype.parseTopic = function parseTopic(topic) {
    topic = topic.replace('_', ' ');
    return topic.charAt(0).toUpperCase() + topic.slice(1);
  };

  function CustomDialog(props) {
    dialog__classCallCheck(this, CustomDialog);

    var _this = dialog__possibleConstructorReturn(this, _Component.call(this));

    _this.state = {
      data: {
        tags: []
      },
      supportShare: false,
      star: false,
      showSpeaker: false,
      speakerId: 0
    };

    _this.showSpeaker = function (item) {
      return function (e) {
        if (_this.props.speakers[item]) {
          _this.setState({ showSpeaker: true, speakerId: item });
          _this.dialogContainer.scrollTop = 0;
          _this.dialogBody.scrollTop = 0;
        }
      };
    };

    _this.hideSpeaker = function () {
      _this.setState({ showSpeaker: false });
      _this.dialogContainer.scrollTop = 0;
      _this.dialogBody.scrollTop = 0;
    };

    _this.star = function (id) {
      return function (e) {
        var star = _this.props.star ? !_this.props.star[id] : true;
        var ref = _this.props.db.ref('/events_site/ioxkl19/users/' + _this.props.user.uid + '/schedule/' + id);
        ref.set(star ? true : null);
      };
    };

    _this.share = function (dataId, data) {
      return function (e) {
        if (navigator.share) {
          navigator.share({
            title: 'Developer Student Clubs OMG 2020',
            text: 'Check out \'' + data.title + '\' at #dscomg',
            url: 'https://events.gdgkl.dev/iox/schedule/' + dataId
          });
        }
      };
    };

    _this.onClose = function (type) {
      return function (e) {
        Object(preact_router_es["route"])(_this.props.rootPath + _this.state.type);
      };
    };

    _this.profilePicFallback = function () {
      return function (event) {
        event.target.src = _this.props.rootPath + 'assets/person.svg';
      };
    };

    if (typeof window !== 'undefined') {
      if (navigator.share) {
        _this.setState({ supportShare: true });
      }
    }
    return _this;
  }

  CustomDialog.prototype.render = function render(_ref, _ref2) {
    var _this2 = this;

    var rootPath = _ref.rootPath,
        user = _ref.user,
        star = _ref.star,
        speakers = _ref.speakers;
    var id = _ref2.id,
        data = _ref2.data,
        type = _ref2.type,
        supportShare = _ref2.supportShare,
        showSpeaker = _ref2.showSpeaker,
        speakerId = _ref2.speakerId;

    return Object(preact_min["h"])(
      Dialog_default.a,
      {
        onCancel: this.onClose(type),
        onAccept: this.onClose(type),
        'class': dialog_style_default.a.dialog,
        ref: function ref(scrollingDlg) {
          _this2.scrollingDlg = scrollingDlg;
        }
      },
      Object(preact_min["h"])(
        'div',
        {
          'class': dialog_style_default.a.dialog_container,
          ref: function ref(dialogContainer) {
            _this2.dialogContainer = dialogContainer;
          }
        },
        Object(preact_min["h"])(
          'div',
          { 'class': dialog_style_default.a.dialog_header },
          showSpeaker ? type === 'speakers' ? Object(preact_min["h"])(
            Dialog_default.a.FooterButton,
            { ripple: false, 'class': dialog_style_default.a.back, accept: true },
            dialog__ref3
          ) : Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.back, ripple: false, onClick: this.hideSpeaker },
            dialog__ref4
          ) : Object(preact_min["h"])(
            Dialog_default.a.FooterButton,
            { ripple: false, 'class': dialog_style_default.a.back, accept: true },
            dialog__ref5
          ),
          showSpeaker ? Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.header_text },
            Object(preact_min["h"])(
              'div',
              null,
              speakers[speakerId].name
            ),
            Object(preact_min["h"])(
              'div',
              { 'class': dialog_style_default.a.header_subtext },
              speakers[speakerId].title
            )
          ) : data && Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.header_text },
            data.title,
            data.slido && Object(preact_min["h"])(
              'div',
              null,
              Object(preact_min["h"])(
                Button_default.a,
                {
                  disabled: this.isFutureOrPassed(data),
                  raised: true,
                  className: 'mdc-theme--secondary-bg ' + dialog_style_default.a.askQuestionBtn + ' ',
                  onClick: function onClick() {
                    document.location.href = data.slido;
                  }
                },
                'Ask Questions'
              )
            )
          ),
          showSpeaker && (speakers[speakerId].profile_pic ? Object(preact_min["h"])('img', {
            crossorigin: 'anonymous',
            'class': dialog_style_default.a.header_speaker_profile,
            src: speakers[speakerId].profile_pic,
            onError: this.profilePicFallback()
          }) : Object(preact_min["h"])('img', {
            crossorigin: 'anonymous',
            'class': dialog_style_default.a.header_speaker_profile,
            src: rootPath + 'assets/person.svg'
          })),
          user && Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.fab, onClick: this.star(id) },
            Object(preact_min["h"])(
              'svg',
              null,
              star ? star[id] ? dialog__ref6 : dialog__ref7 : dialog__ref8
            )
          )
        ),
        Object(preact_min["h"])(
          'div',
          {
            'class': dialog_style_default.a.dialog_body,
            ref: function ref(dialogBody) {
              _this2.dialogBody = dialogBody;
            },
            scrollable: true
          },
          showSpeaker ? Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.speaker_bio },
            speakers[speakerId].bio
          ) : Object(preact_min["h"])(
            'div',
            null,
            Object(preact_min["h"])(
              'div',
              { 'class': dialog_style_default.a.subtitle },
              data.startTime,
              ' - ',
              data.endTime,
              ', ',
              data.location
            ),
            Object(preact_min["h"])(
              'p',
              { 'class': dialog_style_default.a.dialog_body_description },
              data.description
            ),
            Object(preact_min["h"])(
              'div',
              { 'class': dialog_style_default.a.schedule_event_topics },
              data.topics && data.topics.map(function (item) {
                return Object(preact_min["h"])(
                  'div',
                  { id: item, 'class': 'session_topic' },
                  dialog__ref9,
                  Object(preact_min["h"])(
                    'span',
                    null,
                    _this2.parseTopic(item)
                  )
                );
              })
            ),
            data.speakers && Object(preact_min["h"])(
              'div',
              { 'class': dialog_style_default.a.speaker },
              dialog__ref10,
              data.speakers && speakers && data.speakers.map(function (item) {
                return speakers[item] && Object(preact_min["h"])(
                  'div',
                  {
                    'class': dialog_style_default.a.speaker_item,
                    onClick: _this2.showSpeaker(item)
                  },
                  speakers[item].profile_pic ? Object(preact_min["h"])('img', {
                    crossorigin: 'anonymous',
                    'class': dialog_style_default.a.speaker_thumbnail,
                    src: speakers[item].profile_pic,
                    onError: _this2.profilePicFallback()
                  }) : Object(preact_min["h"])('img', {
                    crossorigin: 'anonymous',
                    'class': dialog_style_default.a.speaker_thumbnail,
                    src: rootPath + 'assets/person.svg'
                  }),
                  Object(preact_min["h"])(
                    'div',
                    { 'class': dialog_style_default.a.speaker_details },
                    Object(preact_min["h"])(
                      'div',
                      { 'class': dialog_style_default.a.speaker_name },
                      speakers[item].name
                    ),
                    Object(preact_min["h"])(
                      'div',
                      { 'class': dialog_style_default.a.speaker_title },
                      speakers[item].title
                    )
                  ),
                  Object(preact_min["h"])(
                    'div',
                    { 'class': dialog_style_default.a.speaker_arrow },
                    dialog__ref11
                  )
                );
              })
            )
          )
        ),
        (supportShare || user) && Object(preact_min["h"])(
          Dialog_default.a.Footer,
          { 'class': dialog_style_default.a.dialog_footer },
          user && Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.fab, onClick: this.star(id) },
            Object(preact_min["h"])(
              'svg',
              null,
              star ? star[id] ? dialog__ref12 : dialog__ref13 : dialog__ref14
            )
          ),
          supportShare && Object(preact_min["h"])(
            'div',
            { 'class': dialog_style_default.a.share, onClick: this.share(id, data) },
            dialog__ref15
          )
        )
      )
    );
  };

  CustomDialog.prototype.isFutureOrPassed = function isFutureOrPassed(data) {

    var today = new Date();
    if (!data.startTime) return;

    var _data$startTime$split = data.startTime.split(/:|AM|PM/),
        startHour = _data$startTime$split[0],
        startMinute = _data$startTime$split[1];

    var _data$endTime$split = data.endTime.split(/:|AM|PM/),
        endHour = _data$endTime$split[0],
        endMinute = _data$endTime$split[1];

    var fullStartHour = data.startTime.includes('PM') ? new Number(startHour) + 12 : new Number(startHour);
    var fullEndHour = data.endTime.includes('PM') ? new Number(endHour) + 12 : new Number(endHour);
    var hasStarted = today >= new Date(today.getFullYear(), today.getMonth(), today.getDate(), fullStartHour, startMinute);

    var isOver = today > new Date(today.getFullYear(), today.getMonth(), today.getDate(), fullEndHour, endMinute);

    return !hasStarted || isOver;
  };

  return CustomDialog;
}(preact_min["Component"]);


// EXTERNAL MODULE: ../node_modules/preact-material-components/Switch/style.css
var Switch_style = __webpack_require__("IpTH");
var Switch_style_default = /*#__PURE__*/__webpack_require__.n(Switch_style);

// EXTERNAL MODULE: ./routes/schedule/style.css
var schedule_style = __webpack_require__("s3tW");
var schedule_style_default = /*#__PURE__*/__webpack_require__.n(schedule_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/schedule/index.js


function schedule__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function schedule__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function schedule__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var schedule__ref3 = Object(preact_min["h"])(
	'h2',
	null,
	'Schedule'
);

var schedule__ref4 = Object(preact_min["h"])(
	'p',
	null,
	'Coming Soon'
);

var schedule__ref5 = Object(preact_min["h"])('br', null);

var schedule__ref6 = Object(preact_min["h"])('br', null);

var dummy_loader_js_routes_schedule_Schedule = function (_Component) {
	schedule__inherits(Schedule, _Component);

	Schedule.prototype.parseTopic = function parseTopic(topic) {
		topic = topic.replace('_', ' ');
		return topic.charAt(0).toUpperCase() + topic.slice(1);
	};

	Schedule.prototype.showEvents = function showEvents(item, userSchedule, user) {
		if (!user && this.state.showMyIO) return false;
		if (!user || !this.state.showMyIO) return true;
		var showEvent = false;
		item.sessions.map(function (item) {
			if (userSchedule && userSchedule[item]) {
				showEvent = true;
			}
		});
		return showEvent;
	};

	Schedule.prototype.showEvent = function showEvent(sessions, item, userSchedule, user) {
		if (sessions && sessions[item]) {
			if (!user && this.state.showMyIO) return false;
			if (!user || !this.state.showMyIO) return true;
			if (userSchedule[item]) return true;
		}
	};

	Schedule.prototype.handleScroll = function handleScroll() {
		var ele = document.querySelector('.topappbar.mdc-top-app-bar');
		if (document.documentElement.scrollTop < 56) {
			ele.setAttribute('top', true);
		} else {
			ele.removeAttribute('top');
		}
	};

	function Schedule(props) {
		schedule__classCallCheck(this, Schedule);

		var _this = schedule__possibleConstructorReturn(this, _Component.call(this, props));

		_this.state = {
			schedule: [],
			sessions: {},
			dialogOpened: false,
			toggleDialog: false,
			showMyIO: false
		};

		_this.toggleDialog = function (id, item) {
			return function (e) {
				if (e.target.id !== 'star' && e.target.id !== 'slides') {
					Object(preact_router_es["route"])(_this.props.rootPath + 'schedule/' + id);
					_this.dialog.toggle(id, item, 'schedule');
				}
			};
		};

		_this.star = function (id) {
			return function (e) {

				var star = _this.props.userSchedule ? !_this.props.userSchedule[id] : true;
				var ref = _this.props.db.ref('/events_site/dscomg/users/' + _this.props.user.uid + '/schedule/' + id);
				ref.set(star ? true : null);

				gtag('event', 'add_to_schdule', {
					'event_category': 'engagement',
					'event_label': 'add to schedule'
				});
			};
		};

		_this.showMyIO = function (state) {
			return function (e) {

				gtag('event', 'show_my_io', {
					'event_category': 'engagement',
					'event_label': 'My Schedule'
				});

				_this.setState({ showMyIO: state });
			};
		};

		_this.id = props.id;
		if (_this.id) {
			_this.setState({ toggleDialog: true });
		}
		return _this;
	}

	Schedule.prototype.componentDidMount = function componentDidMount() {
		document.title = 'Schedule - DSCOMG 2020';
		window.addEventListener('scroll', this.handleScroll, { passive: true });
		this.handleScroll();
	};

	Schedule.prototype.componentWillUnmount = function componentWillUnmount() {
		window.removeEventListener('scroll', this.handleScroll);
		document.querySelector('.topappbar.mdc-top-app-bar').removeAttribute('top');
	};

	Schedule.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		if (nextProps.id !== this.props.id) {
			if (nextProps.id) {
				this.dialog.toggle(nextProps.id, nextProps.sessions[nextProps.id], 'schedule');
			} else {
				this.dialog.close();
			}
		}
		if (nextProps.id && nextProps.sessions && nextProps.schedule && this.state.toggleDialog) {
			if (nextProps.sessions[nextProps.id]) {
				this.setState({ toggleDialog: false });
				this.dialog.toggle(nextProps.id, nextProps.sessions[nextProps.id], 'schedule');
			}
		}
	};

	Schedule.prototype.render = function render(_ref, _ref2) {
		var _this2 = this;

		var rootPath = _ref.rootPath,
		    user = _ref.user,
		    userSchedule = _ref.userSchedule,
		    db = _ref.db,
		    sessions = _ref.sessions,
		    schedule = _ref.schedule,
		    speakers = _ref.speakers;
		var showMyIO = _ref2.showMyIO;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(dialog_CustomDialog, { ref: function ref(dialog) {
					_this2.dialog = dialog;
				}, star: userSchedule, speakers: speakers, db: db, user: user, rootPath: rootPath }),
			Object(preact_min["h"])(
				'div',
				{ 'class': schedule_style_default.a.hero + ' hero' },
				Object(preact_min["h"])(io_logo_IoLogo, { rootPath: rootPath }),
				schedule__ref3,
				schedule__ref4,
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Cloud'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Android'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Web'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Google Assistant'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Firebase'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Machine Learning'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Security'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'DevOps'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Blockchain'
				),
				Object(preact_min["h"])(
					'a',
					{ 'class': schedule_style_default.a.track_bubble_blue },
					'Design'
				)
			),
			schedule__ref5,
			schedule__ref6,
			Object(preact_min["h"])(
				'div',
				{ 'class': schedule_style_default.a.footer },
				Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
				Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
			)
		);
	};

	return Schedule;
}(preact_min["Component"]);


// EXTERNAL MODULE: ./routes/speakers/style.css
var speakers_style = __webpack_require__("cNrW");
var speakers_style_default = /*#__PURE__*/__webpack_require__.n(speakers_style);

// CONCATENATED MODULE: ../node_modules/preact-cli/lib/lib/webpack/dummy-loader.js!./routes/speakers/index.js


function speakers__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function speakers__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function speakers__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var speakers__ref2 = Object(preact_min["h"])(
	'h2',
	null,
	'Speakers'
);

var speakers__ref3 = Object(preact_min["h"])(
	'p',
	null,
	'Learn Google\'s latest developer products from DSC Leads, Googlers, Google Developer Experts, guest speakers and more.'
);

var speakers__ref4 = Object(preact_min["h"])(
	'p',
	null,
	'To be Updated Soon'
);

var speakers_Speakers = function (_Component) {
	speakers__inherits(Speakers, _Component);

	Speakers.prototype.shortBio = function shortBio(string) {
		if (string) {
			return string.length > 5 ? string.substr(0, string.lastIndexOf(' ', 150)) + ' ...' : string;
		}
	};

	Speakers.prototype.componentDidMount = function componentDidMount() {
		document.title = 'Speakers - DSCOMG 2020';
	};

	function Speakers(props) {
		speakers__classCallCheck(this, Speakers);

		var _this = speakers__possibleConstructorReturn(this, _Component.call(this, props));

		_this.state = {
			schedule: [],
			sessions: {},
			dialogOpened: false,
			toggleDialog: false
		};

		_this.toggleDialog = function (id, item) {
			return function (e) {
				if (e.target.id !== 'badge') {
					Object(preact_router_es["route"])(_this.props.rootPath + 'speakers/' + id);
					_this.dialog.toggle(id, item, 'speakers');
				}
			};
		};

		_this.profilePicFallback = function () {
			return function (event) {
				event.target.src = _this.props.rootPath + 'assets/person.svg';
			};
		};

		_this.id = props.id;
		if (_this.id) {
			_this.setState({ toggleDialog: true });
		}
		return _this;
	}

	Speakers.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		if (nextProps.id !== this.props.id) {
			if (nextProps.id) {
				var speaker = nextProps.speakers[nextProps.id];
				document.title = speaker.name + ' - Speakers - DSCOMG 2020';
				this.dialog.toggle(nextProps.id, speaker, 'speakers');
			} else {
				document.title = 'Speakers - DSCOMG 2020';
				this.dialog.close();
			}
		}
		if (nextProps.id && nextProps.speakers && this.state.toggleDialog) {
			var _speaker = nextProps.speakers[nextProps.id];
			if (_speaker) {
				this.setState({ toggleDialog: false });
				document.title = _speaker.name + ' - Speakers - DSCOMG 2020';
				this.dialog.toggle(nextProps.id, nextProps.speakers[nextProps.id], 'speakers');
			}
		}
	};

	Speakers.prototype.render = function render(_ref) {
		var _this2 = this;

		var rootPath = _ref.rootPath,
		    speakers = _ref.speakers;

		return Object(preact_min["h"])(
			'div',
			null,
			Object(preact_min["h"])(dialog_CustomDialog, {
				ref: function ref(dialog) {
					_this2.dialog = dialog;
				},
				speakers: speakers,
				rootPath: rootPath
			}),
			Object(preact_min["h"])(
				'div',
				{ 'class': speakers_style_default.a.hero + ' hero' },
				Object(preact_min["h"])(io_logo_IoLogo, { rootPath: rootPath }),
				speakers__ref2,
				speakers__ref3,
				speakers__ref4
			),
			Object(preact_min["h"])(
				'div',
				{ 'class': speakers_style_default.a.footer },
				Object(preact_min["h"])(social_footer_SocialFooter, { rootPath: rootPath }),
				Object(preact_min["h"])(footer_Footer, { rootPath: rootPath })
			)
		);
	};

	return Speakers;
}(preact_min["Component"]);


// EXTERNAL MODULE: ../node_modules/preact-material-components/Snackbar/index.js
var Snackbar = __webpack_require__("+XMp");
var Snackbar_default = /*#__PURE__*/__webpack_require__.n(Snackbar);

// EXTERNAL MODULE: ../node_modules/preact-material-components/Snackbar/style.css
var Snackbar_style = __webpack_require__("pln1");
var Snackbar_style_default = /*#__PURE__*/__webpack_require__.n(Snackbar_style);

// CONCATENATED MODULE: ./components/app.js


function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

function app__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function app__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function app__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








// import Registration from 'async!../routes/registration';









var app_App = function (_Component) {
	app__inherits(App, _Component);

	App.prototype.setDb = function setDb(key, val) {
		return this.dbPromise.then(function (db) {
			var tx = db.transaction('data', 'readwrite');
			tx.objectStore('data').put(val, key);
			return tx.complete;
		});
	};

	App.prototype.getDb = function getDb(key) {
		return this.dbPromise.then(function (db) {
			return db.transaction('data').objectStore('data').get(key);
		});
	};

	App.prototype.componentDidMount = function componentDidMount() {
		window.addEventListener('showRefreshSnack', this.showRefreshSnack);
	};

	App.prototype.componentWillUnmount = function componentWillUnmount() {
		window.removeEventListener('showRefreshSnack', this.showRefreshSnack);
	};

	App.prototype.componentWillMount = function componentWillMount() {
		var _this2 = this;

		if (typeof window !== 'undefined') {
			this.db = firebase.database();

			this.dbPromise = node_default.a.open('ioxkl19', 1, function (upgradeDB) {
				upgradeDB.createObjectStore('data');
			});

			this.getDb('schedule').then(function (val) {
				_this2.setState({ schedule: val });
			});

			this.getDb('userSchedule').then(function (val) {
				_this2.setState({ userSchedule: val });
			});

			this.getDb('partners').then(function (val) {
				_this2.setState({ partners: val });
			});

			this.getDb('speakers').then(function (val) {
				_this2.setState({ speakers: val });
			});

			this.getDb('info').then(function (val) {
				_this2.setState({ info: val });
			});

			this.getDb('sessions').then(function (val) {
				_this2.setState({ sessions: val });

				if (_this2.id && val[_this2.id]) {
					_this2.setState({ dialogOpened: true });
					_this2.dialog.toggle(_this2.id, val[_this2.id]);
				}
			});

			this.db.ref('/schedule').once('value').then(function (snapshot) {
				var data = snapshot.val();
				_this2.setState({ schedule: data });
				_this2.setDb('schedule', data);
			});

			this.db.ref('/sessions').once('value').then(function (snapshot) {
				var data = snapshot.val();
				_this2.setState({ sessions: data });
				_this2.setDb('sessions', data);
			});

			this.db.ref('/speakers').once('value').then(function (snapshot) {
				var data = snapshot.val();
				_this2.setState({ speakers: data });
				_this2.setDb('speakers', data);
			});

			this.db.ref('/partners').once('value').then(function (snapshot) {
				var data = snapshot.val();
				_this2.setState({ partners: data });
				_this2.setDb('partners', data);
			});

			this.db.ref('/info').once('value').then(function (snapshot) {
				var data = snapshot.val();
				_this2.setState({ info: data });
				_this2.setDb('info', data);
			});

			firebase.auth().onAuthStateChanged(function (currentUser) {
				_this2.setState({ currentUser: currentUser });
				if (currentUser) {
					window.Sentry.configureScope(function (scope) {
						scope.setUser({
							email: currentUser.email,
							id: currentUser.uid
						});
					});

					var dbRef = '/users/' + currentUser.uid;
					_this2.db.ref(dbRef + '/info/').set({
						uid: currentUser.uid,
						username: currentUser.displayName,
						email: currentUser.email,
						profile_picture: currentUser.photoURL
					});

					_this2.db.ref(dbRef + '/schedule/').on('value', function (snapshot) {
						var data = snapshot.val();
						_this2.setState({ userSchedule: data });
						_this2.setDb('userSchedule', data);
					});
				} else {
					window.Sentry.configureScope(function (scope) {
						scope.setUser({});
					});
				}
			});
		}
	};

	function App() {
		app__classCallCheck(this, App);

		var _this = app__possibleConstructorReturn(this, _Component.call(this));

		_this.handleRoute = function (e) {
			_this.currentUrl = e.url;
			if (typeof window !== 'undefined') {
				if (window.swUpdate) return window.location = e.url;
				if (e.previous) {
					if (e.url.startsWith(_this.state.rootPath + 'schedule') && e.previous.startsWith(_this.state.rootPath + 'schedule')) {} else if (e.url.startsWith(_this.state.rootPath + 'speakers') && e.previous.startsWith(_this.state.rootPath + 'speakers')) {} else {
						document.documentElement.scrollTop = 0;
					}
				}
				if (window.ga) {
					window.ga('set', 'page', 'window.location.pathname');
					window.ga('send', 'pageview');
				}
			}
		};

		_this.showRefreshSnack = function () {
			_this.snackbar.MDComponent.show({
				message: 'Site updated. Refresh this page for better experience.',
				actionText: 'Refresh',
				timeout: 5000,
				actionHandler: function actionHandler() {
					window.location.reload();
				}
			});
		};

		_this.state = {
			currentUser: null,
			schedule: [],
			partners: {},
			sessions: {},
			speakers: {},
			userSchedule: {},
			info: {},
			rootPath: '/'
		};

		if (typeof window !== 'undefined') {
			_this.setState({ rootPath: window.GlobalVars.rootPath || '/' });
			if (window.Sentry) {
				window.Sentry.init({ dsn: 'https://822494317dbb488f81fb34fef787a12e@sentry.io/1413330' });
			}
		}
		return _this;
	}

	App.prototype.render = function render(_ref, _ref2) {
		var _this3 = this;

		var currentUser = _ref2.currentUser,
		    schedule = _ref2.schedule,
		    sessions = _ref2.sessions,
		    speakers = _ref2.speakers,
		    partners = _ref2.partners,
		    userSchedule = _ref2.userSchedule,
		    info = _ref2.info,
		    rootPath = _ref2.rootPath;

		_objectDestructuringEmpty(_ref);

		return Object(preact_min["h"])(
			'div',
			{ id: 'app' },
			Object(preact_min["h"])(navbar_NavBar, { user: currentUser, rootPath: rootPath }),
			Object(preact_min["h"])(
				preact_router_es["Router"],
				{ onChange: this.handleRoute },
				Object(preact_min["h"])(attending_Attending, {
					path: rootPath + 'attending/',
					rootPath: rootPath,
					info: info
				}),
				Object(preact_min["h"])(dummy_loader_js_routes_schedule_Schedule, {
					path: rootPath + 'schedule/',
					user: currentUser,
					schedule: schedule,
					userSchedule: userSchedule,
					sessions: sessions,
					speakers: speakers,
					db: this.db,
					rootPath: rootPath
				}),
				Object(preact_min["h"])(dummy_loader_js_routes_schedule_Schedule, {
					path: rootPath + 'schedule/:id',
					user: currentUser,
					schedule: schedule,
					userSchedule: userSchedule,
					sessions: sessions,
					speakers: speakers,
					db: this.db,
					rootPath: rootPath
				}),
				Object(preact_min["h"])(speakers_Speakers, {
					path: rootPath + 'speakers/',
					user: currentUser,
					schedule: schedule,
					userSchedule: userSchedule,
					sessions: sessions,
					speakers: speakers,
					db: this.db,
					rootPath: rootPath
				}),
				Object(preact_min["h"])(speakers_Speakers, {
					path: rootPath + 'speakers/:id',
					user: currentUser,
					schedule: schedule,
					userSchedule: userSchedule,
					sessions: sessions,
					speakers: speakers,
					db: this.db,
					rootPath: rootPath
				}),
				Object(preact_min["h"])(communityguidelines_Register, {
					path: rootPath + 'faq/communityguidelines/',
					rootPath: rootPath
				}),
				Object(preact_min["h"])(faq_Faq, { path: rootPath + 'faq/', rootPath: rootPath }),
				Object(preact_min["h"])(home_Home, {
					path: rootPath,
					user: currentUser
				}),
				Object(preact_min["h"])(map_EventMapPage, { path: rootPath + 'map/',
					rootPath: rootPath,
					info: info
				}),
				Object(preact_min["h"])(dummy_loader_js_routes_404, { rootPath: rootPath, 'default': true })
			),
			Object(preact_min["h"])(Snackbar_default.a, {
				ref: function ref(snackbar) {
					_this3.snackbar = snackbar;
				}
			})
		);
	};

	return App;
}(preact_min["Component"]);


// CONCATENATED MODULE: ./index.js



/* harmony default export */ var index_0 = __webpack_exports__["default"] = (app_App);

/***/ }),

/***/ "JtzT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Dialog = exports.DialogFooterButton = exports.DialogFooter = exports.DialogBody = exports.DialogHeader = void 0;

var _get2 = _interopRequireDefault(__webpack_require__("J5U+"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _typeof2 = _interopRequireDefault(__webpack_require__("b9XL"));

var _dialog = __webpack_require__("5sRW");

var _bindDecorator = __webpack_require__("gKs0");

var _preact = __webpack_require__("KM04");

var _MaterialComponent5 = _interopRequireDefault(__webpack_require__("uc5p"));

var _Button2 = __webpack_require__("7/cg");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var DialogHeader =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(DialogHeader, _MaterialComponent);

  function DialogHeader() {
    var _this;

    (0, _classCallCheck2.default)(this, DialogHeader);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogHeader).apply(this, arguments));
    _this.componentName = 'dialog__header';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(DialogHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", _extends({}, props), (0, _preact.h)("h2", {
        className: "mdc-dialog__header__title"
      }, props.children));
    }
  }]);
  return DialogHeader;
}(_MaterialComponent5.default);

exports.DialogHeader = DialogHeader;

__decorate([_bindDecorator.bind], DialogHeader.prototype, "materialDom", null);

var DialogBody =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(DialogBody, _MaterialComponent2);

  function DialogBody() {
    var _this2;

    (0, _classCallCheck2.default)(this, DialogBody);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogBody).apply(this, arguments));
    _this2.componentName = 'dialog__body';
    _this2.mdcProps = ['scrollable'];
    return _this2;
  }

  (0, _createClass2.default)(DialogBody, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("section", _extends({}, props), props.children);
    }
  }]);
  return DialogBody;
}(_MaterialComponent5.default);

exports.DialogBody = DialogBody;

__decorate([_bindDecorator.bind], DialogBody.prototype, "materialDom", null);

var DialogFooter =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(DialogFooter, _MaterialComponent3);

  function DialogFooter() {
    var _this3;

    (0, _classCallCheck2.default)(this, DialogFooter);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooter).apply(this, arguments));
    _this3.componentName = 'dialog__footer';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(DialogFooter, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("footer", _extends({}, props), props.children);
    }
  }]);
  return DialogFooter;
}(_MaterialComponent5.default);

exports.DialogFooter = DialogFooter;

__decorate([_bindDecorator.bind], DialogFooter.prototype, "materialDom", null);

var DialogFooterButton =
/*#__PURE__*/
function (_Button) {
  (0, _inherits2.default)(DialogFooterButton, _Button);

  function DialogFooterButton() {
    var _this4;

    (0, _classCallCheck2.default)(this, DialogFooterButton);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooterButton).apply(this, arguments));
    _this4.componentName = 'dialog__footer__button';
    _this4.mdcProps = ['cancel', 'accept'];
    return _this4;
  }

  (0, _createClass2.default)(DialogFooterButton, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("button", _extends({}, props, {
        className: "mdc-button",
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return DialogFooterButton;
}(_Button2.Button);

exports.DialogFooterButton = DialogFooterButton;

__decorate([_bindDecorator.bind], DialogFooterButton.prototype, "materialDom", null);

var Dialog =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(Dialog, _MaterialComponent4);

  function Dialog() {
    var _this5;

    (0, _classCallCheck2.default)(this, Dialog);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dialog).apply(this, arguments));
    _this5.componentName = 'dialog';
    _this5.mdcProps = [];
    return _this5;
  }

  (0, _createClass2.default)(Dialog, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _dialog.MDCDialog(this.control);
        this.MDComponent.listen('MDCDialog:accept', this.onAccept);
        this.MDComponent.listen('MDCDialog:cancel', this.onCancel);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCDialog:accept', this.onAccept);
        this.MDComponent.unlisten('MDCDialog:cancel', this.onCancel);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onAccept",
    value: function onAccept(e) {
      if (this.props.onAccept) {
        this.props.onAccept(e);
      }
    }
  }, {
    key: "onCancel",
    value: function onCancel(e) {
      if (this.props.onCancel) {
        this.props.onCancel(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("dialog", _extends({
        role: 'alertdialog',
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-dialog__surface"
      }, props.children), (0, _preact.h)("div", {
        className: "mdc-dialog__backdrop"
      }));
    }
  }]);
  return Dialog;
}(_MaterialComponent5.default);

exports.Dialog = Dialog;

__decorate([_bindDecorator.bind], Dialog.prototype, "onAccept", null);

__decorate([_bindDecorator.bind], Dialog.prototype, "onCancel", null);

var default_1 =
/*#__PURE__*/
function (_Dialog) {
  (0, _inherits2.default)(default_1, _Dialog);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Dialog);

exports.default = default_1;
default_1.Header = DialogHeader;
default_1.Body = DialogBody;
default_1.Footer = DialogFooter;
default_1.FooterButton = DialogFooterButton;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "K5Tb":
/***/ (function(module, exports) {

module.exports = extend;

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {};

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }

    return target;
}

/***/ }),

/***/ "KM04":
/***/ (function(module, exports, __webpack_require__) {

!function () {
  "use strict";
  function e(e, t) {
    var n,
        o,
        r,
        i,
        l = W;for (i = arguments.length; i-- > 2;) {
      P.push(arguments[i]);
    }t && null != t.children && (P.length || P.push(t.children), delete t.children);while (P.length) {
      if ((o = P.pop()) && void 0 !== o.pop) for (i = o.length; i--;) {
        P.push(o[i]);
      } else "boolean" == typeof o && (o = null), (r = "function" != typeof e) && (null == o ? o = "" : "number" == typeof o ? o += "" : "string" != typeof o && (r = !1)), r && n ? l[l.length - 1] += o : l === W ? l = [o] : l.push(o), n = r;
    }var a = new T();return a.nodeName = e, a.children = l, a.attributes = null == t ? void 0 : t, a.key = null == t ? void 0 : t.key, void 0 !== M.vnode && M.vnode(a), a;
  }function t(e, t) {
    for (var n in t) {
      e[n] = t[n];
    }return e;
  }function n(e, t) {
    e && ("function" == typeof e ? e(t) : e.current = t);
  }function o(n, o) {
    return e(n.nodeName, t(t({}, n.attributes), o), arguments.length > 2 ? [].slice.call(arguments, 2) : n.children);
  }function r(e) {
    !e.__d && (e.__d = !0) && 1 == V.push(e) && (M.debounceRendering || D)(i);
  }function i() {
    var e;while (e = V.pop()) {
      e.__d && x(e);
    }
  }function l(e, t, n) {
    return "string" == typeof t || "number" == typeof t ? void 0 !== e.splitText : "string" == typeof t.nodeName ? !e._componentConstructor && a(e, t.nodeName) : n || e._componentConstructor === t.nodeName;
  }function a(e, t) {
    return e.__n === t || e.nodeName.toLowerCase() === t.toLowerCase();
  }function u(e) {
    var n = t({}, e.attributes);n.children = e.children;var o = e.nodeName.defaultProps;if (void 0 !== o) for (var r in o) {
      void 0 === n[r] && (n[r] = o[r]);
    }return n;
  }function c(e, t) {
    var n = t ? document.createElementNS("http://www.w3.org/2000/svg", e) : document.createElement(e);return n.__n = e, n;
  }function p(e) {
    var t = e.parentNode;t && t.removeChild(e);
  }function s(e, t, o, r, i) {
    if ("className" === t && (t = "class"), "key" === t) ;else if ("ref" === t) n(o, null), n(r, e);else if ("class" !== t || i) {
      if ("style" === t) {
        if (r && "string" != typeof r && "string" != typeof o || (e.style.cssText = r || ""), r && "object" == typeof r) {
          if ("string" != typeof o) for (var l in o) {
            l in r || (e.style[l] = "");
          }for (var l in r) {
            e.style[l] = "number" == typeof r[l] && !1 === E.test(l) ? r[l] + "px" : r[l];
          }
        }
      } else if ("dangerouslySetInnerHTML" === t) r && (e.innerHTML = r.__html || "");else if ("o" == t[0] && "n" == t[1]) {
        var a = t !== (t = t.replace(/Capture$/, ""));t = t.toLowerCase().substring(2), r ? o || e.addEventListener(t, _, a) : e.removeEventListener(t, _, a), (e.__l || (e.__l = {}))[t] = r;
      } else if ("list" !== t && "type" !== t && !i && t in e) {
        try {
          e[t] = null == r ? "" : r;
        } catch (e) {}null != r && !1 !== r || "spellcheck" == t || e.removeAttribute(t);
      } else {
        var u = i && t !== (t = t.replace(/^xlink:?/, ""));null == r || !1 === r ? u ? e.removeAttributeNS("http://www.w3.org/1999/xlink", t.toLowerCase()) : e.removeAttribute(t) : "function" != typeof r && (u ? e.setAttributeNS("http://www.w3.org/1999/xlink", t.toLowerCase(), r) : e.setAttribute(t, r));
      }
    } else e.className = r || "";
  }function _(e) {
    return this.__l[e.type](M.event && M.event(e) || e);
  }function f() {
    var e;while (e = A.shift()) {
      M.afterMount && M.afterMount(e), e.componentDidMount && e.componentDidMount();
    }
  }function d(e, t, n, o, r, i) {
    H++ || (R = null != r && void 0 !== r.ownerSVGElement, B = null != e && !("__preactattr_" in e));var l = h(e, t, n, o, i);return r && l.parentNode !== r && r.appendChild(l), --H || (B = !1, i || f()), l;
  }function h(e, t, n, o, r) {
    var i = e,
        l = R;if (null != t && "boolean" != typeof t || (t = ""), "string" == typeof t || "number" == typeof t) return e && void 0 !== e.splitText && e.parentNode && (!e._component || r) ? e.nodeValue != t && (e.nodeValue = t) : (i = document.createTextNode(t), e && (e.parentNode && e.parentNode.replaceChild(i, e), v(e, !0))), i.__preactattr_ = !0, i;var u = t.nodeName;if ("function" == typeof u) return N(e, t, n, o);if (R = "svg" === u || "foreignObject" !== u && R, u += "", (!e || !a(e, u)) && (i = c(u, R), e)) {
      while (e.firstChild) {
        i.appendChild(e.firstChild);
      }e.parentNode && e.parentNode.replaceChild(i, e), v(e, !0);
    }var p = i.firstChild,
        s = i.__preactattr_,
        _ = t.children;if (null == s) {
      s = i.__preactattr_ = {};for (var f = i.attributes, d = f.length; d--;) {
        s[f[d].name] = f[d].value;
      }
    }return !B && _ && 1 === _.length && "string" == typeof _[0] && null != p && void 0 !== p.splitText && null == p.nextSibling ? p.nodeValue != _[0] && (p.nodeValue = _[0]) : (_ && _.length || null != p) && m(i, _, n, o, B || null != s.dangerouslySetInnerHTML), y(i, t.attributes, s), R = l, i;
  }function m(e, t, n, o, r) {
    var i,
        a,
        u,
        c,
        s,
        _ = e.childNodes,
        f = [],
        d = {},
        m = 0,
        b = 0,
        y = _.length,
        g = 0,
        w = t ? t.length : 0;if (0 !== y) for (var C = 0; C < y; C++) {
      var x = _[C],
          N = x.__preactattr_,
          k = w && N ? x._component ? x._component.__k : N.key : null;null != k ? (m++, d[k] = x) : (N || (void 0 !== x.splitText ? !r || x.nodeValue.trim() : r)) && (f[g++] = x);
    }if (0 !== w) for (var C = 0; C < w; C++) {
      c = t[C], s = null;var k = c.key;if (null != k) m && void 0 !== d[k] && (s = d[k], d[k] = void 0, m--);else if (b < g) for (i = b; i < g; i++) {
        if (void 0 !== f[i] && l(a = f[i], c, r)) {
          s = a, f[i] = void 0, i === g - 1 && g--, i === b && b++;break;
        }
      }s = h(s, c, n, o), u = _[C], s && s !== e && s !== u && (null == u ? e.appendChild(s) : s === u.nextSibling ? p(u) : e.insertBefore(s, u));
    }if (m) for (var C in d) {
      void 0 !== d[C] && v(d[C], !1);
    }while (b <= g) {
      void 0 !== (s = f[g--]) && v(s, !1);
    }
  }function v(e, t) {
    var o = e._component;o ? k(o) : (null != e.__preactattr_ && n(e.__preactattr_.ref, null), !1 !== t && null != e.__preactattr_ || p(e), b(e));
  }function b(e) {
    e = e.lastChild;while (e) {
      var t = e.previousSibling;v(e, !0), e = t;
    }
  }function y(e, t, n) {
    var o;for (o in n) {
      t && null != t[o] || null == n[o] || s(e, o, n[o], n[o] = void 0, R);
    }for (o in t) {
      "children" === o || "innerHTML" === o || o in n && t[o] === ("value" === o || "checked" === o ? e[o] : n[o]) || s(e, o, n[o], n[o] = t[o], R);
    }
  }function g(e, t, n) {
    var o,
        r = F.length;e.prototype && e.prototype.render ? (o = new e(t, n), U.call(o, t, n)) : (o = new U(t, n), o.constructor = e, o.render = w);while (r--) {
      if (F[r].constructor === e) return o.__b = F[r].__b, F.splice(r, 1), o;
    }return o;
  }function w(e, t, n) {
    return this.constructor(e, n);
  }function C(e, t, o, i, l) {
    e.__x || (e.__x = !0, e.__r = t.ref, e.__k = t.key, delete t.ref, delete t.key, void 0 === e.constructor.getDerivedStateFromProps && (!e.base || l ? e.componentWillMount && e.componentWillMount() : e.componentWillReceiveProps && e.componentWillReceiveProps(t, i)), i && i !== e.context && (e.__c || (e.__c = e.context), e.context = i), e.__p || (e.__p = e.props), e.props = t, e.__x = !1, 0 !== o && (1 !== o && !1 === M.syncComponentUpdates && e.base ? r(e) : x(e, 1, l)), n(e.__r, e));
  }function x(e, n, o, r) {
    if (!e.__x) {
      var i,
          l,
          a,
          c = e.props,
          p = e.state,
          s = e.context,
          _ = e.__p || c,
          h = e.__s || p,
          m = e.__c || s,
          b = e.base,
          y = e.__b,
          w = b || y,
          N = e._component,
          U = !1,
          S = m;if (e.constructor.getDerivedStateFromProps && (p = t(t({}, p), e.constructor.getDerivedStateFromProps(c, p)), e.state = p), b && (e.props = _, e.state = h, e.context = m, 2 !== n && e.shouldComponentUpdate && !1 === e.shouldComponentUpdate(c, p, s) ? U = !0 : e.componentWillUpdate && e.componentWillUpdate(c, p, s), e.props = c, e.state = p, e.context = s), e.__p = e.__s = e.__c = e.__b = null, e.__d = !1, !U) {
        i = e.render(c, p, s), e.getChildContext && (s = t(t({}, s), e.getChildContext())), b && e.getSnapshotBeforeUpdate && (S = e.getSnapshotBeforeUpdate(_, h));var L,
            T,
            P = i && i.nodeName;if ("function" == typeof P) {
          var W = u(i);l = N, l && l.constructor === P && W.key == l.__k ? C(l, W, 1, s, !1) : (L = l, e._component = l = g(P, W, s), l.__b = l.__b || y, l.__u = e, C(l, W, 0, s, !1), x(l, 1, o, !0)), T = l.base;
        } else a = w, L = N, L && (a = e._component = null), (w || 1 === n) && (a && (a._component = null), T = d(a, i, s, o || !b, w && w.parentNode, !0));if (w && T !== w && l !== N) {
          var D = w.parentNode;D && T !== D && (D.replaceChild(T, w), L || (w._component = null, v(w, !1)));
        }if (L && k(L), e.base = T, T && !r) {
          var E = e,
              V = e;while (V = V.__u) {
            (E = V).base = T;
          }T._component = E, T._componentConstructor = E.constructor;
        }
      }!b || o ? A.push(e) : U || (e.componentDidUpdate && e.componentDidUpdate(_, h, S), M.afterUpdate && M.afterUpdate(e));while (e.__h.length) {
        e.__h.pop().call(e);
      }H || r || f();
    }
  }function N(e, t, n, o) {
    var r = e && e._component,
        i = r,
        l = e,
        a = r && e._componentConstructor === t.nodeName,
        c = a,
        p = u(t);while (r && !c && (r = r.__u)) {
      c = r.constructor === t.nodeName;
    }return r && c && (!o || r._component) ? (C(r, p, 3, n, o), e = r.base) : (i && !a && (k(i), e = l = null), r = g(t.nodeName, p, n), e && !r.__b && (r.__b = e, l = null), C(r, p, 1, n, o), e = r.base, l && e !== l && (l._component = null, v(l, !1))), e;
  }function k(e) {
    M.beforeUnmount && M.beforeUnmount(e);var t = e.base;e.__x = !0, e.componentWillUnmount && e.componentWillUnmount(), e.base = null;var o = e._component;o ? k(o) : t && (null != t.__preactattr_ && n(t.__preactattr_.ref, null), e.__b = t, p(t), F.push(e), b(t)), n(e.__r, null);
  }function U(e, t) {
    this.__d = !0, this.context = t, this.props = e, this.state = this.state || {}, this.__h = [];
  }function S(e, t, n) {
    return d(n, e, {}, !1, t, !1);
  }function L() {
    return {};
  }var T = function T() {},
      M = {},
      P = [],
      W = [],
      D = "function" == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout,
      E = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,
      V = [],
      A = [],
      H = 0,
      R = !1,
      B = !1,
      F = [];t(U.prototype, { setState: function setState(e, n) {
      this.__s || (this.__s = this.state), this.state = t(t({}, this.state), "function" == typeof e ? e(this.state, this.props) : e), n && this.__h.push(n), r(this);
    }, forceUpdate: function forceUpdate(e) {
      e && this.__h.push(e), x(this, 2);
    }, render: function render() {} });var j = { h: e, createElement: e, cloneElement: o, createRef: L, Component: U, render: S, rerender: i, options: M }; true ? module.exports = j : self.preact = j;
}();
//# sourceMappingURL=preact.min.js.map

/***/ }),

/***/ "MeGi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Icon = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _preact = __webpack_require__("KM04");

var _MaterialComponent2 = _interopRequireDefault(__webpack_require__("uc5p"));

var Icon =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Icon, _MaterialComponent);

  function Icon() {
    var _this;

    (0, _classCallCheck2.default)(this, Icon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
    _this.componentName = 'icon';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(Icon, [{
    key: "materialDom",
    value: function materialDom(props) {
      var classes = ['material-icons']; // CardActionIcon sends className

      if (props.className) {
        classes.push(props.className);
      }

      return (0, _preact.h)("i", _extends({}, props, {
        className: classes.join(' ')
      }), props.children);
    }
  }]);
  return Icon;
}(_MaterialComponent2.default);

exports.Icon = Icon;
var _default = Icon;
exports.default = _default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "NFzA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/adapter.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Top App Bar
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Top App Bar into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
var MDCTopAppBarAdapter = function () {
  function MDCTopAppBarAdapter() {
    _classCallCheck(this, MDCTopAppBarAdapter);
  }

  /**
   * Adds a class to the root Element.
   * @param {string} className
   */
  MDCTopAppBarAdapter.prototype.addClass = function addClass(className) {};

  /**
   * Removes a class from the root Element.
   * @param {string} className
   */


  MDCTopAppBarAdapter.prototype.removeClass = function removeClass(className) {};

  /**
   * Returns true if the root Element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  MDCTopAppBarAdapter.prototype.hasClass = function hasClass(className) {};

  /**
   * Sets the specified inline style property on the root Element to the given value.
   * @param {string} property
   * @param {string} value
   */


  MDCTopAppBarAdapter.prototype.setStyle = function setStyle(property, value) {};

  /**
   * Gets the height of the top app bar.
   * @return {number}
   */


  MDCTopAppBarAdapter.prototype.getTopAppBarHeight = function getTopAppBarHeight() {};

  /**
   * Registers an event handler on the navigation icon element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  MDCTopAppBarAdapter.prototype.registerNavigationIconInteractionHandler = function registerNavigationIconInteractionHandler(type, handler) {};

  /**
   * Deregisters an event handler on the navigation icon element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  MDCTopAppBarAdapter.prototype.deregisterNavigationIconInteractionHandler = function deregisterNavigationIconInteractionHandler(type, handler) {};

  /**
   * Emits an event when the navigation icon is clicked.
   */


  MDCTopAppBarAdapter.prototype.notifyNavigationIconClicked = function notifyNavigationIconClicked() {};

  /** @param {function(!Event)} handler */


  MDCTopAppBarAdapter.prototype.registerScrollHandler = function registerScrollHandler(handler) {};

  /** @param {function(!Event)} handler */


  MDCTopAppBarAdapter.prototype.deregisterScrollHandler = function deregisterScrollHandler(handler) {};

  /** @param {function(!Event)} handler */


  MDCTopAppBarAdapter.prototype.registerResizeHandler = function registerResizeHandler(handler) {};

  /** @param {function(!Event)} handler */


  MDCTopAppBarAdapter.prototype.deregisterResizeHandler = function deregisterResizeHandler(handler) {};

  /** @return {number} */


  MDCTopAppBarAdapter.prototype.getViewportScrollY = function getViewportScrollY() {};

  /** @return {number} */


  MDCTopAppBarAdapter.prototype.getTotalActionItems = function getTotalActionItems() {};

  return MDCTopAppBarAdapter;
}();

/* harmony default export */ var top_app_bar_adapter = (MDCTopAppBarAdapter);
// EXTERNAL MODULE: ../node_modules/@material/base/component.js
var component = __webpack_require__("EQDb");

// EXTERNAL MODULE: ../node_modules/@material/ripple/index.js + 4 modules
var ripple = __webpack_require__("vkNc");

// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/constants.js
/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
var cssClasses = {
  FIXED_CLASS: 'mdc-top-app-bar--fixed',
  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',
  SHORT_CLASS: 'mdc-top-app-bar--short',
  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',
  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed'
};

/** @enum {number} */
var numbers = {
  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,
  MAX_TOP_APP_BAR_HEIGHT: 128
};

/** @enum {string} */
var strings = {
  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',
  NAVIGATION_EVENT: 'MDCTopAppBar:nav',
  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',
  ROOT_SELECTOR: '.mdc-top-app-bar',
  TITLE_SELECTOR: '.mdc-top-app-bar__title'
};


// EXTERNAL MODULE: ../node_modules/@material/base/foundation.js
var base_foundation = __webpack_require__("uJAj");

// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/foundation.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





/**
 * @extends {MDCFoundation<!MDCTopAppBarAdapter>}
 */

var foundation_MDCTopAppBarBaseFoundation = function (_MDCFoundation) {
  _inherits(MDCTopAppBarBaseFoundation, _MDCFoundation);

  _createClass(MDCTopAppBarBaseFoundation, null, [{
    key: 'strings',

    /** @return enum {string} */
    get: function get() {
      return strings;
    }

    /** @return enum {string} */

  }, {
    key: 'cssClasses',
    get: function get() {
      return cssClasses;
    }

    /** @return enum {number} */

  }, {
    key: 'numbers',
    get: function get() {
      return numbers;
    }

    /**
     * {@see MDCTopAppBarAdapter} for typing information on parameters and return
     * types.
     * @return {!MDCTopAppBarAdapter}
     */

  }, {
    key: 'defaultAdapter',
    get: function get() {
      return (/** @type {!MDCTopAppBarAdapter} */{
          hasClass: function hasClass() /* className: string */{},
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          setStyle: function setStyle() /* property: string, value: string */{},
          getTopAppBarHeight: function getTopAppBarHeight() {},
          registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler() /* type: string, handler: EventListener */{},
          notifyNavigationIconClicked: function notifyNavigationIconClicked() {},
          registerScrollHandler: function registerScrollHandler() /* handler: EventListener */{},
          deregisterScrollHandler: function deregisterScrollHandler() /* handler: EventListener */{},
          registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
          deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
          getViewportScrollY: function getViewportScrollY() {
            return (/* number */0
            );
          },
          getTotalActionItems: function getTotalActionItems() {
            return (/* number */0
            );
          }
        }
      );
    }

    /**
     * @param {!MDCTopAppBarAdapter} adapter
     */

  }]);

  function MDCTopAppBarBaseFoundation( /** @type {!MDCTopAppBarAdapter} */adapter) {
    foundation__classCallCheck(this, MDCTopAppBarBaseFoundation);

    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCTopAppBarBaseFoundation.defaultAdapter, adapter)));

    _this.navClickHandler_ = function () {
      return _this.adapter_.notifyNavigationIconClicked();
    };

    _this.scrollHandler_ = function () {};
    return _this;
  }

  MDCTopAppBarBaseFoundation.prototype.init = function init() {
    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);
  };

  MDCTopAppBarBaseFoundation.prototype.destroy = function destroy() {
    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);
  };

  MDCTopAppBarBaseFoundation.prototype.initScrollHandler = function initScrollHandler() {
    this.adapter_.registerScrollHandler(this.scrollHandler_);
  };

  MDCTopAppBarBaseFoundation.prototype.destroyScrollHandler = function destroyScrollHandler() {
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  };

  return MDCTopAppBarBaseFoundation;
}(base_foundation["a" /* default */]);

/* harmony default export */ var top_app_bar_foundation = (foundation_MDCTopAppBarBaseFoundation);
// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/fixed/foundation.js
function fixed_foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function foundation__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function foundation__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





/**
 * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}
 * @final
 */

var foundation_MDCFixedTopAppBarFoundation = function (_MDCTopAppBarFoundati) {
  foundation__inherits(MDCFixedTopAppBarFoundation, _MDCTopAppBarFoundati);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCFixedTopAppBarFoundation(adapter) {
    fixed_foundation__classCallCheck(this, MDCFixedTopAppBarFoundation);

    /** State variable for the previous scroll iteration top app bar state */
    var _this = foundation__possibleConstructorReturn(this, _MDCTopAppBarFoundati.call(this, adapter));

    _this.wasScrolled_ = false;

    _this.scrollHandler_ = function () {
      return _this.fixedScrollHandler_();
    };
    return _this;
  }

  MDCFixedTopAppBarFoundation.prototype.init = function init() {
    _MDCTopAppBarFoundati.prototype.init.call(this);
    this.adapter_.registerScrollHandler(this.scrollHandler_);
  };

  MDCFixedTopAppBarFoundation.prototype.destroy = function destroy() {
    _MDCTopAppBarFoundati.prototype.destroy.call(this);
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  };

  /**
   * Scroll handler for applying/removing the modifier class
   * on the fixed top app bar.
   */


  MDCFixedTopAppBarFoundation.prototype.fixedScrollHandler_ = function fixedScrollHandler_() {
    var currentScroll = this.adapter_.getViewportScrollY();

    if (currentScroll <= 0) {
      if (this.wasScrolled_) {
        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);
        this.wasScrolled_ = false;
      }
    } else {
      if (!this.wasScrolled_) {
        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);
        this.wasScrolled_ = true;
      }
    }
  };

  return MDCFixedTopAppBarFoundation;
}(top_app_bar_foundation);

/* harmony default export */ var fixed_foundation = (foundation_MDCFixedTopAppBarFoundation);
// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/short/foundation.js
function short_foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function short_foundation__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function short_foundation__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}
 * @final
 */

var foundation_MDCShortTopAppBarFoundation = function (_MDCTopAppBarBaseFoun) {
  short_foundation__inherits(MDCShortTopAppBarFoundation, _MDCTopAppBarBaseFoun);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCShortTopAppBarFoundation(adapter) {
    short_foundation__classCallCheck(this, MDCShortTopAppBarFoundation);

    // State variable for the current top app bar state
    var _this = short_foundation__possibleConstructorReturn(this, _MDCTopAppBarBaseFoun.call(this, adapter));

    _this.isCollapsed = false;

    _this.scrollHandler_ = function () {
      return _this.shortAppBarScrollHandler_();
    };
    return _this;
  }

  MDCShortTopAppBarFoundation.prototype.init = function init() {
    _MDCTopAppBarBaseFoun.prototype.init.call(this);
    var isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);

    if (this.adapter_.getTotalActionItems() > 0) {
      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);
    }

    if (!isAlwaysCollapsed) {
      this.adapter_.registerScrollHandler(this.scrollHandler_);
      this.shortAppBarScrollHandler_();
    }
  };

  MDCShortTopAppBarFoundation.prototype.destroy = function destroy() {
    _MDCTopAppBarBaseFoun.prototype.destroy.call(this);
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  };

  /**
   * Scroll handler for applying/removing the collapsed modifier class
   * on the short top app bar.
   * @private
   */


  MDCShortTopAppBarFoundation.prototype.shortAppBarScrollHandler_ = function shortAppBarScrollHandler_() {
    var currentScroll = this.adapter_.getViewportScrollY();

    if (currentScroll <= 0) {
      if (this.isCollapsed) {
        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);
        this.isCollapsed = false;
      }
    } else {
      if (!this.isCollapsed) {
        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);
        this.isCollapsed = true;
      }
    }
  };

  return MDCShortTopAppBarFoundation;
}(top_app_bar_foundation);

/* harmony default export */ var short_foundation = (foundation_MDCShortTopAppBarFoundation);
// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/standard/foundation.js
function standard_foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function standard_foundation__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function standard_foundation__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */





var INITIAL_VALUE = 0;
/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}
 * @final
 */

var foundation_MDCTopAppBarFoundation = function (_MDCTopAppBarBaseFoun) {
  standard_foundation__inherits(MDCTopAppBarFoundation, _MDCTopAppBarBaseFoun);

  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  function MDCTopAppBarFoundation(adapter) {
    standard_foundation__classCallCheck(this, MDCTopAppBarFoundation);

    /**
     * Used for diffs of current scroll position vs previous scroll position
     * @private {number}
     */
    var _this = standard_foundation__possibleConstructorReturn(this, _MDCTopAppBarBaseFoun.call(this, adapter));

    _this.lastScrollPosition_ = _this.adapter_.getViewportScrollY();

    /**
     * Used to verify when the top app bar is completely showing or completely hidden
     * @private {number}
     */
    _this.topAppBarHeight_ = _this.adapter_.getTopAppBarHeight();

    /**
     * wasDocked_ is used to indicate if the top app bar was docked in the previous
     * scroll handler iteration.
     * @private {boolean}
     */
    _this.wasDocked_ = true;

    /**
     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully
     * shown position.
     * @private {boolean}
     */
    _this.isDockedShowing_ = true;

    /**
     * Variable for current scroll position of the top app bar
     * @private {number}
     */
    _this.currentAppBarOffsetTop_ = 0;

    /**
     * Used to prevent the top app bar from being scrolled out of view during resize events
     * @private {boolean} */
    _this.isCurrentlyBeingResized_ = false;

    /**
     * The timeout that's used to throttle the resize events
     * @private {number}
     */
    _this.resizeThrottleId_ = INITIAL_VALUE;

    /**
     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize
     * @private {number}
     */
    _this.resizeDebounceId_ = INITIAL_VALUE;

    _this.scrollHandler_ = function () {
      return _this.topAppBarScrollHandler_();
    };
    _this.resizeHandler_ = function () {
      return _this.topAppBarResizeHandler_();
    };
    return _this;
  }

  MDCTopAppBarFoundation.prototype.init = function init() {
    _MDCTopAppBarBaseFoun.prototype.init.call(this);
    this.adapter_.registerScrollHandler(this.scrollHandler_);
    this.adapter_.registerResizeHandler(this.resizeHandler_);
  };

  MDCTopAppBarFoundation.prototype.destroy = function destroy() {
    _MDCTopAppBarBaseFoun.prototype.destroy.call(this);
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    this.adapter_.setStyle('top', '');
  };

  /**
   * Function to determine if the DOM needs to update.
   * @return {boolean}
   * @private
   */


  MDCTopAppBarFoundation.prototype.checkForUpdate_ = function checkForUpdate_() {
    var offscreenBoundaryTop = -this.topAppBarHeight_;
    var hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;
    var hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;
    var partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;

    // If it's partially showing, it can't be docked.
    if (partiallyShowing) {
      this.wasDocked_ = false;
    } else {
      // Not previously docked and not partially showing, it's now docked.
      if (!this.wasDocked_) {
        this.wasDocked_ = true;
        return true;
      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {
        this.isDockedShowing_ = hasAnyPixelsOnscreen;
        return true;
      }
    }

    return partiallyShowing;
  };

  /**
   * Function to move the top app bar if needed.
   * @private
   */


  MDCTopAppBarFoundation.prototype.moveTopAppBar_ = function moveTopAppBar_() {
    if (this.checkForUpdate_()) {
      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset
      // so the top app bar doesn't show if the window resizes and the new height > the old height.
      var offset = this.currentAppBarOffsetTop_;
      if (Math.abs(offset) >= this.topAppBarHeight_) {
        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;
      }

      this.adapter_.setStyle('top', offset + 'px');
    }
  };

  /**
   * Scroll handler for the default scroll behavior of the top app bar.
   * @private
   */


  MDCTopAppBarFoundation.prototype.topAppBarScrollHandler_ = function topAppBarScrollHandler_() {
    var currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);
    var diff = currentScrollPosition - this.lastScrollPosition_;
    this.lastScrollPosition_ = currentScrollPosition;

    // If the window is being resized the lastScrollPosition_ needs to be updated but the
    // current scroll of the top app bar should stay in the same position.
    if (!this.isCurrentlyBeingResized_) {
      this.currentAppBarOffsetTop_ -= diff;

      if (this.currentAppBarOffsetTop_ > 0) {
        this.currentAppBarOffsetTop_ = 0;
      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {
        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;
      }

      this.moveTopAppBar_();
    }
  };

  /**
   * Top app bar resize handler that throttle/debounce functions that execute updates.
   * @private
   */


  MDCTopAppBarFoundation.prototype.topAppBarResizeHandler_ = function topAppBarResizeHandler_() {
    var _this2 = this;

    // Throttle resize events 10 p/s
    if (!this.resizeThrottleId_) {
      this.resizeThrottleId_ = setTimeout(function () {
        _this2.resizeThrottleId_ = INITIAL_VALUE;
        _this2.throttledResizeHandler_();
      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
    }

    this.isCurrentlyBeingResized_ = true;

    if (this.resizeDebounceId_) {
      clearTimeout(this.resizeDebounceId_);
    }

    this.resizeDebounceId_ = setTimeout(function () {
      _this2.topAppBarScrollHandler_();
      _this2.isCurrentlyBeingResized_ = false;
      _this2.resizeDebounceId_ = INITIAL_VALUE;
    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
  };

  /**
   * Throttled function that updates the top app bar scrolled values if the
   * top app bar height changes.
   * @private
   */


  MDCTopAppBarFoundation.prototype.throttledResizeHandler_ = function throttledResizeHandler_() {
    var currentHeight = this.adapter_.getTopAppBarHeight();
    if (this.topAppBarHeight_ !== currentHeight) {
      this.wasDocked_ = false;

      // Since the top app bar has a different height depending on the screen width, this
      // will ensure that the top app bar remains in the correct location if
      // completely hidden and a resize makes the top app bar a different height.
      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;
      this.topAppBarHeight_ = currentHeight;
    }
    this.topAppBarScrollHandler_();
  };

  return MDCTopAppBarFoundation;
}(top_app_bar_foundation);

/* harmony default export */ var standard_foundation = (foundation_MDCTopAppBarFoundation);
// CONCATENATED MODULE: ../node_modules/@material/top-app-bar/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCTopAppBar", function() { return top_app_bar_MDCTopAppBar; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCTopAppBarBaseFoundation", function() { return top_app_bar_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCTopAppBarFoundation", function() { return standard_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCFixedTopAppBarFoundation", function() { return fixed_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCShortTopAppBarFoundation", function() { return short_foundation; });
var top_app_bar__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function top_app_bar__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function top_app_bar__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function top_app_bar__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */










/**
 * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}
 * @final
 */

var top_app_bar_MDCTopAppBar = function (_MDCComponent) {
  top_app_bar__inherits(MDCTopAppBar, _MDCComponent);

  /**
   * @param {...?} args
   */
  function MDCTopAppBar() {
    top_app_bar__classCallCheck(this, MDCTopAppBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    /** @private {?Element} */
    var _this = top_app_bar__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));

    _this.navIcon_;
    /** @type {?Array<MDCRipple>} */
    _this.iconRipples_;
    /** @type {Object} */
    _this.scrollTarget_;
    return _this;
  }

  MDCTopAppBar.prototype.initialize = function initialize() {
    var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el) {
      return ripple["MDCRipple"].attachTo(el);
    };

    this.navIcon_ = this.root_.querySelector(strings.NAVIGATION_ICON_SELECTOR);

    // Get all icons in the toolbar and instantiate the ripples
    var icons = [].slice.call(this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR));
    if (this.navIcon_) {
      icons.push(this.navIcon_);
    }

    this.iconRipples_ = icons.map(function (icon) {
      var ripple = rippleFactory(icon);
      ripple.unbounded = true;
      return ripple;
    });
  };

  MDCTopAppBar.prototype.destroy = function destroy() {
    this.iconRipples_.forEach(function (iconRipple) {
      return iconRipple.destroy();
    });
    _MDCComponent.prototype.destroy.call(this);
  };

  MDCTopAppBar.prototype.setScrollTarget = function setScrollTarget(target) {
    this.foundation_.destroyScrollHandler();
    this.scrollTarget_ = target;
    this.foundation_.initScrollHandler();
  };

  /**
   * @param {!Element} root
   * @return {!MDCTopAppBar}
   */


  MDCTopAppBar.attachTo = function attachTo(root) {
    return new MDCTopAppBar(root);
  };

  /**
   * @return {!MDCTopAppBarBaseFoundation}
   */


  MDCTopAppBar.prototype.getDefaultFoundation = function getDefaultFoundation() {
    var _this2 = this;

    /** @type {!MDCTopAppBarAdapter} */
    var adapter = /** @type {!MDCTopAppBarAdapter} */top_app_bar__extends({
      hasClass: function hasClass(className) {
        return _this2.root_.classList.contains(className);
      },
      addClass: function addClass(className) {
        return _this2.root_.classList.add(className);
      },
      removeClass: function removeClass(className) {
        return _this2.root_.classList.remove(className);
      },
      setStyle: function setStyle(property, value) {
        return _this2.root_.style.setProperty(property, value);
      },
      getTopAppBarHeight: function getTopAppBarHeight() {
        return _this2.root_.clientHeight;
      },
      registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler(evtType, handler) {
        if (_this2.navIcon_) {
          _this2.navIcon_.addEventListener(evtType, handler);
        }
      },
      deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler(evtType, handler) {
        if (_this2.navIcon_) {
          _this2.navIcon_.removeEventListener(evtType, handler);
        }
      },
      notifyNavigationIconClicked: function notifyNavigationIconClicked() {
        _this2.emit(strings.NAVIGATION_EVENT, {});
      },
      registerScrollHandler: function registerScrollHandler(handler) {
        return _this2.scrollTarget_.addEventListener('scroll', handler);
      },
      deregisterScrollHandler: function deregisterScrollHandler(handler) {
        return _this2.scrollTarget_.removeEventListener('scroll', handler);
      },
      registerResizeHandler: function registerResizeHandler(handler) {
        return window.addEventListener('resize', handler);
      },
      deregisterResizeHandler: function deregisterResizeHandler(handler) {
        return window.removeEventListener('resize', handler);
      },
      getViewportScrollY: function getViewportScrollY() {
        return _this2.scrollTarget_[_this2.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'];
      },
      getTotalActionItems: function getTotalActionItems() {
        return _this2.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length;
      }
    });

    this.scrollTarget_ = window;

    /** @type {!MDCTopAppBarBaseFoundation} */
    var foundation = void 0;
    if (this.root_.classList.contains(cssClasses.SHORT_CLASS)) {
      foundation = new short_foundation(adapter);
    } else if (this.root_.classList.contains(cssClasses.FIXED_CLASS)) {
      foundation = new fixed_foundation(adapter);
    } else {
      foundation = new standard_foundation(adapter);
    }

    return foundation;
  };

  return MDCTopAppBar;
}(component["a" /* default */]);



/***/ }),

/***/ "Os0n":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  * $script.js JS loader & dependency manager
  * https://github.com/ded/script.js
  * (c) Dustin Diaz 2014 | License MIT
  */

(function (name, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else this[name] = definition();
})('$script', function () {
  var doc = document,
      head = doc.getElementsByTagName('head')[0],
      s = 'string',
      f = false,
      push = 'push',
      readyState = 'readyState',
      onreadystatechange = 'onreadystatechange',
      list = {},
      ids = {},
      delay = {},
      scripts = {},
      scriptpath,
      urlArgs;

  function every(ar, fn) {
    for (var i = 0, j = ar.length; i < j; ++i) {
      if (!fn(ar[i])) return f;
    }return 1;
  }
  function each(ar, fn) {
    every(ar, function (el) {
      fn(el);
      return 1;
    });
  }

  function $script(paths, idOrDone, optDone) {
    paths = paths[push] ? paths : [paths];
    var idOrDoneIsDone = idOrDone && idOrDone.call,
        done = idOrDoneIsDone ? idOrDone : optDone,
        id = idOrDoneIsDone ? paths.join('') : idOrDone,
        queue = paths.length;
    function loopFn(item) {
      return item.call ? item() : list[item];
    }
    function callback() {
      if (! --queue) {
        list[id] = 1;
        done && done();
        for (var dset in delay) {
          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = []);
        }
      }
    }
    setTimeout(function () {
      each(paths, function loading(path, force) {
        if (path === null) return callback();

        if (!force && !/^https?:\/\//.test(path) && scriptpath) {
          path = path.indexOf('.js') === -1 ? scriptpath + path + '.js' : scriptpath + path;
        }

        if (scripts[path]) {
          if (id) ids[id] = 1;
          return scripts[path] == 2 ? callback() : setTimeout(function () {
            loading(path, true);
          }, 0);
        }

        scripts[path] = 1;
        if (id) ids[id] = 1;
        create(path, callback);
      });
    }, 0);
    return $script;
  }

  function create(path, fn) {
    var el = doc.createElement('script'),
        loaded;
    el.onload = el.onerror = el[onreadystatechange] = function () {
      if (el[readyState] && !/^c|loade/.test(el[readyState]) || loaded) return;
      el.onload = el[onreadystatechange] = null;
      loaded = 1;
      scripts[path] = 2;
      fn();
    };
    el.async = 1;
    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;
    head.insertBefore(el, head.lastChild);
  }

  $script.get = create;

  $script.order = function (scripts, id, done) {
    (function callback(s) {
      s = scripts.shift();
      !scripts.length ? $script(s, id, done) : $script(s, callback);
    })();
  };

  $script.path = function (p) {
    scriptpath = p;
  };
  $script.urlArgs = function (str) {
    urlArgs = str;
  };
  $script.ready = function (deps, ready, req) {
    deps = deps[push] ? deps : [deps];
    var missing = [];
    !each(deps, function (dep) {
      list[dep] || missing[push](dep);
    }) && every(deps, function (dep) {
      return list[dep];
    }) ? ready() : !function (key) {
      delay[key] = delay[key] || [];
      delay[key][push](ready);
      req && req(missing);
    }(deps.join('|'));
    return $script;
  };

  $script.done = function (idOrDone) {
    $script([null], idOrDone);
  };

  return $script;
});

/***/ }),

/***/ "Oyyg":
/***/ (function(module, exports) {

var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
var candidateSelector = candidateSelectors.join(',');

var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

function tabbable(el, options) {
  options = options || {};

  var elementDocument = el.ownerDocument || el;
  var regularTabbables = [];
  var orderedTabbables = [];

  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
  var candidates = el.querySelectorAll(candidateSelector);

  if (options.includeContainer) {
    if (matches.call(el, candidateSelector)) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var i, candidate, candidateTabindex;
  for (i = 0; i < candidates.length; i++) {
    candidate = candidates[i];

    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;

    candidateTabindex = getTabindex(candidate);
    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate
      });
    }
  }

  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
    return a.node;
  }).concat(regularTabbables);

  return tabbableNodes;
}

tabbable.isTabbable = isTabbable;
tabbable.isFocusable = isFocusable;

function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
  if (!isNodeMatchingSelectorFocusable(node, untouchabilityChecker) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
    return false;
  }
  return true;
}

function isTabbable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, candidateSelector) === false) return false;
  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
}

function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);
  if (node.disabled || isHiddenInput(node) || untouchabilityChecker.isUntouchable(node)) {
    return false;
  }
  return true;
}

var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');
function isFocusable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, focusableCandidateSelector) === false) return false;
  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
}

function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!isNaN(tabindexAttr)) return tabindexAttr;
  // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  if (isContentEditable(node)) return 0;
  return node.tabIndex;
}

function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
}

// Array.prototype.find not available in IE.
function find(list, predicate) {
  for (var i = 0, length = list.length; i < length; i++) {
    if (predicate(list[i])) return list[i];
  }
}

function isContentEditable(node) {
  return node.contentEditable === 'true';
}

function isInput(node) {
  return node.tagName === 'INPUT';
}

function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
}

function isRadio(node) {
  return isInput(node) && node.type === 'radio';
}

function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
}

function getCheckedRadio(nodes) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked) {
      return nodes[i];
    }
  }
}

function isTabbableRadio(node) {
  if (!node.name) return true;
  // This won't account for the edge case where you have radio groups with the same
  // in separate forms on the same page.
  var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
  var checked = getCheckedRadio(radioSet);
  return !checked || checked === node;
}

// An element is "untouchable" if *it or one of its ancestors* has
// `visibility: hidden` or `display: none`.
function UntouchabilityChecker(elementDocument) {
  this.doc = elementDocument;
  // Node cache must be refreshed on every check, in case
  // the content of the element has changed. The cache contains tuples
  // mapping nodes to their boolean result.
  this.cache = [];
}

// getComputedStyle accurately reflects `visibility: hidden` of ancestors
// but not `display: none`, so we need to recursively check parents.
UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
  if (node.nodeType !== Node.ELEMENT_NODE) return false;

  // Search for a cached result.
  var cached = find(this.cache, function (item) {
    return item === node;
  });
  if (cached) return cached[1];

  nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);

  var result = false;

  if (nodeComputedStyle.display === 'none') {
    result = true;
  } else if (node.parentNode) {
    result = this.hasDisplayNone(node.parentNode);
  }

  this.cache.push([node, result]);

  return result;
};

UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
  if (node === this.doc.documentElement) return false;
  var computedStyle = this.doc.defaultView.getComputedStyle(node);
  if (this.hasDisplayNone(node, computedStyle)) return true;
  return computedStyle.visibility === 'hidden';
};

module.exports = tabbable;

/***/ }),

/***/ "P8NW":
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "Pt3o":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"container":"container__13Iwl"};

/***/ }),

/***/ "QK/6":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"logo_container":"logo_container__vcinV","firebase_logo":"firebase_logo__-JNMn","firebase_logo_wrap":"firebase_logo_wrap__1vSbU"};

/***/ }),

/***/ "QTRl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(prop) {
  return "mdc-theme--".concat(prop, "-bg");
}
//# sourceMappingURL=generateThemeClass.js.map

/***/ }),

/***/ "RKsu":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {
	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (true) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return ExecutionEnvironment;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = ExecutionEnvironment;
	} else {
		window.ExecutionEnvironment = ExecutionEnvironment;
	}
})();

/***/ }),

/***/ "RYBc":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "SpGf":
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "TC0Z":
/***/ (function(module, exports, __webpack_require__) {

var tabbable = __webpack_require__("Oyyg");
var xtend = __webpack_require__("K5Tb");

var listeningFocusTrap = null;

function focusTrap(element, userOptions) {
  var doc = document;
  var container = typeof element === 'string' ? doc.querySelector(element) : element;

  var config = xtend({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true
  }, userOptions);

  var state = {
    firstTabbableNode: null,
    lastTabbableNode: null,
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false
  };

  var trap = {
    activate: activate,
    deactivate: deactivate,
    pause: pause,
    unpause: unpause
  };

  return trap;

  function activate(activateOptions) {
    if (state.active) return;

    updateTabbableNodes();

    state.active = true;
    state.paused = false;
    state.nodeFocusedBeforeActivation = doc.activeElement;

    var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;
    if (onActivate) {
      onActivate();
    }

    addListeners();
    return trap;
  }

  function deactivate(deactivateOptions) {
    if (!state.active) return;

    removeListeners();
    state.active = false;
    state.paused = false;

    var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;
    if (onDeactivate) {
      onDeactivate();
    }

    var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;
    if (returnFocus) {
      delay(function () {
        tryFocus(state.nodeFocusedBeforeActivation);
      });
    }

    return trap;
  }

  function pause() {
    if (state.paused || !state.active) return;
    state.paused = true;
    removeListeners();
  }

  function unpause() {
    if (!state.paused || !state.active) return;
    state.paused = false;
    addListeners();
  }

  function addListeners() {
    if (!state.active) return;

    // There can be only one listening focus trap at a time
    if (listeningFocusTrap) {
      listeningFocusTrap.pause();
    }
    listeningFocusTrap = trap;

    updateTabbableNodes();

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    delay(function () {
      tryFocus(getInitialFocusNode());
    });
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, true);
    doc.addEventListener('touchstart', checkPointerDown, true);
    doc.addEventListener('click', checkClick, true);
    doc.addEventListener('keydown', checkKey, true);

    return trap;
  }

  function removeListeners() {
    if (!state.active || listeningFocusTrap !== trap) return;

    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);

    listeningFocusTrap = null;

    return trap;
  }

  function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    var node = optionValue;
    if (!optionValue) {
      return null;
    }
    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue);
      if (!node) {
        throw new Error('`' + optionName + '` refers to no known node');
      }
    }
    if (typeof optionValue === 'function') {
      node = optionValue();
      if (!node) {
        throw new Error('`' + optionName + '` did not return a node');
      }
    }
    return node;
  }

  function getInitialFocusNode() {
    var node;
    if (getNodeForOption('initialFocus') !== null) {
      node = getNodeForOption('initialFocus');
    } else if (container.contains(doc.activeElement)) {
      node = doc.activeElement;
    } else {
      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
    }

    if (!node) {
      throw new Error("You can't have a focus-trap without at least one focusable element");
    }

    return node;
  }

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  function checkPointerDown(e) {
    if (container.contains(e.target)) return;
    if (config.clickOutsideDeactivates) {
      deactivate({
        returnFocus: !tabbable.isFocusable(e.target)
      });
    } else {
      e.preventDefault();
    }
  }

  // In case focus escapes the trap for some strange reason, pull it back in.
  function checkFocusIn(e) {
    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (container.contains(e.target) || e.target instanceof Document) {
      return;
    }
    e.stopImmediatePropagation();
    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
  }

  function checkKey(e) {
    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
      e.preventDefault();
      deactivate();
      return;
    }
    if (isTabEvent(e)) {
      checkTab(e);
      return;
    }
  }

  // Hijack Tab events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  function checkTab(e) {
    updateTabbableNodes();
    if (e.shiftKey && e.target === state.firstTabbableNode) {
      e.preventDefault();
      tryFocus(state.lastTabbableNode);
      return;
    }
    if (!e.shiftKey && e.target === state.lastTabbableNode) {
      e.preventDefault();
      tryFocus(state.firstTabbableNode);
      return;
    }
  }

  function checkClick(e) {
    if (config.clickOutsideDeactivates) return;
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
  }

  function updateTabbableNodes() {
    var tabbableNodes = tabbable(container);
    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
    state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
  }

  function tryFocus(node) {
    if (node === doc.activeElement) return;
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }

    node.focus();
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  }
}

function isSelectableInput(node) {
  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
}

function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
}

function isTabEvent(e) {
  return e.key === 'Tab' || e.keyCode === 9;
}

function delay(fn) {
  return setTimeout(fn, 0);
}

module.exports = focusTrap;

/***/ }),

/***/ "TO+D":
/***/ (function(module, exports) {

module.exports = function (el, options) {
  options = options || {};

  var elementDocument = el.ownerDocument || el;
  var basicTabbables = [];
  var orderedTabbables = [];

  // A node is "available" if
  // - it's computed style
  var isUnavailable = createIsUnavailable(elementDocument);

  var candidateSelectors = ['input', 'select', 'a[href]', 'textarea', 'button', '[tabindex]'];

  var candidates = el.querySelectorAll(candidateSelectors.join(','));

  if (options.includeContainer) {
    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

    if (candidateSelectors.some(function (candidateSelector) {
      return matches.call(el, candidateSelector);
    })) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var candidate, candidateIndexAttr, candidateIndex;
  for (var i = 0, l = candidates.length; i < l; i++) {
    candidate = candidates[i];
    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10);
    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;

    if (candidateIndex < 0 || candidate.tagName === 'INPUT' && candidate.type === 'hidden' || candidate.disabled || isUnavailable(candidate, elementDocument)) {
      continue;
    }

    if (candidateIndex === 0) {
      basicTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        index: i,
        tabIndex: candidateIndex,
        node: candidate
      });
    }
  }

  var tabbableNodes = orderedTabbables.sort(function (a, b) {
    return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
  }).map(function (a) {
    return a.node;
  });

  Array.prototype.push.apply(tabbableNodes, basicTabbables);

  return tabbableNodes;
};

function createIsUnavailable(elementDocument) {
  // Node cache must be refreshed on every check, in case
  // the content of the element has changed
  var isOffCache = [];

  // "off" means `display: none;`, as opposed to "hidden",
  // which means `visibility: hidden;`. getComputedStyle
  // accurately reflects visiblity in context but not
  // "off" state, so we need to recursively check parents.

  function isOff(node, nodeComputedStyle) {
    if (node === elementDocument.documentElement) return false;

    // Find the cached node (Array.prototype.find not available in IE9)
    for (var i = 0, length = isOffCache.length; i < length; i++) {
      if (isOffCache[i][0] === node) return isOffCache[i][1];
    }

    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);

    var result = false;

    if (nodeComputedStyle.display === 'none') {
      result = true;
    } else if (node.parentNode) {
      result = isOff(node.parentNode);
    }

    isOffCache.push([node, result]);

    return result;
  }

  return function isUnavailable(node) {
    if (node === elementDocument.documentElement) return false;

    var computedStyle = elementDocument.defaultView.getComputedStyle(node);

    if (isOff(node, computedStyle)) return true;

    return computedStyle.visibility === 'hidden';
  };
}

/***/ }),

/***/ "TUpU":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Logger; });
/* unused harmony export setLogLevel */
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
/**
 * The default log level
 */
var defaultLogLevel = LogLevel.INFO;
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function defaultLogHandler(instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    switch (logType) {
        /**
         * By default, `console.debug` is not displayed in the developer console (in
         * chrome). To avoid forcing users to have to opt-in to these logs twice
         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
         * logs to the `console.log` function.
         */
        case LogLevel.DEBUG:
            console.log.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.VERBOSE:
            console.log.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.INFO:
            console.info.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.WARN:
            console.warn.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.ERROR:
            console.error.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        default:
            throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The log handler for the Logger instance.
         */
        this._logHandler = defaultLogHandler;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function get() {
            return this._logLevel;
        },
        set: function set(val) {
            if (!(val in LogLevel)) {
                throw new TypeError('Invalid value assigned to `logLevel`');
            }
            this._logLevel = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function get() {
            return this._logHandler;
        },
        set: function set(val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));
    };
    return Logger;
}();

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.logLevel = level;
    });
}


//# sourceMappingURL=index.esm.js.map

/***/ }),

/***/ "UJE0":
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "UtcG":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;typeof navigator !== "undefined" && function (root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
            return factory(root);
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory(root);
    } else {
        root.lottie = factory(root);
        root.bodymovin = root.lottie;
    }
}(window || {}, function (window) {
    "use strict";

    var svgNS = "http://www.w3.org/2000/svg";

    var locationHref = '';

    var initialDefaultFrame = -999999;

    var subframeEnabled = true;
    var expressionsPlugin;
    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    var cachedColors = {};
    var bm_rounder = Math.round;
    var bm_rnd;
    var bm_pow = Math.pow;
    var bm_sqrt = Math.sqrt;
    var bm_abs = Math.abs;
    var bm_floor = Math.floor;
    var bm_max = Math.max;
    var bm_min = Math.min;
    var blitter = 10;

    var BMMath = {};
    (function () {
        var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
        var i,
            len = propertyNames.length;
        for (i = 0; i < len; i += 1) {
            BMMath[propertyNames[i]] = Math[propertyNames[i]];
        }
    })();

    function ProjectInterface() {
        return {};
    }

    BMMath.random = Math.random;
    BMMath.abs = function (val) {
        var tOfVal = typeof val;
        if (tOfVal === 'object' && val.length) {
            var absArr = createSizedArray(val.length);
            var i,
                len = val.length;
            for (i = 0; i < len; i += 1) {
                absArr[i] = Math.abs(val[i]);
            }
            return absArr;
        }
        return Math.abs(val);
    };
    var defaultCurveSegments = 150;
    var degToRads = Math.PI / 180;
    var roundCorner = 0.5519;

    function roundValues(flag) {
        if (flag) {
            bm_rnd = Math.round;
        } else {
            bm_rnd = function bm_rnd(val) {
                return val;
            };
        }
    }
    roundValues(false);

    function styleDiv(element) {
        element.style.position = 'absolute';
        element.style.top = 0;
        element.style.left = 0;
        element.style.display = 'block';
        element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';
        element.style.backfaceVisibility = element.style.webkitBackfaceVisibility = 'visible';
        element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = "preserve-3d";
    }

    function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {
        this.type = type;
        this.currentTime = currentTime;
        this.totalTime = totalTime;
        this.direction = frameMultiplier < 0 ? -1 : 1;
    }

    function BMCompleteEvent(type, frameMultiplier) {
        this.type = type;
        this.direction = frameMultiplier < 0 ? -1 : 1;
    }

    function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {
        this.type = type;
        this.currentLoop = currentLoop;
        this.totalLoops = totalLoops;
        this.direction = frameMultiplier < 0 ? -1 : 1;
    }

    function BMSegmentStartEvent(type, firstFrame, totalFrames) {
        this.type = type;
        this.firstFrame = firstFrame;
        this.totalFrames = totalFrames;
    }

    function BMDestroyEvent(type, target) {
        this.type = type;
        this.target = target;
    }

    function BMRenderFrameErrorEvent(nativeError, currentTime) {
        this.type = 'renderFrameError';
        this.nativeError = nativeError;
        this.currentTime = currentTime;
    }

    function BMConfigErrorEvent(nativeError) {
        this.type = 'configError';
        this.nativeError = nativeError;
    }

    function BMAnimationConfigErrorEvent(type, nativeError) {
        this.type = type;
        this.nativeError = nativeError;
        this.currentTime = currentTime;
    }

    var createElementID = function () {
        var _count = 0;
        return function createID() {
            return '__lottie_element_' + ++_count;
        };
    }();

    function HSVtoRGB(h, s, v) {
        var r, g, b, i, f, p, q, t;
        i = Math.floor(h * 6);
        f = h * 6 - i;
        p = v * (1 - s);
        q = v * (1 - f * s);
        t = v * (1 - (1 - f) * s);
        switch (i % 6) {
            case 0:
                r = v;g = t;b = p;break;
            case 1:
                r = q;g = v;b = p;break;
            case 2:
                r = p;g = v;b = t;break;
            case 3:
                r = p;g = q;b = v;break;
            case 4:
                r = t;g = p;b = v;break;
            case 5:
                r = v;g = p;b = q;break;
        }
        return [r, g, b];
    }

    function RGBtoHSV(r, g, b) {
        var max = Math.max(r, g, b),
            min = Math.min(r, g, b),
            d = max - min,
            h,
            s = max === 0 ? 0 : d / max,
            v = max / 255;

        switch (max) {
            case min:
                h = 0;break;
            case r:
                h = g - b + d * (g < b ? 6 : 0);h /= 6 * d;break;
            case g:
                h = b - r + d * 2;h /= 6 * d;break;
            case b:
                h = r - g + d * 4;h /= 6 * d;break;
        }

        return [h, s, v];
    }

    function addSaturationToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[1] += offset;
        if (hsv[1] > 1) {
            hsv[1] = 1;
        } else if (hsv[1] <= 0) {
            hsv[1] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }

    function addBrightnessToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[2] += offset;
        if (hsv[2] > 1) {
            hsv[2] = 1;
        } else if (hsv[2] < 0) {
            hsv[2] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }

    function addHueToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[0] += offset / 360;
        if (hsv[0] > 1) {
            hsv[0] -= 1;
        } else if (hsv[0] < 0) {
            hsv[0] += 1;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }

    var rgbToHex = function () {
        var colorMap = [];
        var i;
        var hex;
        for (i = 0; i < 256; i += 1) {
            hex = i.toString(16);
            colorMap[i] = hex.length == 1 ? '0' + hex : hex;
        }

        return function (r, g, b) {
            if (r < 0) {
                r = 0;
            }
            if (g < 0) {
                g = 0;
            }
            if (b < 0) {
                b = 0;
            }
            return '#' + colorMap[r] + colorMap[g] + colorMap[b];
        };
    }();
    function BaseEvent() {}
    BaseEvent.prototype = {
        triggerEvent: function triggerEvent(eventName, args) {
            if (this._cbs[eventName]) {
                var len = this._cbs[eventName].length;
                for (var i = 0; i < len; i++) {
                    this._cbs[eventName][i](args);
                }
            }
        },
        addEventListener: function addEventListener(eventName, callback) {
            if (!this._cbs[eventName]) {
                this._cbs[eventName] = [];
            }
            this._cbs[eventName].push(callback);

            return function () {
                this.removeEventListener(eventName, callback);
            }.bind(this);
        },
        removeEventListener: function removeEventListener(eventName, callback) {
            if (!callback) {
                this._cbs[eventName] = null;
            } else if (this._cbs[eventName]) {
                var i = 0,
                    len = this._cbs[eventName].length;
                while (i < len) {
                    if (this._cbs[eventName][i] === callback) {
                        this._cbs[eventName].splice(i, 1);
                        i -= 1;
                        len -= 1;
                    }
                    i += 1;
                }
                if (!this._cbs[eventName].length) {
                    this._cbs[eventName] = null;
                }
            }
        }
    };
    var createTypedArray = function () {
        function createRegularArray(type, len) {
            var i = 0,
                arr = [],
                value;
            switch (type) {
                case 'int16':
                case 'uint8c':
                    value = 1;
                    break;
                default:
                    value = 1.1;
                    break;
            }
            for (i = 0; i < len; i += 1) {
                arr.push(value);
            }
            return arr;
        }
        function createTypedArray(type, len) {
            if (type === 'float32') {
                return new Float32Array(len);
            } else if (type === 'int16') {
                return new Int16Array(len);
            } else if (type === 'uint8c') {
                return new Uint8ClampedArray(len);
            }
        }
        if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {
            return createTypedArray;
        } else {
            return createRegularArray;
        }
    }();

    function createSizedArray(len) {
        return Array.apply(null, { length: len });
    }
    function createNS(type) {
        //return {appendChild:function(){},setAttribute:function(){},style:{}}
        return document.createElementNS(svgNS, type);
    }
    function createTag(type) {
        //return {appendChild:function(){},setAttribute:function(){},style:{}}
        return document.createElement(type);
    }
    function DynamicPropertyContainer() {};
    DynamicPropertyContainer.prototype = {
        addDynamicProperty: function addDynamicProperty(prop) {
            if (this.dynamicProperties.indexOf(prop) === -1) {
                this.dynamicProperties.push(prop);
                this.container.addDynamicProperty(this);
                this._isAnimated = true;
            }
        },
        iterateDynamicProperties: function iterateDynamicProperties() {
            this._mdf = false;
            var i,
                len = this.dynamicProperties.length;
            for (i = 0; i < len; i += 1) {
                this.dynamicProperties[i].getValue();
                if (this.dynamicProperties[i]._mdf) {
                    this._mdf = true;
                }
            }
        },
        initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {
            this.container = container;
            this.dynamicProperties = [];
            this._mdf = false;
            this._isAnimated = false;
        }
    };
    var getBlendMode = function () {

        var blendModeEnums = {
            0: 'source-over',
            1: 'multiply',
            2: 'screen',
            3: 'overlay',
            4: 'darken',
            5: 'lighten',
            6: 'color-dodge',
            7: 'color-burn',
            8: 'hard-light',
            9: 'soft-light',
            10: 'difference',
            11: 'exclusion',
            12: 'hue',
            13: 'saturation',
            14: 'color',
            15: 'luminosity'
        };

        return function (mode) {
            return blendModeEnums[mode] || '';
        };
    }();
    /*!
     Transformation Matrix v2.0
     (c) Epistemex 2014-2015
     www.epistemex.com
     By Ken Fyrstenberg
     Contributions by leeoniya.
     License: MIT, header required.
     */

    /**
     * 2D transformation matrix object initialized with identity matrix.
     *
     * The matrix can synchronize a canvas context by supplying the context
     * as an argument, or later apply current absolute transform to an
     * existing context.
     *
     * All values are handled as floating point values.
     *
     * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
     * @prop {number} a - scale x
     * @prop {number} b - shear y
     * @prop {number} c - shear x
     * @prop {number} d - scale y
     * @prop {number} e - translate x
     * @prop {number} f - translate y
     * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
     * @constructor
     */

    var Matrix = function () {

        var _cos = Math.cos;
        var _sin = Math.sin;
        var _tan = Math.tan;
        var _rnd = Math.round;

        function reset() {
            this.props[0] = 1;
            this.props[1] = 0;
            this.props[2] = 0;
            this.props[3] = 0;
            this.props[4] = 0;
            this.props[5] = 1;
            this.props[6] = 0;
            this.props[7] = 0;
            this.props[8] = 0;
            this.props[9] = 0;
            this.props[10] = 1;
            this.props[11] = 0;
            this.props[12] = 0;
            this.props[13] = 0;
            this.props[14] = 0;
            this.props[15] = 1;
            return this;
        }

        function rotate(angle) {
            if (angle === 0) {
                return this;
            }
            var mCos = _cos(angle);
            var mSin = _sin(angle);
            return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }

        function rotateX(angle) {
            if (angle === 0) {
                return this;
            }
            var mCos = _cos(angle);
            var mSin = _sin(angle);
            return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
        }

        function rotateY(angle) {
            if (angle === 0) {
                return this;
            }
            var mCos = _cos(angle);
            var mSin = _sin(angle);
            return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
        }

        function rotateZ(angle) {
            if (angle === 0) {
                return this;
            }
            var mCos = _cos(angle);
            var mSin = _sin(angle);
            return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }

        function shear(sx, sy) {
            return this._t(1, sy, sx, 1, 0, 0);
        }

        function skew(ax, ay) {
            return this.shear(_tan(ax), _tan(ay));
        }

        function skewFromAxis(ax, angle) {
            var mCos = _cos(angle);
            var mSin = _sin(angle);
            return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
            //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
        }

        function scale(sx, sy, sz) {
            if (!sz && sz !== 0) {
                sz = 1;
            }
            if (sx === 1 && sy === 1 && sz === 1) {
                return this;
            }
            return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
        }

        function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
            this.props[0] = a;
            this.props[1] = b;
            this.props[2] = c;
            this.props[3] = d;
            this.props[4] = e;
            this.props[5] = f;
            this.props[6] = g;
            this.props[7] = h;
            this.props[8] = i;
            this.props[9] = j;
            this.props[10] = k;
            this.props[11] = l;
            this.props[12] = m;
            this.props[13] = n;
            this.props[14] = o;
            this.props[15] = p;
            return this;
        }

        function translate(tx, ty, tz) {
            tz = tz || 0;
            if (tx !== 0 || ty !== 0 || tz !== 0) {
                return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
            }
            return this;
        }

        function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {

            var _p = this.props;

            if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
                //NOTE: commenting this condition because TurboFan deoptimizes code when present
                //if(m2 !== 0 || n2 !== 0 || o2 !== 0){
                _p[12] = _p[12] * a2 + _p[15] * m2;
                _p[13] = _p[13] * f2 + _p[15] * n2;
                _p[14] = _p[14] * k2 + _p[15] * o2;
                _p[15] = _p[15] * p2;
                //}
                this._identityCalculated = false;
                return this;
            }

            var a1 = _p[0];
            var b1 = _p[1];
            var c1 = _p[2];
            var d1 = _p[3];
            var e1 = _p[4];
            var f1 = _p[5];
            var g1 = _p[6];
            var h1 = _p[7];
            var i1 = _p[8];
            var j1 = _p[9];
            var k1 = _p[10];
            var l1 = _p[11];
            var m1 = _p[12];
            var n1 = _p[13];
            var o1 = _p[14];
            var p1 = _p[15];

            /* matrix order (canvas compatible):
             * ace
             * bdf
             * 001
             */
            _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
            _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
            _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
            _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;

            _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
            _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
            _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
            _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;

            _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
            _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
            _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
            _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;

            _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
            _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
            _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
            _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;

            this._identityCalculated = false;
            return this;
        }

        function isIdentity() {
            if (!this._identityCalculated) {
                this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
                this._identityCalculated = true;
            }
            return this._identity;
        }

        function equals(matr) {
            var i = 0;
            while (i < 16) {
                if (matr.props[i] !== this.props[i]) {
                    return false;
                }
                i += 1;
            }
            return true;
        }

        function clone(matr) {
            var i;
            for (i = 0; i < 16; i += 1) {
                matr.props[i] = this.props[i];
            }
        }

        function cloneFromProps(props) {
            var i;
            for (i = 0; i < 16; i += 1) {
                this.props[i] = props[i];
            }
        }

        function applyToPoint(x, y, z) {

            return {
                x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
                y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
                z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
            };
            /*return {
             x: x * me.a + y * me.c + me.e,
             y: x * me.b + y * me.d + me.f
             };*/
        }
        function applyToX(x, y, z) {
            return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
        }
        function applyToY(x, y, z) {
            return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
        }
        function applyToZ(x, y, z) {
            return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
        }

        function getInverseMatrix() {
            var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
            var a = this.props[5] / determinant;
            var b = -this.props[1] / determinant;
            var c = -this.props[4] / determinant;
            var d = this.props[0] / determinant;
            var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;
            var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;
            var inverseMatrix = new Matrix();
            inverseMatrix.props[0] = a;
            inverseMatrix.props[1] = b;
            inverseMatrix.props[4] = c;
            inverseMatrix.props[5] = d;
            inverseMatrix.props[12] = e;
            inverseMatrix.props[13] = f;
            return inverseMatrix;
        }

        function inversePoint(pt) {
            var inverseMatrix = this.getInverseMatrix();
            return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);
        }

        function inversePoints(pts) {
            var i,
                len = pts.length,
                retPts = [];
            for (i = 0; i < len; i += 1) {
                retPts[i] = inversePoint(pts[i]);
            }
            return retPts;
        }

        function applyToTriplePoints(pt1, pt2, pt3) {
            var arr = createTypedArray('float32', 6);
            if (this.isIdentity()) {
                arr[0] = pt1[0];
                arr[1] = pt1[1];
                arr[2] = pt2[0];
                arr[3] = pt2[1];
                arr[4] = pt3[0];
                arr[5] = pt3[1];
            } else {
                var p0 = this.props[0],
                    p1 = this.props[1],
                    p4 = this.props[4],
                    p5 = this.props[5],
                    p12 = this.props[12],
                    p13 = this.props[13];
                arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
                arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
                arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
                arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
                arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
                arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
            }
            return arr;
        }

        function applyToPointArray(x, y, z) {
            var arr;
            if (this.isIdentity()) {
                arr = [x, y, z];
            } else {
                arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];
            }
            return arr;
        }

        function applyToPointStringified(x, y) {
            if (this.isIdentity()) {
                return x + ',' + y;
            }
            var _p = this.props;
            return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;
        }

        function toCSS() {
            //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
            /*if(this.isIdentity()) {
                return '';
            }*/
            var i = 0;
            var props = this.props;
            var cssValue = 'matrix3d(';
            var v = 10000;
            while (i < 16) {
                cssValue += _rnd(props[i] * v) / v;
                cssValue += i === 15 ? ')' : ',';
                i += 1;
            }
            return cssValue;
        }

        function roundMatrixProperty(val) {
            var v = 10000;
            if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {
                return _rnd(val * v) / v;
            }
            return val;
        }

        function to2dCSS() {
            //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
            /*if(this.isIdentity()) {
                return '';
            }*/
            var props = this.props;
            var _a = roundMatrixProperty(props[0]);
            var _b = roundMatrixProperty(props[1]);
            var _c = roundMatrixProperty(props[4]);
            var _d = roundMatrixProperty(props[5]);
            var _e = roundMatrixProperty(props[12]);
            var _f = roundMatrixProperty(props[13]);
            return "matrix(" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ")";
        }

        return function () {
            this.reset = reset;
            this.rotate = rotate;
            this.rotateX = rotateX;
            this.rotateY = rotateY;
            this.rotateZ = rotateZ;
            this.skew = skew;
            this.skewFromAxis = skewFromAxis;
            this.shear = shear;
            this.scale = scale;
            this.setTransform = setTransform;
            this.translate = translate;
            this.transform = transform;
            this.applyToPoint = applyToPoint;
            this.applyToX = applyToX;
            this.applyToY = applyToY;
            this.applyToZ = applyToZ;
            this.applyToPointArray = applyToPointArray;
            this.applyToTriplePoints = applyToTriplePoints;
            this.applyToPointStringified = applyToPointStringified;
            this.toCSS = toCSS;
            this.to2dCSS = to2dCSS;
            this.clone = clone;
            this.cloneFromProps = cloneFromProps;
            this.equals = equals;
            this.inversePoints = inversePoints;
            this.inversePoint = inversePoint;
            this.getInverseMatrix = getInverseMatrix;
            this._t = this.transform;
            this.isIdentity = isIdentity;
            this._identity = true;
            this._identityCalculated = false;

            this.props = createTypedArray('float32', 16);
            this.reset();
        };
    }();

    /*
     Copyright 2014 David Bau.
    
     Permission is hereby granted, free of charge, to any person obtaining
     a copy of this software and associated documentation files (the
     "Software"), to deal in the Software without restriction, including
     without limitation the rights to use, copy, modify, merge, publish,
     distribute, sublicense, and/or sell copies of the Software, and to
     permit persons to whom the Software is furnished to do so, subject to
     the following conditions:
    
     The above copyright notice and this permission notice shall be
     included in all copies or substantial portions of the Software.
    
     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    
     */

    (function (pool, math) {
        //
        // The following constants are related to IEEE 754 limits.
        //
        var global = this,
            width = 256,
            // each RC4 output is 0 <= x < 256
        chunks = 6,
            // at least six RC4 outputs for each double
        digits = 52,
            // there are 52 significant digits in a double
        rngname = 'random',
            // rngname: name for Math.random and Math.seedrandom
        startdenom = math.pow(width, chunks),
            significance = math.pow(2, digits),
            overflow = significance * 2,
            mask = width - 1,
            nodecrypto; // node.js crypto module, initialized at the bottom.

        //
        // seedrandom()
        // This is the seedrandom function described above.
        //
        function seedrandom(seed, options, callback) {
            var key = [];
            options = options === true ? { entropy: true } : options || {};

            // Flatten the seed string or build one from local entropy if needed.
            var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key);

            // Use the seed to initialize an ARC4 generator.
            var arc4 = new ARC4(key);

            // This function returns a random double in [0, 1) that contains
            // randomness in every bit of the mantissa of the IEEE 754 value.
            var prng = function prng() {
                var n = arc4.g(chunks),
                    // Start with a numerator n < 2 ^ 48
                d = startdenom,
                    //   and denominator d = 2 ^ 48.
                x = 0; //   and no 'extra last byte'.
                while (n < significance) {
                    // Fill up all significant digits by
                    n = (n + x) * width; //   shifting numerator and
                    d *= width; //   denominator and generating a
                    x = arc4.g(1); //   new least-significant-byte.
                }
                while (n >= overflow) {
                    // To avoid rounding up, before adding
                    n /= 2; //   last byte, shift everything
                    d /= 2; //   right using integer math until
                    x >>>= 1; //   we have exactly the desired bits.
                }
                return (n + x) / d; // Form the number within [0, 1).
            };

            prng.int32 = function () {
                return arc4.g(4) | 0;
            };
            prng.quick = function () {
                return arc4.g(4) / 0x100000000;
            };
            prng.double = prng;

            // Mix the randomness into accumulated entropy.
            mixkey(tostring(arc4.S), pool);

            // Calling convention: what to return as a function of prng, seed, is_math.
            return (options.pass || callback || function (prng, seed, is_math_call, state) {
                if (state) {
                    // Load the arc4 state from the given state if it has an S array.
                    if (state.S) {
                        copy(state, arc4);
                    }
                    // Only provide the .state method if requested via options.state.
                    prng.state = function () {
                        return copy(arc4, {});
                    };
                }

                // If called as a method of Math (Math.seedrandom()), mutate
                // Math.random because that is how seedrandom.js has worked since v1.0.
                if (is_math_call) {
                    math[rngname] = prng;return seed;
                }

                // Otherwise, it is a newer calling convention, so return the
                // prng directly.
                else return prng;
            })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);
        }
        math['seed' + rngname] = seedrandom;

        //
        // ARC4
        //
        // An ARC4 implementation.  The constructor takes a key in the form of
        // an array of at most (width) integers that should be 0 <= x < (width).
        //
        // The g(count) method returns a pseudorandom integer that concatenates
        // the next (count) outputs from ARC4.  Its return value is a number x
        // that is in the range 0 <= x < (width ^ count).
        //
        function ARC4(key) {
            var t,
                keylen = key.length,
                me = this,
                i = 0,
                j = me.i = me.j = 0,
                s = me.S = [];

            // The empty key [] is treated as [0].
            if (!keylen) {
                key = [keylen++];
            }

            // Set up S using the standard key scheduling algorithm.
            while (i < width) {
                s[i] = i++;
            }
            for (i = 0; i < width; i++) {
                s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];
                s[j] = t;
            }

            // The "g" method returns the next (count) outputs as one number.
            me.g = function (count) {
                // Using instance members instead of closure state nearly doubles speed.
                var t,
                    r = 0,
                    i = me.i,
                    j = me.j,
                    s = me.S;
                while (count--) {
                    t = s[i = mask & i + 1];
                    r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];
                }
                me.i = i;me.j = j;
                return r;
                // For robust unpredictability, the function call below automatically
                // discards an initial batch of values.  This is called RC4-drop[256].
                // See http://google.com/search?q=rsa+fluhrer+response&btnI
            };
        }

        //
        // copy()
        // Copies internal state of ARC4 to or from a plain object.
        //
        function copy(f, t) {
            t.i = f.i;
            t.j = f.j;
            t.S = f.S.slice();
            return t;
        }

        //
        // flatten()
        // Converts an object tree to nested arrays of strings.
        //
        function flatten(obj, depth) {
            var result = [],
                typ = typeof obj,
                prop;
            if (depth && typ == 'object') {
                for (prop in obj) {
                    try {
                        result.push(flatten(obj[prop], depth - 1));
                    } catch (e) {}
                }
            }
            return result.length ? result : typ == 'string' ? obj : obj + '\0';
        }

        //
        // mixkey()
        // Mixes a string seed into a key that is an array of integers, and
        // returns a shortened string seed that is equivalent to the result key.
        //
        function mixkey(seed, key) {
            var stringseed = seed + '',
                smear,
                j = 0;
            while (j < stringseed.length) {
                key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
            }
            return tostring(key);
        }

        //
        // autoseed()
        // Returns an object for autoseeding, using window.crypto and Node crypto
        // module if available.
        //
        function autoseed() {
            try {
                if (nodecrypto) {
                    return tostring(nodecrypto.randomBytes(width));
                }
                var out = new Uint8Array(width);
                (global.crypto || global.msCrypto).getRandomValues(out);
                return tostring(out);
            } catch (e) {
                var browser = global.navigator,
                    plugins = browser && browser.plugins;
                return [+new Date(), global, plugins, global.screen, tostring(pool)];
            }
        }

        //
        // tostring()
        // Converts an array of charcodes to a string
        //
        function tostring(a) {
            return String.fromCharCode.apply(0, a);
        }

        //
        // When seedrandom.js is loaded, we immediately mix a few bits
        // from the built-in RNG into the entropy pool.  Because we do
        // not want to interfere with deterministic PRNG state later,
        // seedrandom will not call math.random on its own again after
        // initialization.
        //
        mixkey(math.random(), pool);

        //
        // Nodejs and AMD support: export the implementation as a module using
        // either convention.
        //

        // End anonymous scope, and pass initial values.
    })([], // pool: entropy pool starts empty
    BMMath // math: package containing random, pow, and seedrandom
    );
    var BezierFactory = function () {
        /**
         * BezierEasing - use bezier curve for transition easing function
         * by Gaëtan Renaudeau 2014 - 2015 – MIT License
         *
         * Credits: is based on Firefox's nsSMILKeySpline.cpp
         * Usage:
         * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
         * spline.get(x) => returns the easing value | x must be in [0, 1] range
         *
         */

        var ob = {};
        ob.getBezierEasing = getBezierEasing;
        var beziers = {};

        function getBezierEasing(a, b, c, d, nm) {
            var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\./g, 'p');
            if (beziers[str]) {
                return beziers[str];
            }
            var bezEasing = new BezierEasing([a, b, c, d]);
            beziers[str] = bezEasing;
            return bezEasing;
        }

        // These values are established by empiricism with tests (tradeoff: performance VS precision)
        var NEWTON_ITERATIONS = 4;
        var NEWTON_MIN_SLOPE = 0.001;
        var SUBDIVISION_PRECISION = 0.0000001;
        var SUBDIVISION_MAX_ITERATIONS = 10;

        var kSplineTableSize = 11;
        var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

        var float32ArraySupported = typeof Float32Array === "function";

        function A(aA1, aA2) {
            return 1.0 - 3.0 * aA2 + 3.0 * aA1;
        }
        function B(aA1, aA2) {
            return 3.0 * aA2 - 6.0 * aA1;
        }
        function C(aA1) {
            return 3.0 * aA1;
        }

        // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
        function calcBezier(aT, aA1, aA2) {
            return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
        }

        // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
        function getSlope(aT, aA1, aA2) {
            return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
        }

        function binarySubdivide(aX, aA, aB, mX1, mX2) {
            var currentX,
                currentT,
                i = 0;
            do {
                currentT = aA + (aB - aA) / 2.0;
                currentX = calcBezier(currentT, mX1, mX2) - aX;
                if (currentX > 0.0) {
                    aB = currentT;
                } else {
                    aA = currentT;
                }
            } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
            return currentT;
        }

        function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
            for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
                var currentSlope = getSlope(aGuessT, mX1, mX2);
                if (currentSlope === 0.0) return aGuessT;
                var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
                aGuessT -= currentX / currentSlope;
            }
            return aGuessT;
        }

        /**
         * points is an array of [ mX1, mY1, mX2, mY2 ]
         */
        function BezierEasing(points) {
            this._p = points;
            this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
            this._precomputed = false;

            this.get = this.get.bind(this);
        }

        BezierEasing.prototype = {

            get: function get(x) {
                var mX1 = this._p[0],
                    mY1 = this._p[1],
                    mX2 = this._p[2],
                    mY2 = this._p[3];
                if (!this._precomputed) this._precompute();
                if (mX1 === mY1 && mX2 === mY2) return x; // linear
                // Because JavaScript number are imprecise, we should guarantee the extremes are right.
                if (x === 0) return 0;
                if (x === 1) return 1;
                return calcBezier(this._getTForX(x), mY1, mY2);
            },

            // Private part

            _precompute: function _precompute() {
                var mX1 = this._p[0],
                    mY1 = this._p[1],
                    mX2 = this._p[2],
                    mY2 = this._p[3];
                this._precomputed = true;
                if (mX1 !== mY1 || mX2 !== mY2) this._calcSampleValues();
            },

            _calcSampleValues: function _calcSampleValues() {
                var mX1 = this._p[0],
                    mX2 = this._p[2];
                for (var i = 0; i < kSplineTableSize; ++i) {
                    this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
                }
            },

            /**
             * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
             */
            _getTForX: function _getTForX(aX) {
                var mX1 = this._p[0],
                    mX2 = this._p[2],
                    mSampleValues = this._mSampleValues;

                var intervalStart = 0.0;
                var currentSample = 1;
                var lastSample = kSplineTableSize - 1;

                for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
                    intervalStart += kSampleStepSize;
                }
                --currentSample;

                // Interpolate to provide an initial guess for t
                var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);
                var guessForT = intervalStart + dist * kSampleStepSize;

                var initialSlope = getSlope(guessForT, mX1, mX2);
                if (initialSlope >= NEWTON_MIN_SLOPE) {
                    return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
                } else if (initialSlope === 0.0) {
                    return guessForT;
                } else {
                    return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
                }
            }
        };

        return ob;
    }();
    (function () {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
        }
        if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = setTimeout(function () {
                callback(currTime + timeToCall);
            }, timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
        if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
        };
    })();

    function extendPrototype(sources, destination) {
        var i,
            len = sources.length,
            sourcePrototype;
        for (i = 0; i < len; i += 1) {
            sourcePrototype = sources[i].prototype;
            for (var attr in sourcePrototype) {
                if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];
            }
        }
    }

    function getDescriptor(object, prop) {
        return Object.getOwnPropertyDescriptor(object, prop);
    }

    function createProxyFunction(prototype) {
        function ProxyFunction() {}
        ProxyFunction.prototype = prototype;
        return ProxyFunction;
    }
    function bezFunction() {

        var easingFunctions = [];
        var math = Math;

        function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
            var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
            return det1 > -0.001 && det1 < 0.001;
        }

        function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
            if (z1 === 0 && z2 === 0 && z3 === 0) {
                return pointOnLine2D(x1, y1, x2, y2, x3, y3);
            }
            var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));
            var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));
            var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));
            var diffDist;
            if (dist1 > dist2) {
                if (dist1 > dist3) {
                    diffDist = dist1 - dist2 - dist3;
                } else {
                    diffDist = dist3 - dist2 - dist1;
                }
            } else if (dist3 > dist2) {
                diffDist = dist3 - dist2 - dist1;
            } else {
                diffDist = dist2 - dist1 - dist3;
            }
            return diffDist > -0.0001 && diffDist < 0.0001;
        }

        var getBezierLength = function () {

            return function (pt1, pt2, pt3, pt4) {
                var curveSegments = defaultCurveSegments;
                var k;
                var i, len;
                var ptCoord,
                    perc,
                    addedLength = 0;
                var ptDistance;
                var point = [],
                    lastPoint = [];
                var lengthData = bezier_length_pool.newElement();
                len = pt3.length;
                for (k = 0; k < curveSegments; k += 1) {
                    perc = k / (curveSegments - 1);
                    ptDistance = 0;
                    for (i = 0; i < len; i += 1) {
                        ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bm_pow(perc, 2) * pt4[i] + bm_pow(perc, 3) * pt2[i];
                        point[i] = ptCoord;
                        if (lastPoint[i] !== null) {
                            ptDistance += bm_pow(point[i] - lastPoint[i], 2);
                        }
                        lastPoint[i] = point[i];
                    }
                    if (ptDistance) {
                        ptDistance = bm_sqrt(ptDistance);
                        addedLength += ptDistance;
                    }
                    lengthData.percents[k] = perc;
                    lengthData.lengths[k] = addedLength;
                }
                lengthData.addedLength = addedLength;
                return lengthData;
            };
        }();

        function getSegmentsLength(shapeData) {
            var segmentsLength = segments_length_pool.newElement();
            var closed = shapeData.c;
            var pathV = shapeData.v;
            var pathO = shapeData.o;
            var pathI = shapeData.i;
            var i,
                len = shapeData._length;
            var lengths = segmentsLength.lengths;
            var totalLength = 0;
            for (i = 0; i < len - 1; i += 1) {
                lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);
                totalLength += lengths[i].addedLength;
            }
            if (closed && len) {
                lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);
                totalLength += lengths[i].addedLength;
            }
            segmentsLength.totalLength = totalLength;
            return segmentsLength;
        }

        function BezierData(length) {
            this.segmentLength = 0;
            this.points = new Array(length);
        }

        function PointData(partial, point) {
            this.partialLength = partial;
            this.point = point;
        }

        var buildBezierData = function () {

            var storedData = {};

            return function (pt1, pt2, pt3, pt4) {
                var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\./g, 'p');
                if (!storedData[bezierName]) {
                    var curveSegments = defaultCurveSegments;
                    var k, i, len;
                    var ptCoord,
                        perc,
                        addedLength = 0;
                    var ptDistance;
                    var point,
                        lastPoint = null;
                    if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {
                        curveSegments = 2;
                    }
                    var bezierData = new BezierData(curveSegments);
                    len = pt3.length;
                    for (k = 0; k < curveSegments; k += 1) {
                        point = createSizedArray(len);
                        perc = k / (curveSegments - 1);
                        ptDistance = 0;
                        for (i = 0; i < len; i += 1) {
                            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bm_pow(perc, 2) * (pt2[i] + pt4[i]) + bm_pow(perc, 3) * pt2[i];
                            point[i] = ptCoord;
                            if (lastPoint !== null) {
                                ptDistance += bm_pow(point[i] - lastPoint[i], 2);
                            }
                        }
                        ptDistance = bm_sqrt(ptDistance);
                        addedLength += ptDistance;
                        bezierData.points[k] = new PointData(ptDistance, point);
                        lastPoint = point;
                    }
                    bezierData.segmentLength = addedLength;
                    storedData[bezierName] = bezierData;
                }
                return storedData[bezierName];
            };
        }();

        function getDistancePerc(perc, bezierData) {
            var percents = bezierData.percents;
            var lengths = bezierData.lengths;
            var len = percents.length;
            var initPos = bm_floor((len - 1) * perc);
            var lengthPos = perc * bezierData.addedLength;
            var lPerc = 0;
            if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {
                return percents[initPos];
            } else {
                var dir = lengths[initPos] > lengthPos ? -1 : 1;
                var flag = true;
                while (flag) {
                    if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {
                        lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);
                        flag = false;
                    } else {
                        initPos += dir;
                    }
                    if (initPos < 0 || initPos >= len - 1) {
                        //FIX for TypedArrays that don't store floating point values with enough accuracy
                        if (initPos === len - 1) {
                            return percents[initPos];
                        }
                        flag = false;
                    }
                }
                return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;
            }
        }

        function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
            var t1 = getDistancePerc(percent, bezierData);
            var u0 = 1;
            var u1 = 1 - t1;
            var ptX = Math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;
            var ptY = Math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;
            return [ptX, ptY];
        }

        function getSegmentArray() {}

        var bezier_segment_points = createTypedArray('float32', 8);

        function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {

            startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;
            var t0 = getDistancePerc(startPerc, bezierData);
            endPerc = endPerc > 1 ? 1 : endPerc;
            var t1 = getDistancePerc(endPerc, bezierData);
            var i,
                len = pt1.length;
            var u0 = 1 - t0;
            var u1 = 1 - t1;
            var u0u0u0 = u0 * u0 * u0;
            var t0u0u0_3 = t0 * u0 * u0 * 3;
            var t0t0u0_3 = t0 * t0 * u0 * 3;
            var t0t0t0 = t0 * t0 * t0;
            //
            var u0u0u1 = u0 * u0 * u1;
            var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;
            var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;
            var t0t0t1 = t0 * t0 * t1;
            //
            var u0u1u1 = u0 * u1 * u1;
            var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;
            var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;
            var t0t1t1 = t0 * t1 * t1;
            //
            var u1u1u1 = u1 * u1 * u1;
            var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;
            var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;
            var t1t1t1 = t1 * t1 * t1;
            for (i = 0; i < len; i += 1) {
                bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;
                bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;
                bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;
                bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;
            }

            return bezier_segment_points;
        }

        return {
            getSegmentsLength: getSegmentsLength,
            getNewSegment: getNewSegment,
            getPointInSegment: getPointInSegment,
            buildBezierData: buildBezierData,
            pointOnLine2D: pointOnLine2D,
            pointOnLine3D: pointOnLine3D
        };
    }

    var bez = bezFunction();
    function dataFunctionManager() {

        //var tCanvasHelper = createTag('canvas').getContext('2d');

        function completeLayers(layers, comps, fontManager) {
            var layerData;
            var animArray, lastFrame;
            var i,
                len = layers.length;
            var j, jLen, k, kLen;
            for (i = 0; i < len; i += 1) {
                layerData = layers[i];
                if (!('ks' in layerData) || layerData.completed) {
                    continue;
                }
                layerData.completed = true;
                if (layerData.tt) {
                    layers[i - 1].td = layerData.tt;
                }
                animArray = [];
                lastFrame = -1;
                if (layerData.hasMask) {
                    var maskProps = layerData.masksProperties;
                    jLen = maskProps.length;
                    for (j = 0; j < jLen; j += 1) {
                        if (maskProps[j].pt.k.i) {
                            convertPathsToAbsoluteValues(maskProps[j].pt.k);
                        } else {
                            kLen = maskProps[j].pt.k.length;
                            for (k = 0; k < kLen; k += 1) {
                                if (maskProps[j].pt.k[k].s) {
                                    convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);
                                }
                                if (maskProps[j].pt.k[k].e) {
                                    convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);
                                }
                            }
                        }
                    }
                }
                if (layerData.ty === 0) {
                    layerData.layers = findCompLayers(layerData.refId, comps);
                    completeLayers(layerData.layers, comps, fontManager);
                } else if (layerData.ty === 4) {
                    completeShapes(layerData.shapes);
                } else if (layerData.ty == 5) {
                    completeText(layerData, fontManager);
                }
            }
        }

        function findCompLayers(id, comps) {
            var i = 0,
                len = comps.length;
            while (i < len) {
                if (comps[i].id === id) {
                    if (!comps[i].layers.__used) {
                        comps[i].layers.__used = true;
                        return comps[i].layers;
                    }
                    return JSON.parse(JSON.stringify(comps[i].layers));
                }
                i += 1;
            }
        }

        function completeShapes(arr) {
            var i,
                len = arr.length;
            var j, jLen;
            var hasPaths = false;
            for (i = len - 1; i >= 0; i -= 1) {
                if (arr[i].ty == 'sh') {
                    if (arr[i].ks.k.i) {
                        convertPathsToAbsoluteValues(arr[i].ks.k);
                    } else {
                        jLen = arr[i].ks.k.length;
                        for (j = 0; j < jLen; j += 1) {
                            if (arr[i].ks.k[j].s) {
                                convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                            }
                            if (arr[i].ks.k[j].e) {
                                convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                            }
                        }
                    }
                    hasPaths = true;
                } else if (arr[i].ty == 'gr') {
                    completeShapes(arr[i].it);
                }
            }
            /*if(hasPaths){
                //mx: distance
                //ss: sensitivity
                //dc: decay
                arr.splice(arr.length-1,0,{
                    "ty": "ms",
                    "mx":20,
                    "ss":10,
                     "dc":0.001,
                    "maxDist":200
                });
            }*/
        }

        function convertPathsToAbsoluteValues(path) {
            var i,
                len = path.i.length;
            for (i = 0; i < len; i += 1) {
                path.i[i][0] += path.v[i][0];
                path.i[i][1] += path.v[i][1];
                path.o[i][0] += path.v[i][0];
                path.o[i][1] += path.v[i][1];
            }
        }

        function checkVersion(minimum, animVersionString) {
            var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];
            if (minimum[0] > animVersion[0]) {
                return true;
            } else if (animVersion[0] > minimum[0]) {
                return false;
            }
            if (minimum[1] > animVersion[1]) {
                return true;
            } else if (animVersion[1] > minimum[1]) {
                return false;
            }
            if (minimum[2] > animVersion[2]) {
                return true;
            } else if (animVersion[2] > minimum[2]) {
                return false;
            }
        }

        var checkText = function () {
            var minimumVersion = [4, 4, 14];

            function updateTextLayer(textLayer) {
                var documentData = textLayer.t.d;
                textLayer.t.d = {
                    k: [{
                        s: documentData,
                        t: 0
                    }]
                };
            }

            function iterateLayers(layers) {
                var i,
                    len = layers.length;
                for (i = 0; i < len; i += 1) {
                    if (layers[i].ty === 5) {
                        updateTextLayer(layers[i]);
                    }
                }
            }

            return function (animationData) {
                if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                        var i,
                            len = animationData.assets.length;
                        for (i = 0; i < len; i += 1) {
                            if (animationData.assets[i].layers) {
                                iterateLayers(animationData.assets[i].layers);
                            }
                        }
                    }
                }
            };
        }();

        var checkChars = function () {
            var minimumVersion = [4, 7, 99];
            return function (animationData) {
                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {
                    var i,
                        len = animationData.chars.length,
                        j,
                        jLen,
                        k,
                        kLen;
                    var pathData, paths;
                    for (i = 0; i < len; i += 1) {
                        if (animationData.chars[i].data && animationData.chars[i].data.shapes) {
                            paths = animationData.chars[i].data.shapes[0].it;
                            jLen = paths.length;

                            for (j = 0; j < jLen; j += 1) {
                                pathData = paths[j].ks.k;
                                if (!pathData.__converted) {
                                    convertPathsToAbsoluteValues(paths[j].ks.k);
                                    pathData.__converted = true;
                                }
                            }
                        }
                    }
                }
            };
        }();

        var checkColors = function () {
            var minimumVersion = [4, 1, 9];

            function iterateShapes(shapes) {
                var i,
                    len = shapes.length;
                var j, jLen;
                for (i = 0; i < len; i += 1) {
                    if (shapes[i].ty === 'gr') {
                        iterateShapes(shapes[i].it);
                    } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {
                        if (shapes[i].c.k && shapes[i].c.k[0].i) {
                            jLen = shapes[i].c.k.length;
                            for (j = 0; j < jLen; j += 1) {
                                if (shapes[i].c.k[j].s) {
                                    shapes[i].c.k[j].s[0] /= 255;
                                    shapes[i].c.k[j].s[1] /= 255;
                                    shapes[i].c.k[j].s[2] /= 255;
                                    shapes[i].c.k[j].s[3] /= 255;
                                }
                                if (shapes[i].c.k[j].e) {
                                    shapes[i].c.k[j].e[0] /= 255;
                                    shapes[i].c.k[j].e[1] /= 255;
                                    shapes[i].c.k[j].e[2] /= 255;
                                    shapes[i].c.k[j].e[3] /= 255;
                                }
                            }
                        } else {
                            shapes[i].c.k[0] /= 255;
                            shapes[i].c.k[1] /= 255;
                            shapes[i].c.k[2] /= 255;
                            shapes[i].c.k[3] /= 255;
                        }
                    }
                }
            }

            function iterateLayers(layers) {
                var i,
                    len = layers.length;
                for (i = 0; i < len; i += 1) {
                    if (layers[i].ty === 4) {
                        iterateShapes(layers[i].shapes);
                    }
                }
            }

            return function (animationData) {
                if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                        var i,
                            len = animationData.assets.length;
                        for (i = 0; i < len; i += 1) {
                            if (animationData.assets[i].layers) {
                                iterateLayers(animationData.assets[i].layers);
                            }
                        }
                    }
                }
            };
        }();

        var checkShapes = function () {
            var minimumVersion = [4, 4, 18];

            function completeShapes(arr) {
                var i,
                    len = arr.length;
                var j, jLen;
                var hasPaths = false;
                for (i = len - 1; i >= 0; i -= 1) {
                    if (arr[i].ty == 'sh') {
                        if (arr[i].ks.k.i) {
                            arr[i].ks.k.c = arr[i].closed;
                        } else {
                            jLen = arr[i].ks.k.length;
                            for (j = 0; j < jLen; j += 1) {
                                if (arr[i].ks.k[j].s) {
                                    arr[i].ks.k[j].s[0].c = arr[i].closed;
                                }
                                if (arr[i].ks.k[j].e) {
                                    arr[i].ks.k[j].e[0].c = arr[i].closed;
                                }
                            }
                        }
                        hasPaths = true;
                    } else if (arr[i].ty == 'gr') {
                        completeShapes(arr[i].it);
                    }
                }
            }

            function iterateLayers(layers) {
                var layerData;
                var i,
                    len = layers.length;
                var j, jLen, k, kLen;
                for (i = 0; i < len; i += 1) {
                    layerData = layers[i];
                    if (layerData.hasMask) {
                        var maskProps = layerData.masksProperties;
                        jLen = maskProps.length;
                        for (j = 0; j < jLen; j += 1) {
                            if (maskProps[j].pt.k.i) {
                                maskProps[j].pt.k.c = maskProps[j].cl;
                            } else {
                                kLen = maskProps[j].pt.k.length;
                                for (k = 0; k < kLen; k += 1) {
                                    if (maskProps[j].pt.k[k].s) {
                                        maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
                                    }
                                    if (maskProps[j].pt.k[k].e) {
                                        maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
                                    }
                                }
                            }
                        }
                    }
                    if (layerData.ty === 4) {
                        completeShapes(layerData.shapes);
                    }
                }
            }

            return function (animationData) {
                if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                        var i,
                            len = animationData.assets.length;
                        for (i = 0; i < len; i += 1) {
                            if (animationData.assets[i].layers) {
                                iterateLayers(animationData.assets[i].layers);
                            }
                        }
                    }
                }
            };
        }();

        function completeData(animationData, fontManager) {
            if (animationData.__complete) {
                return;
            }
            checkColors(animationData);
            checkText(animationData);
            checkChars(animationData);
            checkShapes(animationData);
            completeLayers(animationData.layers, animationData.assets, fontManager);
            animationData.__complete = true;
            //blitAnimation(animationData, animationData.assets, fontManager);
        }

        function completeText(data, fontManager) {
            if (data.t.a.length === 0 && !('m' in data.t.p)) {
                data.singleShape = true;
            }
        }

        var moduleOb = {};
        moduleOb.completeData = completeData;
        moduleOb.checkColors = checkColors;
        moduleOb.checkChars = checkChars;
        moduleOb.checkShapes = checkShapes;
        moduleOb.completeLayers = completeLayers;

        return moduleOb;
    }

    var dataManager = dataFunctionManager();

    var FontManager = function () {

        var maxWaitingTime = 5000;
        var emptyChar = {
            w: 0,
            size: 0,
            shapes: []
        };
        var combinedCharacters = [];
        //Hindi characters
        combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);

        function trimFontOptions(font) {
            var familyArray = font.split(',');
            var i,
                len = familyArray.length;
            var enabledFamilies = [];
            for (i = 0; i < len; i += 1) {
                if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {
                    enabledFamilies.push(familyArray[i]);
                }
            }
            return enabledFamilies.join(',');
        }

        function setUpNode(font, family) {
            var parentNode = createTag('span');
            parentNode.style.fontFamily = family;
            var node = createTag('span');
            // Characters that vary significantly among different fonts
            node.innerHTML = 'giItT1WQy@!-/#';
            // Visible - so we can measure it - but not on the screen
            parentNode.style.position = 'absolute';
            parentNode.style.left = '-10000px';
            parentNode.style.top = '-10000px';
            // Large font size makes even subtle changes obvious
            parentNode.style.fontSize = '300px';
            // Reset any font properties
            parentNode.style.fontVariant = 'normal';
            parentNode.style.fontStyle = 'normal';
            parentNode.style.fontWeight = 'normal';
            parentNode.style.letterSpacing = '0';
            parentNode.appendChild(node);
            document.body.appendChild(parentNode);

            // Remember width with no applied web font
            var width = node.offsetWidth;
            node.style.fontFamily = trimFontOptions(font) + ', ' + family;
            return { node: node, w: width, parent: parentNode };
        }

        function checkLoadedFonts() {
            var i,
                len = this.fonts.length;
            var node, w;
            var loadedCount = len;
            for (i = 0; i < len; i += 1) {
                if (this.fonts[i].loaded) {
                    loadedCount -= 1;
                    continue;
                }
                if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {
                    this.fonts[i].loaded = true;
                } else {
                    node = this.fonts[i].monoCase.node;
                    w = this.fonts[i].monoCase.w;
                    if (node.offsetWidth !== w) {
                        loadedCount -= 1;
                        this.fonts[i].loaded = true;
                    } else {
                        node = this.fonts[i].sansCase.node;
                        w = this.fonts[i].sansCase.w;
                        if (node.offsetWidth !== w) {
                            loadedCount -= 1;
                            this.fonts[i].loaded = true;
                        }
                    }
                    if (this.fonts[i].loaded) {
                        this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
                        this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
                    }
                }
            }

            if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {
                setTimeout(this.checkLoadedFontsBinded, 20);
            } else {
                setTimeout(this.setIsLoadedBinded, 10);
            }
        }

        function createHelper(def, fontData) {
            var tHelper = createNS('text');
            tHelper.style.fontSize = '100px';
            //tHelper.style.fontFamily = fontData.fFamily;
            tHelper.setAttribute('font-family', fontData.fFamily);
            tHelper.setAttribute('font-style', fontData.fStyle);
            tHelper.setAttribute('font-weight', fontData.fWeight);
            tHelper.textContent = '1';
            if (fontData.fClass) {
                tHelper.style.fontFamily = 'inherit';
                tHelper.setAttribute('class', fontData.fClass);
            } else {
                tHelper.style.fontFamily = fontData.fFamily;
            }
            def.appendChild(tHelper);
            var tCanvasHelper = createTag('canvas').getContext('2d');
            tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px ' + fontData.fFamily;
            //tCanvasHelper.font = ' 100px '+ fontData.fFamily;
            return tHelper;
        }

        function addFonts(fontData, defs) {
            if (!fontData) {
                this.isLoaded = true;
                return;
            }
            if (this.chars) {
                this.isLoaded = true;
                this.fonts = fontData.list;
                return;
            }

            var fontArr = fontData.list;
            var i,
                len = fontArr.length;
            var _pendingFonts = len;
            for (i = 0; i < len; i += 1) {
                var shouldLoadFont = true;
                var loadedSelector;
                var j;
                fontArr[i].loaded = false;
                fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');
                fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');
                if (!fontArr[i].fPath) {
                    fontArr[i].loaded = true;
                    _pendingFonts -= 1;
                } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {
                    loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="' + fontArr[i].fFamily + '"], style[f-origin="3"][f-family="' + fontArr[i].fFamily + '"]');

                    if (loadedSelector.length > 0) {
                        shouldLoadFont = false;
                    }

                    if (shouldLoadFont) {
                        var s = createTag('style');
                        s.setAttribute('f-forigin', fontArr[i].fOrigin);
                        s.setAttribute('f-origin', fontArr[i].origin);
                        s.setAttribute('f-family', fontArr[i].fFamily);
                        s.type = "text/css";
                        s.innerHTML = "@font-face {" + "font-family: " + fontArr[i].fFamily + "; font-style: normal; src: url('" + fontArr[i].fPath + "');}";
                        defs.appendChild(s);
                    }
                } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {
                    loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');

                    for (j = 0; j < loadedSelector.length; j++) {
                        if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
                            // Font is already loaded
                            shouldLoadFont = false;
                        }
                    }

                    if (shouldLoadFont) {
                        var l = createTag('link');
                        l.setAttribute('f-forigin', fontArr[i].fOrigin);
                        l.setAttribute('f-origin', fontArr[i].origin);
                        l.type = "text/css";
                        l.rel = "stylesheet";
                        l.href = fontArr[i].fPath;
                        document.body.appendChild(l);
                    }
                } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {
                    loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');

                    for (j = 0; j < loadedSelector.length; j++) {
                        if (fontArr[i].fPath === loadedSelector[j].src) {
                            // Font is already loaded
                            shouldLoadFont = false;
                        }
                    }

                    if (shouldLoadFont) {
                        var sc = createTag('link');
                        sc.setAttribute('f-forigin', fontArr[i].fOrigin);
                        sc.setAttribute('f-origin', fontArr[i].origin);
                        sc.setAttribute('rel', 'stylesheet');
                        sc.setAttribute('href', fontArr[i].fPath);
                        defs.appendChild(sc);
                    }
                }
                fontArr[i].helper = createHelper(defs, fontArr[i]);
                fontArr[i].cache = {};
                this.fonts.push(fontArr[i]);
            }
            if (_pendingFonts === 0) {
                this.isLoaded = true;
            } else {
                //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
                //Adding this timeout seems to fix it
                setTimeout(this.checkLoadedFonts.bind(this), 100);
            }
        }

        function addChars(chars) {
            if (!chars) {
                return;
            }
            if (!this.chars) {
                this.chars = [];
            }
            var i,
                len = chars.length;
            var j,
                jLen = this.chars.length,
                found;
            for (i = 0; i < len; i += 1) {
                j = 0;
                found = false;
                while (j < jLen) {
                    if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {
                        found = true;
                    }
                    j += 1;
                }
                if (!found) {
                    this.chars.push(chars[i]);
                    jLen += 1;
                }
            }
        }

        function getCharData(char, style, font) {
            var i = 0,
                len = this.chars.length;
            while (i < len) {
                if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {

                    return this.chars[i];
                }
                i += 1;
            }
            if ((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {
                console.warn('Missing character from exported characters list: ', char, style, font);
            }
            return emptyChar;
        }

        function measureText(char, fontName, size) {
            var fontData = this.getFontByName(fontName);
            var index = char.charCodeAt(0);
            if (!fontData.cache[index + 1]) {
                var tHelper = fontData.helper;
                //Canvas version
                //fontData.cache[index] = tHelper.measureText(char).width / 100;
                //SVG version
                //console.log(tHelper.getBBox().width)
                if (char === ' ') {
                    tHelper.textContent = '|' + char + '|';
                    var doubleSize = tHelper.getComputedTextLength();
                    tHelper.textContent = '||';
                    var singleSize = tHelper.getComputedTextLength();
                    fontData.cache[index + 1] = (doubleSize - singleSize) / 100;
                } else {
                    tHelper.textContent = char;
                    fontData.cache[index + 1] = tHelper.getComputedTextLength() / 100;
                }
            }
            return fontData.cache[index + 1] * size;
        }

        function getFontByName(name) {
            var i = 0,
                len = this.fonts.length;
            while (i < len) {
                if (this.fonts[i].fName === name) {
                    return this.fonts[i];
                }
                i += 1;
            }
            return this.fonts[0];
        }

        function getCombinedCharacterCodes() {
            return combinedCharacters;
        }

        function setIsLoaded() {
            this.isLoaded = true;
        }

        var Font = function Font() {
            this.fonts = [];
            this.chars = null;
            this.typekitLoaded = 0;
            this.isLoaded = false;
            this.initTime = Date.now();
            this.setIsLoadedBinded = this.setIsLoaded.bind(this);
            this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
        };
        //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. 
        Font.getCombinedCharacterCodes = getCombinedCharacterCodes;

        var fontPrototype = {
            addChars: addChars,
            addFonts: addFonts,
            getCharData: getCharData,
            getFontByName: getFontByName,
            measureText: measureText,
            checkLoadedFonts: checkLoadedFonts,
            setIsLoaded: setIsLoaded
        };

        Font.prototype = fontPrototype;

        return Font;
    }();
    var PropertyFactory = function () {

        var initFrame = initialDefaultFrame;
        var math_abs = Math.abs;

        function interpolateValue(frameNum, caching) {
            var offsetTime = this.offsetTime;
            var newValue;
            if (this.propType === 'multidimensional') {
                newValue = createTypedArray('float32', this.pv.length);
            }
            var iterationIndex = caching.lastIndex;
            var i = iterationIndex;
            var len = this.keyframes.length - 1,
                flag = true;
            var keyData, nextKeyData;

            while (flag) {
                keyData = this.keyframes[i];
                nextKeyData = this.keyframes[i + 1];
                if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
                    if (keyData.h) {
                        keyData = nextKeyData;
                    }
                    iterationIndex = 0;
                    break;
                }
                if (nextKeyData.t - offsetTime > frameNum) {
                    iterationIndex = i;
                    break;
                }
                if (i < len - 1) {
                    i += 1;
                } else {
                    iterationIndex = 0;
                    flag = false;
                }
            }

            var k, kLen, perc, jLen, j, fnc;
            var nextKeyTime = nextKeyData.t - offsetTime;
            var keyTime = keyData.t - offsetTime;
            var endValue;
            if (keyData.to) {
                if (!keyData.bezierData) {
                    keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
                }
                var bezierData = keyData.bezierData;
                if (frameNum >= nextKeyTime || frameNum < keyTime) {
                    var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
                    kLen = bezierData.points[ind].point.length;
                    for (k = 0; k < kLen; k += 1) {
                        newValue[k] = bezierData.points[ind].point[k];
                    }
                    // caching._lastKeyframeIndex = -1;
                } else {
                    if (keyData.__fnct) {
                        fnc = keyData.__fnct;
                    } else {
                        fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
                        keyData.__fnct = fnc;
                    }
                    perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                    var distanceInLine = bezierData.segmentLength * perc;

                    var segmentPerc;
                    var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;
                    j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;
                    flag = true;
                    jLen = bezierData.points.length;
                    while (flag) {
                        addedLength += bezierData.points[j].partialLength;
                        if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
                            kLen = bezierData.points[j].point.length;
                            for (k = 0; k < kLen; k += 1) {
                                newValue[k] = bezierData.points[j].point[k];
                            }
                            break;
                        } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
                            segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
                            kLen = bezierData.points[j].point.length;
                            for (k = 0; k < kLen; k += 1) {
                                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;
                            }
                            break;
                        }
                        if (j < jLen - 1) {
                            j += 1;
                        } else {
                            flag = false;
                        }
                    }
                    caching._lastPoint = j;
                    caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
                    caching._lastKeyframeIndex = i;
                }
            } else {
                var outX, outY, inX, inY, keyValue;
                len = keyData.s.length;
                endValue = nextKeyData.s || keyData.e;
                if (this.sh && keyData.h !== 1) {
                    if (frameNum >= nextKeyTime) {
                        newValue[0] = endValue[0];
                        newValue[1] = endValue[1];
                        newValue[2] = endValue[2];
                    } else if (frameNum <= keyTime) {
                        newValue[0] = keyData.s[0];
                        newValue[1] = keyData.s[1];
                        newValue[2] = keyData.s[2];
                    } else {
                        var quatStart = createQuaternion(keyData.s);
                        var quatEnd = createQuaternion(endValue);
                        var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
                        quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));
                    }
                } else {
                    for (i = 0; i < len; i += 1) {
                        if (keyData.h !== 1) {
                            if (frameNum >= nextKeyTime) {
                                perc = 1;
                            } else if (frameNum < keyTime) {
                                perc = 0;
                            } else {
                                if (keyData.o.x.constructor === Array) {
                                    if (!keyData.__fnct) {
                                        keyData.__fnct = [];
                                    }
                                    if (!keyData.__fnct[i]) {
                                        outX = typeof keyData.o.x[i] === 'undefined' ? keyData.o.x[0] : keyData.o.x[i];
                                        outY = typeof keyData.o.y[i] === 'undefined' ? keyData.o.y[0] : keyData.o.y[i];
                                        inX = typeof keyData.i.x[i] === 'undefined' ? keyData.i.x[0] : keyData.i.x[i];
                                        inY = typeof keyData.i.y[i] === 'undefined' ? keyData.i.y[0] : keyData.i.y[i];
                                        fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                        keyData.__fnct[i] = fnc;
                                    } else {
                                        fnc = keyData.__fnct[i];
                                    }
                                } else {
                                    if (!keyData.__fnct) {
                                        outX = keyData.o.x;
                                        outY = keyData.o.y;
                                        inX = keyData.i.x;
                                        inY = keyData.i.y;
                                        fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                        keyData.__fnct = fnc;
                                    } else {
                                        fnc = keyData.__fnct;
                                    }
                                }
                                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                            }
                        }

                        endValue = nextKeyData.s || keyData.e;
                        keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;

                        if (this.propType === 'multidimensional') {
                            newValue[i] = keyValue;
                        } else {
                            newValue = keyValue;
                        }
                    }
                }
            }
            caching.lastIndex = iterationIndex;
            return newValue;
        }

        //based on @Toji's https://github.com/toji/gl-matrix/
        function slerp(a, b, t) {
            var out = [];
            var ax = a[0],
                ay = a[1],
                az = a[2],
                aw = a[3],
                bx = b[0],
                by = b[1],
                bz = b[2],
                bw = b[3];

            var omega, cosom, sinom, scale0, scale1;

            cosom = ax * bx + ay * by + az * bz + aw * bw;
            if (cosom < 0.0) {
                cosom = -cosom;
                bx = -bx;
                by = -by;
                bz = -bz;
                bw = -bw;
            }
            if (1.0 - cosom > 0.000001) {
                omega = Math.acos(cosom);
                sinom = Math.sin(omega);
                scale0 = Math.sin((1.0 - t) * omega) / sinom;
                scale1 = Math.sin(t * omega) / sinom;
            } else {
                scale0 = 1.0 - t;
                scale1 = t;
            }
            out[0] = scale0 * ax + scale1 * bx;
            out[1] = scale0 * ay + scale1 * by;
            out[2] = scale0 * az + scale1 * bz;
            out[3] = scale0 * aw + scale1 * bw;

            return out;
        }

        function quaternionToEuler(out, quat) {
            var qx = quat[0];
            var qy = quat[1];
            var qz = quat[2];
            var qw = quat[3];
            var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);
            var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
            var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);
            out[0] = heading / degToRads;
            out[1] = attitude / degToRads;
            out[2] = bank / degToRads;
        }

        function createQuaternion(values) {
            var heading = values[0] * degToRads;
            var attitude = values[1] * degToRads;
            var bank = values[2] * degToRads;
            var c1 = Math.cos(heading / 2);
            var c2 = Math.cos(attitude / 2);
            var c3 = Math.cos(bank / 2);
            var s1 = Math.sin(heading / 2);
            var s2 = Math.sin(attitude / 2);
            var s3 = Math.sin(bank / 2);
            var w = c1 * c2 * c3 - s1 * s2 * s3;
            var x = s1 * s2 * c3 + c1 * c2 * s3;
            var y = s1 * c2 * c3 + c1 * s2 * s3;
            var z = c1 * s2 * c3 - s1 * c2 * s3;

            return [x, y, z, w];
        }

        function getValueAtCurrentTime() {
            var frameNum = this.comp.renderedFrame - this.offsetTime;
            var initTime = this.keyframes[0].t - this.offsetTime;
            var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
            if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {
                if (this._caching.lastFrame >= frameNum) {
                    this._caching._lastKeyframeIndex = -1;
                    this._caching.lastIndex = 0;
                }

                var renderResult = this.interpolateValue(frameNum, this._caching);
                this.pv = renderResult;
            }
            this._caching.lastFrame = frameNum;
            return this.pv;
        }

        function setVValue(val) {
            var multipliedValue;
            if (this.propType === 'unidimensional') {
                multipliedValue = val * this.mult;
                if (math_abs(this.v - multipliedValue) > 0.00001) {
                    this.v = multipliedValue;
                    this._mdf = true;
                }
            } else {
                var i = 0,
                    len = this.v.length;
                while (i < len) {
                    multipliedValue = val[i] * this.mult;
                    if (math_abs(this.v[i] - multipliedValue) > 0.00001) {
                        this.v[i] = multipliedValue;
                        this._mdf = true;
                    }
                    i += 1;
                }
            }
        }

        function processEffectsSequence() {
            if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
                return;
            }
            if (this.lock) {
                this.setVValue(this.pv);
                return;
            }
            this.lock = true;
            this._mdf = this._isFirstFrame;
            var multipliedValue;
            var i,
                len = this.effectsSequence.length;
            var finalValue = this.kf ? this.pv : this.data.k;
            for (i = 0; i < len; i += 1) {
                finalValue = this.effectsSequence[i](finalValue);
            }
            this.setVValue(finalValue);
            this._isFirstFrame = false;
            this.lock = false;
            this.frameId = this.elem.globalData.frameId;
        }

        function addEffect(effectFunction) {
            this.effectsSequence.push(effectFunction);
            this.container.addDynamicProperty(this);
        }

        function ValueProperty(elem, data, mult, container) {
            this.propType = 'unidimensional';
            this.mult = mult || 1;
            this.data = data;
            this.v = mult ? data.k * mult : data.k;
            this.pv = data.k;
            this._mdf = false;
            this.elem = elem;
            this.container = container;
            this.comp = elem.comp;
            this.k = false;
            this.kf = false;
            this.vel = 0;
            this.effectsSequence = [];
            this._isFirstFrame = true;
            this.getValue = processEffectsSequence;
            this.setVValue = setVValue;
            this.addEffect = addEffect;
        }

        function MultiDimensionalProperty(elem, data, mult, container) {
            this.propType = 'multidimensional';
            this.mult = mult || 1;
            this.data = data;
            this._mdf = false;
            this.elem = elem;
            this.container = container;
            this.comp = elem.comp;
            this.k = false;
            this.kf = false;
            this.frameId = -1;
            var i,
                len = data.k.length;
            this.v = createTypedArray('float32', len);
            this.pv = createTypedArray('float32', len);
            var arr = createTypedArray('float32', len);
            this.vel = createTypedArray('float32', len);
            for (i = 0; i < len; i += 1) {
                this.v[i] = data.k[i] * this.mult;
                this.pv[i] = data.k[i];
            }
            this._isFirstFrame = true;
            this.effectsSequence = [];
            this.getValue = processEffectsSequence;
            this.setVValue = setVValue;
            this.addEffect = addEffect;
        }

        function KeyframedValueProperty(elem, data, mult, container) {
            this.propType = 'unidimensional';
            this.keyframes = data.k;
            this.offsetTime = elem.data.st;
            this.frameId = -1;
            this._caching = { lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 };
            this.k = true;
            this.kf = true;
            this.data = data;
            this.mult = mult || 1;
            this.elem = elem;
            this.container = container;
            this.comp = elem.comp;
            this.v = initFrame;
            this.pv = initFrame;
            this._isFirstFrame = true;
            this.getValue = processEffectsSequence;
            this.setVValue = setVValue;
            this.interpolateValue = interpolateValue;
            this.effectsSequence = [getValueAtCurrentTime.bind(this)];
            this.addEffect = addEffect;
        }

        function KeyframedMultidimensionalProperty(elem, data, mult, container) {
            this.propType = 'multidimensional';
            var i,
                len = data.k.length;
            var s, e, to, ti;
            for (i = 0; i < len - 1; i += 1) {
                if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {
                    s = data.k[i].s;
                    e = data.k[i + 1].s;
                    to = data.k[i].to;
                    ti = data.k[i].ti;
                    if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {
                        data.k[i].to = null;
                        data.k[i].ti = null;
                    }
                    if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {
                        if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {
                            data.k[i].to = null;
                            data.k[i].ti = null;
                        }
                    }
                }
            }
            this.effectsSequence = [getValueAtCurrentTime.bind(this)];
            this.keyframes = data.k;
            this.offsetTime = elem.data.st;
            this.k = true;
            this.kf = true;
            this._isFirstFrame = true;
            this.mult = mult || 1;
            this.elem = elem;
            this.container = container;
            this.comp = elem.comp;
            this.getValue = processEffectsSequence;
            this.setVValue = setVValue;
            this.interpolateValue = interpolateValue;
            this.frameId = -1;
            var arrLen = data.k[0].s.length;
            this.v = createTypedArray('float32', arrLen);
            this.pv = createTypedArray('float32', arrLen);
            for (i = 0; i < arrLen; i += 1) {
                this.v[i] = initFrame;
                this.pv[i] = initFrame;
            }
            this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) };
            this.addEffect = addEffect;
        }

        function getProp(elem, data, type, mult, container) {
            var p;
            if (!data.k.length) {
                p = new ValueProperty(elem, data, mult, container);
            } else if (typeof data.k[0] === 'number') {
                p = new MultiDimensionalProperty(elem, data, mult, container);
            } else {
                switch (type) {
                    case 0:
                        p = new KeyframedValueProperty(elem, data, mult, container);
                        break;
                    case 1:
                        p = new KeyframedMultidimensionalProperty(elem, data, mult, container);
                        break;
                }
            }
            if (p.effectsSequence.length) {
                container.addDynamicProperty(p);
            }
            return p;
        }

        var ob = {
            getProp: getProp
        };
        return ob;
    }();
    var TransformPropertyFactory = function () {

        var defaultVector = [0, 0];

        function applyToMatrix(mat) {
            var _mdf = this._mdf;
            this.iterateDynamicProperties();
            this._mdf = this._mdf || _mdf;
            if (this.a) {
                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            }
            if (this.s) {
                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            }
            if (this.sk) {
                mat.skewFromAxis(-this.sk.v, this.sa.v);
            }
            if (this.r) {
                mat.rotate(-this.r.v);
            } else {
                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            }
            if (this.data.p.s) {
                if (this.data.p.z) {
                    mat.translate(this.px.v, this.py.v, -this.pz.v);
                } else {
                    mat.translate(this.px.v, this.py.v, 0);
                }
            } else {
                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }
        }
        function processKeys(forceRender) {
            if (this.elem.globalData.frameId === this.frameId) {
                return;
            }
            if (this._isDirty) {
                this.precalculateMatrix();
                this._isDirty = false;
            }

            this.iterateDynamicProperties();

            if (this._mdf || forceRender) {
                this.v.cloneFromProps(this.pre.props);
                if (this.appliedTransformations < 1) {
                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
                }
                if (this.appliedTransformations < 2) {
                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
                }
                if (this.sk && this.appliedTransformations < 3) {
                    this.v.skewFromAxis(-this.sk.v, this.sa.v);
                }
                if (this.r && this.appliedTransformations < 4) {
                    this.v.rotate(-this.r.v);
                } else if (!this.r && this.appliedTransformations < 4) {
                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
                }
                if (this.autoOriented) {
                    var v1,
                        v2,
                        frameRate = this.elem.globalData.frameRate;
                    if (this.p && this.p.keyframes && this.p.getValueAtTime) {
                        if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {
                            v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);
                            v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
                        } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                            v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);
                            v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
                        } else {
                            v1 = this.p.pv;
                            v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
                        }
                    } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                        v1 = [];
                        v2 = [];
                        var px = this.px,
                            py = this.py,
                            frameRate;
                        if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {
                            v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);
                            v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);
                            v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);
                            v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);
                        } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                            v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);
                            v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);
                            v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);
                            v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);
                        } else {
                            v1 = [px.pv, py.pv];
                            v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);
                            v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);
                        }
                    } else {
                        v1 = v2 = defaultVector;
                    }
                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
                }
                if (this.data.p && this.data.p.s) {
                    if (this.data.p.z) {
                        this.v.translate(this.px.v, this.py.v, -this.pz.v);
                    } else {
                        this.v.translate(this.px.v, this.py.v, 0);
                    }
                } else {
                    this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                }
            }
            this.frameId = this.elem.globalData.frameId;
        }

        function precalculateMatrix() {
            if (!this.a.k) {
                this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
                this.appliedTransformations = 1;
            } else {
                return;
            }
            if (!this.s.effectsSequence.length) {
                this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
                this.appliedTransformations = 2;
            } else {
                return;
            }
            if (this.sk) {
                if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
                    this.pre.skewFromAxis(-this.sk.v, this.sa.v);
                    this.appliedTransformations = 3;
                } else {
                    return;
                }
            }
            if (this.r) {
                if (!this.r.effectsSequence.length) {
                    this.pre.rotate(-this.r.v);
                    this.appliedTransformations = 4;
                } else {
                    return;
                }
            } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
                this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
                this.appliedTransformations = 4;
            }
        }

        function autoOrient() {
            //
            //var prevP = this.getValueAtTime();
        }

        function addDynamicProperty(prop) {
            this._addDynamicProperty(prop);
            this.elem.addDynamicProperty(prop);
            this._isDirty = true;
        }

        function TransformProperty(elem, data, container) {
            this.elem = elem;
            this.frameId = -1;
            this.propType = 'transform';
            this.data = data;
            this.v = new Matrix();
            //Precalculated matrix with non animated properties
            this.pre = new Matrix();
            this.appliedTransformations = 0;
            this.initDynamicPropertyContainer(container || elem);
            if (data.p && data.p.s) {
                this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);
                this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);
                if (data.p.z) {
                    this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);
                }
            } else {
                this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this);
            }
            if (data.rx) {
                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);
                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);
                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);
                if (data.or.k[0].ti) {
                    var i,
                        len = data.or.k.length;
                    for (i = 0; i < len; i += 1) {
                        data.or.k[i].to = data.or.k[i].ti = null;
                    }
                }
                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);
                //sh Indicates it needs to be capped between -180 and 180
                this.or.sh = true;
            } else {
                this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this);
            }
            if (data.sk) {
                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);
                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);
            }
            this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this);
            this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this);
            // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
            if (data.o) {
                this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);
            } else {
                this.o = { _mdf: false, v: 1 };
            }
            this._isDirty = true;
            if (!this.dynamicProperties.length) {
                this.getValue(true);
            }
        }

        TransformProperty.prototype = {
            applyToMatrix: applyToMatrix,
            getValue: processKeys,
            precalculateMatrix: precalculateMatrix,
            autoOrient: autoOrient
        };

        extendPrototype([DynamicPropertyContainer], TransformProperty);
        TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
        TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;

        function getTransformProperty(elem, data, container) {
            return new TransformProperty(elem, data, container);
        }

        return {
            getTransformProperty: getTransformProperty
        };
    }();
    function ShapePath() {
        this.c = false;
        this._length = 0;
        this._maxLength = 8;
        this.v = createSizedArray(this._maxLength);
        this.o = createSizedArray(this._maxLength);
        this.i = createSizedArray(this._maxLength);
    }

    ShapePath.prototype.setPathData = function (closed, len) {
        this.c = closed;
        this.setLength(len);
        var i = 0;
        while (i < len) {
            this.v[i] = point_pool.newElement();
            this.o[i] = point_pool.newElement();
            this.i[i] = point_pool.newElement();
            i += 1;
        }
    };

    ShapePath.prototype.setLength = function (len) {
        while (this._maxLength < len) {
            this.doubleArrayLength();
        }
        this._length = len;
    };

    ShapePath.prototype.doubleArrayLength = function () {
        this.v = this.v.concat(createSizedArray(this._maxLength));
        this.i = this.i.concat(createSizedArray(this._maxLength));
        this.o = this.o.concat(createSizedArray(this._maxLength));
        this._maxLength *= 2;
    };

    ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {
        var arr;
        this._length = Math.max(this._length, pos + 1);
        if (this._length >= this._maxLength) {
            this.doubleArrayLength();
        }
        switch (type) {
            case 'v':
                arr = this.v;
                break;
            case 'i':
                arr = this.i;
                break;
            case 'o':
                arr = this.o;
                break;
        }
        if (!arr[pos] || arr[pos] && !replace) {
            arr[pos] = point_pool.newElement();
        }
        arr[pos][0] = x;
        arr[pos][1] = y;
    };

    ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {
        this.setXYAt(vX, vY, 'v', pos, replace);
        this.setXYAt(oX, oY, 'o', pos, replace);
        this.setXYAt(iX, iY, 'i', pos, replace);
    };

    ShapePath.prototype.reverse = function () {
        var newPath = new ShapePath();
        newPath.setPathData(this.c, this._length);
        var vertices = this.v,
            outPoints = this.o,
            inPoints = this.i;
        var init = 0;
        if (this.c) {
            newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
            init = 1;
        }
        var cnt = this._length - 1;
        var len = this._length;

        var i;
        for (i = init; i < len; i += 1) {
            newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
            cnt -= 1;
        }
        return newPath;
    };
    var ShapePropertyFactory = function () {

        var initFrame = -999999;

        function interpolateShape(frameNum, previousValue, caching) {
            var iterationIndex = caching.lastIndex;
            var keyPropS, keyPropE, isHold, j, k, jLen, kLen, perc, vertexValue;
            var kf = this.keyframes;
            if (frameNum < kf[0].t - this.offsetTime) {
                keyPropS = kf[0].s[0];
                isHold = true;
                iterationIndex = 0;
            } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {
                keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
                /*if(kf[kf.length - 1].s){
                    keyPropS = kf[kf.length - 1].s[0];
                }else{
                    keyPropS = kf[kf.length - 2].e[0];
                }*/
                isHold = true;
            } else {
                var i = iterationIndex;
                var len = kf.length - 1,
                    flag = true,
                    keyData,
                    nextKeyData;
                while (flag) {
                    keyData = kf[i];
                    nextKeyData = kf[i + 1];
                    if (nextKeyData.t - this.offsetTime > frameNum) {
                        break;
                    }
                    if (i < len - 1) {
                        i += 1;
                    } else {
                        flag = false;
                    }
                }
                isHold = keyData.h === 1;
                iterationIndex = i;
                if (!isHold) {
                    if (frameNum >= nextKeyData.t - this.offsetTime) {
                        perc = 1;
                    } else if (frameNum < keyData.t - this.offsetTime) {
                        perc = 0;
                    } else {
                        var fnc;
                        if (keyData.__fnct) {
                            fnc = keyData.__fnct;
                        } else {
                            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;
                            keyData.__fnct = fnc;
                        }
                        perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));
                    }
                    keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
                }
                keyPropS = keyData.s[0];
            }
            jLen = previousValue._length;
            kLen = keyPropS.i[0].length;
            caching.lastIndex = iterationIndex;

            for (j = 0; j < jLen; j += 1) {
                for (k = 0; k < kLen; k += 1) {
                    vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;
                    previousValue.i[j][k] = vertexValue;
                    vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;
                    previousValue.o[j][k] = vertexValue;
                    vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;
                    previousValue.v[j][k] = vertexValue;
                }
            }
        }

        function interpolateShapeCurrentTime() {
            var frameNum = this.comp.renderedFrame - this.offsetTime;
            var initTime = this.keyframes[0].t - this.offsetTime;
            var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
            var lastFrame = this._caching.lastFrame;
            if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {
                ////
                this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
                this.interpolateShape(frameNum, this.pv, this._caching);
                ////
            }
            this._caching.lastFrame = frameNum;
            return this.pv;
        }

        function resetShape() {
            this.paths = this.localShapeCollection;
        }

        function shapesEqual(shape1, shape2) {
            if (shape1._length !== shape2._length || shape1.c !== shape2.c) {
                return false;
            }
            var i,
                len = shape1._length;
            for (i = 0; i < len; i += 1) {
                if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {
                    return false;
                }
            }
            return true;
        }

        function setVValue(newPath) {
            if (!shapesEqual(this.v, newPath)) {
                this.v = shape_pool.clone(newPath);
                this.localShapeCollection.releaseShapes();
                this.localShapeCollection.addShape(this.v);
                this._mdf = true;
                this.paths = this.localShapeCollection;
            }
        }

        function processEffectsSequence() {
            if (this.elem.globalData.frameId === this.frameId) {
                return;
            } else if (!this.effectsSequence.length) {
                this._mdf = false;
                return;
            }
            if (this.lock) {
                this.setVValue(this.pv);
                return;
            }
            this.lock = true;
            this._mdf = false;
            var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
            var i,
                len = this.effectsSequence.length;
            for (i = 0; i < len; i += 1) {
                finalValue = this.effectsSequence[i](finalValue);
            }
            this.setVValue(finalValue);
            this.lock = false;
            this.frameId = this.elem.globalData.frameId;
        };

        function ShapeProperty(elem, data, type) {
            this.propType = 'shape';
            this.comp = elem.comp;
            this.container = elem;
            this.elem = elem;
            this.data = data;
            this.k = false;
            this.kf = false;
            this._mdf = false;
            var pathData = type === 3 ? data.pt.k : data.ks.k;
            this.v = shape_pool.clone(pathData);
            this.pv = shape_pool.clone(this.v);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.paths.addShape(this.v);
            this.reset = resetShape;
            this.effectsSequence = [];
        }

        function addEffect(effectFunction) {
            this.effectsSequence.push(effectFunction);
            this.container.addDynamicProperty(this);
        }

        ShapeProperty.prototype.interpolateShape = interpolateShape;
        ShapeProperty.prototype.getValue = processEffectsSequence;
        ShapeProperty.prototype.setVValue = setVValue;
        ShapeProperty.prototype.addEffect = addEffect;

        function KeyframedShapeProperty(elem, data, type) {
            this.propType = 'shape';
            this.comp = elem.comp;
            this.elem = elem;
            this.container = elem;
            this.offsetTime = elem.data.st;
            this.keyframes = type === 3 ? data.pt.k : data.ks.k;
            this.k = true;
            this.kf = true;
            var i,
                len = this.keyframes[0].s[0].i.length;
            var jLen = this.keyframes[0].s[0].i[0].length;
            this.v = shape_pool.newElement();
            this.v.setPathData(this.keyframes[0].s[0].c, len);
            this.pv = shape_pool.clone(this.v);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.paths.addShape(this.v);
            this.lastFrame = initFrame;
            this.reset = resetShape;
            this._caching = { lastFrame: initFrame, lastIndex: 0 };
            this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
        }
        KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
        KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
        KeyframedShapeProperty.prototype.setVValue = setVValue;
        KeyframedShapeProperty.prototype.addEffect = addEffect;

        var EllShapeProperty = function () {

            var cPoint = roundCorner;

            function EllShapeProperty(elem, data) {
                /*this.v = {
                    v: createSizedArray(4),
                    i: createSizedArray(4),
                    o: createSizedArray(4),
                    c: true
                };*/
                this.v = shape_pool.newElement();
                this.v.setPathData(true, 4);
                this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                this.paths = this.localShapeCollection;
                this.localShapeCollection.addShape(this.v);
                this.d = data.d;
                this.elem = elem;
                this.comp = elem.comp;
                this.frameId = -1;
                this.initDynamicPropertyContainer(elem);
                this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
                if (this.dynamicProperties.length) {
                    this.k = true;
                } else {
                    this.k = false;
                    this.convertEllToPath();
                }
            };

            EllShapeProperty.prototype = {
                reset: resetShape,
                getValue: function getValue() {
                    if (this.elem.globalData.frameId === this.frameId) {
                        return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();

                    if (this._mdf) {
                        this.convertEllToPath();
                    }
                },
                convertEllToPath: function convertEllToPath() {
                    var p0 = this.p.v[0],
                        p1 = this.p.v[1],
                        s0 = this.s.v[0] / 2,
                        s1 = this.s.v[1] / 2;
                    var _cw = this.d !== 3;
                    var _v = this.v;
                    _v.v[0][0] = p0;
                    _v.v[0][1] = p1 - s1;
                    _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.v[1][1] = p1;
                    _v.v[2][0] = p0;
                    _v.v[2][1] = p1 + s1;
                    _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.v[3][1] = p1;
                    _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                    _v.i[0][1] = p1 - s1;
                    _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.i[1][1] = p1 - s1 * cPoint;
                    _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                    _v.i[2][1] = p1 + s1;
                    _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.i[3][1] = p1 + s1 * cPoint;
                    _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                    _v.o[0][1] = p1 - s1;
                    _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.o[1][1] = p1 + s1 * cPoint;
                    _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                    _v.o[2][1] = p1 + s1;
                    _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.o[3][1] = p1 - s1 * cPoint;
                }
            };

            extendPrototype([DynamicPropertyContainer], EllShapeProperty);

            return EllShapeProperty;
        }();

        var StarShapeProperty = function () {

            function StarShapeProperty(elem, data) {
                this.v = shape_pool.newElement();
                this.v.setPathData(true, 0);
                this.elem = elem;
                this.comp = elem.comp;
                this.data = data;
                this.frameId = -1;
                this.d = data.d;
                this.initDynamicPropertyContainer(elem);
                if (data.sy === 1) {
                    this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);
                    this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);
                    this.convertToPath = this.convertStarToPath;
                } else {
                    this.convertToPath = this.convertPolygonToPath;
                }
                this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);
                this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);
                this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);
                this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);
                this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                this.localShapeCollection.addShape(this.v);
                this.paths = this.localShapeCollection;
                if (this.dynamicProperties.length) {
                    this.k = true;
                } else {
                    this.k = false;
                    this.convertToPath();
                }
            };

            StarShapeProperty.prototype = {
                reset: resetShape,
                getValue: function getValue() {
                    if (this.elem.globalData.frameId === this.frameId) {
                        return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();
                    if (this._mdf) {
                        this.convertToPath();
                    }
                },
                convertStarToPath: function convertStarToPath() {
                    var numPts = Math.floor(this.pt.v) * 2;
                    var angle = Math.PI * 2 / numPts;
                    /*this.v.v.length = numPts;
                    this.v.i.length = numPts;
                    this.v.o.length = numPts;*/
                    var longFlag = true;
                    var longRad = this.or.v;
                    var shortRad = this.ir.v;
                    var longRound = this.os.v;
                    var shortRound = this.is.v;
                    var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);
                    var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);
                    var i,
                        rad,
                        roundness,
                        perimSegment,
                        currentAng = -Math.PI / 2;
                    currentAng += this.r.v;
                    var dir = this.data.d === 3 ? -1 : 1;
                    this.v._length = 0;
                    for (i = 0; i < numPts; i += 1) {
                        rad = longFlag ? longRad : shortRad;
                        roundness = longFlag ? longRound : shortRound;
                        perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
                        var x = rad * Math.cos(currentAng);
                        var y = rad * Math.sin(currentAng);
                        var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                        var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                        x += +this.p.v[0];
                        y += +this.p.v[1];
                        this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);

                        /*this.v.v[i] = [x,y];
                        this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
                        this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
                        this.v._length = numPts;*/
                        longFlag = !longFlag;
                        currentAng += angle * dir;
                    }
                },
                convertPolygonToPath: function convertPolygonToPath() {
                    var numPts = Math.floor(this.pt.v);
                    var angle = Math.PI * 2 / numPts;
                    var rad = this.or.v;
                    var roundness = this.os.v;
                    var perimSegment = 2 * Math.PI * rad / (numPts * 4);
                    var i,
                        currentAng = -Math.PI / 2;
                    var dir = this.data.d === 3 ? -1 : 1;
                    currentAng += this.r.v;
                    this.v._length = 0;
                    for (i = 0; i < numPts; i += 1) {
                        var x = rad * Math.cos(currentAng);
                        var y = rad * Math.sin(currentAng);
                        var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                        var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                        x += +this.p.v[0];
                        y += +this.p.v[1];
                        this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);
                        currentAng += angle * dir;
                    }
                    this.paths.length = 0;
                    this.paths[0] = this.v;
                }

            };
            extendPrototype([DynamicPropertyContainer], StarShapeProperty);

            return StarShapeProperty;
        }();

        var RectShapeProperty = function () {

            function RectShapeProperty(elem, data) {
                this.v = shape_pool.newElement();
                this.v.c = true;
                this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                this.localShapeCollection.addShape(this.v);
                this.paths = this.localShapeCollection;
                this.elem = elem;
                this.comp = elem.comp;
                this.frameId = -1;
                this.d = data.d;
                this.initDynamicPropertyContainer(elem);
                this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
                this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);
                if (this.dynamicProperties.length) {
                    this.k = true;
                } else {
                    this.k = false;
                    this.convertRectToPath();
                }
            };

            RectShapeProperty.prototype = {
                convertRectToPath: function convertRectToPath() {
                    var p0 = this.p.v[0],
                        p1 = this.p.v[1],
                        v0 = this.s.v[0] / 2,
                        v1 = this.s.v[1] / 2;
                    var round = bm_min(v0, v1, this.r.v);
                    var cPoint = round * (1 - roundCorner);
                    this.v._length = 0;

                    if (this.d === 2 || this.d === 1) {
                        this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);
                        this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);
                        if (round !== 0) {
                            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);
                            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);
                            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);
                            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);
                            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);
                            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);
                        } else {
                            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);
                            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);
                        }
                    } else {
                        this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);
                        if (round !== 0) {
                            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);
                            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);
                            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);
                            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);
                            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);
                            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);
                            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);
                        } else {
                            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);
                            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);
                            this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);
                        }
                    }
                },
                getValue: function getValue(frameNum) {
                    if (this.elem.globalData.frameId === this.frameId) {
                        return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();
                    if (this._mdf) {
                        this.convertRectToPath();
                    }
                },
                reset: resetShape
            };
            extendPrototype([DynamicPropertyContainer], RectShapeProperty);

            return RectShapeProperty;
        }();

        function getShapeProp(elem, data, type) {
            var prop;
            if (type === 3 || type === 4) {
                var dataProp = type === 3 ? data.pt : data.ks;
                var keys = dataProp.k;
                if (keys.length) {
                    prop = new KeyframedShapeProperty(elem, data, type);
                } else {
                    prop = new ShapeProperty(elem, data, type);
                }
            } else if (type === 5) {
                prop = new RectShapeProperty(elem, data);
            } else if (type === 6) {
                prop = new EllShapeProperty(elem, data);
            } else if (type === 7) {
                prop = new StarShapeProperty(elem, data);
            }
            if (prop.k) {
                elem.addDynamicProperty(prop);
            }
            return prop;
        }

        function getConstructorFunction() {
            return ShapeProperty;
        }

        function getKeyframedConstructorFunction() {
            return KeyframedShapeProperty;
        }

        var ob = {};
        ob.getShapeProp = getShapeProp;
        ob.getConstructorFunction = getConstructorFunction;
        ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
        return ob;
    }();
    var ShapeModifiers = function () {
        var ob = {};
        var modifiers = {};
        ob.registerModifier = registerModifier;
        ob.getModifier = getModifier;

        function registerModifier(nm, factory) {
            if (!modifiers[nm]) {
                modifiers[nm] = factory;
            }
        }

        function getModifier(nm, elem, data) {
            return new modifiers[nm](elem, data);
        }

        return ob;
    }();

    function ShapeModifier() {}
    ShapeModifier.prototype.initModifierProperties = function () {};
    ShapeModifier.prototype.addShapeToModifier = function () {};
    ShapeModifier.prototype.addShape = function (data) {
        if (!this.closed) {
            // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
            data.sh.container.addDynamicProperty(data.sh);
            var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollection_pool.newShapeCollection() };
            this.shapes.push(shapeData);
            this.addShapeToModifier(shapeData);
            if (this._isAnimated) {
                data.setAsAnimated();
            }
        }
    };
    ShapeModifier.prototype.init = function (elem, data) {
        this.shapes = [];
        this.elem = elem;
        this.initDynamicPropertyContainer(elem);
        this.initModifierProperties(elem, data);
        this.frameId = initialDefaultFrame;
        this.closed = false;
        this.k = false;
        if (this.dynamicProperties.length) {
            this.k = true;
        } else {
            this.getValue(true);
        }
    };
    ShapeModifier.prototype.processKeys = function () {
        if (this.elem.globalData.frameId === this.frameId) {
            return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
    };

    extendPrototype([DynamicPropertyContainer], ShapeModifier);
    function TrimModifier() {}
    extendPrototype([ShapeModifier], TrimModifier);
    TrimModifier.prototype.initModifierProperties = function (elem, data) {
        this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
        this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
        this.sValue = 0;
        this.eValue = 0;
        this.getValue = this.processKeys;
        this.m = data.m;
        this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
    };

    TrimModifier.prototype.addShapeToModifier = function (shapeData) {
        shapeData.pathsData = [];
    };

    TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {
        var segments = [];
        if (e <= 1) {
            segments.push({
                s: s,
                e: e
            });
        } else if (s >= 1) {
            segments.push({
                s: s - 1,
                e: e - 1
            });
        } else {
            segments.push({
                s: s,
                e: 1
            });
            segments.push({
                s: 0,
                e: e - 1
            });
        }
        var shapeSegments = [];
        var i,
            len = segments.length,
            segmentOb;
        for (i = 0; i < len; i += 1) {
            segmentOb = segments[i];
            if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {} else {
                var shapeS, shapeE;
                if (segmentOb.s * totalModifierLength <= addedLength) {
                    shapeS = 0;
                } else {
                    shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
                }
                if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
                    shapeE = 1;
                } else {
                    shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;
                }
                shapeSegments.push([shapeS, shapeE]);
            }
        }
        if (!shapeSegments.length) {
            shapeSegments.push([0, 0]);
        }
        return shapeSegments;
    };

    TrimModifier.prototype.releasePathsData = function (pathsData) {
        var i,
            len = pathsData.length;
        for (i = 0; i < len; i += 1) {
            segments_length_pool.release(pathsData[i]);
        }
        pathsData.length = 0;
        return pathsData;
    };

    TrimModifier.prototype.processShapes = function (_isFirstFrame) {
        var s, e;
        if (this._mdf || _isFirstFrame) {
            var o = this.o.v % 360 / 360;
            if (o < 0) {
                o += 1;
            }
            s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;
            e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;
            if (s === e) {}
            if (s > e) {
                var _s = s;
                s = e;
                e = _s;
            }
            s = Math.round(s * 10000) * 0.0001;
            e = Math.round(e * 10000) * 0.0001;
            this.sValue = s;
            this.eValue = e;
        } else {
            s = this.sValue;
            e = this.eValue;
        }
        var shapePaths;
        var i,
            len = this.shapes.length,
            j,
            jLen;
        var pathsData,
            pathData,
            totalShapeLength,
            totalModifierLength = 0;

        if (e === s) {
            for (i = 0; i < len; i += 1) {
                this.shapes[i].localShapeCollection.releaseShapes();
                this.shapes[i].shape._mdf = true;
                this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;
            }
        } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {
            var segments = [],
                shapeData,
                localShapeCollection;
            for (i = 0; i < len; i += 1) {
                shapeData = this.shapes[i];
                // if shape hasn't changed and trim properties haven't changed, cached previous path can be used
                if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
                    shapeData.shape.paths = shapeData.localShapeCollection;
                } else {
                    shapePaths = shapeData.shape.paths;
                    jLen = shapePaths._length;
                    totalShapeLength = 0;
                    if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                        totalShapeLength = shapeData.totalShapeLength;
                    } else {
                        pathsData = this.releasePathsData(shapeData.pathsData);
                        for (j = 0; j < jLen; j += 1) {
                            pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                            pathsData.push(pathData);
                            totalShapeLength += pathData.totalLength;
                        }
                        shapeData.totalShapeLength = totalShapeLength;
                        shapeData.pathsData = pathsData;
                    }

                    totalModifierLength += totalShapeLength;
                    shapeData.shape._mdf = true;
                }
            }
            var shapeS = s,
                shapeE = e,
                addedLength = 0,
                edges;
            for (i = len - 1; i >= 0; i -= 1) {
                shapeData = this.shapes[i];
                if (shapeData.shape._mdf) {
                    localShapeCollection = shapeData.localShapeCollection;
                    localShapeCollection.releaseShapes();
                    //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
                    if (this.m === 2 && len > 1) {
                        edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
                        addedLength += shapeData.totalShapeLength;
                    } else {
                        edges = [[shapeS, shapeE]];
                    }
                    jLen = edges.length;
                    for (j = 0; j < jLen; j += 1) {
                        shapeS = edges[j][0];
                        shapeE = edges[j][1];
                        segments.length = 0;
                        if (shapeE <= 1) {
                            segments.push({
                                s: shapeData.totalShapeLength * shapeS,
                                e: shapeData.totalShapeLength * shapeE
                            });
                        } else if (shapeS >= 1) {
                            segments.push({
                                s: shapeData.totalShapeLength * (shapeS - 1),
                                e: shapeData.totalShapeLength * (shapeE - 1)
                            });
                        } else {
                            segments.push({
                                s: shapeData.totalShapeLength * shapeS,
                                e: shapeData.totalShapeLength
                            });
                            segments.push({
                                s: 0,
                                e: shapeData.totalShapeLength * (shapeE - 1)
                            });
                        }
                        var newShapesData = this.addShapes(shapeData, segments[0]);
                        if (segments[0].s !== segments[0].e) {
                            if (segments.length > 1) {
                                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                                if (lastShapeInCollection.c) {
                                    var lastShape = newShapesData.pop();
                                    this.addPaths(newShapesData, localShapeCollection);
                                    newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                                } else {
                                    this.addPaths(newShapesData, localShapeCollection);
                                    newShapesData = this.addShapes(shapeData, segments[1]);
                                }
                            }
                            this.addPaths(newShapesData, localShapeCollection);
                        }
                    }
                    shapeData.shape.paths = localShapeCollection;
                }
            }
        } else if (this._mdf) {
            for (i = 0; i < len; i += 1) {
                //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
                //Don't remove this even if it's losing cached info.
                this.shapes[i].pathsData.length = 0;
                this.shapes[i].shape._mdf = true;
            }
        }
    };

    TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {
        var i,
            len = newPaths.length;
        for (i = 0; i < len; i += 1) {
            localShapeCollection.addShape(newPaths[i]);
        }
    };

    TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
        shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);
        shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);
        if (newShape) {
            shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);
        }
        shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);
    };

    TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {
        shapePath.setXYAt(points[1], points[5], 'o', pos);
        shapePath.setXYAt(points[2], points[6], 'i', pos + 1);
        if (newShape) {
            shapePath.setXYAt(points[0], points[4], 'v', pos);
        }
        shapePath.setXYAt(points[3], points[7], 'v', pos + 1);
    };

    TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {
        var pathsData = shapeData.pathsData;
        var shapePaths = shapeData.shape.paths.shapes;
        var i,
            len = shapeData.shape.paths._length,
            j,
            jLen;
        var addedLength = 0;
        var currentLengthData, segmentCount;
        var lengths;
        var segment;
        var shapes = [];
        var initPos;
        var newShape = true;
        if (!shapePath) {
            shapePath = shape_pool.newElement();
            segmentCount = 0;
            initPos = 0;
        } else {
            segmentCount = shapePath._length;
            initPos = shapePath._length;
        }
        shapes.push(shapePath);
        for (i = 0; i < len; i += 1) {
            lengths = pathsData[i].lengths;
            shapePath.c = shapePaths[i].c;
            jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
            for (j = 1; j < jLen; j += 1) {
                currentLengthData = lengths[j - 1];
                if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
                    addedLength += currentLengthData.addedLength;
                    shapePath.c = false;
                } else if (addedLength > shapeSegment.e) {
                    shapePath.c = false;
                    break;
                } else {
                    if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
                        this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
                        newShape = false;
                    } else {
                        segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);
                        this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                        // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                        newShape = false;
                        shapePath.c = false;
                    }
                    addedLength += currentLengthData.addedLength;
                    segmentCount += 1;
                }
            }
            if (shapePaths[i].c && lengths.length) {
                currentLengthData = lengths[j - 1];
                if (addedLength <= shapeSegment.e) {
                    var segmentLength = lengths[j - 1].addedLength;
                    if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
                        this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
                        newShape = false;
                    } else {
                        segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
                        this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                        // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                        newShape = false;
                        shapePath.c = false;
                    }
                } else {
                    shapePath.c = false;
                }
                addedLength += currentLengthData.addedLength;
                segmentCount += 1;
            }
            if (shapePath._length) {
                shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);
                shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);
            }
            if (addedLength > shapeSegment.e) {
                break;
            }
            if (i < len - 1) {
                shapePath = shape_pool.newElement();
                newShape = true;
                shapes.push(shapePath);
                segmentCount = 0;
            }
        }
        return shapes;
    };

    ShapeModifiers.registerModifier('tm', TrimModifier);
    function RoundCornersModifier() {}
    extendPrototype([ShapeModifier], RoundCornersModifier);
    RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {
        this.getValue = this.processKeys;
        this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);
        this._isAnimated = !!this.rd.effectsSequence.length;
    };

    RoundCornersModifier.prototype.processPath = function (path, round) {
        var cloned_path = shape_pool.newElement();
        cloned_path.c = path.c;
        var i,
            len = path._length;
        var currentV,
            currentI,
            currentO,
            closerV,
            newV,
            newO,
            newI,
            distance,
            newPosPerc,
            index = 0;
        var vX, vY, oX, oY, iX, iY;
        for (i = 0; i < len; i += 1) {
            currentV = path.v[i];
            currentO = path.o[i];
            currentI = path.i[i];
            if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {
                if ((i === 0 || i === len - 1) && !path.c) {
                    cloned_path.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);
                    /*cloned_path.v[index] = currentV;
                    cloned_path.o[index] = currentO;
                    cloned_path.i[index] = currentI;*/
                    index += 1;
                } else {
                    if (i === 0) {
                        closerV = path.v[len - 1];
                    } else {
                        closerV = path.v[i - 1];
                    }
                    distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
                    newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
                    vX = iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
                    vY = iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
                    oX = vX - (vX - currentV[0]) * roundCorner;
                    oY = vY - (vY - currentV[1]) * roundCorner;
                    cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);
                    index += 1;

                    if (i === len - 1) {
                        closerV = path.v[0];
                    } else {
                        closerV = path.v[i + 1];
                    }
                    distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
                    newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
                    vX = oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
                    vY = oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
                    iX = vX - (vX - currentV[0]) * roundCorner;
                    iY = vY - (vY - currentV[1]) * roundCorner;
                    cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);
                    index += 1;
                }
            } else {
                cloned_path.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);
                index += 1;
            }
        }
        return cloned_path;
    };

    RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {
        var shapePaths;
        var i,
            len = this.shapes.length;
        var j, jLen;
        var rd = this.rd.v;

        if (rd !== 0) {
            var shapeData, newPaths, localShapeCollection;
            for (i = 0; i < len; i += 1) {
                shapeData = this.shapes[i];
                newPaths = shapeData.shape.paths;
                localShapeCollection = shapeData.localShapeCollection;
                if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
                    localShapeCollection.releaseShapes();
                    shapeData.shape._mdf = true;
                    shapePaths = shapeData.shape.paths.shapes;
                    jLen = shapeData.shape.paths._length;
                    for (j = 0; j < jLen; j += 1) {
                        localShapeCollection.addShape(this.processPath(shapePaths[j], rd));
                    }
                }
                shapeData.shape.paths = shapeData.localShapeCollection;
            }
        }
        if (!this.dynamicProperties.length) {
            this._mdf = false;
        }
    };

    ShapeModifiers.registerModifier('rd', RoundCornersModifier);
    function RepeaterModifier() {}
    extendPrototype([ShapeModifier], RepeaterModifier);

    RepeaterModifier.prototype.initModifierProperties = function (elem, data) {
        this.getValue = this.processKeys;
        this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);
        this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);
        this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);
        this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);
        this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);
        this.data = data;
        if (!this.dynamicProperties.length) {
            this.getValue(true);
        }
        this._isAnimated = !!this.dynamicProperties.length;
        this.pMatrix = new Matrix();
        this.rMatrix = new Matrix();
        this.sMatrix = new Matrix();
        this.tMatrix = new Matrix();
        this.matrix = new Matrix();
    };

    RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {
        var dir = inv ? -1 : 1;
        var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
        var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
        pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);
        rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
        rMatrix.rotate(-transform.r.v * dir * perc);
        rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
        sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
        sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);
        sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
    };

    RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {
        this.elem = elem;
        this.arr = arr;
        this.pos = pos;
        this.elemsData = elemsData;
        this._currentCopies = 0;
        this._elements = [];
        this._groups = [];
        this.frameId = -1;
        this.initDynamicPropertyContainer(elem);
        this.initModifierProperties(elem, arr[pos]);
        var cont = 0;
        while (pos > 0) {
            pos -= 1;
            //this._elements.unshift(arr.splice(pos,1)[0]);
            this._elements.unshift(arr[pos]);
            cont += 1;
        }
        if (this.dynamicProperties.length) {
            this.k = true;
        } else {
            this.getValue(true);
        }
    };

    RepeaterModifier.prototype.resetElements = function (elements) {
        var i,
            len = elements.length;
        for (i = 0; i < len; i += 1) {
            elements[i]._processed = false;
            if (elements[i].ty === 'gr') {
                this.resetElements(elements[i].it);
            }
        }
    };

    RepeaterModifier.prototype.cloneElements = function (elements) {
        var i,
            len = elements.length;
        var newElements = JSON.parse(JSON.stringify(elements));
        this.resetElements(newElements);
        return newElements;
    };

    RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {
        var i,
            len = elements.length;
        for (i = 0; i < len; i += 1) {
            elements[i]._render = renderFlag;
            if (elements[i].ty === 'gr') {
                this.changeGroupRender(elements[i].it, renderFlag);
            }
        }
    };

    RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {
        var items, itemsTransform, i, dir, cont;
        if (this._mdf || _isFirstFrame) {
            var copies = Math.ceil(this.c.v);
            if (this._groups.length < copies) {
                while (this._groups.length < copies) {
                    var group = {
                        it: this.cloneElements(this._elements),
                        ty: 'gr'
                    };
                    group.it.push({ "a": { "a": 0, "ix": 1, "k": [0, 0] }, "nm": "Transform", "o": { "a": 0, "ix": 7, "k": 100 }, "p": { "a": 0, "ix": 2, "k": [0, 0] }, "r": { "a": 1, "ix": 6, "k": [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] }, "s": { "a": 0, "ix": 3, "k": [100, 100] }, "sa": { "a": 0, "ix": 5, "k": 0 }, "sk": { "a": 0, "ix": 4, "k": 0 }, "ty": "tr" });

                    this.arr.splice(0, 0, group);
                    this._groups.splice(0, 0, group);
                    this._currentCopies += 1;
                }
                this.elem.reloadShapes();
            }
            cont = 0;
            var renderFlag;
            for (i = 0; i <= this._groups.length - 1; i += 1) {
                renderFlag = cont < copies;
                this._groups[i]._render = renderFlag;
                this.changeGroupRender(this._groups[i].it, renderFlag);
                cont += 1;
            }

            this._currentCopies = copies;
            ////

            var offset = this.o.v;
            var offsetModulo = offset % 1;
            var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
            var k;
            var tMat = this.tr.v.props;
            var pProps = this.pMatrix.props;
            var rProps = this.rMatrix.props;
            var sProps = this.sMatrix.props;
            this.pMatrix.reset();
            this.rMatrix.reset();
            this.sMatrix.reset();
            this.tMatrix.reset();
            this.matrix.reset();
            var iteration = 0;

            if (offset > 0) {
                while (iteration < roundOffset) {
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                    iteration += 1;
                }
                if (offsetModulo) {
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
                    iteration += offsetModulo;
                }
            } else if (offset < 0) {
                while (iteration > roundOffset) {
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
                    iteration -= 1;
                }
                if (offsetModulo) {
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);
                    iteration -= offsetModulo;
                }
            }
            i = this.data.m === 1 ? 0 : this._currentCopies - 1;
            dir = this.data.m === 1 ? 1 : -1;
            cont = this._currentCopies;
            var j, jLen;
            while (cont) {
                items = this.elemsData[i].it;
                itemsTransform = items[items.length - 1].transform.mProps.v.props;
                jLen = itemsTransform.length;
                items[items.length - 1].transform.mProps._mdf = true;
                items[items.length - 1].transform.op._mdf = true;
                items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
                if (iteration !== 0) {
                    if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {
                        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                    }
                    this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);
                    this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);
                    this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);

                    for (j = 0; j < jLen; j += 1) {
                        itemsTransform[j] = this.matrix.props[j];
                    }
                    this.matrix.reset();
                } else {
                    this.matrix.reset();
                    for (j = 0; j < jLen; j += 1) {
                        itemsTransform[j] = this.matrix.props[j];
                    }
                }
                iteration += 1;
                cont -= 1;
                i += dir;
            }
        } else {
            cont = this._currentCopies;
            i = 0;
            dir = 1;
            while (cont) {
                items = this.elemsData[i].it;
                itemsTransform = items[items.length - 1].transform.mProps.v.props;
                items[items.length - 1].transform.mProps._mdf = false;
                items[items.length - 1].transform.op._mdf = false;
                cont -= 1;
                i += dir;
            }
        }
    };

    RepeaterModifier.prototype.addShape = function () {};

    ShapeModifiers.registerModifier('rp', RepeaterModifier);
    function ShapeCollection() {
        this._length = 0;
        this._maxLength = 4;
        this.shapes = createSizedArray(this._maxLength);
    }

    ShapeCollection.prototype.addShape = function (shapeData) {
        if (this._length === this._maxLength) {
            this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
            this._maxLength *= 2;
        }
        this.shapes[this._length] = shapeData;
        this._length += 1;
    };

    ShapeCollection.prototype.releaseShapes = function () {
        var i;
        for (i = 0; i < this._length; i += 1) {
            shape_pool.release(this.shapes[i]);
        }
        this._length = 0;
    };
    function DashProperty(elem, data, renderer, container) {
        this.elem = elem;
        this.frameId = -1;
        this.dataProps = createSizedArray(data.length);
        this.renderer = renderer;
        this.k = false;
        this.dashStr = '';
        this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);
        this.dashoffset = createTypedArray('float32', 1);
        this.initDynamicPropertyContainer(container);
        var i,
            len = data.length || 0,
            prop;
        for (i = 0; i < len; i += 1) {
            prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);
            this.k = prop.k || this.k;
            this.dataProps[i] = { n: data[i].n, p: prop };
        }
        if (!this.k) {
            this.getValue(true);
        }
        this._isAnimated = this.k;
    }

    DashProperty.prototype.getValue = function (forceRender) {
        if (this.elem.globalData.frameId === this.frameId && !forceRender) {
            return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || forceRender;
        if (this._mdf) {
            var i = 0,
                len = this.dataProps.length;
            if (this.renderer === 'svg') {
                this.dashStr = '';
            }
            for (i = 0; i < len; i += 1) {
                if (this.dataProps[i].n != 'o') {
                    if (this.renderer === 'svg') {
                        this.dashStr += ' ' + this.dataProps[i].p.v;
                    } else {
                        this.dashArray[i] = this.dataProps[i].p.v;
                    }
                } else {
                    this.dashoffset[0] = this.dataProps[i].p.v;
                }
            }
        }
    };
    extendPrototype([DynamicPropertyContainer], DashProperty);
    function GradientProperty(elem, data, container) {
        this.data = data;
        this.c = createTypedArray('uint8c', data.p * 4);
        var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;
        this.o = createTypedArray('float32', cLength);
        this._cmdf = false;
        this._omdf = false;
        this._collapsable = this.checkCollapsable();
        this._hasOpacity = cLength;
        this.initDynamicPropertyContainer(container);
        this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);
        this.k = this.prop.k;
        this.getValue(true);
    }

    GradientProperty.prototype.comparePoints = function (values, points) {
        var i = 0,
            len = this.o.length / 2,
            diff;
        while (i < len) {
            diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);
            if (diff > 0.01) {
                return false;
            }
            i += 1;
        }
        return true;
    };

    GradientProperty.prototype.checkCollapsable = function () {
        if (this.o.length / 2 !== this.c.length / 4) {
            return false;
        }
        if (this.data.k.k[0].s) {
            var i = 0,
                len = this.data.k.k.length;
            while (i < len) {
                if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
                    return false;
                }
                i += 1;
            }
        } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
            return false;
        }
        return true;
    };

    GradientProperty.prototype.getValue = function (forceRender) {
        this.prop.getValue();
        this._mdf = false;
        this._cmdf = false;
        this._omdf = false;
        if (this.prop._mdf || forceRender) {
            var i,
                len = this.data.p * 4;
            var mult, val;
            for (i = 0; i < len; i += 1) {
                mult = i % 4 === 0 ? 100 : 255;
                val = Math.round(this.prop.v[i] * mult);
                if (this.c[i] !== val) {
                    this.c[i] = val;
                    this._cmdf = !forceRender;
                }
            }
            if (this.o.length) {
                len = this.prop.v.length;
                for (i = this.data.p * 4; i < len; i += 1) {
                    mult = i % 2 === 0 ? 100 : 1;
                    val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];
                    if (this.o[i - this.data.p * 4] !== val) {
                        this.o[i - this.data.p * 4] = val;
                        this._omdf = !forceRender;
                    }
                }
            }
            this._mdf = !forceRender;
        }
    };

    extendPrototype([DynamicPropertyContainer], GradientProperty);
    var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {
        if (length === 0) {
            return '';
        }
        var _o = pathNodes.o;
        var _i = pathNodes.i;
        var _v = pathNodes.v;
        var i,
            shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        for (i = 1; i < length; i += 1) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[i][0], _i[i][1]) + " " + mat.applyToPointStringified(_v[i][0], _v[i][1]);
        }
        if (closed && length) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[0][0], _i[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
            shapeString += 'z';
        }
        return shapeString;
    };
    var ImagePreloader = function () {

        var proxyImage = function () {
            var canvas = createTag('canvas');
            canvas.width = 1;
            canvas.height = 1;
            var ctx = canvas.getContext('2d');
            ctx.fillStyle = 'rgba(0,0,0,0)';
            ctx.fillRect(0, 0, 1, 1);
            return canvas;
        }();

        function imageLoaded() {
            this.loadedAssets += 1;
            if (this.loadedAssets === this.totalImages) {
                if (this.imagesLoadedCb) {
                    this.imagesLoadedCb(null);
                }
            }
        }

        function getAssetsPath(assetData, assetsPath, original_path) {
            var path = '';
            if (assetData.e) {
                path = assetData.p;
            } else if (assetsPath) {
                var imagePath = assetData.p;
                if (imagePath.indexOf('images/') !== -1) {
                    imagePath = imagePath.split('/')[1];
                }
                path = assetsPath + imagePath;
            } else {
                path = original_path;
                path += assetData.u ? assetData.u : '';
                path += assetData.p;
            }
            return path;
        }

        function createImageData(assetData) {
            var path = getAssetsPath(assetData, this.assetsPath, this.path);
            var img = createNS('image');
            img.addEventListener('load', this._imageLoaded, false);
            img.addEventListener('error', function () {
                ob.img = proxyImage;
                this._imageLoaded();
            }.bind(this), false);
            img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);
            var ob = {
                img: img,
                assetData: assetData
            };
            return ob;
        }

        function createImgData(assetData) {
            var path = getAssetsPath(assetData, this.assetsPath, this.path);
            var img = createTag('img');
            img.crossOrigin = 'anonymous';
            img.addEventListener('load', this._imageLoaded, false);
            img.addEventListener('error', function () {
                ob.img = proxyImage;
                this._imageLoaded();
            }.bind(this), false);
            img.src = path;
            var ob = {
                img: img,
                assetData: assetData
            };
            return ob;
        }

        function loadAssets(assets, cb) {
            this.imagesLoadedCb = cb;
            var i,
                len = assets.length;
            for (i = 0; i < len; i += 1) {
                if (!assets[i].layers) {
                    this.totalImages += 1;
                    this.images.push(this._createImageData(assets[i]));
                }
            }
        }

        function setPath(path) {
            this.path = path || '';
        }

        function setAssetsPath(path) {
            this.assetsPath = path || '';
        }

        function getImage(assetData) {
            var i = 0,
                len = this.images.length;
            while (i < len) {
                if (this.images[i].assetData === assetData) {
                    return this.images[i].img;
                }
                i += 1;
            }
        }

        function destroy() {
            this.imagesLoadedCb = null;
            this.images.length = 0;
        }

        function loaded() {
            return this.totalImages === this.loadedAssets;
        }

        function setCacheType(type) {
            if (type === 'svg') {
                this._createImageData = this.createImageData.bind(this);
            } else {
                this._createImageData = this.createImgData.bind(this);
            }
        }

        function ImagePreloader(type) {
            this._imageLoaded = imageLoaded.bind(this);
            this.assetsPath = '';
            this.path = '';
            this.totalImages = 0;
            this.loadedAssets = 0;
            this.imagesLoadedCb = null;
            this.images = [];
        };

        ImagePreloader.prototype = {
            loadAssets: loadAssets,
            setAssetsPath: setAssetsPath,
            setPath: setPath,
            loaded: loaded,
            destroy: destroy,
            getImage: getImage,
            createImgData: createImgData,
            createImageData: createImageData,
            imageLoaded: imageLoaded,
            setCacheType: setCacheType
        };

        return ImagePreloader;
    }();
    var featureSupport = function () {
        var ob = {
            maskType: true
        };
        if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
            ob.maskType = false;
        }
        return ob;
    }();
    var filtersFactory = function () {
        var ob = {};
        ob.createFilter = createFilter;
        ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;

        function createFilter(filId) {
            var fil = createNS('filter');
            fil.setAttribute('id', filId);
            fil.setAttribute('filterUnits', 'objectBoundingBox');
            fil.setAttribute('x', '0%');
            fil.setAttribute('y', '0%');
            fil.setAttribute('width', '100%');
            fil.setAttribute('height', '100%');
            return fil;
        }

        function createAlphaToLuminanceFilter() {
            var feColorMatrix = createNS('feColorMatrix');
            feColorMatrix.setAttribute('type', 'matrix');
            feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
            feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');
            return feColorMatrix;
        }

        return ob;
    }();
    var assetLoader = function () {

        function formatResponse(xhr) {
            if (xhr.response && typeof xhr.response === 'object') {
                return xhr.response;
            } else if (xhr.response && typeof xhr.response === 'string') {
                return JSON.parse(xhr.response);
            } else if (xhr.responseText) {
                return JSON.parse(xhr.responseText);
            }
        }

        function loadAsset(path, callback, errorCallback) {
            var response;
            var xhr = new XMLHttpRequest();
            xhr.open('GET', path, true);
            // set responseType after calling open or IE will break.
            try {
                // This crashes on Android WebView prior to KitKat
                xhr.responseType = "json";
            } catch (err) {}
            xhr.send();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        response = formatResponse(xhr);
                        callback(response);
                    } else {
                        try {
                            response = formatResponse(xhr);
                            callback(response);
                        } catch (err) {
                            if (errorCallback) {
                                errorCallback(err);
                            }
                        }
                    }
                }
            };
        }
        return {
            load: loadAsset
        };
    }();

    function TextAnimatorProperty(textData, renderType, elem) {
        this._isFirstFrame = true;
        this._hasMaskedPath = false;
        this._frameId = -1;
        this._textData = textData;
        this._renderType = renderType;
        this._elem = elem;
        this._animatorsData = createSizedArray(this._textData.a.length);
        this._pathData = {};
        this._moreOptions = {
            alignment: {}
        };
        this.renderedLetters = [];
        this.lettersChangedFlag = false;
        this.initDynamicPropertyContainer(elem);
    }

    TextAnimatorProperty.prototype.searchProperties = function () {
        var i,
            len = this._textData.a.length,
            animatorProps;
        var getProp = PropertyFactory.getProp;
        for (i = 0; i < len; i += 1) {
            animatorProps = this._textData.a[i];
            this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
        }
        if (this._textData.p && 'm' in this._textData.p) {
            this._pathData = {
                f: getProp(this._elem, this._textData.p.f, 0, 0, this),
                l: getProp(this._elem, this._textData.p.l, 0, 0, this),
                r: this._textData.p.r,
                m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
            };
            this._hasMaskedPath = true;
        } else {
            this._hasMaskedPath = false;
        }
        this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);
    };

    TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {
        this.lettersChangedFlag = lettersChangedFlag;
        if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
            return;
        }
        this._isFirstFrame = false;
        var alignment = this._moreOptions.alignment.v;
        var animators = this._animatorsData;
        var textData = this._textData;
        var matrixHelper = this.mHelper;
        var renderType = this._renderType;
        var renderedLettersCount = this.renderedLetters.length;
        var data = this.data;
        var xPos, yPos;
        var i, len;
        var letters = documentData.l,
            pathInfo,
            currentLength,
            currentPoint,
            segmentLength,
            flag,
            pointInd,
            segmentInd,
            prevPoint,
            points,
            segments,
            partialLength,
            totalLength,
            perc,
            tanAngle,
            mask;
        if (this._hasMaskedPath) {
            mask = this._pathData.m;
            if (!this._pathData.n || this._pathData._mdf) {
                var paths = mask.v;
                if (this._pathData.r) {
                    paths = paths.reverse();
                }
                // TODO: release bezier data cached from previous pathInfo: this._pathData.pi
                pathInfo = {
                    tLength: 0,
                    segments: []
                };
                len = paths._length - 1;
                var bezierData;
                totalLength = 0;
                for (i = 0; i < len; i += 1) {
                    bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);
                    pathInfo.tLength += bezierData.segmentLength;
                    pathInfo.segments.push(bezierData);
                    totalLength += bezierData.segmentLength;
                }
                i = len;
                if (mask.v.c) {
                    bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
                    pathInfo.tLength += bezierData.segmentLength;
                    pathInfo.segments.push(bezierData);
                    totalLength += bezierData.segmentLength;
                }
                this._pathData.pi = pathInfo;
            }
            pathInfo = this._pathData.pi;

            currentLength = this._pathData.f.v;
            segmentInd = 0;
            pointInd = 1;
            segmentLength = 0;
            flag = true;
            segments = pathInfo.segments;
            if (currentLength < 0 && mask.v.c) {
                if (pathInfo.tLength < Math.abs(currentLength)) {
                    currentLength = -Math.abs(currentLength) % pathInfo.tLength;
                }
                segmentInd = segments.length - 1;
                points = segments[segmentInd].points;
                pointInd = points.length - 1;
                while (currentLength < 0) {
                    currentLength += points[pointInd].partialLength;
                    pointInd -= 1;
                    if (pointInd < 0) {
                        segmentInd -= 1;
                        points = segments[segmentInd].points;
                        pointInd = points.length - 1;
                    }
                }
            }
            points = segments[segmentInd].points;
            prevPoint = points[pointInd - 1];
            currentPoint = points[pointInd];
            partialLength = currentPoint.partialLength;
        }

        len = letters.length;
        xPos = 0;
        yPos = 0;
        var yOff = documentData.finalSize * 1.2 * 0.714;
        var firstLine = true;
        var animatorProps, animatorSelector;
        var j, jLen;
        var letterValue;

        jLen = animators.length;
        var lastLetter;

        var mult,
            ind = -1,
            offf,
            xPathPos,
            yPathPos;
        var initPathPos = currentLength,
            initSegmentInd = segmentInd,
            initPointInd = pointInd,
            currentLine = -1;
        var elemOpacity;
        var sc, sw, fc, k;
        var lineLength = 0;
        var letterSw,
            letterSc,
            letterFc,
            letterM = '',
            letterP = this.defaultPropsArray,
            letterO;

        //
        if (documentData.j === 2 || documentData.j === 1) {
            var animatorJustifyOffset = 0;
            var animatorFirstCharOffset = 0;
            var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
            var lastIndex = 0;
            var isNewLine = true;

            for (i = 0; i < len; i += 1) {
                if (letters[i].n) {
                    if (animatorJustifyOffset) {
                        animatorJustifyOffset += animatorFirstCharOffset;
                    }
                    while (lastIndex < i) {
                        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                        lastIndex += 1;
                    }
                    animatorJustifyOffset = 0;
                    isNewLine = true;
                } else {
                    for (j = 0; j < jLen; j += 1) {
                        animatorProps = animators[j].a;
                        if (animatorProps.t.propType) {
                            if (isNewLine && documentData.j === 2) {
                                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                            }
                            animatorSelector = animators[j].s;
                            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                            if (mult.length) {
                                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;
                            } else {
                                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;
                            }
                        }
                    }
                    isNewLine = false;
                }
            }
            if (animatorJustifyOffset) {
                animatorJustifyOffset += animatorFirstCharOffset;
            }
            while (lastIndex < i) {
                letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                lastIndex += 1;
            }
        }
        //

        for (i = 0; i < len; i += 1) {

            matrixHelper.reset();
            elemOpacity = 1;
            if (letters[i].n) {
                xPos = 0;
                yPos += documentData.yOffset;
                yPos += firstLine ? 1 : 0;
                currentLength = initPathPos;
                firstLine = false;
                lineLength = 0;
                if (this._hasMaskedPath) {
                    segmentInd = initSegmentInd;
                    pointInd = initPointInd;
                    points = segments[segmentInd].points;
                    prevPoint = points[pointInd - 1];
                    currentPoint = points[pointInd];
                    partialLength = currentPoint.partialLength;
                    segmentLength = 0;
                }
                letterO = letterSw = letterFc = letterM = '';
                letterP = this.defaultPropsArray;
            } else {
                if (this._hasMaskedPath) {
                    if (currentLine !== letters[i].line) {
                        switch (documentData.j) {
                            case 1:
                                currentLength += totalLength - documentData.lineWidths[letters[i].line];
                                break;
                            case 2:
                                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;
                                break;
                        }
                        currentLine = letters[i].line;
                    }
                    if (ind !== letters[i].ind) {
                        if (letters[ind]) {
                            currentLength += letters[ind].extra;
                        }
                        currentLength += letters[i].an / 2;
                        ind = letters[i].ind;
                    }
                    currentLength += alignment[0] * letters[i].an / 200;
                    var animatorOffset = 0;
                    for (j = 0; j < jLen; j += 1) {
                        animatorProps = animators[j].a;
                        if (animatorProps.p.propType) {
                            animatorSelector = animators[j].s;
                            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                            if (mult.length) {
                                animatorOffset += animatorProps.p.v[0] * mult[0];
                            } else {
                                animatorOffset += animatorProps.p.v[0] * mult;
                            }
                        }
                        if (animatorProps.a.propType) {
                            animatorSelector = animators[j].s;
                            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                            if (mult.length) {
                                animatorOffset += animatorProps.a.v[0] * mult[0];
                            } else {
                                animatorOffset += animatorProps.a.v[0] * mult;
                            }
                        }
                    }
                    flag = true;
                    while (flag) {
                        if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                            perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                            xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                            yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                            matrixHelper.translate(-alignment[0] * letters[i].an / 200, -(alignment[1] * yOff / 100));
                            flag = false;
                        } else if (points) {
                            segmentLength += currentPoint.partialLength;
                            pointInd += 1;
                            if (pointInd >= points.length) {
                                pointInd = 0;
                                segmentInd += 1;
                                if (!segments[segmentInd]) {
                                    if (mask.v.c) {
                                        pointInd = 0;
                                        segmentInd = 0;
                                        points = segments[segmentInd].points;
                                    } else {
                                        segmentLength -= currentPoint.partialLength;
                                        points = null;
                                    }
                                } else {
                                    points = segments[segmentInd].points;
                                }
                            }
                            if (points) {
                                prevPoint = currentPoint;
                                currentPoint = points[pointInd];
                                partialLength = currentPoint.partialLength;
                            }
                        }
                    }
                    offf = letters[i].an / 2 - letters[i].add;
                    matrixHelper.translate(-offf, 0, 0);
                } else {
                    offf = letters[i].an / 2 - letters[i].add;
                    matrixHelper.translate(-offf, 0, 0);

                    // Grouping alignment
                    matrixHelper.translate(-alignment[0] * letters[i].an / 200, -alignment[1] * yOff / 100, 0);
                }

                lineLength += letters[i].l / 2;
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.t.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                        //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
                        if (xPos !== 0 || documentData.j !== 0) {
                            if (this._hasMaskedPath) {
                                if (mult.length) {
                                    currentLength += animatorProps.t.v * mult[0];
                                } else {
                                    currentLength += animatorProps.t.v * mult;
                                }
                            } else {
                                if (mult.length) {
                                    xPos += animatorProps.t.v * mult[0];
                                } else {
                                    xPos += animatorProps.t.v * mult;
                                }
                            }
                        }
                    }
                }
                lineLength += letters[i].l / 2;
                if (documentData.strokeWidthAnim) {
                    sw = documentData.sw || 0;
                }
                if (documentData.strokeColorAnim) {
                    if (documentData.sc) {
                        sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
                    } else {
                        sc = [0, 0, 0];
                    }
                }
                if (documentData.fillColorAnim && documentData.fc) {
                    fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
                }
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.a.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);

                        if (mult.length) {
                            matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);
                        } else {
                            matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);
                        }
                    }
                }
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.s.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                        if (mult.length) {
                            matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);
                        } else {
                            matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);
                        }
                    }
                }
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                    if (animatorProps.sk.propType) {
                        if (mult.length) {
                            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
                        } else {
                            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
                        }
                    }
                    if (animatorProps.r.propType) {
                        if (mult.length) {
                            matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                        } else {
                            matrixHelper.rotateZ(-animatorProps.r.v * mult);
                        }
                    }
                    if (animatorProps.ry.propType) {

                        if (mult.length) {
                            matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
                        } else {
                            matrixHelper.rotateY(animatorProps.ry.v * mult);
                        }
                    }
                    if (animatorProps.rx.propType) {
                        if (mult.length) {
                            matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
                        } else {
                            matrixHelper.rotateX(animatorProps.rx.v * mult);
                        }
                    }
                    if (animatorProps.o.propType) {
                        if (mult.length) {
                            elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
                        } else {
                            elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;
                        }
                    }
                    if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
                        if (mult.length) {
                            sw += animatorProps.sw.v * mult[0];
                        } else {
                            sw += animatorProps.sw.v * mult;
                        }
                    }
                    if (documentData.strokeColorAnim && animatorProps.sc.propType) {
                        for (k = 0; k < 3; k += 1) {
                            if (mult.length) {
                                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult[0];
                            } else {
                                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult;
                            }
                        }
                    }
                    if (documentData.fillColorAnim && documentData.fc) {
                        if (animatorProps.fc.propType) {
                            for (k = 0; k < 3; k += 1) {
                                if (mult.length) {
                                    fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult[0];
                                } else {
                                    fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult;
                                }
                            }
                        }
                        if (animatorProps.fh.propType) {
                            if (mult.length) {
                                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);
                            } else {
                                fc = addHueToRGB(fc, animatorProps.fh.v * mult);
                            }
                        }
                        if (animatorProps.fs.propType) {
                            if (mult.length) {
                                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);
                            } else {
                                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);
                            }
                        }
                        if (animatorProps.fb.propType) {
                            if (mult.length) {
                                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);
                            } else {
                                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);
                            }
                        }
                    }
                }

                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;

                    if (animatorProps.p.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                        if (this._hasMaskedPath) {
                            if (mult.length) {
                                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                            } else {
                                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                            }
                        } else {
                            if (mult.length) {
                                matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
                            } else {
                                matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                            }
                        }
                    }
                }
                if (documentData.strokeWidthAnim) {
                    letterSw = sw < 0 ? 0 : sw;
                }
                if (documentData.strokeColorAnim) {
                    letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';
                }
                if (documentData.fillColorAnim && documentData.fc) {
                    letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';
                }

                if (this._hasMaskedPath) {
                    matrixHelper.translate(0, -documentData.ls);

                    matrixHelper.translate(0, alignment[1] * yOff / 100 + yPos, 0);
                    if (textData.p.p) {
                        tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
                        var rot = Math.atan(tanAngle) * 180 / Math.PI;
                        if (currentPoint.point[0] < prevPoint.point[0]) {
                            rot += 180;
                        }
                        matrixHelper.rotate(-rot * Math.PI / 180);
                    }
                    matrixHelper.translate(xPathPos, yPathPos, 0);
                    currentLength -= alignment[0] * letters[i].an / 200;
                    if (letters[i + 1] && ind !== letters[i + 1].ind) {
                        currentLength += letters[i].an / 2;
                        currentLength += documentData.tr / 1000 * documentData.finalSize;
                    }
                } else {

                    matrixHelper.translate(xPos, yPos, 0);

                    if (documentData.ps) {
                        //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
                        matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
                    }
                    switch (documentData.j) {
                        case 1:
                            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);
                            break;
                        case 2:
                            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);
                            break;
                    }
                    matrixHelper.translate(0, -documentData.ls);
                    matrixHelper.translate(offf, 0, 0);
                    matrixHelper.translate(alignment[0] * letters[i].an / 200, alignment[1] * yOff / 100, 0);
                    xPos += letters[i].l + documentData.tr / 1000 * documentData.finalSize;
                }
                if (renderType === 'html') {
                    letterM = matrixHelper.toCSS();
                } else if (renderType === 'svg') {
                    letterM = matrixHelper.to2dCSS();
                } else {
                    letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];
                }
                letterO = elemOpacity;
            }

            if (renderedLettersCount <= i) {
                letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);
                this.renderedLetters.push(letterValue);
                renderedLettersCount += 1;
                this.lettersChangedFlag = true;
            } else {
                letterValue = this.renderedLetters[i];
                this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
            }
        }
    };

    TextAnimatorProperty.prototype.getValue = function () {
        if (this._elem.globalData.frameId === this._frameId) {
            return;
        }
        this._frameId = this._elem.globalData.frameId;
        this.iterateDynamicProperties();
    };

    TextAnimatorProperty.prototype.mHelper = new Matrix();
    TextAnimatorProperty.prototype.defaultPropsArray = [];
    extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
    function TextAnimatorDataProperty(elem, animatorProps, container) {
        var defaultData = { propType: false };
        var getProp = PropertyFactory.getProp;
        var textAnimator_animatables = animatorProps.a;
        this.a = {
            r: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,
            rx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,
            ry: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,
            sk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,
            sa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,
            s: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,
            a: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,
            o: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,
            p: textAnimator_animatables.p ? getProp(elem, textAnimator_animatables.p, 1, 0, container) : defaultData,
            sw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,
            sc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,
            fc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,
            fh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,
            fs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,
            fb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,
            t: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData
        };

        this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);
        this.s.t = animatorProps.s.t;
    }
    function LetterProps(o, sw, sc, fc, m, p) {
        this.o = o;
        this.sw = sw;
        this.sc = sc;
        this.fc = fc;
        this.m = m;
        this.p = p;
        this._mdf = {
            o: true,
            sw: !!sw,
            sc: !!sc,
            fc: !!fc,
            m: true,
            p: true
        };
    }

    LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {
        this._mdf.o = false;
        this._mdf.sw = false;
        this._mdf.sc = false;
        this._mdf.fc = false;
        this._mdf.m = false;
        this._mdf.p = false;
        var updated = false;

        if (this.o !== o) {
            this.o = o;
            this._mdf.o = true;
            updated = true;
        }
        if (this.sw !== sw) {
            this.sw = sw;
            this._mdf.sw = true;
            updated = true;
        }
        if (this.sc !== sc) {
            this.sc = sc;
            this._mdf.sc = true;
            updated = true;
        }
        if (this.fc !== fc) {
            this.fc = fc;
            this._mdf.fc = true;
            updated = true;
        }
        if (this.m !== m) {
            this.m = m;
            this._mdf.m = true;
            updated = true;
        }
        if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {
            this.p = p;
            this._mdf.p = true;
            updated = true;
        }
        return updated;
    };
    function TextProperty(elem, data) {
        this._frameId = initialDefaultFrame;
        this.pv = '';
        this.v = '';
        this.kf = false;
        this._isFirstFrame = true;
        this._mdf = false;
        this.data = data;
        this.elem = elem;
        this.comp = this.elem.comp;
        this.keysIndex = 0;
        this.canResize = false;
        this.minimumFontSize = 1;
        this.effectsSequence = [];
        this.currentData = {
            ascent: 0,
            boxWidth: this.defaultBoxWidth,
            f: '',
            fStyle: '',
            fWeight: '',
            fc: '',
            j: '',
            justifyOffset: '',
            l: [],
            lh: 0,
            lineWidths: [],
            ls: '',
            of: '',
            s: '',
            sc: '',
            sw: 0,
            t: 0,
            tr: 0,
            sz: 0,
            ps: null,
            fillColorAnim: false,
            strokeColorAnim: false,
            strokeWidthAnim: false,
            yOffset: 0,
            finalSize: 0,
            finalText: [],
            finalLineHeight: 0,
            __complete: false

        };
        this.copyData(this.currentData, this.data.d.k[0].s);

        if (!this.searchProperty()) {
            this.completeTextData(this.currentData);
        }
    }

    TextProperty.prototype.defaultBoxWidth = [0, 0];

    TextProperty.prototype.copyData = function (obj, data) {
        for (var s in data) {
            if (data.hasOwnProperty(s)) {
                obj[s] = data[s];
            }
        }
        return obj;
    };

    TextProperty.prototype.setCurrentData = function (data) {
        if (!data.__complete) {
            this.completeTextData(data);
        }
        this.currentData = data;
        this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
        this._mdf = true;
    };

    TextProperty.prototype.searchProperty = function () {
        return this.searchKeyframes();
    };

    TextProperty.prototype.searchKeyframes = function () {
        this.kf = this.data.d.k.length > 1;
        if (this.kf) {
            this.addEffect(this.getKeyframeValue.bind(this));
        }
        return this.kf;
    };

    TextProperty.prototype.addEffect = function (effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.elem.addDynamicProperty(this);
    };

    TextProperty.prototype.getValue = function (_finalValue) {
        if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
            return;
        }
        this.currentData.t = this.data.d.k[this.keysIndex].s.t;
        var currentValue = this.currentData;
        var currentIndex = this.keysIndex;
        if (this.lock) {
            this.setCurrentData(this.currentData);
            return;
        }
        this.lock = true;
        this._mdf = false;
        var multipliedValue;
        var i,
            len = this.effectsSequence.length;
        var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
        for (i = 0; i < len; i += 1) {
            //Checking if index changed to prevent creating a new object every time the expression updates.
            if (currentIndex !== this.keysIndex) {
                finalValue = this.effectsSequence[i](finalValue, finalValue.t);
            } else {
                finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
            }
        }
        if (currentValue !== finalValue) {
            this.setCurrentData(finalValue);
        }
        this.pv = this.v = this.currentData;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
    };

    TextProperty.prototype.getKeyframeValue = function () {
        var textKeys = this.data.d.k,
            textDocumentData;
        var frameNum = this.elem.comp.renderedFrame;
        var i = 0,
            len = textKeys.length;
        while (i <= len - 1) {
            textDocumentData = textKeys[i].s;
            if (i === len - 1 || textKeys[i + 1].t > frameNum) {
                break;
            }
            i += 1;
        }
        if (this.keysIndex !== i) {
            this.keysIndex = i;
        }
        return this.data.d.k[this.keysIndex].s;
    };

    TextProperty.prototype.buildFinalText = function (text) {
        var combinedCharacters = FontManager.getCombinedCharacterCodes();
        var charactersArray = [];
        var i = 0,
            len = text.length;
        var charCode;
        while (i < len) {
            charCode = text.charCodeAt(i);
            if (combinedCharacters.indexOf(charCode) !== -1) {
                charactersArray[charactersArray.length - 1] += text.charAt(i);
            } else {
                if (charCode >= 0xD800 && charCode <= 0xDBFF) {
                    charCode = text.charCodeAt(i + 1);
                    if (charCode >= 0xDC00 && charCode <= 0xDFFF) {
                        charactersArray.push(text.substr(i, 2));
                        ++i;
                    } else {
                        charactersArray.push(text.charAt(i));
                    }
                } else {
                    charactersArray.push(text.charAt(i));
                }
            }
            i += 1;
        }
        return charactersArray;
    };

    TextProperty.prototype.completeTextData = function (documentData) {
        documentData.__complete = true;
        var fontManager = this.elem.globalData.fontManager;
        var data = this.data;
        var letters = [];
        var i, len;
        var newLineFlag,
            index = 0,
            val;
        var anchorGrouping = data.m.g;
        var currentSize = 0,
            currentPos = 0,
            currentLine = 0,
            lineWidths = [];
        var lineWidth = 0;
        var maxLineWidth = 0;
        var j, jLen;
        var fontData = fontManager.getFontByName(documentData.f);
        var charData,
            cLength = 0;
        var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];

        var fWeight = 'normal',
            fStyle = 'normal';
        len = styles.length;
        var styleName;
        for (i = 0; i < len; i += 1) {
            styleName = styles[i].toLowerCase();
            switch (styleName) {
                case 'italic':
                    fStyle = 'italic';
                    break;
                case 'bold':
                    fWeight = '700';
                    break;
                case 'black':
                    fWeight = '900';
                    break;
                case 'medium':
                    fWeight = '500';
                    break;
                case 'regular':
                case 'normal':
                    fWeight = '400';
                    break;
                case 'light':
                case 'thin':
                    fWeight = '200';
                    break;
            }
        }
        documentData.fWeight = fontData.fWeight || fWeight;
        documentData.fStyle = fStyle;
        documentData.finalSize = documentData.s;
        documentData.finalText = this.buildFinalText(documentData.t);
        len = documentData.finalText.length;
        documentData.finalLineHeight = documentData.lh;
        var trackingOffset = documentData.tr / 1000 * documentData.finalSize;
        var charCode;
        if (documentData.sz) {
            var flag = true;
            var boxWidth = documentData.sz[0];
            var boxHeight = documentData.sz[1];
            var currentHeight, finalText;
            while (flag) {
                finalText = this.buildFinalText(documentData.t);
                currentHeight = 0;
                lineWidth = 0;
                len = finalText.length;
                trackingOffset = documentData.tr / 1000 * documentData.finalSize;
                var lastSpaceIndex = -1;
                for (i = 0; i < len; i += 1) {
                    charCode = finalText[i].charCodeAt(0);
                    newLineFlag = false;
                    if (finalText[i] === ' ') {
                        lastSpaceIndex = i;
                    } else if (charCode === 13 || charCode === 3) {
                        lineWidth = 0;
                        newLineFlag = true;
                        currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
                    }
                    if (fontManager.chars) {
                        charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
                        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
                    } else {
                        //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
                        cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
                    }
                    if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {
                        if (lastSpaceIndex === -1) {
                            len += 1;
                        } else {
                            i = lastSpaceIndex;
                        }
                        currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
                        finalText.splice(i, lastSpaceIndex === i ? 1 : 0, "\r");
                        //finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
                        lastSpaceIndex = -1;
                        lineWidth = 0;
                    } else {
                        lineWidth += cLength;
                        lineWidth += trackingOffset;
                    }
                }
                currentHeight += fontData.ascent * documentData.finalSize / 100;
                if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
                    documentData.finalSize -= 1;
                    documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
                } else {
                    documentData.finalText = finalText;
                    len = documentData.finalText.length;
                    flag = false;
                }
            }
        }
        lineWidth = -trackingOffset;
        cLength = 0;
        var uncollapsedSpaces = 0;
        var currentChar;
        for (i = 0; i < len; i += 1) {
            newLineFlag = false;
            currentChar = documentData.finalText[i];
            charCode = currentChar.charCodeAt(0);
            if (charCode === 13 || charCode === 3) {
                uncollapsedSpaces = 0;
                lineWidths.push(lineWidth);
                maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
                lineWidth = -2 * trackingOffset;
                val = '';
                newLineFlag = true;
                currentLine += 1;
            } else {
                val = currentChar;
            }
            if (fontManager.chars) {
                charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
                cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
            } else {
                //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
                //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
                cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);
            }

            //
            if (currentChar === ' ') {
                uncollapsedSpaces += cLength + trackingOffset;
            } else {
                lineWidth += cLength + trackingOffset + uncollapsedSpaces;
                uncollapsedSpaces = 0;
            }
            letters.push({ l: cLength, an: cLength, add: currentSize, n: newLineFlag, anIndexes: [], val: val, line: currentLine, animatorJustifyOffset: 0 });
            if (anchorGrouping == 2) {
                currentSize += cLength;
                if (val === '' || val === ' ' || i === len - 1) {
                    if (val === '' || val === ' ') {
                        currentSize -= cLength;
                    }
                    while (currentPos <= i) {
                        letters[currentPos].an = currentSize;
                        letters[currentPos].ind = index;
                        letters[currentPos].extra = cLength;
                        currentPos += 1;
                    }
                    index += 1;
                    currentSize = 0;
                }
            } else if (anchorGrouping == 3) {
                currentSize += cLength;
                if (val === '' || i === len - 1) {
                    if (val === '') {
                        currentSize -= cLength;
                    }
                    while (currentPos <= i) {
                        letters[currentPos].an = currentSize;
                        letters[currentPos].ind = index;
                        letters[currentPos].extra = cLength;
                        currentPos += 1;
                    }
                    currentSize = 0;
                    index += 1;
                }
            } else {
                letters[index].ind = index;
                letters[index].extra = 0;
                index += 1;
            }
        }
        documentData.l = letters;
        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
        lineWidths.push(lineWidth);
        if (documentData.sz) {
            documentData.boxWidth = documentData.sz[0];
            documentData.justifyOffset = 0;
        } else {
            documentData.boxWidth = maxLineWidth;
            switch (documentData.j) {
                case 1:
                    documentData.justifyOffset = -documentData.boxWidth;
                    break;
                case 2:
                    documentData.justifyOffset = -documentData.boxWidth / 2;
                    break;
                default:
                    documentData.justifyOffset = 0;
            }
        }
        documentData.lineWidths = lineWidths;

        var animators = data.a,
            animatorData,
            letterData;
        jLen = animators.length;
        var based,
            ind,
            indexes = [];
        for (j = 0; j < jLen; j += 1) {
            animatorData = animators[j];
            if (animatorData.a.sc) {
                documentData.strokeColorAnim = true;
            }
            if (animatorData.a.sw) {
                documentData.strokeWidthAnim = true;
            }
            if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {
                documentData.fillColorAnim = true;
            }
            ind = 0;
            based = animatorData.s.b;
            for (i = 0; i < len; i += 1) {
                letterData = letters[i];
                letterData.anIndexes[j] = ind;
                if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {
                    if (animatorData.s.rn === 1) {
                        indexes.push(ind);
                    }
                    ind += 1;
                }
            }
            data.a[j].s.totalChars = ind;
            var currentInd = -1,
                newInd;
            if (animatorData.s.rn === 1) {
                for (i = 0; i < len; i += 1) {
                    letterData = letters[i];
                    if (currentInd != letterData.anIndexes[j]) {
                        currentInd = letterData.anIndexes[j];
                        newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];
                    }
                    letterData.anIndexes[j] = newInd;
                }
            }
        }
        documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;
        documentData.ls = documentData.ls || 0;
        documentData.ascent = fontData.ascent * documentData.finalSize / 100;
    };

    TextProperty.prototype.updateDocumentData = function (newData, index) {
        index = index === undefined ? this.keysIndex : index;
        var dData = this.copyData({}, this.data.d.k[index].s);
        dData = this.copyData(dData, newData);
        this.data.d.k[index].s = dData;
        this.recalculate(index);
        this.elem.addDynamicProperty(this);
    };

    TextProperty.prototype.recalculate = function (index) {
        var dData = this.data.d.k[index].s;
        dData.__complete = false;
        this.keysIndex = 0;
        this._isFirstFrame = true;
        this.getValue(dData);
    };

    TextProperty.prototype.canResizeFont = function (_canResize) {
        this.canResize = _canResize;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
    };

    TextProperty.prototype.setMinimumFontSize = function (_fontValue) {
        this.minimumFontSize = Math.floor(_fontValue) || 1;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
    };

    var TextSelectorProp = function () {
        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;

        function TextSelectorProp(elem, data) {
            this._currentTextLength = -1;
            this.k = false;
            this.data = data;
            this.elem = elem;
            this.comp = elem.comp;
            this.finalS = 0;
            this.finalE = 0;
            this.initDynamicPropertyContainer(elem);
            this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this);
            if ('e' in data) {
                this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);
            } else {
                this.e = { v: 100 };
            }
            this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this);
            this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this);
            this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this);
            this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);
            if (!this.dynamicProperties.length) {
                this.getValue();
            }
        }

        TextSelectorProp.prototype = {
            getMult: function getMult(ind) {
                if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
                    this.getValue();
                }
                //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);
                var x1 = 0;
                var y1 = 0;
                var x2 = 1;
                var y2 = 1;
                if (this.ne.v > 0) {
                    x1 = this.ne.v / 100.0;
                } else {
                    y1 = -this.ne.v / 100.0;
                }
                if (this.xe.v > 0) {
                    x2 = 1.0 - this.xe.v / 100.0;
                } else {
                    y2 = 1.0 + this.xe.v / 100.0;
                }
                var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;

                var mult = 0;
                var s = this.finalS;
                var e = this.finalE;
                var type = this.data.sh;
                if (type === 2) {
                    if (e === s) {
                        mult = ind >= e ? 1 : 0;
                    } else {
                        mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                    }
                    mult = easer(mult);
                } else if (type === 3) {
                    if (e === s) {
                        mult = ind >= e ? 0 : 1;
                    } else {
                        mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                    }

                    mult = easer(mult);
                } else if (type === 4) {
                    if (e === s) {
                        mult = 0;
                    } else {
                        mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                        if (mult < 0.5) {
                            mult *= 2;
                        } else {
                            mult = 1 - 2 * (mult - 0.5);
                        }
                    }
                    mult = easer(mult);
                } else if (type === 5) {
                    if (e === s) {
                        mult = 0;
                    } else {
                        var tot = e - s;
                        /*ind += 0.5;
                        mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/
                        ind = min(max(0, ind + 0.5 - s), e - s);
                        var x = -tot / 2 + ind;
                        var a = tot / 2;
                        mult = Math.sqrt(1 - x * x / (a * a));
                    }
                    mult = easer(mult);
                } else if (type === 6) {
                    if (e === s) {
                        mult = 0;
                    } else {
                        ind = min(max(0, ind + 0.5 - s), e - s);
                        mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;
                    }
                    mult = easer(mult);
                } else {
                    if (ind >= floor(s)) {
                        if (ind - s < 0) {
                            mult = max(0, min(min(e, 1) - (s - ind), 1));
                        } else {
                            mult = max(0, min(e - ind, 1));
                        }
                    }
                    mult = easer(mult);
                }
                return mult * this.a.v;
            },
            getValue: function getValue(newCharsFlag) {
                this.iterateDynamicProperties();
                this._mdf = newCharsFlag || this._mdf;
                this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
                if (newCharsFlag && this.data.r === 2) {
                    this.e.v = this._currentTextLength;
                }
                var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
                var o = this.o.v / divisor;
                var s = this.s.v / divisor + o;
                var e = this.e.v / divisor + o;
                if (s > e) {
                    var _s = s;
                    s = e;
                    e = _s;
                }
                this.finalS = s;
                this.finalE = e;
            }
        };
        extendPrototype([DynamicPropertyContainer], TextSelectorProp);

        function getTextSelectorProp(elem, data, arr) {
            return new TextSelectorProp(elem, data, arr);
        }

        return {
            getTextSelectorProp: getTextSelectorProp
        };
    }();

    var pool_factory = function () {
        return function (initialLength, _create, _release, _clone) {

            var _length = 0;
            var _maxLength = initialLength;
            var pool = createSizedArray(_maxLength);

            var ob = {
                newElement: newElement,
                release: release
            };

            function newElement() {
                var element;
                if (_length) {
                    _length -= 1;
                    element = pool[_length];
                } else {
                    element = _create();
                }
                return element;
            }

            function release(element) {
                if (_length === _maxLength) {
                    pool = pooling.double(pool);
                    _maxLength = _maxLength * 2;
                }
                if (_release) {
                    _release(element);
                }
                pool[_length] = element;
                _length += 1;
            }

            function clone() {
                var clonedElement = newElement();
                return _clone(clonedElement);
            }

            return ob;
        };
    }();

    var pooling = function () {

        function double(arr) {
            return arr.concat(createSizedArray(arr.length));
        }

        return {
            double: double
        };
    }();
    var point_pool = function () {

        function create() {
            return createTypedArray('float32', 2);
        }
        return pool_factory(8, create);
    }();
    var shape_pool = function () {

        function create() {
            return new ShapePath();
        }

        function release(shapePath) {
            var len = shapePath._length,
                i;
            for (i = 0; i < len; i += 1) {
                point_pool.release(shapePath.v[i]);
                point_pool.release(shapePath.i[i]);
                point_pool.release(shapePath.o[i]);
                shapePath.v[i] = null;
                shapePath.i[i] = null;
                shapePath.o[i] = null;
            }
            shapePath._length = 0;
            shapePath.c = false;
        }

        function clone(shape) {
            var cloned = factory.newElement();
            var i,
                len = shape._length === undefined ? shape.v.length : shape._length;
            cloned.setLength(len);
            cloned.c = shape.c;
            var pt;

            for (i = 0; i < len; i += 1) {
                cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);
            }
            return cloned;
        }

        var factory = pool_factory(4, create, release);
        factory.clone = clone;

        return factory;
    }();
    var shapeCollection_pool = function () {
        var ob = {
            newShapeCollection: newShapeCollection,
            release: release
        };

        var _length = 0;
        var _maxLength = 4;
        var pool = createSizedArray(_maxLength);

        function newShapeCollection() {
            var shapeCollection;
            if (_length) {
                _length -= 1;
                shapeCollection = pool[_length];
            } else {
                shapeCollection = new ShapeCollection();
            }
            return shapeCollection;
        }

        function release(shapeCollection) {
            var i,
                len = shapeCollection._length;
            for (i = 0; i < len; i += 1) {
                shape_pool.release(shapeCollection.shapes[i]);
            }
            shapeCollection._length = 0;

            if (_length === _maxLength) {
                pool = pooling.double(pool);
                _maxLength = _maxLength * 2;
            }
            pool[_length] = shapeCollection;
            _length += 1;
        }

        return ob;
    }();
    var segments_length_pool = function () {

        function create() {
            return {
                lengths: [],
                totalLength: 0
            };
        }

        function release(element) {
            var i,
                len = element.lengths.length;
            for (i = 0; i < len; i += 1) {
                bezier_length_pool.release(element.lengths[i]);
            }
            element.lengths.length = 0;
        }

        return pool_factory(8, create, release);
    }();
    var bezier_length_pool = function () {

        function create() {
            return {
                addedLength: 0,
                percents: createTypedArray('float32', defaultCurveSegments),
                lengths: createTypedArray('float32', defaultCurveSegments)
            };
        }
        return pool_factory(8, create);
    }();
    function BaseRenderer() {}
    BaseRenderer.prototype.checkLayers = function (num) {
        var i,
            len = this.layers.length,
            data;
        this.completeLayers = true;
        for (i = len - 1; i >= 0; i--) {
            if (!this.elements[i]) {
                data = this.layers[i];
                if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {
                    this.buildItem(i);
                }
            }
            this.completeLayers = this.elements[i] ? this.completeLayers : false;
        }
        this.checkPendingElements();
    };

    BaseRenderer.prototype.createItem = function (layer) {
        switch (layer.ty) {
            case 2:
                return this.createImage(layer);
            case 0:
                return this.createComp(layer);
            case 1:
                return this.createSolid(layer);
            case 3:
                return this.createNull(layer);
            case 4:
                return this.createShape(layer);
            case 5:
                return this.createText(layer);
            case 13:
                return this.createCamera(layer);
        }
        return this.createNull(layer);
    };

    BaseRenderer.prototype.createCamera = function () {
        throw new Error('You\'re using a 3d camera. Try the html renderer.');
    };

    BaseRenderer.prototype.buildAllItems = function () {
        var i,
            len = this.layers.length;
        for (i = 0; i < len; i += 1) {
            this.buildItem(i);
        }
        this.checkPendingElements();
    };

    BaseRenderer.prototype.includeLayers = function (newLayers) {
        this.completeLayers = false;
        var i,
            len = newLayers.length;
        var j,
            jLen = this.layers.length;
        for (i = 0; i < len; i += 1) {
            j = 0;
            while (j < jLen) {
                if (this.layers[j].id == newLayers[i].id) {
                    this.layers[j] = newLayers[i];
                    break;
                }
                j += 1;
            }
        }
    };

    BaseRenderer.prototype.setProjectInterface = function (pInterface) {
        this.globalData.projectInterface = pInterface;
    };

    BaseRenderer.prototype.initItems = function () {
        if (!this.globalData.progressiveLoad) {
            this.buildAllItems();
        }
    };
    BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {
        var elements = this.elements;
        var layers = this.layers;
        var i = 0,
            len = layers.length;
        while (i < len) {
            if (layers[i].ind == parentName) {
                if (!elements[i] || elements[i] === true) {
                    this.buildItem(i);
                    this.addPendingElement(element);
                } else {
                    hierarchy.push(elements[i]);
                    elements[i].setAsParent();
                    if (layers[i].parent !== undefined) {
                        this.buildElementParenting(element, layers[i].parent, hierarchy);
                    } else {
                        element.setHierarchy(hierarchy);
                    }
                }
            }
            i += 1;
        }
    };

    BaseRenderer.prototype.addPendingElement = function (element) {
        this.pendingElements.push(element);
    };

    BaseRenderer.prototype.searchExtraCompositions = function (assets) {
        var i,
            len = assets.length;
        for (i = 0; i < len; i += 1) {
            if (assets[i].xt) {
                var comp = this.createComp(assets[i]);
                comp.initExpressions();
                this.globalData.projectInterface.registerComposition(comp);
            }
        }
    };

    BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {
        this.globalData.fontManager = new FontManager();
        this.globalData.fontManager.addChars(animData.chars);
        this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
        this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
        this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
        this.globalData.imageLoader = this.animationItem.imagePreloader;
        this.globalData.frameId = 0;
        this.globalData.frameRate = animData.fr;
        this.globalData.nm = animData.nm;
        this.globalData.compSize = {
            w: animData.w,
            h: animData.h
        };
    };
    function SVGRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.layers = null;
        this.renderedFrame = -1;
        this.svgElement = createNS('svg');
        var ariaLabel = '';
        if (config && config.title) {
            var titleElement = createNS('title');
            var titleId = createElementID();
            titleElement.setAttribute('id', titleId);
            titleElement.textContent = config.title;
            this.svgElement.appendChild(titleElement);
            ariaLabel += titleId;
        }
        if (config && config.description) {
            var descElement = createNS('desc');
            var descId = createElementID();
            descElement.setAttribute('id', descId);
            descElement.textContent = config.description;
            this.svgElement.appendChild(descElement);
            ariaLabel += ' ' + descId;
        }
        if (ariaLabel) {
            this.svgElement.setAttribute('aria-labelledby', ariaLabel);
        }
        var defs = createNS('defs');
        this.svgElement.appendChild(defs);
        var maskElement = createNS('g');
        this.svgElement.appendChild(maskElement);
        this.layerElement = maskElement;
        this.renderConfig = {
            preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',
            imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
            progressiveLoad: config && config.progressiveLoad || false,
            hideOnTransparent: config && config.hideOnTransparent === false ? false : true,
            viewBoxOnly: config && config.viewBoxOnly || false,
            viewBoxSize: config && config.viewBoxSize || false,
            className: config && config.className || '',
            id: config && config.id || '',
            focusable: config && config.focusable,
            filterSize: {
                width: config && config.filterSize && config.filterSize.width || '100%',
                height: config && config.filterSize && config.filterSize.height || '100%',
                x: config && config.filterSize && config.filterSize.x || '0%',
                y: config && config.filterSize && config.filterSize.y || '0%'
            }
        };

        this.globalData = {
            _mdf: false,
            frameNum: -1,
            defs: defs,
            renderConfig: this.renderConfig
        };
        this.elements = [];
        this.pendingElements = [];
        this.destroyed = false;
        this.rendererType = 'svg';
    }

    extendPrototype([BaseRenderer], SVGRenderer);

    SVGRenderer.prototype.createNull = function (data) {
        return new NullElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.createShape = function (data) {
        return new SVGShapeElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.createText = function (data) {
        return new SVGTextElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.createImage = function (data) {
        return new IImageElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.createComp = function (data) {
        return new SVGCompElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.createSolid = function (data) {
        return new ISolidElement(data, this.globalData, this);
    };

    SVGRenderer.prototype.configAnimation = function (animData) {
        this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
        if (this.renderConfig.viewBoxSize) {
            this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);
        } else {
            this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);
        }

        if (!this.renderConfig.viewBoxOnly) {
            this.svgElement.setAttribute('width', animData.w);
            this.svgElement.setAttribute('height', animData.h);
            this.svgElement.style.width = '100%';
            this.svgElement.style.height = '100%';
            this.svgElement.style.transform = 'translate3d(0,0,0)';
        }
        if (this.renderConfig.className) {
            this.svgElement.setAttribute('class', this.renderConfig.className);
        }
        if (this.renderConfig.id) {
            this.svgElement.setAttribute('id', this.renderConfig.id);
        }
        if (this.renderConfig.focusable !== undefined) {
            this.svgElement.setAttribute('focusable', this.renderConfig.focusable);
        }
        this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio);
        //this.layerElement.style.transform = 'translate3d(0,0,0)';
        //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
        this.animationItem.wrapper.appendChild(this.svgElement);
        //Mask animation
        var defs = this.globalData.defs;

        this.setupGlobalData(animData, defs);
        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
        this.data = animData;

        var maskElement = createNS('clipPath');
        var rect = createNS('rect');
        rect.setAttribute('width', animData.w);
        rect.setAttribute('height', animData.h);
        rect.setAttribute('x', 0);
        rect.setAttribute('y', 0);
        var maskId = createElementID();
        maskElement.setAttribute('id', maskId);
        maskElement.appendChild(rect);
        this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + maskId + ")");

        defs.appendChild(maskElement);
        this.layers = animData.layers;
        this.elements = createSizedArray(animData.layers.length);
    };

    SVGRenderer.prototype.destroy = function () {
        this.animationItem.wrapper.innerHTML = '';
        this.layerElement = null;
        this.globalData.defs = null;
        var i,
            len = this.layers ? this.layers.length : 0;
        for (i = 0; i < len; i++) {
            if (this.elements[i]) {
                this.elements[i].destroy();
            }
        }
        this.elements.length = 0;
        this.destroyed = true;
        this.animationItem = null;
    };

    SVGRenderer.prototype.updateContainerSize = function () {};

    SVGRenderer.prototype.buildItem = function (pos) {
        var elements = this.elements;
        if (elements[pos] || this.layers[pos].ty == 99) {
            return;
        }
        elements[pos] = true;
        var element = this.createItem(this.layers[pos]);

        elements[pos] = element;
        if (expressionsPlugin) {
            if (this.layers[pos].ty === 0) {
                this.globalData.projectInterface.registerComposition(element);
            }
            element.initExpressions();
        }
        this.appendElementInPos(element, pos);
        if (this.layers[pos].tt) {
            if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {
                this.buildItem(pos - 1);
                this.addPendingElement(element);
            } else {
                element.setMatte(elements[pos - 1].layerId);
            }
        }
    };

    SVGRenderer.prototype.checkPendingElements = function () {
        while (this.pendingElements.length) {
            var element = this.pendingElements.pop();
            element.checkParenting();
            if (element.data.tt) {
                var i = 0,
                    len = this.elements.length;
                while (i < len) {
                    if (this.elements[i] === element) {
                        element.setMatte(this.elements[i - 1].layerId);
                        break;
                    }
                    i += 1;
                }
            }
        }
    };

    SVGRenderer.prototype.renderFrame = function (num) {
        if (this.renderedFrame === num || this.destroyed) {
            return;
        }
        if (num === null) {
            num = this.renderedFrame;
        } else {
            this.renderedFrame = num;
        }
        // console.log('-------');
        // console.log('FRAME ',num);
        this.globalData.frameNum = num;
        this.globalData.frameId += 1;
        this.globalData.projectInterface.currentFrame = num;
        this.globalData._mdf = false;
        var i,
            len = this.layers.length;
        if (!this.completeLayers) {
            this.checkLayers(num);
        }
        for (i = len - 1; i >= 0; i--) {
            if (this.completeLayers || this.elements[i]) {
                this.elements[i].prepareFrame(num - this.layers[i].st);
            }
        }
        if (this.globalData._mdf) {
            for (i = 0; i < len; i += 1) {
                if (this.completeLayers || this.elements[i]) {
                    this.elements[i].renderFrame();
                }
            }
        }
    };

    SVGRenderer.prototype.appendElementInPos = function (element, pos) {
        var newElement = element.getBaseElement();
        if (!newElement) {
            return;
        }
        var i = 0;
        var nextElement;
        while (i < pos) {
            if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {
                nextElement = this.elements[i].getBaseElement();
            }
            i += 1;
        }
        if (nextElement) {
            this.layerElement.insertBefore(newElement, nextElement);
        } else {
            this.layerElement.appendChild(newElement);
        }
    };

    SVGRenderer.prototype.hide = function () {
        this.layerElement.style.display = 'none';
    };

    SVGRenderer.prototype.show = function () {
        this.layerElement.style.display = 'block';
    };

    function HybridRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.layers = null;
        this.renderedFrame = -1;
        this.renderConfig = {
            className: config && config.className || '',
            imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',
            hideOnTransparent: config && config.hideOnTransparent === false ? false : true,
            filterSize: {
                width: config && config.filterSize && config.filterSize.width || '400%',
                height: config && config.filterSize && config.filterSize.height || '400%',
                x: config && config.filterSize && config.filterSize.x || '-100%',
                y: config && config.filterSize && config.filterSize.y || '-100%'
            }
        };
        this.globalData = {
            _mdf: false,
            frameNum: -1,
            renderConfig: this.renderConfig
        };
        this.pendingElements = [];
        this.elements = [];
        this.threeDElements = [];
        this.destroyed = false;
        this.camera = null;
        this.supports3d = true;
        this.rendererType = 'html';
    }

    extendPrototype([BaseRenderer], HybridRenderer);

    HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;

    HybridRenderer.prototype.checkPendingElements = function () {
        while (this.pendingElements.length) {
            var element = this.pendingElements.pop();
            element.checkParenting();
        }
    };

    HybridRenderer.prototype.appendElementInPos = function (element, pos) {
        var newDOMElement = element.getBaseElement();
        if (!newDOMElement) {
            return;
        }
        var layer = this.layers[pos];
        if (!layer.ddd || !this.supports3d) {
            if (this.threeDElements) {
                this.addTo3dContainer(newDOMElement, pos);
            } else {
                var i = 0;
                var nextDOMElement, nextLayer, tmpDOMElement;
                while (i < pos) {
                    if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {
                        nextLayer = this.elements[i];
                        tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();
                        nextDOMElement = tmpDOMElement || nextDOMElement;
                    }
                    i += 1;
                }
                if (nextDOMElement) {
                    if (!layer.ddd || !this.supports3d) {
                        this.layerElement.insertBefore(newDOMElement, nextDOMElement);
                    }
                } else {
                    if (!layer.ddd || !this.supports3d) {
                        this.layerElement.appendChild(newDOMElement);
                    }
                }
            }
        } else {
            this.addTo3dContainer(newDOMElement, pos);
        }
    };

    HybridRenderer.prototype.createShape = function (data) {
        if (!this.supports3d) {
            return new SVGShapeElement(data, this.globalData, this);
        }
        return new HShapeElement(data, this.globalData, this);
    };

    HybridRenderer.prototype.createText = function (data) {
        if (!this.supports3d) {
            return new SVGTextElement(data, this.globalData, this);
        }
        return new HTextElement(data, this.globalData, this);
    };

    HybridRenderer.prototype.createCamera = function (data) {
        this.camera = new HCameraElement(data, this.globalData, this);
        return this.camera;
    };

    HybridRenderer.prototype.createImage = function (data) {
        if (!this.supports3d) {
            return new IImageElement(data, this.globalData, this);
        }
        return new HImageElement(data, this.globalData, this);
    };

    HybridRenderer.prototype.createComp = function (data) {
        if (!this.supports3d) {
            return new SVGCompElement(data, this.globalData, this);
        }
        return new HCompElement(data, this.globalData, this);
    };

    HybridRenderer.prototype.createSolid = function (data) {
        if (!this.supports3d) {
            return new ISolidElement(data, this.globalData, this);
        }
        return new HSolidElement(data, this.globalData, this);
    };

    HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;

    HybridRenderer.prototype.getThreeDContainerByPos = function (pos) {
        var i = 0,
            len = this.threeDElements.length;
        while (i < len) {
            if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {
                return this.threeDElements[i].perspectiveElem;
            }
            i += 1;
        }
    };

    HybridRenderer.prototype.createThreeDContainer = function (pos, type) {
        var perspectiveElem = createTag('div');
        styleDiv(perspectiveElem);
        var container = createTag('div');
        styleDiv(container);
        if (type === '3d') {
            perspectiveElem.style.width = this.globalData.compSize.w + 'px';
            perspectiveElem.style.height = this.globalData.compSize.h + 'px';
            perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = "50% 50%";
            container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
        }

        perspectiveElem.appendChild(container);
        //this.resizerElem.appendChild(perspectiveElem);
        var threeDContainerData = {
            container: container,
            perspectiveElem: perspectiveElem,
            startPos: pos,
            endPos: pos,
            type: type
        };
        this.threeDElements.push(threeDContainerData);
        return threeDContainerData;
    };

    HybridRenderer.prototype.build3dContainers = function () {
        var i,
            len = this.layers.length;
        var lastThreeDContainerData;
        var currentContainer = '';
        for (i = 0; i < len; i += 1) {
            if (this.layers[i].ddd && this.layers[i].ty !== 3) {
                if (currentContainer !== '3d') {
                    currentContainer = '3d';
                    lastThreeDContainerData = this.createThreeDContainer(i, '3d');
                }
                lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
            } else {
                if (currentContainer !== '2d') {
                    currentContainer = '2d';
                    lastThreeDContainerData = this.createThreeDContainer(i, '2d');
                }
                lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
            }
        }
        len = this.threeDElements.length;
        for (i = len - 1; i >= 0; i--) {
            this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);
        }
    };

    HybridRenderer.prototype.addTo3dContainer = function (elem, pos) {
        var i = 0,
            len = this.threeDElements.length;
        while (i < len) {
            if (pos <= this.threeDElements[i].endPos) {
                var j = this.threeDElements[i].startPos;
                var nextElement;
                while (j < pos) {
                    if (this.elements[j] && this.elements[j].getBaseElement) {
                        nextElement = this.elements[j].getBaseElement();
                    }
                    j += 1;
                }
                if (nextElement) {
                    this.threeDElements[i].container.insertBefore(elem, nextElement);
                } else {
                    this.threeDElements[i].container.appendChild(elem);
                }
                break;
            }
            i += 1;
        }
    };

    HybridRenderer.prototype.configAnimation = function (animData) {
        var resizerElem = createTag('div');
        var wrapper = this.animationItem.wrapper;
        resizerElem.style.width = animData.w + 'px';
        resizerElem.style.height = animData.h + 'px';
        this.resizerElem = resizerElem;
        styleDiv(resizerElem);
        resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = "flat";
        if (this.renderConfig.className) {
            resizerElem.setAttribute('class', this.renderConfig.className);
        }
        wrapper.appendChild(resizerElem);

        resizerElem.style.overflow = 'hidden';
        var svg = createNS('svg');
        svg.setAttribute('width', '1');
        svg.setAttribute('height', '1');
        styleDiv(svg);
        this.resizerElem.appendChild(svg);
        var defs = createNS('defs');
        svg.appendChild(defs);
        this.data = animData;
        //Mask animation
        this.setupGlobalData(animData, svg);
        this.globalData.defs = defs;
        this.layers = animData.layers;
        this.layerElement = this.resizerElem;
        this.build3dContainers();
        this.updateContainerSize();
    };

    HybridRenderer.prototype.destroy = function () {
        this.animationItem.wrapper.innerHTML = '';
        this.animationItem.container = null;
        this.globalData.defs = null;
        var i,
            len = this.layers ? this.layers.length : 0;
        for (i = 0; i < len; i++) {
            this.elements[i].destroy();
        }
        this.elements.length = 0;
        this.destroyed = true;
        this.animationItem = null;
    };

    HybridRenderer.prototype.updateContainerSize = function () {
        var elementWidth = this.animationItem.wrapper.offsetWidth;
        var elementHeight = this.animationItem.wrapper.offsetHeight;
        var elementRel = elementWidth / elementHeight;
        var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;
        var sx, sy, tx, ty;
        if (animationRel > elementRel) {
            sx = elementWidth / this.globalData.compSize.w;
            sy = elementWidth / this.globalData.compSize.w;
            tx = 0;
            ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;
        } else {
            sx = elementHeight / this.globalData.compSize.h;
            sy = elementHeight / this.globalData.compSize.h;
            tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;
            ty = 0;
        }
        this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';
    };

    HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;

    HybridRenderer.prototype.hide = function () {
        this.resizerElem.style.display = 'none';
    };

    HybridRenderer.prototype.show = function () {
        this.resizerElem.style.display = 'block';
    };

    HybridRenderer.prototype.initItems = function () {
        this.buildAllItems();
        if (this.camera) {
            this.camera.setup();
        } else {
            var cWidth = this.globalData.compSize.w;
            var cHeight = this.globalData.compSize.h;
            var i,
                len = this.threeDElements.length;
            for (i = 0; i < len; i += 1) {
                this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';
            }
        }
    };

    HybridRenderer.prototype.searchExtraCompositions = function (assets) {
        var i,
            len = assets.length;
        var floatingContainer = createTag('div');
        for (i = 0; i < len; i += 1) {
            if (assets[i].xt) {
                var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);
                comp.initExpressions();
                this.globalData.projectInterface.registerComposition(comp);
            }
        }
    };

    function MaskElement(data, element, globalData) {
        this.data = data;
        this.element = element;
        this.globalData = globalData;
        this.storedData = [];
        this.masksProperties = this.data.masksProperties || [];
        this.maskElement = null;
        var defs = this.globalData.defs;
        var i,
            len = this.masksProperties ? this.masksProperties.length : 0;
        this.viewData = createSizedArray(len);
        this.solidPath = '';

        var path,
            properties = this.masksProperties;
        var count = 0;
        var currentMasks = [];
        var j, jLen;
        var layerId = createElementID();
        var rect, expansor, feMorph, x;
        var maskType = 'clipPath',
            maskRef = 'clip-path';
        for (i = 0; i < len; i++) {
            if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {
                maskType = 'mask';
                maskRef = 'mask';
            }

            if ((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0) {
                rect = createNS('rect');
                rect.setAttribute('fill', '#ffffff');
                rect.setAttribute('width', this.element.comp.data.w || 0);
                rect.setAttribute('height', this.element.comp.data.h || 0);
                currentMasks.push(rect);
            } else {
                rect = null;
            }

            path = createNS('path');
            if (properties[i].mode == 'n') {
                // TODO move this to a factory or to a constructor
                this.viewData[i] = {
                    op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
                    prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
                    elem: path,
                    lastPath: ''
                };
                defs.appendChild(path);
                continue;
            }
            count += 1;

            path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');
            path.setAttribute('clip-rule', 'nonzero');
            var filterID;

            if (properties[i].x.k !== 0) {
                maskType = 'mask';
                maskRef = 'mask';
                x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);
                filterID = createElementID();
                expansor = createNS('filter');
                expansor.setAttribute('id', filterID);
                feMorph = createNS('feMorphology');
                feMorph.setAttribute('operator', 'erode');
                feMorph.setAttribute('in', 'SourceGraphic');
                feMorph.setAttribute('radius', '0');
                expansor.appendChild(feMorph);
                defs.appendChild(expansor);
                path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');
            } else {
                feMorph = null;
                x = null;
            }

            // TODO move this to a factory or to a constructor
            this.storedData[i] = {
                elem: path,
                x: x,
                expan: feMorph,
                lastPath: '',
                lastOperator: '',
                filterId: filterID,
                lastRadius: 0
            };
            if (properties[i].mode == 'i') {
                jLen = currentMasks.length;
                var g = createNS('g');
                for (j = 0; j < jLen; j += 1) {
                    g.appendChild(currentMasks[j]);
                }
                var mask = createNS('mask');
                mask.setAttribute('mask-type', 'alpha');
                mask.setAttribute('id', layerId + '_' + count);
                mask.appendChild(path);
                defs.appendChild(mask);
                g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');

                currentMasks.length = 0;
                currentMasks.push(g);
            } else {
                currentMasks.push(path);
            }
            if (properties[i].inv && !this.solidPath) {
                this.solidPath = this.createLayerSolidPath();
            }
            // TODO move this to a factory or to a constructor
            this.viewData[i] = {
                elem: path,
                lastPath: '',
                op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
                prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
                invRect: rect
            };
            if (!this.viewData[i].prop.k) {
                this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);
            }
        }

        this.maskElement = createNS(maskType);

        len = currentMasks.length;
        for (i = 0; i < len; i += 1) {
            this.maskElement.appendChild(currentMasks[i]);
        }

        if (count > 0) {
            this.maskElement.setAttribute('id', layerId);
            this.element.maskedElement.setAttribute(maskRef, "url(" + locationHref + "#" + layerId + ")");
            defs.appendChild(this.maskElement);
        }
        if (this.viewData.length) {
            this.element.addRenderableComponent(this);
        }
    }

    MaskElement.prototype.getMaskProperty = function (pos) {
        return this.viewData[pos].prop;
    };

    MaskElement.prototype.renderFrame = function (isFirstFrame) {
        var finalMat = this.element.finalTransform.mat;
        var i,
            len = this.masksProperties.length;
        for (i = 0; i < len; i++) {
            if (this.viewData[i].prop._mdf || isFirstFrame) {
                this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);
            }
            if (this.viewData[i].op._mdf || isFirstFrame) {
                this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);
            }
            if (this.masksProperties[i].mode !== 'n') {
                if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {
                    this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());
                }
                if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {
                    var feMorph = this.storedData[i].expan;
                    if (this.storedData[i].x.v < 0) {
                        if (this.storedData[i].lastOperator !== 'erode') {
                            this.storedData[i].lastOperator = 'erode';
                            this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');
                        }
                        feMorph.setAttribute('radius', -this.storedData[i].x.v);
                    } else {
                        if (this.storedData[i].lastOperator !== 'dilate') {
                            this.storedData[i].lastOperator = 'dilate';
                            this.storedData[i].elem.setAttribute('filter', null);
                        }
                        this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);
                    }
                }
            }
        }
    };

    MaskElement.prototype.getMaskelement = function () {
        return this.maskElement;
    };

    MaskElement.prototype.createLayerSolidPath = function () {
        var path = 'M0,0 ';
        path += ' h' + this.globalData.compSize.w;
        path += ' v' + this.globalData.compSize.h;
        path += ' h-' + this.globalData.compSize.w;
        path += ' v-' + this.globalData.compSize.h + ' ';
        return path;
    };

    MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {
        var pathString = " M" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];
        var i, len;
        len = pathNodes._length;
        for (i = 1; i < len; i += 1) {
            //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
            pathString += " C" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + " " + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + " " + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];
        }
        //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
        if (pathNodes.c && len > 1) {
            pathString += " C" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + " " + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + " " + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];
        }
        //pathNodes.__renderedString = pathString;

        if (viewData.lastPath !== pathString) {
            var pathShapeValue = '';
            if (viewData.elem) {
                if (pathNodes.c) {
                    pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
                }
                viewData.elem.setAttribute('d', pathShapeValue);
            }
            viewData.lastPath = pathString;
        }
    };

    MaskElement.prototype.destroy = function () {
        this.element = null;
        this.globalData = null;
        this.maskElement = null;
        this.data = null;
        this.masksProperties = null;
    };

    /**
     * @file 
     * Handles AE's layer parenting property.
     *
     */

    function HierarchyElement() {}

    HierarchyElement.prototype = {
        /**
            * @function 
            * Initializes hierarchy properties
            *
            */
        initHierarchy: function initHierarchy() {
            //element's parent list
            this.hierarchy = [];
            //if element is parent of another layer _isParent will be true
            this._isParent = false;
            this.checkParenting();
        },
        /**
            * @function 
            * Sets layer's hierarchy.
            * @param {array} hierarch
            * layer's parent list
            *
            */
        setHierarchy: function setHierarchy(hierarchy) {
            this.hierarchy = hierarchy;
        },
        /**
            * @function 
            * Sets layer as parent.
            *
            */
        setAsParent: function setAsParent() {
            this._isParent = true;
        },
        /**
            * @function 
            * Searches layer's parenting chain
            *
            */
        checkParenting: function checkParenting() {
            if (this.data.parent !== undefined) {
                this.comp.buildElementParenting(this, this.data.parent, []);
            }
        }
    };
    /**
     * @file 
     * Handles element's layer frame update.
     * Checks layer in point and out point
     *
     */

    function FrameElement() {}

    FrameElement.prototype = {
        /**
         * @function 
         * Initializes frame related properties.
         *
         */
        initFrame: function initFrame() {
            //set to true when inpoint is rendered
            this._isFirstFrame = false;
            //list of animated properties
            this.dynamicProperties = [];
            // If layer has been modified in current tick this will be true
            this._mdf = false;
        },
        /**
         * @function 
         * Calculates all dynamic values
         *
         * @param {number} num
         * current frame number in Layer's time
         * @param {boolean} isVisible
         * if layers is currently in range
         * 
         */
        prepareProperties: function prepareProperties(num, isVisible) {
            var i,
                len = this.dynamicProperties.length;
            for (i = 0; i < len; i += 1) {
                if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {
                    this.dynamicProperties[i].getValue();
                    if (this.dynamicProperties[i]._mdf) {
                        this.globalData._mdf = true;
                        this._mdf = true;
                    }
                }
            }
        },
        addDynamicProperty: function addDynamicProperty(prop) {
            if (this.dynamicProperties.indexOf(prop) === -1) {
                this.dynamicProperties.push(prop);
            }
        }
    };
    function TransformElement() {}

    TransformElement.prototype = {
        initTransform: function initTransform() {
            this.finalTransform = {
                mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },
                _matMdf: false,
                _opMdf: false,
                mat: new Matrix()
            };
            if (this.data.ao) {
                this.finalTransform.mProp.autoOriented = true;
            }

            //TODO: check TYPE 11: Guided elements
            if (this.data.ty !== 11) {
                //this.createElements();
            }
        },
        renderTransform: function renderTransform() {

            this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
            this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;

            if (this.hierarchy) {
                var mat;
                var finalMat = this.finalTransform.mat;
                var i = 0,
                    len = this.hierarchy.length;
                //Checking if any of the transformation matrices in the hierarchy chain has changed.
                if (!this.finalTransform._matMdf) {
                    while (i < len) {
                        if (this.hierarchy[i].finalTransform.mProp._mdf) {
                            this.finalTransform._matMdf = true;
                            break;
                        }
                        i += 1;
                    }
                }

                if (this.finalTransform._matMdf) {
                    mat = this.finalTransform.mProp.v.props;
                    finalMat.cloneFromProps(mat);
                    for (i = 0; i < len; i += 1) {
                        mat = this.hierarchy[i].finalTransform.mProp.v.props;
                        finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
                    }
                }
            }
        },
        globalToLocal: function globalToLocal(pt) {
            var transforms = [];
            transforms.push(this.finalTransform);
            var flag = true;
            var comp = this.comp;
            while (flag) {
                if (comp.finalTransform) {
                    if (comp.data.hasMask) {
                        transforms.splice(0, 0, comp.finalTransform);
                    }
                    comp = comp.comp;
                } else {
                    flag = false;
                }
            }
            var i,
                len = transforms.length,
                ptNew;
            for (i = 0; i < len; i += 1) {
                ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
                //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
                pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
            }
            return pt;
        },
        mHelper: new Matrix()
    };
    function RenderableElement() {}

    RenderableElement.prototype = {
        initRenderable: function initRenderable() {
            //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
            this.isInRange = false;
            //layer's display state
            this.hidden = false;
            // If layer's transparency equals 0, it can be hidden
            this.isTransparent = false;
            //list of animated components
            this.renderableComponents = [];
        },
        addRenderableComponent: function addRenderableComponent(component) {
            if (this.renderableComponents.indexOf(component) === -1) {
                this.renderableComponents.push(component);
            }
        },
        removeRenderableComponent: function removeRenderableComponent(component) {
            if (this.renderableComponents.indexOf(component) !== -1) {
                this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
            }
        },
        prepareRenderableFrame: function prepareRenderableFrame(num) {
            this.checkLayerLimits(num);
        },
        checkTransparency: function checkTransparency() {
            if (this.finalTransform.mProp.o.v <= 0) {
                if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {
                    this.isTransparent = true;
                    this.hide();
                }
            } else if (this.isTransparent) {
                this.isTransparent = false;
                this.show();
            }
        },
        /**
         * @function 
         * Initializes frame related properties.
         *
         * @param {number} num
         * current frame number in Layer's time
         * 
         */
        checkLayerLimits: function checkLayerLimits(num) {
            if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {
                if (this.isInRange !== true) {
                    this.globalData._mdf = true;
                    this._mdf = true;
                    this.isInRange = true;
                    this.show();
                }
            } else {
                if (this.isInRange !== false) {
                    this.globalData._mdf = true;
                    this.isInRange = false;
                    this.hide();
                }
            }
        },
        renderRenderable: function renderRenderable() {
            var i,
                len = this.renderableComponents.length;
            for (i = 0; i < len; i += 1) {
                this.renderableComponents[i].renderFrame(this._isFirstFrame);
            }
            /*this.maskManager.renderFrame(this.finalTransform.mat);
            this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/
        },
        sourceRectAtTime: function sourceRectAtTime() {
            return {
                top: 0,
                left: 0,
                width: 100,
                height: 100
            };
        },
        getLayerSize: function getLayerSize() {
            if (this.data.ty === 5) {
                return { w: this.data.textData.width, h: this.data.textData.height };
            } else {
                return { w: this.data.width, h: this.data.height };
            }
        }
    };
    function RenderableDOMElement() {}

    (function () {
        var _prototype = {
            initElement: function initElement(data, globalData, comp) {
                this.initFrame();
                this.initBaseData(data, globalData, comp);
                this.initTransform(data, globalData, comp);
                this.initHierarchy();
                this.initRenderable();
                this.initRendererElement();
                this.createContainerElements();
                this.createRenderableComponents();
                this.createContent();
                this.hide();
            },
            hide: function hide() {
                if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                    var elem = this.baseElement || this.layerElement;
                    elem.style.display = 'none';
                    this.hidden = true;
                }
            },
            show: function show() {
                if (this.isInRange && !this.isTransparent) {
                    if (!this.data.hd) {
                        var elem = this.baseElement || this.layerElement;
                        elem.style.display = 'block';
                    }
                    this.hidden = false;
                    this._isFirstFrame = true;
                }
            },
            renderFrame: function renderFrame() {
                //If it is exported as hidden (data.hd === true) no need to render
                //If it is not visible no need to render
                if (this.data.hd || this.hidden) {
                    return;
                }
                this.renderTransform();
                this.renderRenderable();
                this.renderElement();
                this.renderInnerContent();
                if (this._isFirstFrame) {
                    this._isFirstFrame = false;
                }
            },
            renderInnerContent: function renderInnerContent() {},
            prepareFrame: function prepareFrame(num) {
                this._mdf = false;
                this.prepareRenderableFrame(num);
                this.prepareProperties(num, this.isInRange);
                this.checkTransparency();
            },
            destroy: function destroy() {
                this.innerElem = null;
                this.destroyBaseElement();
            }
        };
        extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
    })();
    function ProcessedElement(element, position) {
        this.elem = element;
        this.pos = position;
    }
    function SVGStyleData(data, level) {
        this.data = data;
        this.type = data.ty;
        this.d = '';
        this.lvl = level;
        this._mdf = false;
        this.closed = data.hd === true;
        this.pElem = createNS('path');
        this.msElem = null;
    }

    SVGStyleData.prototype.reset = function () {
        this.d = '';
        this._mdf = false;
    };
    function SVGShapeData(transformers, level, shape) {
        this.caches = [];
        this.styles = [];
        this.transformers = transformers;
        this.lStr = '';
        this.sh = shape;
        this.lvl = level;
        //TODO find if there are some cases where _isAnimated can be false. 
        // For now, since shapes add up with other shapes. They have to be calculated every time.
        // One way of finding out is checking if all styles associated to this shape depend only of this shape
        this._isAnimated = !!shape.k;
        // TODO: commenting this for now since all shapes are animated
        var i = 0,
            len = transformers.length;
        while (i < len) {
            if (transformers[i].mProps.dynamicProperties.length) {
                this._isAnimated = true;
                break;
            }
            i += 1;
        }
    }

    SVGShapeData.prototype.setAsAnimated = function () {
        this._isAnimated = true;
    };
    function SVGTransformData(mProps, op, container) {
        this.transform = {
            mProps: mProps,
            op: op,
            container: container
        };
        this.elements = [];
        this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
    }
    function SVGStrokeStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
        this.d = new DashProperty(elem, data.d || {}, 'svg', this);
        this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
        this.style = styleOb;
        this._isAnimated = !!this._isAnimated;
    }

    extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
    function SVGFillStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
        this.style = styleOb;
    }

    extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
    function SVGGradientFillStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.initGradientData(elem, data, styleOb);
    }

    SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {
        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
        this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);
        this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);
        this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this);
        this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this);
        this.g = new GradientProperty(elem, data.g, this);
        this.style = styleOb;
        this.stops = [];
        this.setGradientData(styleOb.pElem, data);
        this.setGradientOpacity(data, styleOb);
        this._isAnimated = !!this._isAnimated;
    };

    SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {

        var gradientId = createElementID();
        var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
        gfill.setAttribute('id', gradientId);
        gfill.setAttribute('spreadMethod', 'pad');
        gfill.setAttribute('gradientUnits', 'userSpaceOnUse');
        var stops = [];
        var stop, j, jLen;
        jLen = data.g.p * 4;
        for (j = 0; j < jLen; j += 4) {
            stop = createNS('stop');
            gfill.appendChild(stop);
            stops.push(stop);
        }
        pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + gradientId + ')');

        this.gf = gfill;
        this.cst = stops;
    };

    SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {
        if (this.g._hasOpacity && !this.g._collapsable) {
            var stop, j, jLen;
            var mask = createNS("mask");
            var maskElement = createNS('path');
            mask.appendChild(maskElement);
            var opacityId = createElementID();
            var maskId = createElementID();
            mask.setAttribute('id', maskId);
            var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
            opFill.setAttribute('id', opacityId);
            opFill.setAttribute('spreadMethod', 'pad');
            opFill.setAttribute('gradientUnits', 'userSpaceOnUse');
            jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;
            var stops = this.stops;
            for (j = data.g.p * 4; j < jLen; j += 2) {
                stop = createNS('stop');
                stop.setAttribute('stop-color', 'rgb(255,255,255)');
                opFill.appendChild(stop);
                stops.push(stop);
            }
            maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + opacityId + ')');
            this.of = opFill;
            this.ms = mask;
            this.ost = stops;
            this.maskId = maskId;
            styleOb.msElem = maskElement;
        }
    };

    extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
    function SVGGradientStrokeStyleData(elem, data, styleOb) {
        this.initDynamicPropertyContainer(elem);
        this.getValue = this.iterateDynamicProperties;
        this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
        this.d = new DashProperty(elem, data.d || {}, 'svg', this);
        this.initGradientData(elem, data, styleOb);
        this._isAnimated = !!this._isAnimated;
    }

    extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
    function ShapeGroupData() {
        this.it = [];
        this.prevViewData = [];
        this.gr = createNS('g');
    }
    var SVGElementsRenderer = function () {
        var _identityMatrix = new Matrix();
        var _matrixHelper = new Matrix();

        var ob = {
            createRenderFunction: createRenderFunction
        };

        function createRenderFunction(data) {
            var ty = data.ty;
            switch (data.ty) {
                case 'fl':
                    return renderFill;
                case 'gf':
                    return renderGradient;
                case 'gs':
                    return renderGradientStroke;
                case 'st':
                    return renderStroke;
                case 'sh':
                case 'el':
                case 'rc':
                case 'sr':
                    return renderPath;
                case 'tr':
                    return renderContentTransform;
            }
        }

        function renderContentTransform(styleData, itemData, isFirstFrame) {
            if (isFirstFrame || itemData.transform.op._mdf) {
                itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);
            }
            if (isFirstFrame || itemData.transform.mProps._mdf) {
                itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());
            }
        }

        function renderPath(styleData, itemData, isFirstFrame) {
            var j,
                jLen,
                pathStringTransformed,
                redraw,
                pathNodes,
                l,
                lLen = itemData.styles.length;
            var lvl = itemData.lvl;
            var paths, mat, props, iterations, k;
            for (l = 0; l < lLen; l += 1) {
                redraw = itemData.sh._mdf || isFirstFrame;
                if (itemData.styles[l].lvl < lvl) {
                    mat = _matrixHelper.reset();
                    iterations = lvl - itemData.styles[l].lvl;
                    k = itemData.transformers.length - 1;
                    while (!redraw && iterations > 0) {
                        redraw = itemData.transformers[k].mProps._mdf || redraw;
                        iterations--;
                        k--;
                    }
                    if (redraw) {
                        iterations = lvl - itemData.styles[l].lvl;
                        k = itemData.transformers.length - 1;
                        while (iterations > 0) {
                            props = itemData.transformers[k].mProps.v.props;
                            mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
                            iterations--;
                            k--;
                        }
                    }
                } else {
                    mat = _identityMatrix;
                }
                paths = itemData.sh.paths;
                jLen = paths._length;
                if (redraw) {
                    pathStringTransformed = '';
                    for (j = 0; j < jLen; j += 1) {
                        pathNodes = paths.shapes[j];
                        if (pathNodes && pathNodes._length) {
                            pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
                        }
                    }
                    itemData.caches[l] = pathStringTransformed;
                } else {
                    pathStringTransformed = itemData.caches[l];
                }
                itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;
                itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
            }
        }

        function renderFill(styleData, itemData, isFirstFrame) {
            var styleElem = itemData.style;

            if (itemData.c._mdf || isFirstFrame) {
                styleElem.pElem.setAttribute('fill', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');
            }
            if (itemData.o._mdf || isFirstFrame) {
                styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);
            }
        };

        function renderGradientStroke(styleData, itemData, isFirstFrame) {
            renderGradient(styleData, itemData, isFirstFrame);
            renderStroke(styleData, itemData, isFirstFrame);
        }

        function renderGradient(styleData, itemData, isFirstFrame) {
            var gfill = itemData.gf;
            var hasOpacity = itemData.g._hasOpacity;
            var pt1 = itemData.s.v,
                pt2 = itemData.e.v;

            if (itemData.o._mdf || isFirstFrame) {
                var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';
                itemData.style.pElem.setAttribute(attr, itemData.o.v);
            }
            if (itemData.s._mdf || isFirstFrame) {
                var attr1 = styleData.t === 1 ? 'x1' : 'cx';
                var attr2 = attr1 === 'x1' ? 'y1' : 'cy';
                gfill.setAttribute(attr1, pt1[0]);
                gfill.setAttribute(attr2, pt1[1]);
                if (hasOpacity && !itemData.g._collapsable) {
                    itemData.of.setAttribute(attr1, pt1[0]);
                    itemData.of.setAttribute(attr2, pt1[1]);
                }
            }
            var stops, i, len, stop;
            if (itemData.g._cmdf || isFirstFrame) {
                stops = itemData.cst;
                var cValues = itemData.g.c;
                len = stops.length;
                for (i = 0; i < len; i += 1) {
                    stop = stops[i];
                    stop.setAttribute('offset', cValues[i * 4] + '%');
                    stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');
                }
            }
            if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
                var oValues = itemData.g.o;
                if (itemData.g._collapsable) {
                    stops = itemData.cst;
                } else {
                    stops = itemData.ost;
                }
                len = stops.length;
                for (i = 0; i < len; i += 1) {
                    stop = stops[i];
                    if (!itemData.g._collapsable) {
                        stop.setAttribute('offset', oValues[i * 2] + '%');
                    }
                    stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);
                }
            }
            if (styleData.t === 1) {
                if (itemData.e._mdf || isFirstFrame) {
                    gfill.setAttribute('x2', pt2[0]);
                    gfill.setAttribute('y2', pt2[1]);
                    if (hasOpacity && !itemData.g._collapsable) {
                        itemData.of.setAttribute('x2', pt2[0]);
                        itemData.of.setAttribute('y2', pt2[1]);
                    }
                }
            } else {
                var rad;
                if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
                    rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
                    gfill.setAttribute('r', rad);
                    if (hasOpacity && !itemData.g._collapsable) {
                        itemData.of.setAttribute('r', rad);
                    }
                }
                if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
                    if (!rad) {
                        rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
                    }
                    var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

                    var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;
                    var dist = rad * percent;
                    var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
                    var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
                    gfill.setAttribute('fx', x);
                    gfill.setAttribute('fy', y);
                    if (hasOpacity && !itemData.g._collapsable) {
                        itemData.of.setAttribute('fx', x);
                        itemData.of.setAttribute('fy', y);
                    }
                }
                //gfill.setAttribute('fy','200');
            }
        };

        function renderStroke(styleData, itemData, isFirstFrame) {
            var styleElem = itemData.style;
            var d = itemData.d;
            if (d && (d._mdf || isFirstFrame) && d.dashStr) {
                styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);
                styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);
            }
            if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
                styleElem.pElem.setAttribute('stroke', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');
            }
            if (itemData.o._mdf || isFirstFrame) {
                styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);
            }
            if (itemData.w._mdf || isFirstFrame) {
                styleElem.pElem.setAttribute('stroke-width', itemData.w.v);
                if (styleElem.msElem) {
                    styleElem.msElem.setAttribute('stroke-width', itemData.w.v);
                }
            }
        };

        return ob;
    }();
    function ShapeTransformManager() {
        this.sequences = {};
        this.sequenceList = [];
        this.transform_key_count = 0;
    }

    ShapeTransformManager.prototype = {
        addTransformSequence: function addTransformSequence(transforms) {
            var i,
                len = transforms.length;
            var key = '_';
            for (i = 0; i < len; i += 1) {
                key += transforms[i].transform.key + '_';
            }
            var sequence = this.sequences[key];
            if (!sequence) {
                sequence = {
                    transforms: [].concat(transforms),
                    finalTransform: new Matrix(),
                    _mdf: false
                };
                this.sequences[key] = sequence;
                this.sequenceList.push(sequence);
            }
            return sequence;
        },
        processSequence: function processSequence(sequence, isFirstFrame) {
            var i = 0,
                len = sequence.transforms.length,
                _mdf = isFirstFrame;
            while (i < len && !isFirstFrame) {
                if (sequence.transforms[i].transform.mProps._mdf) {
                    _mdf = true;
                    break;
                }
                i += 1;
            }
            if (_mdf) {
                var props;
                sequence.finalTransform.reset();
                for (i = len - 1; i >= 0; i -= 1) {
                    props = sequence.transforms[i].transform.mProps.v.props;
                    sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
                }
            }
            sequence._mdf = _mdf;
        },
        processSequences: function processSequences(isFirstFrame) {
            var i,
                len = this.sequenceList.length;
            for (i = 0; i < len; i += 1) {
                this.processSequence(this.sequenceList[i], isFirstFrame);
            }
        },
        getNewKey: function getNewKey() {
            return '_' + this.transform_key_count++;
        }
    };
    function BaseElement() {}

    BaseElement.prototype = {
        checkMasks: function checkMasks() {
            if (!this.data.hasMask) {
                return false;
            }
            var i = 0,
                len = this.data.masksProperties.length;
            while (i < len) {
                if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {
                    return true;
                }
                i += 1;
            }
            return false;
        },
        initExpressions: function initExpressions() {
            this.layerInterface = LayerExpressionInterface(this);
            if (this.data.hasMask && this.maskManager) {
                this.layerInterface.registerMaskInterface(this.maskManager);
            }
            var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(effectsInterface);

            if (this.data.ty === 0 || this.data.xt) {
                this.compInterface = CompExpressionInterface(this);
            } else if (this.data.ty === 4) {
                this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);
                this.layerInterface.content = this.layerInterface.shapeInterface;
            } else if (this.data.ty === 5) {
                this.layerInterface.textInterface = TextExpressionInterface(this);
                this.layerInterface.text = this.layerInterface.textInterface;
            }
        },
        setBlendMode: function setBlendMode() {
            var blendModeValue = getBlendMode(this.data.bm);
            var elem = this.baseElement || this.layerElement;

            elem.style['mix-blend-mode'] = blendModeValue;
        },
        initBaseData: function initBaseData(data, globalData, comp) {
            this.globalData = globalData;
            this.comp = comp;
            this.data = data;
            this.layerId = createElementID();

            //Stretch factor for old animations missing this property.
            if (!this.data.sr) {
                this.data.sr = 1;
            }
            // effects manager
            this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
        },
        getType: function getType() {
            return this.type;
        },
        sourceRectAtTime: function sourceRectAtTime() {}
    };
    function NullElement(data, globalData, comp) {
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.initFrame();
        this.initTransform(data, globalData, comp);
        this.initHierarchy();
    }

    NullElement.prototype.prepareFrame = function (num) {
        this.prepareProperties(num, true);
    };

    NullElement.prototype.renderFrame = function () {};

    NullElement.prototype.getBaseElement = function () {
        return null;
    };

    NullElement.prototype.destroy = function () {};

    NullElement.prototype.sourceRectAtTime = function () {};

    NullElement.prototype.hide = function () {};

    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);

    function SVGBaseElement() {}

    SVGBaseElement.prototype = {
        initRendererElement: function initRendererElement() {
            this.layerElement = createNS('g');
        },
        createContainerElements: function createContainerElements() {
            this.matteElement = createNS('g');
            this.transformedElement = this.layerElement;
            this.maskedElement = this.layerElement;
            this._sizeChanged = false;
            var layerElementParent = null;
            //If this layer acts as a mask for the following layer
            var filId, fil, gg;
            if (this.data.td) {
                if (this.data.td == 3 || this.data.td == 1) {
                    var masker = createNS('mask');
                    masker.setAttribute('id', this.layerId);
                    masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');
                    masker.appendChild(this.layerElement);
                    layerElementParent = masker;
                    this.globalData.defs.appendChild(masker);
                    // This is only for IE and Edge when mask if of type alpha
                    if (!featureSupport.maskType && this.data.td == 1) {
                        masker.setAttribute('mask-type', 'luminance');
                        filId = createElementID();
                        fil = filtersFactory.createFilter(filId);
                        this.globalData.defs.appendChild(fil);
                        fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                        gg = createNS('g');
                        gg.appendChild(this.layerElement);
                        layerElementParent = gg;
                        masker.appendChild(gg);
                        gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');
                    }
                } else if (this.data.td == 2) {
                    var maskGroup = createNS('mask');
                    maskGroup.setAttribute('id', this.layerId);
                    maskGroup.setAttribute('mask-type', 'alpha');
                    var maskGrouper = createNS('g');
                    maskGroup.appendChild(maskGrouper);
                    filId = createElementID();
                    fil = filtersFactory.createFilter(filId);
                    ////

                    // This solution doesn't work on Android when meta tag with viewport attribute is set
                    /*var feColorMatrix = createNS('feColorMatrix');
                    feColorMatrix.setAttribute('type', 'matrix');
                    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
                    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');
                    fil.appendChild(feColorMatrix);*/
                    ////
                    var feCTr = createNS('feComponentTransfer');
                    feCTr.setAttribute('in', 'SourceGraphic');
                    fil.appendChild(feCTr);
                    var feFunc = createNS('feFuncA');
                    feFunc.setAttribute('type', 'table');
                    feFunc.setAttribute('tableValues', '1.0 0.0');
                    feCTr.appendChild(feFunc);
                    ////
                    this.globalData.defs.appendChild(fil);
                    var alphaRect = createNS('rect');
                    alphaRect.setAttribute('width', this.comp.data.w);
                    alphaRect.setAttribute('height', this.comp.data.h);
                    alphaRect.setAttribute('x', '0');
                    alphaRect.setAttribute('y', '0');
                    alphaRect.setAttribute('fill', '#ffffff');
                    alphaRect.setAttribute('opacity', '0');
                    maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');
                    maskGrouper.appendChild(alphaRect);
                    maskGrouper.appendChild(this.layerElement);
                    layerElementParent = maskGrouper;
                    if (!featureSupport.maskType) {
                        maskGroup.setAttribute('mask-type', 'luminance');
                        fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                        gg = createNS('g');
                        maskGrouper.appendChild(alphaRect);
                        gg.appendChild(this.layerElement);
                        layerElementParent = gg;
                        maskGrouper.appendChild(gg);
                    }
                    this.globalData.defs.appendChild(maskGroup);
                }
            } else if (this.data.tt) {
                this.matteElement.appendChild(this.layerElement);
                layerElementParent = this.matteElement;
                this.baseElement = this.matteElement;
            } else {
                this.baseElement = this.layerElement;
            }
            if (this.data.ln) {
                this.layerElement.setAttribute('id', this.data.ln);
            }
            if (this.data.cl) {
                this.layerElement.setAttribute('class', this.data.cl);
            }
            //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
            if (this.data.ty === 0 && !this.data.hd) {
                var cp = createNS('clipPath');
                var pt = createNS('path');
                pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');
                var clipId = createElementID();
                cp.setAttribute('id', clipId);
                cp.appendChild(pt);
                this.globalData.defs.appendChild(cp);

                if (this.checkMasks()) {
                    var cpGroup = createNS('g');
                    cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');
                    cpGroup.appendChild(this.layerElement);
                    this.transformedElement = cpGroup;
                    if (layerElementParent) {
                        layerElementParent.appendChild(this.transformedElement);
                    } else {
                        this.baseElement = this.transformedElement;
                    }
                } else {
                    this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');
                }
            }
            if (this.data.bm !== 0) {
                this.setBlendMode();
            }
        },
        renderElement: function renderElement() {
            if (this.finalTransform._matMdf) {
                this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());
            }
            if (this.finalTransform._opMdf) {
                this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);
            }
        },
        destroyBaseElement: function destroyBaseElement() {
            this.layerElement = null;
            this.matteElement = null;
            this.maskManager.destroy();
        },
        getBaseElement: function getBaseElement() {
            if (this.data.hd) {
                return null;
            }
            return this.baseElement;
        },
        createRenderableComponents: function createRenderableComponents() {
            this.maskManager = new MaskElement(this.data, this, this.globalData);
            this.renderableEffectsManager = new SVGEffects(this);
        },
        setMatte: function setMatte(id) {
            if (!this.matteElement) {
                return;
            }
            this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
        }
    };
    function IShapeElement() {}

    IShapeElement.prototype = {
        addShapeToModifiers: function addShapeToModifiers(data) {
            var i,
                len = this.shapeModifiers.length;
            for (i = 0; i < len; i += 1) {
                this.shapeModifiers[i].addShape(data);
            }
        },
        isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {
            var i = 0,
                len = this.shapeModifiers.length;
            while (i < len) {
                if (this.shapeModifiers[i].isAnimatedWithShape(data)) {
                    return true;
                }
            }
            return false;
        },
        renderModifiers: function renderModifiers() {
            if (!this.shapeModifiers.length) {
                return;
            }
            var i,
                len = this.shapes.length;
            for (i = 0; i < len; i += 1) {
                this.shapes[i].sh.reset();
            }

            len = this.shapeModifiers.length;
            for (i = len - 1; i >= 0; i -= 1) {
                this.shapeModifiers[i].processShapes(this._isFirstFrame);
            }
        },
        lcEnum: {
            '1': 'butt',
            '2': 'round',
            '3': 'square'
        },
        ljEnum: {
            '1': 'miter',
            '2': 'round',
            '3': 'bevel'
        },
        searchProcessedElement: function searchProcessedElement(elem) {
            var elements = this.processedElements;
            var i = 0,
                len = elements.length;
            while (i < len) {
                if (elements[i].elem === elem) {
                    return elements[i].pos;
                }
                i += 1;
            }
            return 0;
        },
        addProcessedElement: function addProcessedElement(elem, pos) {
            var elements = this.processedElements;
            var i = elements.length;
            while (i) {
                i -= 1;
                if (elements[i].elem === elem) {
                    elements[i].pos = pos;
                    return;
                }
            }
            elements.push(new ProcessedElement(elem, pos));
        },
        prepareFrame: function prepareFrame(num) {
            this.prepareRenderableFrame(num);
            this.prepareProperties(num, this.isInRange);
        }
    };
    function ITextElement() {}

    ITextElement.prototype.initElement = function (data, globalData, comp) {
        this.lettersChangedFlag = true;
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);
        this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);
        this.initTransform(data, globalData, comp);
        this.initHierarchy();
        this.initRenderable();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        this.createContent();
        this.hide();
        this.textAnimator.searchProperties(this.dynamicProperties);
    };

    ITextElement.prototype.prepareFrame = function (num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
            this.buildNewText();
            this.textProperty._isFirstFrame = false;
            this.textProperty._mdf = false;
        }
    };

    ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {
        var j,
            jLen = shapes.length;
        var k, kLen, pathNodes;
        var shapeStr = '';
        for (j = 0; j < jLen; j += 1) {
            pathNodes = shapes[j].ks.k;
            shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
        }
        return shapeStr;
    };

    ITextElement.prototype.updateDocumentData = function (newData, index) {
        this.textProperty.updateDocumentData(newData, index);
    };

    ITextElement.prototype.canResizeFont = function (_canResize) {
        this.textProperty.canResizeFont(_canResize);
    };

    ITextElement.prototype.setMinimumFontSize = function (_fontSize) {
        this.textProperty.setMinimumFontSize(_fontSize);
    };

    ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {
        if (documentData.ps) {
            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
        }
        matrixHelper.translate(0, -documentData.ls, 0);
        switch (documentData.j) {
            case 1:
                matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);
                break;
            case 2:
                matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);
                break;
        }
        matrixHelper.translate(xPos, yPos, 0);
    };

    ITextElement.prototype.buildColor = function (colorData) {
        return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';
    };

    ITextElement.prototype.emptyProp = new LetterProps();

    ITextElement.prototype.destroy = function () {};
    function ICompElement() {}

    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);

    ICompElement.prototype.initElement = function (data, globalData, comp) {
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.initTransform(data, globalData, comp);
        this.initRenderable();
        this.initHierarchy();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        if (this.data.xt || !globalData.progressiveLoad) {
            this.buildAllItems();
        }
        this.hide();
    };

    /*ICompElement.prototype.hide = function(){
        if(!this.hidden){
            this.hideElement();
            var i,len = this.elements.length;
            for( i = 0; i < len; i+=1 ){
                if(this.elements[i]){
                    this.elements[i].hide();
                }
            }
        }
    };*/

    ICompElement.prototype.prepareFrame = function (num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (!this.isInRange && !this.data.xt) {
            return;
        }

        if (!this.tm._placeholder) {
            var timeRemapped = this.tm.v;
            if (timeRemapped === this.data.op) {
                timeRemapped = this.data.op - 1;
            }
            this.renderedFrame = timeRemapped;
        } else {
            this.renderedFrame = num / this.data.sr;
        }
        var i,
            len = this.elements.length;
        if (!this.completeLayers) {
            this.checkLayers(this.renderedFrame);
        }
        //This iteration needs to be backwards because of how expressions connect between each other
        for (i = len - 1; i >= 0; i -= 1) {
            if (this.completeLayers || this.elements[i]) {
                this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);
                if (this.elements[i]._mdf) {
                    this._mdf = true;
                }
            }
        }
    };

    ICompElement.prototype.renderInnerContent = function () {
        var i,
            len = this.layers.length;
        for (i = 0; i < len; i += 1) {
            if (this.completeLayers || this.elements[i]) {
                this.elements[i].renderFrame();
            }
        }
    };

    ICompElement.prototype.setElements = function (elems) {
        this.elements = elems;
    };

    ICompElement.prototype.getElements = function () {
        return this.elements;
    };

    ICompElement.prototype.destroyElements = function () {
        var i,
            len = this.layers.length;
        for (i = 0; i < len; i += 1) {
            if (this.elements[i]) {
                this.elements[i].destroy();
            }
        }
    };

    ICompElement.prototype.destroy = function () {
        this.destroyElements();
        this.destroyBaseElement();
    };

    function IImageElement(data, globalData, comp) {
        this.assetData = globalData.getAssetData(data.refId);
        this.initElement(data, globalData, comp);
        this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h };
    }

    extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);

    IImageElement.prototype.createContent = function () {

        var assetPath = this.globalData.getAssetsPath(this.assetData);

        this.innerElem = createNS('image');
        this.innerElem.setAttribute('width', this.assetData.w + "px");
        this.innerElem.setAttribute('height', this.assetData.h + "px");
        this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
        this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);

        this.layerElement.appendChild(this.innerElem);
    };

    IImageElement.prototype.sourceRectAtTime = function () {
        return this.sourceRect;
    };
    function ISolidElement(data, globalData, comp) {
        this.initElement(data, globalData, comp);
    }
    extendPrototype([IImageElement], ISolidElement);

    ISolidElement.prototype.createContent = function () {

        var rect = createNS('rect');
        ////rect.style.width = this.data.sw;
        ////rect.style.height = this.data.sh;
        ////rect.style.fill = this.data.sc;
        rect.setAttribute('width', this.data.sw);
        rect.setAttribute('height', this.data.sh);
        rect.setAttribute('fill', this.data.sc);
        this.layerElement.appendChild(rect);
    };
    function SVGCompElement(data, globalData, comp) {
        this.layers = data.layers;
        this.supports3d = true;
        this.completeLayers = false;
        this.pendingElements = [];
        this.elements = this.layers ? createSizedArray(this.layers.length) : [];
        //this.layerElement = createNS('g');
        this.initElement(data, globalData, comp);
        this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };
    }

    extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);
    function SVGTextElement(data, globalData, comp) {
        this.textSpans = [];
        this.renderType = 'svg';
        this.initElement(data, globalData, comp);
    }

    extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextElement);

    SVGTextElement.prototype.createContent = function () {

        if (this.data.singleShape && !this.globalData.fontManager.chars) {
            this.textContainer = createNS('text');
        }
    };

    SVGTextElement.prototype.buildTextContents = function (textArray) {
        var i = 0,
            len = textArray.length;
        var textContents = [],
            currentTextContent = '';
        while (i < len) {
            if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
                textContents.push(currentTextContent);
                currentTextContent = '';
            } else {
                currentTextContent += textArray[i];
            }
            i += 1;
        }
        textContents.push(currentTextContent);
        return textContents;
    };

    SVGTextElement.prototype.buildNewText = function () {
        var i, len;

        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
        if (documentData.fc) {
            this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));
        } else {
            this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');
        }
        if (documentData.sc) {
            this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));
            this.layerElement.setAttribute('stroke-width', documentData.sw);
        }
        this.layerElement.setAttribute('font-size', documentData.finalSize);
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        if (fontData.fClass) {
            this.layerElement.setAttribute('class', fontData.fClass);
        } else {
            this.layerElement.setAttribute('font-family', fontData.fFamily);
            var fWeight = documentData.fWeight,
                fStyle = documentData.fStyle;
            this.layerElement.setAttribute('font-style', fStyle);
            this.layerElement.setAttribute('font-weight', fWeight);
        }
        this.layerElement.setAttribute('aria-label', documentData.t);

        var letters = documentData.l || [];
        var usesGlyphs = !!this.globalData.fontManager.chars;
        len = letters.length;

        var tSpan;
        var matrixHelper = this.mHelper;
        var shapes,
            shapeStr = '',
            singleShape = this.data.singleShape;
        var xPos = 0,
            yPos = 0,
            firstLine = true;
        var trackingOffset = documentData.tr / 1000 * documentData.finalSize;
        if (singleShape && !usesGlyphs && !documentData.sz) {
            var tElement = this.textContainer;
            var justify = 'start';
            switch (documentData.j) {
                case 1:
                    justify = 'end';
                    break;
                case 2:
                    justify = 'middle';
                    break;
            }
            tElement.setAttribute('text-anchor', justify);
            tElement.setAttribute('letter-spacing', trackingOffset);
            var textContent = this.buildTextContents(documentData.finalText);
            len = textContent.length;
            yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
            for (i = 0; i < len; i += 1) {
                tSpan = this.textSpans[i] || createNS('tspan');
                tSpan.textContent = textContent[i];
                tSpan.setAttribute('x', 0);
                tSpan.setAttribute('y', yPos);
                tSpan.style.display = 'inherit';
                tElement.appendChild(tSpan);
                this.textSpans[i] = tSpan;
                yPos += documentData.finalLineHeight;
            }

            this.layerElement.appendChild(tElement);
        } else {
            var cachedSpansLength = this.textSpans.length;
            var shapeData, charData;
            for (i = 0; i < len; i += 1) {
                if (!usesGlyphs || !singleShape || i === 0) {
                    tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? 'path' : 'text');
                    if (cachedSpansLength <= i) {
                        tSpan.setAttribute('stroke-linecap', 'butt');
                        tSpan.setAttribute('stroke-linejoin', 'round');
                        tSpan.setAttribute('stroke-miterlimit', '4');
                        this.textSpans[i] = tSpan;
                        this.layerElement.appendChild(tSpan);
                    }
                    tSpan.style.display = 'inherit';
                }

                matrixHelper.reset();
                matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
                if (singleShape) {
                    if (letters[i].n) {
                        xPos = -trackingOffset;
                        yPos += documentData.yOffset;
                        yPos += firstLine ? 1 : 0;
                        firstLine = false;
                    }
                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
                    xPos += letters[i].l || 0;
                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;
                    xPos += trackingOffset;
                }
                if (usesGlyphs) {
                    charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
                    shapeData = charData && charData.data || {};
                    shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
                    if (!singleShape) {
                        tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));
                    } else {
                        shapeStr += this.createPathShape(matrixHelper, shapes);
                    }
                } else {
                    if (singleShape) {
                        tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
                    }
                    tSpan.textContent = letters[i].val;
                    tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
                }
                //
            }
            if (singleShape && tSpan) {
                tSpan.setAttribute('d', shapeStr);
            }
        }
        while (i < this.textSpans.length) {
            this.textSpans[i].style.display = 'none';
            i += 1;
        }

        this._sizeChanged = true;
    };

    SVGTextElement.prototype.sourceRectAtTime = function (time) {
        this.prepareFrame(this.comp.renderedFrame - this.data.st);
        this.renderInnerContent();
        if (this._sizeChanged) {
            this._sizeChanged = false;
            var textBox = this.layerElement.getBBox();
            this.bbox = {
                top: textBox.y,
                left: textBox.x,
                width: textBox.width,
                height: textBox.height
            };
        }
        return this.bbox;
    };

    SVGTextElement.prototype.renderInnerContent = function () {

        if (!this.data.singleShape) {
            this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
            if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
                this._sizeChanged = true;
                var i, len;
                var renderedLetters = this.textAnimator.renderedLetters;

                var letters = this.textProperty.currentData.l;

                len = letters.length;
                var renderedLetter, textSpan;
                for (i = 0; i < len; i += 1) {
                    if (letters[i].n) {
                        continue;
                    }
                    renderedLetter = renderedLetters[i];
                    textSpan = this.textSpans[i];
                    if (renderedLetter._mdf.m) {
                        textSpan.setAttribute('transform', renderedLetter.m);
                    }
                    if (renderedLetter._mdf.o) {
                        textSpan.setAttribute('opacity', renderedLetter.o);
                    }
                    if (renderedLetter._mdf.sw) {
                        textSpan.setAttribute('stroke-width', renderedLetter.sw);
                    }
                    if (renderedLetter._mdf.sc) {
                        textSpan.setAttribute('stroke', renderedLetter.sc);
                    }
                    if (renderedLetter._mdf.fc) {
                        textSpan.setAttribute('fill', renderedLetter.fc);
                    }
                }
            }
        }
    };

    function SVGShapeElement(data, globalData, comp) {
        //List of drawable elements
        this.shapes = [];
        // Full shape data
        this.shapesData = data.shapes;
        //List of styles that will be applied to shapes
        this.stylesList = [];
        //List of modifiers that will be applied to shapes
        this.shapeModifiers = [];
        //List of items in shape tree
        this.itemsData = [];
        //List of items in previous shape tree
        this.processedElements = [];
        // List of animated components
        this.animatedContents = [];
        this.initElement(data, globalData, comp);
        //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
        // List of elements that have been created
        this.prevViewData = [];
        //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
    }

    extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);

    SVGShapeElement.prototype.initSecondaryElement = function () {};

    SVGShapeElement.prototype.identityMatrix = new Matrix();

    SVGShapeElement.prototype.buildExpressionInterface = function () {};

    SVGShapeElement.prototype.createContent = function () {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
    };

    /*
    This method searches for multiple shapes that affect a single element and one of them is animated
    */
    SVGShapeElement.prototype.filterUniqueShapes = function () {
        var i,
            len = this.shapes.length,
            shape;
        var j,
            jLen = this.stylesList.length;
        var style,
            count = 0;
        var tempShapes = [];
        var areAnimated = false;
        for (j = 0; j < jLen; j += 1) {
            style = this.stylesList[j];
            areAnimated = false;
            tempShapes.length = 0;
            for (i = 0; i < len; i += 1) {
                shape = this.shapes[i];
                if (shape.styles.indexOf(style) !== -1) {
                    tempShapes.push(shape);
                    areAnimated = shape._isAnimated || areAnimated;
                }
            }
            if (tempShapes.length > 1 && areAnimated) {
                this.setShapesAsAnimated(tempShapes);
            }
        }
    };

    SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {
        var i,
            len = shapes.length;
        for (i = 0; i < len; i += 1) {
            shapes[i].setAsAnimated();
        }
    };

    SVGShapeElement.prototype.createStyleElement = function (data, level) {
        //TODO: prevent drawing of hidden styles
        var elementData;
        var styleOb = new SVGStyleData(data, level);

        var pathElement = styleOb.pElem;
        if (data.ty === 'st') {
            elementData = new SVGStrokeStyleData(this, data, styleOb);
        } else if (data.ty === 'fl') {
            elementData = new SVGFillStyleData(this, data, styleOb);
        } else if (data.ty === 'gf' || data.ty === 'gs') {
            var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
            elementData = new gradientConstructor(this, data, styleOb);
            this.globalData.defs.appendChild(elementData.gf);
            if (elementData.maskId) {
                this.globalData.defs.appendChild(elementData.ms);
                this.globalData.defs.appendChild(elementData.of);
                pathElement.setAttribute('mask', 'url(' + locationHref + '#' + elementData.maskId + ')');
            }
        }

        if (data.ty === 'st' || data.ty === 'gs') {
            pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');
            pathElement.setAttribute('stroke-linejoin', this.ljEnum[data.lj] || 'round');
            pathElement.setAttribute('fill-opacity', '0');
            if (data.lj === 1) {
                pathElement.setAttribute('stroke-miterlimit', data.ml);
            }
        }

        if (data.r === 2) {
            pathElement.setAttribute('fill-rule', 'evenodd');
        }

        if (data.ln) {
            pathElement.setAttribute('id', data.ln);
        }
        if (data.cl) {
            pathElement.setAttribute('class', data.cl);
        }
        if (data.bm) {
            pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);
        }
        this.stylesList.push(styleOb);
        this.addToAnimatedContents(data, elementData);
        return elementData;
    };

    SVGShapeElement.prototype.createGroupElement = function (data) {
        var elementData = new ShapeGroupData();
        if (data.ln) {
            elementData.gr.setAttribute('id', data.ln);
        }
        if (data.cl) {
            elementData.gr.setAttribute('class', data.cl);
        }
        if (data.bm) {
            elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);
        }
        return elementData;
    };

    SVGShapeElement.prototype.createTransformElement = function (data, container) {
        var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);
        var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
        this.addToAnimatedContents(data, elementData);
        return elementData;
    };

    SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {
        var ty = 4;
        if (data.ty === 'rc') {
            ty = 5;
        } else if (data.ty === 'el') {
            ty = 6;
        } else if (data.ty === 'sr') {
            ty = 7;
        }
        var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);
        var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
        this.shapes.push(elementData);
        this.addShapeToModifiers(elementData);
        this.addToAnimatedContents(data, elementData);
        return elementData;
    };

    SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {
        var i = 0,
            len = this.animatedContents.length;
        while (i < len) {
            if (this.animatedContents[i].element === element) {
                return;
            }
            i += 1;
        }
        this.animatedContents.push({
            fn: SVGElementsRenderer.createRenderFunction(data),
            element: element,
            data: data
        });
    };

    SVGShapeElement.prototype.setElementStyles = function (elementData) {
        var arr = elementData.styles;
        var j,
            jLen = this.stylesList.length;
        for (j = 0; j < jLen; j += 1) {
            if (!this.stylesList[j].closed) {
                arr.push(this.stylesList[j]);
            }
        }
    };

    SVGShapeElement.prototype.reloadShapes = function () {
        this._isFirstFrame = true;
        var i,
            len = this.itemsData.length;
        for (i = 0; i < len; i += 1) {
            this.prevViewData[i] = this.itemsData[i];
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
        len = this.dynamicProperties.length;
        for (i = 0; i < len; i += 1) {
            this.dynamicProperties[i].getValue();
        }
        this.renderModifiers();
    };

    SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {
        var ownTransformers = [].concat(transformers);
        var i,
            len = arr.length - 1;
        var j, jLen;
        var ownStyles = [],
            ownModifiers = [],
            styleOb,
            currentTransform,
            modifier,
            processedPos;
        for (i = len; i >= 0; i -= 1) {
            processedPos = this.searchProcessedElement(arr[i]);
            if (!processedPos) {
                arr[i]._render = render;
            } else {
                itemsData[i] = prevViewData[processedPos - 1];
            }
            if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {
                if (!processedPos) {
                    itemsData[i] = this.createStyleElement(arr[i], level);
                } else {
                    itemsData[i].style.closed = false;
                }
                if (arr[i]._render) {
                    container.appendChild(itemsData[i].style.pElem);
                }
                ownStyles.push(itemsData[i].style);
            } else if (arr[i].ty == 'gr') {
                if (!processedPos) {
                    itemsData[i] = this.createGroupElement(arr[i]);
                } else {
                    jLen = itemsData[i].it.length;
                    for (j = 0; j < jLen; j += 1) {
                        itemsData[i].prevViewData[j] = itemsData[i].it[j];
                    }
                }
                this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);
                if (arr[i]._render) {
                    container.appendChild(itemsData[i].gr);
                }
            } else if (arr[i].ty == 'tr') {
                if (!processedPos) {
                    itemsData[i] = this.createTransformElement(arr[i], container);
                }
                currentTransform = itemsData[i].transform;
                ownTransformers.push(currentTransform);
            } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {
                if (!processedPos) {
                    itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
                }
                this.setElementStyles(itemsData[i]);
            } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms') {
                if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    modifier.init(this, arr[i]);
                    itemsData[i] = modifier;
                    this.shapeModifiers.push(modifier);
                } else {
                    modifier = itemsData[i];
                    modifier.closed = false;
                }
                ownModifiers.push(modifier);
            } else if (arr[i].ty == 'rp') {
                if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    itemsData[i] = modifier;
                    modifier.init(this, arr, i, itemsData);
                    this.shapeModifiers.push(modifier);
                    render = false;
                } else {
                    modifier = itemsData[i];
                    modifier.closed = true;
                }
                ownModifiers.push(modifier);
            }
            this.addProcessedElement(arr[i], i + 1);
        }
        len = ownStyles.length;
        for (i = 0; i < len; i += 1) {
            ownStyles[i].closed = true;
        }
        len = ownModifiers.length;
        for (i = 0; i < len; i += 1) {
            ownModifiers[i].closed = true;
        }
    };

    SVGShapeElement.prototype.renderInnerContent = function () {
        this.renderModifiers();
        var i,
            len = this.stylesList.length;
        for (i = 0; i < len; i += 1) {
            this.stylesList[i].reset();
        }
        this.renderShape();

        for (i = 0; i < len; i += 1) {
            if (this.stylesList[i]._mdf || this._isFirstFrame) {
                if (this.stylesList[i].msElem) {
                    this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);
                    //Adding M0 0 fixes same mask bug on all browsers
                    this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;
                }
                this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');
            }
        }
    };

    SVGShapeElement.prototype.renderShape = function () {
        var i,
            len = this.animatedContents.length;
        var animatedContent;
        for (i = 0; i < len; i += 1) {
            animatedContent = this.animatedContents[i];
            if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
                animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
            }
        }
    };

    SVGShapeElement.prototype.destroy = function () {
        this.destroyBaseElement();
        this.shapesData = null;
        this.itemsData = null;
    };

    function SVGTintFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS('feColorMatrix');
        feColorMatrix.setAttribute('type', 'matrix');
        feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');
        feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
        feColorMatrix.setAttribute('result', 'f1');
        filter.appendChild(feColorMatrix);
        feColorMatrix = createNS('feColorMatrix');
        feColorMatrix.setAttribute('type', 'matrix');
        feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
        feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
        feColorMatrix.setAttribute('result', 'f2');
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
        if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {
            var feMerge = createNS('feMerge');
            filter.appendChild(feMerge);
            var feMergeNode;
            feMergeNode = createNS('feMergeNode');
            feMergeNode.setAttribute('in', 'SourceGraphic');
            feMerge.appendChild(feMergeNode);
            feMergeNode = createNS('feMergeNode');
            feMergeNode.setAttribute('in', 'f2');
            feMerge.appendChild(feMergeNode);
        }
    }

    SVGTintFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            var colorBlack = this.filterManager.effectElements[0].p.v;
            var colorWhite = this.filterManager.effectElements[1].p.v;
            var opacity = this.filterManager.effectElements[2].p.v / 100;
            this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');
        }
    };
    function SVGFillFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS('feColorMatrix');
        feColorMatrix.setAttribute('type', 'matrix');
        feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
        feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
    }
    SVGFillFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            var color = this.filterManager.effectElements[2].p.v;
            var opacity = this.filterManager.effectElements[6].p.v;
            this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');
        }
    };
    function SVGGaussianBlurEffect(filter, filterManager) {
        // Outset the filter region by 100% on all sides to accommodate blur expansion.
        filter.setAttribute('x', '-100%');
        filter.setAttribute('y', '-100%');
        filter.setAttribute('width', '300%');
        filter.setAttribute('height', '300%');

        this.filterManager = filterManager;
        var feGaussianBlur = createNS('feGaussianBlur');
        filter.appendChild(feGaussianBlur);
        this.feGaussianBlur = feGaussianBlur;
    }

    SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            // Empirical value, matching AE's blur appearance.
            var kBlurrinessToSigma = 0.3;
            var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;

            // Dimensions mapping:
            //
            //   1 -> horizontal & vertical
            //   2 -> horizontal only
            //   3 -> vertical only
            //
            var dimensions = this.filterManager.effectElements[1].p.v;
            var sigmaX = dimensions == 3 ? 0 : sigma;
            var sigmaY = dimensions == 2 ? 0 : sigma;

            this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + " " + sigmaY);

            // Repeat edges mapping:
            //
            //   0 -> off -> duplicate
            //   1 -> on  -> wrap
            var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate';
            this.feGaussianBlur.setAttribute('edgeMode', edgeMode);
        }
    };
    function SVGStrokeEffect(elem, filterManager) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.elem = elem;
        this.paths = [];
    }

    SVGStrokeEffect.prototype.initialize = function () {

        var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
        var path, groupPath, i, len;
        if (this.filterManager.effectElements[1].p.v === 1) {
            len = this.elem.maskManager.masksProperties.length;
            i = 0;
        } else {
            i = this.filterManager.effectElements[0].p.v - 1;
            len = i + 1;
        }
        groupPath = createNS('g');
        groupPath.setAttribute('fill', 'none');
        groupPath.setAttribute('stroke-linecap', 'round');
        groupPath.setAttribute('stroke-dashoffset', 1);
        for (i; i < len; i += 1) {
            path = createNS('path');
            groupPath.appendChild(path);
            this.paths.push({ p: path, m: i });
        }
        if (this.filterManager.effectElements[10].p.v === 3) {
            var mask = createNS('mask');
            var id = createElementID();
            mask.setAttribute('id', id);
            mask.setAttribute('mask-type', 'alpha');
            mask.appendChild(groupPath);
            this.elem.globalData.defs.appendChild(mask);
            var g = createNS('g');
            g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');
            while (elemChildren[0]) {
                g.appendChild(elemChildren[0]);
            }
            this.elem.layerElement.appendChild(g);
            this.masker = mask;
            groupPath.setAttribute('stroke', '#fff');
        } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
            if (this.filterManager.effectElements[10].p.v === 2) {
                elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                while (elemChildren.length) {
                    this.elem.layerElement.removeChild(elemChildren[0]);
                }
            }
            this.elem.layerElement.appendChild(groupPath);
            this.elem.layerElement.removeAttribute('mask');
            groupPath.setAttribute('stroke', '#fff');
        }
        this.initialized = true;
        this.pathMasker = groupPath;
    };

    SVGStrokeEffect.prototype.renderFrame = function (forceRender) {
        if (!this.initialized) {
            this.initialize();
        }
        var i,
            len = this.paths.length;
        var mask, path;
        for (i = 0; i < len; i += 1) {
            if (this.paths[i].m === -1) {
                continue;
            }
            mask = this.elem.maskManager.viewData[this.paths[i].m];
            path = this.paths[i].p;
            if (forceRender || this.filterManager._mdf || mask.prop._mdf) {
                path.setAttribute('d', mask.lastPath);
            }
            if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {
                var dasharrayValue;
                if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {
                    var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;
                    var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;
                    var l = path.getTotalLength();
                    dasharrayValue = '0 0 0 ' + l * s + ' ';
                    var lineLength = l * (e - s);
                    var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;
                    var units = Math.floor(lineLength / segment);
                    var j;
                    for (j = 0; j < units; j += 1) {
                        dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100 + ' ';
                    }
                    dasharrayValue += '0 ' + l * 10 + ' 0 0';
                } else {
                    dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;
                }
                path.setAttribute('stroke-dasharray', dasharrayValue);
            }
        }
        if (forceRender || this.filterManager.effectElements[4].p._mdf) {
            this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);
        }

        if (forceRender || this.filterManager.effectElements[6].p._mdf) {
            this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);
        }
        if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
            if (forceRender || this.filterManager.effectElements[3].p._mdf) {
                var color = this.filterManager.effectElements[3].p.v;
                this.pathMasker.setAttribute('stroke', 'rgb(' + bm_floor(color[0] * 255) + ',' + bm_floor(color[1] * 255) + ',' + bm_floor(color[2] * 255) + ')');
            }
        }
    };
    function SVGTritoneFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS('feColorMatrix');
        feColorMatrix.setAttribute('type', 'matrix');
        feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');
        feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
        feColorMatrix.setAttribute('result', 'f1');
        filter.appendChild(feColorMatrix);
        var feComponentTransfer = createNS('feComponentTransfer');
        feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
        filter.appendChild(feComponentTransfer);
        this.matrixFilter = feComponentTransfer;
        var feFuncR = createNS('feFuncR');
        feFuncR.setAttribute('type', 'table');
        feComponentTransfer.appendChild(feFuncR);
        this.feFuncR = feFuncR;
        var feFuncG = createNS('feFuncG');
        feFuncG.setAttribute('type', 'table');
        feComponentTransfer.appendChild(feFuncG);
        this.feFuncG = feFuncG;
        var feFuncB = createNS('feFuncB');
        feFuncB.setAttribute('type', 'table');
        feComponentTransfer.appendChild(feFuncB);
        this.feFuncB = feFuncB;
    }

    SVGTritoneFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            var color1 = this.filterManager.effectElements[0].p.v;
            var color2 = this.filterManager.effectElements[1].p.v;
            var color3 = this.filterManager.effectElements[2].p.v;
            var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];
            var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];
            var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];
            this.feFuncR.setAttribute('tableValues', tableR);
            this.feFuncG.setAttribute('tableValues', tableG);
            this.feFuncB.setAttribute('tableValues', tableB);
            //var opacity = this.filterManager.effectElements[2].p.v/100;
            //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
        }
    };
    function SVGProLevelsFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var effectElements = this.filterManager.effectElements;
        var feComponentTransfer = createNS('feComponentTransfer');
        var feFuncR, feFuncG, feFuncB;

        if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {
            this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);
        }
        if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {
            this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);
        }
        if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {
            this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);
        }
        if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {
            this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);
        }

        if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {
            feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
            filter.appendChild(feComponentTransfer);
            feComponentTransfer = createNS('feComponentTransfer');
        }

        if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {

            feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');
            filter.appendChild(feComponentTransfer);
            this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);
            this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);
            this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);
        }
    }

    SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {
        var feFunc = createNS(type);
        feFunc.setAttribute('type', 'table');
        feComponentTransfer.appendChild(feFunc);
        return feFunc;
    };

    SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
        var cnt = 0;
        var segments = 256;
        var perc;
        var min = Math.min(inputBlack, inputWhite);
        var max = Math.max(inputBlack, inputWhite);
        var table = Array.call(null, { length: segments });
        var colorValue;
        var pos = 0;
        var outputDelta = outputWhite - outputBlack;
        var inputDelta = inputWhite - inputBlack;
        while (cnt <= 256) {
            perc = cnt / 256;
            if (perc <= min) {
                colorValue = inputDelta < 0 ? outputWhite : outputBlack;
            } else if (perc >= max) {
                colorValue = inputDelta < 0 ? outputBlack : outputWhite;
            } else {
                colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
            }
            table[pos++] = colorValue;
            cnt += 256 / (segments - 1);
        }
        return table.join(' ');
    };

    SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            var val, cnt, perc, bezier;
            var effectElements = this.filterManager.effectElements;
            if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {
                val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);
                this.feFuncRComposed.setAttribute('tableValues', val);
                this.feFuncGComposed.setAttribute('tableValues', val);
                this.feFuncBComposed.setAttribute('tableValues', val);
            }

            if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {
                val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);
                this.feFuncR.setAttribute('tableValues', val);
            }

            if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {
                val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);
                this.feFuncG.setAttribute('tableValues', val);
            }

            if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {
                val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);
                this.feFuncB.setAttribute('tableValues', val);
            }

            if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {
                val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);
                this.feFuncA.setAttribute('tableValues', val);
            }
        }
    };
    function SVGDropShadowEffect(filter, filterManager) {
        var filterSize = filterManager.container.globalData.renderConfig.filterSize;
        filter.setAttribute('x', filterSize.x);
        filter.setAttribute('y', filterSize.y);
        filter.setAttribute('width', filterSize.width);
        filter.setAttribute('height', filterSize.height);
        this.filterManager = filterManager;

        var feGaussianBlur = createNS('feGaussianBlur');
        feGaussianBlur.setAttribute('in', 'SourceAlpha');
        feGaussianBlur.setAttribute('result', 'drop_shadow_1');
        feGaussianBlur.setAttribute('stdDeviation', '0');
        this.feGaussianBlur = feGaussianBlur;
        filter.appendChild(feGaussianBlur);

        var feOffset = createNS('feOffset');
        feOffset.setAttribute('dx', '25');
        feOffset.setAttribute('dy', '0');
        feOffset.setAttribute('in', 'drop_shadow_1');
        feOffset.setAttribute('result', 'drop_shadow_2');
        this.feOffset = feOffset;
        filter.appendChild(feOffset);
        var feFlood = createNS('feFlood');
        feFlood.setAttribute('flood-color', '#00ff00');
        feFlood.setAttribute('flood-opacity', '1');
        feFlood.setAttribute('result', 'drop_shadow_3');
        this.feFlood = feFlood;
        filter.appendChild(feFlood);

        var feComposite = createNS('feComposite');
        feComposite.setAttribute('in', 'drop_shadow_3');
        feComposite.setAttribute('in2', 'drop_shadow_2');
        feComposite.setAttribute('operator', 'in');
        feComposite.setAttribute('result', 'drop_shadow_4');
        filter.appendChild(feComposite);

        var feMerge = createNS('feMerge');
        filter.appendChild(feMerge);
        var feMergeNode;
        feMergeNode = createNS('feMergeNode');
        feMerge.appendChild(feMergeNode);
        feMergeNode = createNS('feMergeNode');
        feMergeNode.setAttribute('in', 'SourceGraphic');
        this.feMergeNode = feMergeNode;
        this.feMerge = feMerge;
        this.originalNodeAdded = false;
        feMerge.appendChild(feMergeNode);
    }

    SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
            if (forceRender || this.filterManager.effectElements[4].p._mdf) {
                this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);
            }
            if (forceRender || this.filterManager.effectElements[0].p._mdf) {
                var col = this.filterManager.effectElements[0].p.v;
                this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));
            }
            if (forceRender || this.filterManager.effectElements[1].p._mdf) {
                this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);
            }
            if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                var distance = this.filterManager.effectElements[3].p.v;
                var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
                var x = distance * Math.cos(angle);
                var y = distance * Math.sin(angle);
                this.feOffset.setAttribute('dx', x);
                this.feOffset.setAttribute('dy', y);
            }
            /*if(forceRender || this.filterManager.effectElements[5].p._mdf){
                if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {
                    this.feMerge.removeChild(this.feMergeNode);
                    this.originalNodeAdded = false;
                } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {
                    this.feMerge.appendChild(this.feMergeNode);
                    this.originalNodeAdded = true;
                }
            }*/
        }
    };
    var _svgMatteSymbols = [];

    function SVGMatte3Effect(filterElem, filterManager, elem) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.filterElem = filterElem;
        this.elem = elem;
        elem.matteElement = createNS('g');
        elem.matteElement.appendChild(elem.layerElement);
        elem.matteElement.appendChild(elem.transformedElement);
        elem.baseElement = elem.matteElement;
    }

    SVGMatte3Effect.prototype.findSymbol = function (mask) {
        var i = 0,
            len = _svgMatteSymbols.length;
        while (i < len) {
            if (_svgMatteSymbols[i] === mask) {
                return _svgMatteSymbols[i];
            }
            i += 1;
        }
        return null;
    };

    SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {
        var parentNode = mask.layerElement.parentNode;
        if (!parentNode) {
            return;
        }
        var children = parentNode.children;
        var i = 0,
            len = children.length;
        while (i < len) {
            if (children[i] === mask.layerElement) {
                break;
            }
            i += 1;
        }
        var nextChild;
        if (i <= len - 2) {
            nextChild = children[i + 1];
        }
        var useElem = createNS('use');
        useElem.setAttribute('href', '#' + symbolId);
        if (nextChild) {
            parentNode.insertBefore(useElem, nextChild);
        } else {
            parentNode.appendChild(useElem);
        }
    };

    SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {
        if (!this.findSymbol(mask)) {
            var symbolId = createElementID();
            var masker = createNS('mask');
            masker.setAttribute('id', mask.layerId);
            masker.setAttribute('mask-type', 'alpha');
            _svgMatteSymbols.push(mask);
            var defs = elem.globalData.defs;
            defs.appendChild(masker);
            var symbol = createNS('symbol');
            symbol.setAttribute('id', symbolId);
            this.replaceInParent(mask, symbolId);
            symbol.appendChild(mask.layerElement);
            defs.appendChild(symbol);
            var useElem = createNS('use');
            useElem.setAttribute('href', '#' + symbolId);
            masker.appendChild(useElem);
            mask.data.hd = false;
            mask.show();
        }
        elem.setMatte(mask.layerId);
    };

    SVGMatte3Effect.prototype.initialize = function () {
        var ind = this.filterManager.effectElements[0].p.v;
        var elements = this.elem.comp.elements;
        var i = 0,
            len = elements.length;
        while (i < len) {
            if (elements[i] && elements[i].data.ind === ind) {
                this.setElementAsMask(this.elem, elements[i]);
            }
            i += 1;
        }
        this.initialized = true;
    };

    SVGMatte3Effect.prototype.renderFrame = function () {
        if (!this.initialized) {
            this.initialize();
        }
    };
    function SVGEffects(elem) {
        var i,
            len = elem.data.ef ? elem.data.ef.length : 0;
        var filId = createElementID();
        var fil = filtersFactory.createFilter(filId);
        var count = 0;
        this.filters = [];
        var filterManager;
        for (i = 0; i < len; i += 1) {
            filterManager = null;
            if (elem.data.ef[i].ty === 20) {
                count += 1;
                filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 21) {
                count += 1;
                filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 22) {
                filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 23) {
                count += 1;
                filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 24) {
                count += 1;
                filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 25) {
                count += 1;
                filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);
            } else if (elem.data.ef[i].ty === 28) {
                //count += 1;
                filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);
            } else if (elem.data.ef[i].ty === 29) {
                count += 1;
                filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);
            }
            if (filterManager) {
                this.filters.push(filterManager);
            }
        }
        if (count) {
            elem.globalData.defs.appendChild(fil);
            elem.layerElement.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');
        }
        if (this.filters.length) {
            elem.addRenderableComponent(this);
        }
    }

    SVGEffects.prototype.renderFrame = function (_isFirstFrame) {
        var i,
            len = this.filters.length;
        for (i = 0; i < len; i += 1) {
            this.filters[i].renderFrame(_isFirstFrame);
        }
    };
    function CVEffects() {}
    CVEffects.prototype.renderFrame = function () {};
    function HBaseElement(data, globalData, comp) {}
    HBaseElement.prototype = {
        checkBlendMode: function checkBlendMode() {},
        initRendererElement: function initRendererElement() {
            this.baseElement = createTag(this.data.tg || 'div');
            if (this.data.hasMask) {
                this.svgElement = createNS('svg');
                this.layerElement = createNS('g');
                this.maskedElement = this.layerElement;
                this.svgElement.appendChild(this.layerElement);
                this.baseElement.appendChild(this.svgElement);
            } else {
                this.layerElement = this.baseElement;
            }
            styleDiv(this.baseElement);
        },
        createContainerElements: function createContainerElements() {
            this.renderableEffectsManager = new CVEffects(this);
            this.transformedElement = this.baseElement;
            this.maskedElement = this.layerElement;
            if (this.data.ln) {
                this.layerElement.setAttribute('id', this.data.ln);
            }
            if (this.data.cl) {
                this.layerElement.setAttribute('class', this.data.cl);
            }
            if (this.data.bm !== 0) {
                this.setBlendMode();
            }
        },
        renderElement: function renderElement() {
            if (this.finalTransform._matMdf) {
                this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();
            }
            if (this.finalTransform._opMdf) {
                this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;
            }
        },
        renderFrame: function renderFrame() {
            //If it is exported as hidden (data.hd === true) no need to render
            //If it is not visible no need to render
            if (this.data.hd || this.hidden) {
                return;
            }
            this.renderTransform();
            this.renderRenderable();
            this.renderElement();
            this.renderInnerContent();
            if (this._isFirstFrame) {
                this._isFirstFrame = false;
            }
        },
        destroy: function destroy() {
            this.layerElement = null;
            this.transformedElement = null;
            if (this.matteElement) {
                this.matteElement = null;
            }
            if (this.maskManager) {
                this.maskManager.destroy();
                this.maskManager = null;
            }
        },
        createRenderableComponents: function createRenderableComponents() {
            this.maskManager = new MaskElement(this.data, this, this.globalData);
        },
        addEffects: function addEffects() {},
        setMatte: function setMatte() {}
    };
    HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
    HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
    HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;
    function HSolidElement(data, globalData, comp) {
        this.initElement(data, globalData, comp);
    }
    extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);

    HSolidElement.prototype.createContent = function () {
        var rect;
        if (this.data.hasMask) {
            rect = createNS('rect');
            rect.setAttribute('width', this.data.sw);
            rect.setAttribute('height', this.data.sh);
            rect.setAttribute('fill', this.data.sc);
            this.svgElement.setAttribute('width', this.data.sw);
            this.svgElement.setAttribute('height', this.data.sh);
        } else {
            rect = createTag('div');
            rect.style.width = this.data.sw + 'px';
            rect.style.height = this.data.sh + 'px';
            rect.style.backgroundColor = this.data.sc;
        }
        this.layerElement.appendChild(rect);
    };

    function HCompElement(data, globalData, comp) {
        this.layers = data.layers;
        this.supports3d = !data.hasMask;
        this.completeLayers = false;
        this.pendingElements = [];
        this.elements = this.layers ? createSizedArray(this.layers.length) : [];
        this.initElement(data, globalData, comp);
        this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };
    }

    extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);
    HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;

    HCompElement.prototype.createContainerElements = function () {
        this._createBaseContainerElements();
        //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
        if (this.data.hasMask) {
            this.svgElement.setAttribute('width', this.data.w);
            this.svgElement.setAttribute('height', this.data.h);
            this.transformedElement = this.baseElement;
        } else {
            this.transformedElement = this.layerElement;
        }
    };

    HCompElement.prototype.addTo3dContainer = function (elem, pos) {
        var j = 0;
        var nextElement;
        while (j < pos) {
            if (this.elements[j] && this.elements[j].getBaseElement) {
                nextElement = this.elements[j].getBaseElement();
            }
            j += 1;
        }
        if (nextElement) {
            this.layerElement.insertBefore(elem, nextElement);
        } else {
            this.layerElement.appendChild(elem);
        }
    };

    function HShapeElement(data, globalData, comp) {
        //List of drawable elements
        this.shapes = [];
        // Full shape data
        this.shapesData = data.shapes;
        //List of styles that will be applied to shapes
        this.stylesList = [];
        //List of modifiers that will be applied to shapes
        this.shapeModifiers = [];
        //List of items in shape tree
        this.itemsData = [];
        //List of items in previous shape tree
        this.processedElements = [];
        // List of animated components
        this.animatedContents = [];
        this.shapesContainer = createNS('g');
        this.initElement(data, globalData, comp);
        //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
        // List of elements that have been created
        this.prevViewData = [];
        this.currentBBox = {
            x: 999999,
            y: -999999,
            h: 0,
            w: 0
        };
    }
    extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);
    HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;

    HShapeElement.prototype.createContent = function () {
        var cont;
        this.baseElement.style.fontSize = 0;
        if (this.data.hasMask) {
            this.layerElement.appendChild(this.shapesContainer);
            cont = this.svgElement;
        } else {
            cont = createNS('svg');
            var size = this.comp.data ? this.comp.data : this.globalData.compSize;
            cont.setAttribute('width', size.w);
            cont.setAttribute('height', size.h);
            cont.appendChild(this.shapesContainer);
            this.layerElement.appendChild(cont);
        }

        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);
        this.filterUniqueShapes();
        this.shapeCont = cont;
    };

    HShapeElement.prototype.getTransformedPoint = function (transformers, point) {
        var i,
            len = transformers.length;
        for (i = 0; i < len; i += 1) {
            point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);
        }
        return point;
    };

    HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {
        var shape = item.sh.v;
        var transformers = item.transformers;
        var i,
            len = shape._length,
            vPoint,
            oPoint,
            nextIPoint,
            nextVPoint,
            bounds;
        if (len <= 1) {
            return;
        }
        for (i = 0; i < len - 1; i += 1) {
            vPoint = this.getTransformedPoint(transformers, shape.v[i]);
            oPoint = this.getTransformedPoint(transformers, shape.o[i]);
            nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);
            nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);
            this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
        }
        if (shape.c) {
            vPoint = this.getTransformedPoint(transformers, shape.v[i]);
            oPoint = this.getTransformedPoint(transformers, shape.o[i]);
            nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
            nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
            this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
        }
    };

    HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
        this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
        var bounds = this.shapeBoundingBox;
        boundingBox.x = bm_min(bounds.left, boundingBox.x);
        boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);
        boundingBox.y = bm_min(bounds.top, boundingBox.y);
        boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);
    };

    HShapeElement.prototype.shapeBoundingBox = {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
    };

    HShapeElement.prototype.tempBoundingBox = {
        x: 0,
        xMax: 0,
        y: 0,
        yMax: 0,
        width: 0,
        height: 0
    };

    HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {

        var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];

        for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {

            b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
            a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
            c = 3 * p1[i] - 3 * p0[i];

            b = b | 0;
            a = a | 0;
            c = c | 0;

            if (a === 0) {

                if (b === 0) {
                    continue;
                }

                t = -c / b;

                if (0 < t && t < 1) {
                    bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));
                }
                continue;
            }

            b2ac = b * b - 4 * c * a;

            if (b2ac < 0) {
                continue;
            }

            t1 = (-b + bm_sqrt(b2ac)) / (2 * a);
            if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));

            t2 = (-b - bm_sqrt(b2ac)) / (2 * a);
            if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));
        }

        this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);
        this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);
        this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);
        this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);
    };

    HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {
        return bm_pow(1 - t, 3) * p0[i] + 3 * bm_pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bm_pow(t, 2) * p2[i] + bm_pow(t, 3) * p3[i];
    };

    HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {
        var i,
            len = itemsData.length,
            path;
        for (i = 0; i < len; i += 1) {
            if (itemsData[i] && itemsData[i].sh) {
                this.calculateShapeBoundingBox(itemsData[i], boundingBox);
            } else if (itemsData[i] && itemsData[i].it) {
                this.calculateBoundingBox(itemsData[i].it, boundingBox);
            }
        }
    };

    HShapeElement.prototype.currentBoxContains = function (box) {
        return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;
    };

    HShapeElement.prototype.renderInnerContent = function () {
        this._renderShapeFrame();

        if (!this.hidden && (this._isFirstFrame || this._mdf)) {
            var tempBoundingBox = this.tempBoundingBox;
            var max = 999999;
            tempBoundingBox.x = max;
            tempBoundingBox.xMax = -max;
            tempBoundingBox.y = max;
            tempBoundingBox.yMax = -max;
            this.calculateBoundingBox(this.itemsData, tempBoundingBox);
            tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
            tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;
            //var tempBoundingBox = this.shapeCont.getBBox();
            if (this.currentBoxContains(tempBoundingBox)) {
                return;
            }
            var changed = false;
            if (this.currentBBox.w !== tempBoundingBox.width) {
                this.currentBBox.w = tempBoundingBox.width;
                this.shapeCont.setAttribute('width', tempBoundingBox.width);
                changed = true;
            }
            if (this.currentBBox.h !== tempBoundingBox.height) {
                this.currentBBox.h = tempBoundingBox.height;
                this.shapeCont.setAttribute('height', tempBoundingBox.height);
                changed = true;
            }
            if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {
                this.currentBBox.w = tempBoundingBox.width;
                this.currentBBox.h = tempBoundingBox.height;
                this.currentBBox.x = tempBoundingBox.x;
                this.currentBBox.y = tempBoundingBox.y;

                this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);
                this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
            }
        }
    };
    function HTextElement(data, globalData, comp) {
        this.textSpans = [];
        this.textPaths = [];
        this.currentBBox = {
            x: 999999,
            y: -999999,
            h: 0,
            w: 0
        };
        this.renderType = 'svg';
        this.isMasked = false;
        this.initElement(data, globalData, comp);
    }
    extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);

    HTextElement.prototype.createContent = function () {
        this.isMasked = this.checkMasks();
        if (this.isMasked) {
            this.renderType = 'svg';
            this.compW = this.comp.data.w;
            this.compH = this.comp.data.h;
            this.svgElement.setAttribute('width', this.compW);
            this.svgElement.setAttribute('height', this.compH);
            var g = createNS('g');
            this.maskedElement.appendChild(g);
            this.innerElem = g;
        } else {
            this.renderType = 'html';
            this.innerElem = this.layerElement;
        }

        this.checkParenting();
    };

    HTextElement.prototype.buildNewText = function () {
        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
        var innerElemStyle = this.innerElem.style;
        innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';
        if (documentData.sc) {
            innerElemStyle.stroke = this.buildColor(documentData.sc);
            innerElemStyle.strokeWidth = documentData.sw + 'px';
        }
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        if (!this.globalData.fontManager.chars) {
            innerElemStyle.fontSize = documentData.finalSize + 'px';
            innerElemStyle.lineHeight = documentData.finalSize + 'px';
            if (fontData.fClass) {
                this.innerElem.className = fontData.fClass;
            } else {
                innerElemStyle.fontFamily = fontData.fFamily;
                var fWeight = documentData.fWeight,
                    fStyle = documentData.fStyle;
                innerElemStyle.fontStyle = fStyle;
                innerElemStyle.fontWeight = fWeight;
            }
        }
        var i, len;

        var letters = documentData.l;
        len = letters.length;
        var tSpan, tParent, tCont;
        var matrixHelper = this.mHelper;
        var shapes,
            shapeStr = '';
        var cnt = 0;
        for (i = 0; i < len; i += 1) {
            if (this.globalData.fontManager.chars) {
                if (!this.textPaths[cnt]) {
                    tSpan = createNS('path');
                    tSpan.setAttribute('stroke-linecap', 'butt');
                    tSpan.setAttribute('stroke-linejoin', 'round');
                    tSpan.setAttribute('stroke-miterlimit', '4');
                } else {
                    tSpan = this.textPaths[cnt];
                }
                if (!this.isMasked) {
                    if (this.textSpans[cnt]) {
                        tParent = this.textSpans[cnt];
                        tCont = tParent.children[0];
                    } else {

                        tParent = createTag('div');
                        tParent.style.lineHeight = 0;
                        tCont = createNS('svg');
                        tCont.appendChild(tSpan);
                        styleDiv(tParent);
                    }
                }
            } else {
                if (!this.isMasked) {
                    if (this.textSpans[cnt]) {
                        tParent = this.textSpans[cnt];
                        tSpan = this.textPaths[cnt];
                    } else {
                        tParent = createTag('span');
                        styleDiv(tParent);
                        tSpan = createTag('span');
                        styleDiv(tSpan);
                        tParent.appendChild(tSpan);
                    }
                } else {
                    tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');
                }
            }
            //tSpan.setAttribute('visibility', 'hidden');
            if (this.globalData.fontManager.chars) {
                var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
                var shapeData;
                if (charData) {
                    shapeData = charData.data;
                } else {
                    shapeData = null;
                }
                matrixHelper.reset();
                if (shapeData && shapeData.shapes) {
                    shapes = shapeData.shapes[0].it;
                    matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
                    shapeStr = this.createPathShape(matrixHelper, shapes);
                    tSpan.setAttribute('d', shapeStr);
                }
                if (!this.isMasked) {
                    this.innerElem.appendChild(tParent);
                    if (shapeData && shapeData.shapes) {

                        //document.body.appendChild is needed to get exact measure of shape
                        document.body.appendChild(tCont);
                        var boundingBox = tCont.getBBox();
                        tCont.setAttribute('width', boundingBox.width + 2);
                        tCont.setAttribute('height', boundingBox.height + 2);
                        tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));
                        tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';

                        letters[i].yOffset = boundingBox.y - 1;
                    } else {
                        tCont.setAttribute('width', 1);
                        tCont.setAttribute('height', 1);
                    }
                    tParent.appendChild(tCont);
                } else {
                    this.innerElem.appendChild(tSpan);
                }
            } else {
                tSpan.textContent = letters[i].val;
                tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
                if (!this.isMasked) {
                    this.innerElem.appendChild(tParent);
                    //
                    tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';
                } else {
                    this.innerElem.appendChild(tSpan);
                }
            }
            //
            if (!this.isMasked) {
                this.textSpans[cnt] = tParent;
            } else {
                this.textSpans[cnt] = tSpan;
            }
            this.textSpans[cnt].style.display = 'block';
            this.textPaths[cnt] = tSpan;
            cnt += 1;
        }
        while (cnt < this.textSpans.length) {
            this.textSpans[cnt].style.display = 'none';
            cnt += 1;
        }
    };

    HTextElement.prototype.renderInnerContent = function () {

        if (this.data.singleShape) {
            if (!this._isFirstFrame && !this.lettersChangedFlag) {
                return;
            } else {
                // Todo Benchmark if using this is better than getBBox
                if (this.isMasked && this.finalTransform._matMdf) {
                    this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);
                    this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';
                }
            }
        }

        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {
            return;
        }
        var i,
            len,
            count = 0;
        var renderedLetters = this.textAnimator.renderedLetters;

        var letters = this.textProperty.currentData.l;

        len = letters.length;
        var renderedLetter, textSpan, textPath;
        for (i = 0; i < len; i += 1) {
            if (letters[i].n) {
                count += 1;
                continue;
            }
            textSpan = this.textSpans[i];
            textPath = this.textPaths[i];
            renderedLetter = renderedLetters[count];
            count += 1;
            if (renderedLetter._mdf.m) {
                if (!this.isMasked) {
                    textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;
                } else {
                    textSpan.setAttribute('transform', renderedLetter.m);
                }
            }
            ////textSpan.setAttribute('opacity',renderedLetter.o);
            textSpan.style.opacity = renderedLetter.o;
            if (renderedLetter.sw && renderedLetter._mdf.sw) {
                textPath.setAttribute('stroke-width', renderedLetter.sw);
            }
            if (renderedLetter.sc && renderedLetter._mdf.sc) {
                textPath.setAttribute('stroke', renderedLetter.sc);
            }
            if (renderedLetter.fc && renderedLetter._mdf.fc) {
                textPath.setAttribute('fill', renderedLetter.fc);
                textPath.style.color = renderedLetter.fc;
            }
        }

        if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
            var boundingBox = this.innerElem.getBBox();

            if (this.currentBBox.w !== boundingBox.width) {
                this.currentBBox.w = boundingBox.width;
                this.svgElement.setAttribute('width', boundingBox.width);
            }
            if (this.currentBBox.h !== boundingBox.height) {
                this.currentBBox.h = boundingBox.height;
                this.svgElement.setAttribute('height', boundingBox.height);
            }

            var margin = 1;
            if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {
                this.currentBBox.w = boundingBox.width + margin * 2;
                this.currentBBox.h = boundingBox.height + margin * 2;
                this.currentBBox.x = boundingBox.x - margin;
                this.currentBBox.y = boundingBox.y - margin;

                this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);
                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
            }
        }
    };
    function HImageElement(data, globalData, comp) {
        this.assetData = globalData.getAssetData(data.refId);
        this.initElement(data, globalData, comp);
    }

    extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);

    HImageElement.prototype.createContent = function () {
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        var img = new Image();

        if (this.data.hasMask) {
            this.imageElem = createNS('image');
            this.imageElem.setAttribute('width', this.assetData.w + "px");
            this.imageElem.setAttribute('height', this.assetData.h + "px");
            this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);
            this.layerElement.appendChild(this.imageElem);
            this.baseElement.setAttribute('width', this.assetData.w);
            this.baseElement.setAttribute('height', this.assetData.h);
        } else {
            this.layerElement.appendChild(img);
        }
        img.src = assetPath;
        if (this.data.ln) {
            this.baseElement.setAttribute('id', this.data.ln);
        }
    };
    function HCameraElement(data, globalData, comp) {
        this.initFrame();
        this.initBaseData(data, globalData, comp);
        this.initHierarchy();
        var getProp = PropertyFactory.getProp;
        this.pe = getProp(this, data.pe, 0, 0, this);
        if (data.ks.p.s) {
            this.px = getProp(this, data.ks.p.x, 1, 0, this);
            this.py = getProp(this, data.ks.p.y, 1, 0, this);
            this.pz = getProp(this, data.ks.p.z, 1, 0, this);
        } else {
            this.p = getProp(this, data.ks.p, 1, 0, this);
        }
        if (data.ks.a) {
            this.a = getProp(this, data.ks.a, 1, 0, this);
        }
        if (data.ks.or.k.length && data.ks.or.k[0].to) {
            var i,
                len = data.ks.or.k.length;
            for (i = 0; i < len; i += 1) {
                data.ks.or.k[i].to = null;
                data.ks.or.k[i].ti = null;
            }
        }
        this.or = getProp(this, data.ks.or, 1, degToRads, this);
        this.or.sh = true;
        this.rx = getProp(this, data.ks.rx, 0, degToRads, this);
        this.ry = getProp(this, data.ks.ry, 0, degToRads, this);
        this.rz = getProp(this, data.ks.rz, 0, degToRads, this);
        this.mat = new Matrix();
        this._prevMat = new Matrix();
        this._isFirstFrame = true;

        // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
        this.finalTransform = {
            mProp: this
        };
    }
    extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);

    HCameraElement.prototype.setup = function () {
        var i,
            len = this.comp.threeDElements.length,
            comp;
        for (i = 0; i < len; i += 1) {
            //[perspectiveElem,container]
            comp = this.comp.threeDElements[i];
            if (comp.type === '3d') {
                comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';
                comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = "0px 0px 0px";
                comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
            }
        }
    };

    HCameraElement.prototype.createElements = function () {};

    HCameraElement.prototype.hide = function () {};

    HCameraElement.prototype.renderFrame = function () {
        var _mdf = this._isFirstFrame;
        var i, len;
        if (this.hierarchy) {
            len = this.hierarchy.length;
            for (i = 0; i < len; i += 1) {
                _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
            }
        }
        if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
            this.mat.reset();

            if (this.hierarchy) {
                var mat;
                len = this.hierarchy.length - 1;
                for (i = len; i >= 0; i -= 1) {
                    var mTransf = this.hierarchy[i].finalTransform.mProp;
                    this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);
                    this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
                    this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
                    this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);
                    this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);
                }
            }
            if (this.p) {
                this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);
            } else {
                this.mat.translate(-this.px.v, -this.py.v, this.pz.v);
            }
            if (this.a) {
                var diffVector;
                if (this.p) {
                    diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
                } else {
                    diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                }
                var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2));
                //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
                var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];
                var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);
                var m_rotationX = Math.atan2(lookDir[1], lookLengthOnXZ);
                var m_rotationY = Math.atan2(lookDir[0], -lookDir[2]);
                this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);
            }
            this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
            this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
            this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);
            this.mat.translate(0, 0, this.pe.v);

            var hasMatrixChanged = !this._prevMat.equals(this.mat);
            if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
                len = this.comp.threeDElements.length;
                var comp;
                for (i = 0; i < len; i += 1) {
                    comp = this.comp.threeDElements[i];
                    if (comp.type === '3d') {
                        if (hasMatrixChanged) {
                            comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();
                        }
                        if (this.pe._mdf) {
                            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';
                        }
                    }
                }
                this.mat.clone(this._prevMat);
            }
        }
        this._isFirstFrame = false;
    };

    HCameraElement.prototype.prepareFrame = function (num) {
        this.prepareProperties(num, true);
    };

    HCameraElement.prototype.destroy = function () {};
    HCameraElement.prototype.getBaseElement = function () {
        return null;
    };
    function HEffects() {}
    HEffects.prototype.renderFrame = function () {};
    var animationManager = function () {
        var moduleOb = {};
        var registeredAnimations = [];
        var initTime = 0;
        var len = 0;
        var playingAnimationsNum = 0;
        var _stopped = true;
        var _isFrozen = false;

        function removeElement(ev) {
            var i = 0;
            var animItem = ev.target;
            while (i < len) {
                if (registeredAnimations[i].animation === animItem) {
                    registeredAnimations.splice(i, 1);
                    i -= 1;
                    len -= 1;
                    if (!animItem.isPaused) {
                        subtractPlayingCount();
                    }
                }
                i += 1;
            }
        }

        function registerAnimation(element, animationData) {
            if (!element) {
                return null;
            }
            var i = 0;
            while (i < len) {
                if (registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null) {
                    return registeredAnimations[i].animation;
                }
                i += 1;
            }
            var animItem = new AnimationItem();
            setupAnimation(animItem, element);
            animItem.setData(element, animationData);
            return animItem;
        }

        function getRegisteredAnimations() {
            var i,
                len = registeredAnimations.length;
            var animations = [];
            for (i = 0; i < len; i += 1) {
                animations.push(registeredAnimations[i].animation);
            }
            return animations;
        }

        function addPlayingCount() {
            playingAnimationsNum += 1;
            activate();
        }

        function subtractPlayingCount() {
            playingAnimationsNum -= 1;
        }

        function setupAnimation(animItem, element) {
            animItem.addEventListener('destroy', removeElement);
            animItem.addEventListener('_active', addPlayingCount);
            animItem.addEventListener('_idle', subtractPlayingCount);
            registeredAnimations.push({ elem: element, animation: animItem });
            len += 1;
        }

        function loadAnimation(params) {
            var animItem = new AnimationItem();
            setupAnimation(animItem, null);
            animItem.setParams(params);
            return animItem;
        }

        function setSpeed(val, animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.setSpeed(val, animation);
            }
        }

        function setDirection(val, animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.setDirection(val, animation);
            }
        }

        function play(animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.play(animation);
            }
        }
        function resume(nowTime) {
            var elapsedTime = nowTime - initTime;
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.advanceTime(elapsedTime);
            }
            initTime = nowTime;
            if (playingAnimationsNum && !_isFrozen) {
                window.requestAnimationFrame(resume);
            } else {
                _stopped = true;
            }
        }

        function first(nowTime) {
            initTime = nowTime;
            window.requestAnimationFrame(resume);
        }

        function pause(animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.pause(animation);
            }
        }

        function goToAndStop(value, isFrame, animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);
            }
        }

        function stop(animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.stop(animation);
            }
        }

        function togglePause(animation) {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.togglePause(animation);
            }
        }

        function destroy(animation) {
            var i;
            for (i = len - 1; i >= 0; i -= 1) {
                registeredAnimations[i].animation.destroy(animation);
            }
        }

        function searchAnimations(animationData, standalone, renderer) {
            var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));
            var i,
                len = animElements.length;
            for (i = 0; i < len; i += 1) {
                if (renderer) {
                    animElements[i].setAttribute('data-bm-type', renderer);
                }
                registerAnimation(animElements[i], animationData);
            }
            if (standalone && len === 0) {
                if (!renderer) {
                    renderer = 'svg';
                }
                var body = document.getElementsByTagName('body')[0];
                body.innerHTML = '';
                var div = createTag('div');
                div.style.width = '100%';
                div.style.height = '100%';
                div.setAttribute('data-bm-type', renderer);
                body.appendChild(div);
                registerAnimation(div, animationData);
            }
        }

        function resize() {
            var i;
            for (i = 0; i < len; i += 1) {
                registeredAnimations[i].animation.resize();
            }
        }

        function activate() {
            if (!_isFrozen && playingAnimationsNum) {
                if (_stopped) {
                    window.requestAnimationFrame(first);
                    _stopped = false;
                }
            }
        }

        function freeze() {
            _isFrozen = true;
        }

        function unfreeze() {
            _isFrozen = false;
            activate();
        }

        moduleOb.registerAnimation = registerAnimation;
        moduleOb.loadAnimation = loadAnimation;
        moduleOb.setSpeed = setSpeed;
        moduleOb.setDirection = setDirection;
        moduleOb.play = play;
        moduleOb.pause = pause;
        moduleOb.stop = stop;
        moduleOb.togglePause = togglePause;
        moduleOb.searchAnimations = searchAnimations;
        moduleOb.resize = resize;
        //moduleOb.start = start;
        moduleOb.goToAndStop = goToAndStop;
        moduleOb.destroy = destroy;
        moduleOb.freeze = freeze;
        moduleOb.unfreeze = unfreeze;
        moduleOb.getRegisteredAnimations = getRegisteredAnimations;
        return moduleOb;
    }();

    var AnimationItem = function AnimationItem() {
        this._cbs = [];
        this.name = '';
        this.path = '';
        this.isLoaded = false;
        this.currentFrame = 0;
        this.currentRawFrame = 0;
        this.firstFrame = 0;
        this.totalFrames = 0;
        this.frameRate = 0;
        this.frameMult = 0;
        this.playSpeed = 1;
        this.playDirection = 1;
        this.playCount = 0;
        this.animationData = {};
        this.assets = [];
        this.isPaused = true;
        this.autoplay = false;
        this.loop = true;
        this.renderer = null;
        this.animationID = createElementID();
        this.assetsPath = '';
        this.timeCompleted = 0;
        this.segmentPos = 0;
        this.isSubframeEnabled = subframeEnabled;
        this.segments = [];
        this._idle = true;
        this._completedLoop = false;
        this.projectInterface = ProjectInterface();
        this.imagePreloader = new ImagePreloader();
    };

    extendPrototype([BaseEvent], AnimationItem);

    AnimationItem.prototype.setParams = function (params) {
        if (params.context) {
            this.context = params.context;
        }
        if (params.wrapper || params.container) {
            this.wrapper = params.wrapper || params.container;
        }
        var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';
        switch (animType) {
            case 'canvas':
                this.renderer = new CanvasRenderer(this, params.rendererSettings);
                break;
            case 'svg':
                this.renderer = new SVGRenderer(this, params.rendererSettings);
                break;
            default:
                this.renderer = new HybridRenderer(this, params.rendererSettings);
                break;
        }
        this.imagePreloader.setCacheType(animType);
        this.renderer.setProjectInterface(this.projectInterface);
        this.animType = animType;
        if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {
            this.loop = true;
        } else if (params.loop === false) {
            this.loop = false;
        } else {
            this.loop = parseInt(params.loop);
        }
        this.autoplay = 'autoplay' in params ? params.autoplay : true;
        this.name = params.name ? params.name : '';
        this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments : true;
        this.assetsPath = params.assetsPath;
        this.initialSegment = params.initialSegment;
        if (params.animationData) {
            this.configAnimation(params.animationData);
        } else if (params.path) {

            if (params.path.lastIndexOf('\\') !== -1) {
                this.path = params.path.substr(0, params.path.lastIndexOf('\\') + 1);
            } else {
                this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);
            }
            this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);
            this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));

            assetLoader.load(params.path, this.configAnimation.bind(this), function () {
                this.trigger('data_failed');
            }.bind(this));
        }
    };

    AnimationItem.prototype.setData = function (wrapper, animationData) {
        var params = {
            wrapper: wrapper,
            animationData: animationData ? typeof animationData === "object" ? animationData : JSON.parse(animationData) : null
        };
        var wrapperAttributes = wrapper.attributes;

        params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';
        params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';

        var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';
        if (loop === '') {} else if (loop === 'false') {
            params.loop = false;
        } else if (loop === 'true') {
            params.loop = true;
        } else {
            params.loop = parseInt(loop);
        }
        var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;
        params.autoplay = autoplay !== "false";

        params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';
        var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';

        if (prerender === 'false') {
            params.prerender = false;
        }
        this.setParams(params);
    };

    AnimationItem.prototype.includeLayers = function (data) {
        if (data.op > this.animationData.op) {
            this.animationData.op = data.op;
            this.totalFrames = Math.floor(data.op - this.animationData.ip);
        }
        var layers = this.animationData.layers;
        var i,
            len = layers.length;
        var newLayers = data.layers;
        var j,
            jLen = newLayers.length;
        for (j = 0; j < jLen; j += 1) {
            i = 0;
            while (i < len) {
                if (layers[i].id == newLayers[j].id) {
                    layers[i] = newLayers[j];
                    break;
                }
                i += 1;
            }
        }
        if (data.chars || data.fonts) {
            this.renderer.globalData.fontManager.addChars(data.chars);
            this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);
        }
        if (data.assets) {
            len = data.assets.length;
            for (i = 0; i < len; i += 1) {
                this.animationData.assets.push(data.assets[i]);
            }
        }
        this.animationData.__complete = false;
        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
        this.renderer.includeLayers(data.layers);
        if (expressionsPlugin) {
            expressionsPlugin.initExpressions(this);
        }
        this.loadNextSegment();
    };

    AnimationItem.prototype.loadNextSegment = function () {
        var segments = this.animationData.segments;
        if (!segments || segments.length === 0 || !this.autoloadSegments) {
            this.trigger('data_ready');
            this.timeCompleted = this.totalFrames;
            return;
        }
        var segment = segments.shift();
        this.timeCompleted = segment.time * this.frameRate;
        var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';
        this.segmentPos += 1;
        assetLoader.load(segmentPath, this.includeLayers.bind(this), function () {
            this.trigger('data_failed');
        }.bind(this));
    };

    AnimationItem.prototype.loadSegments = function () {
        var segments = this.animationData.segments;
        if (!segments) {
            this.timeCompleted = this.totalFrames;
        }
        this.loadNextSegment();
    };

    AnimationItem.prototype.imagesLoaded = function () {
        this.trigger('loaded_images');
        this.checkLoaded();
    };

    AnimationItem.prototype.preloadImages = function () {
        this.imagePreloader.setAssetsPath(this.assetsPath);
        this.imagePreloader.setPath(this.path);
        this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
    };

    AnimationItem.prototype.configAnimation = function (animData) {
        if (!this.renderer) {
            return;
        }
        try {
            this.animationData = animData;

            if (this.initialSegment) {
                this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
                this.firstFrame = Math.round(this.initialSegment[0]);
            } else {
                this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
                this.firstFrame = Math.round(this.animationData.ip);
            }
            this.renderer.configAnimation(animData);
            if (!animData.assets) {
                animData.assets = [];
            }

            this.assets = this.animationData.assets;
            this.frameRate = this.animationData.fr;
            this.frameMult = this.animationData.fr / 1000;
            this.renderer.searchExtraCompositions(animData.assets);
            this.trigger('config_ready');
            this.preloadImages();
            this.loadSegments();
            this.updaFrameModifier();
            this.waitForFontsLoaded();
        } catch (error) {
            this.triggerConfigError(error);
        }
    };

    AnimationItem.prototype.waitForFontsLoaded = function () {
        if (!this.renderer) {
            return;
        }
        if (this.renderer.globalData.fontManager.isLoaded) {
            this.checkLoaded();
        } else {
            setTimeout(this.waitForFontsLoaded.bind(this), 20);
        }
    };

    AnimationItem.prototype.checkLoaded = function () {
        if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {
            this.isLoaded = true;
            dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
            if (expressionsPlugin) {
                expressionsPlugin.initExpressions(this);
            }
            this.renderer.initItems();
            setTimeout(function () {
                this.trigger('DOMLoaded');
            }.bind(this), 0);
            this.gotoFrame();
            if (this.autoplay) {
                this.play();
            }
        }
    };

    AnimationItem.prototype.resize = function () {
        this.renderer.updateContainerSize();
    };

    AnimationItem.prototype.setSubframe = function (flag) {
        this.isSubframeEnabled = !!flag;
    };

    AnimationItem.prototype.gotoFrame = function () {
        this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;

        if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {
            this.currentFrame = this.timeCompleted;
        }
        this.trigger('enterFrame');
        this.renderFrame();
    };

    AnimationItem.prototype.renderFrame = function () {
        if (this.isLoaded === false) {
            return;
        }
        try {
            this.renderer.renderFrame(this.currentFrame + this.firstFrame);
        } catch (error) {
            this.triggerRenderFrameError(error);
        }
    };

    AnimationItem.prototype.play = function (name) {
        if (name && this.name != name) {
            return;
        }
        if (this.isPaused === true) {
            this.isPaused = false;
            if (this._idle) {
                this._idle = false;
                this.trigger('_active');
            }
        }
    };

    AnimationItem.prototype.pause = function (name) {
        if (name && this.name != name) {
            return;
        }
        if (this.isPaused === false) {
            this.isPaused = true;
            this._idle = true;
            this.trigger('_idle');
        }
    };

    AnimationItem.prototype.togglePause = function (name) {
        if (name && this.name != name) {
            return;
        }
        if (this.isPaused === true) {
            this.play();
        } else {
            this.pause();
        }
    };

    AnimationItem.prototype.stop = function (name) {
        if (name && this.name != name) {
            return;
        }
        this.pause();
        this.playCount = 0;
        this._completedLoop = false;
        this.setCurrentRawFrameValue(0);
    };

    AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {
        if (name && this.name != name) {
            return;
        }
        if (isFrame) {
            this.setCurrentRawFrameValue(value);
        } else {
            this.setCurrentRawFrameValue(value * this.frameModifier);
        }
        this.pause();
    };

    AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {
        this.goToAndStop(value, isFrame, name);
        this.play();
    };

    AnimationItem.prototype.advanceTime = function (value) {
        if (this.isPaused === true || this.isLoaded === false) {
            return;
        }
        var nextValue = this.currentRawFrame + value * this.frameModifier;
        var _isComplete = false;
        // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
        // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
        if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
            if (!this.loop || this.playCount === this.loop) {
                if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {
                    _isComplete = true;
                    nextValue = this.totalFrames - 1;
                }
            } else if (nextValue >= this.totalFrames) {
                this.playCount += 1;
                if (!this.checkSegments(nextValue % this.totalFrames)) {
                    this.setCurrentRawFrameValue(nextValue % this.totalFrames);
                    this._completedLoop = true;
                    this.trigger('loopComplete');
                }
            } else {
                this.setCurrentRawFrameValue(nextValue);
            }
        } else if (nextValue < 0) {
            if (!this.checkSegments(nextValue % this.totalFrames)) {
                if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
                    this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);
                    if (!this._completedLoop) {
                        this._completedLoop = true;
                    } else {
                        this.trigger('loopComplete');
                    }
                } else {
                    _isComplete = true;
                    nextValue = 0;
                }
            }
        } else {
            this.setCurrentRawFrameValue(nextValue);
        }
        if (_isComplete) {
            this.setCurrentRawFrameValue(nextValue);
            this.pause();
            this.trigger('complete');
        }
    };

    AnimationItem.prototype.adjustSegment = function (arr, offset) {
        this.playCount = 0;
        if (arr[1] < arr[0]) {
            if (this.frameModifier > 0) {
                if (this.playSpeed < 0) {
                    this.setSpeed(-this.playSpeed);
                } else {
                    this.setDirection(-1);
                }
            }
            this.timeCompleted = this.totalFrames = arr[0] - arr[1];
            this.firstFrame = arr[1];
            this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);
        } else if (arr[1] > arr[0]) {
            if (this.frameModifier < 0) {
                if (this.playSpeed < 0) {
                    this.setSpeed(-this.playSpeed);
                } else {
                    this.setDirection(1);
                }
            }
            this.timeCompleted = this.totalFrames = arr[1] - arr[0];
            this.firstFrame = arr[0];
            this.setCurrentRawFrameValue(0.001 + offset);
        }
        this.trigger('segmentStart');
    };
    AnimationItem.prototype.setSegment = function (init, end) {
        var pendingFrame = -1;
        if (this.isPaused) {
            if (this.currentRawFrame + this.firstFrame < init) {
                pendingFrame = init;
            } else if (this.currentRawFrame + this.firstFrame > end) {
                pendingFrame = end - init;
            }
        }

        this.firstFrame = init;
        this.timeCompleted = this.totalFrames = end - init;
        if (pendingFrame !== -1) {
            this.goToAndStop(pendingFrame, true);
        }
    };

    AnimationItem.prototype.playSegments = function (arr, forceFlag) {
        if (forceFlag) {
            this.segments.length = 0;
        }
        if (typeof arr[0] === 'object') {
            var i,
                len = arr.length;
            for (i = 0; i < len; i += 1) {
                this.segments.push(arr[i]);
            }
        } else {
            this.segments.push(arr);
        }
        if (this.segments.length && forceFlag) {
            this.adjustSegment(this.segments.shift(), 0);
        }
        if (this.isPaused) {
            this.play();
        }
    };

    AnimationItem.prototype.resetSegments = function (forceFlag) {
        this.segments.length = 0;
        this.segments.push([this.animationData.ip, this.animationData.op]);
        //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);
        if (forceFlag) {
            this.checkSegments(0);
        }
    };
    AnimationItem.prototype.checkSegments = function (offset) {
        if (this.segments.length) {
            this.adjustSegment(this.segments.shift(), offset);
            return true;
        }
        return false;
    };

    AnimationItem.prototype.destroy = function (name) {
        if (name && this.name != name || !this.renderer) {
            return;
        }
        this.renderer.destroy();
        this.imagePreloader.destroy();
        this.trigger('destroy');
        this._cbs = null;
        this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;
        this.renderer = null;
    };

    AnimationItem.prototype.setCurrentRawFrameValue = function (value) {
        this.currentRawFrame = value;
        this.gotoFrame();
    };

    AnimationItem.prototype.setSpeed = function (val) {
        this.playSpeed = val;
        this.updaFrameModifier();
    };

    AnimationItem.prototype.setDirection = function (val) {
        this.playDirection = val < 0 ? -1 : 1;
        this.updaFrameModifier();
    };

    AnimationItem.prototype.updaFrameModifier = function () {
        this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
    };

    AnimationItem.prototype.getPath = function () {
        return this.path;
    };

    AnimationItem.prototype.getAssetsPath = function (assetData) {
        var path = '';
        if (assetData.e) {
            path = assetData.p;
        } else if (this.assetsPath) {
            var imagePath = assetData.p;
            if (imagePath.indexOf('images/') !== -1) {
                imagePath = imagePath.split('/')[1];
            }
            path = this.assetsPath + imagePath;
        } else {
            path = this.path;
            path += assetData.u ? assetData.u : '';
            path += assetData.p;
        }
        return path;
    };

    AnimationItem.prototype.getAssetData = function (id) {
        var i = 0,
            len = this.assets.length;
        while (i < len) {
            if (id == this.assets[i].id) {
                return this.assets[i];
            }
            i += 1;
        }
    };

    AnimationItem.prototype.hide = function () {
        this.renderer.hide();
    };

    AnimationItem.prototype.show = function () {
        this.renderer.show();
    };

    AnimationItem.prototype.getDuration = function (isFrame) {
        return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
    };

    AnimationItem.prototype.trigger = function (name) {
        if (this._cbs && this._cbs[name]) {
            switch (name) {
                case 'enterFrame':
                    this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));
                    break;
                case 'loopComplete':
                    this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
                    break;
                case 'complete':
                    this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));
                    break;
                case 'segmentStart':
                    this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
                    break;
                case 'destroy':
                    this.triggerEvent(name, new BMDestroyEvent(name, this));
                    break;
                default:
                    this.triggerEvent(name);
            }
        }
        if (name === 'enterFrame' && this.onEnterFrame) {
            this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));
        }
        if (name === 'loopComplete' && this.onLoopComplete) {
            this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
        }
        if (name === 'complete' && this.onComplete) {
            this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));
        }
        if (name === 'segmentStart' && this.onSegmentStart) {
            this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
        }
        if (name === 'destroy' && this.onDestroy) {
            this.onDestroy.call(this, new BMDestroyEvent(name, this));
        }
    };

    AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {

        var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent('error', error);

        if (this.onError) {
            this.onError.call(this, error);
        }
    };

    AnimationItem.prototype.triggerConfigError = function (nativeError) {

        var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent('error', error);

        if (this.onError) {
            this.onError.call(this, error);
        }
    };
    function EffectsManager() {}

    var lottie = {};

    var _isFrozen = false;

    function setLocationHref(href) {
        locationHref = href;
    }

    function searchAnimations() {
        if (standalone === true) {
            animationManager.searchAnimations(animationData, standalone, renderer);
        } else {
            animationManager.searchAnimations();
        }
    }

    function setSubframeRendering(flag) {
        subframeEnabled = flag;
    }

    function loadAnimation(params) {
        if (standalone === true) {
            params.animationData = JSON.parse(animationData);
        }
        return animationManager.loadAnimation(params);
    }

    function setQuality(value) {
        if (typeof value === 'string') {
            switch (value) {
                case 'high':
                    defaultCurveSegments = 200;
                    break;
                case 'medium':
                    defaultCurveSegments = 50;
                    break;
                case 'low':
                    defaultCurveSegments = 10;
                    break;
            }
        } else if (!isNaN(value) && value > 1) {
            defaultCurveSegments = value;
        }
        if (defaultCurveSegments >= 50) {
            roundValues(false);
        } else {
            roundValues(true);
        }
    }

    function inBrowser() {
        return typeof navigator !== 'undefined';
    }

    function installPlugin(type, plugin) {
        if (type === 'expressions') {
            expressionsPlugin = plugin;
        }
    }

    function getFactory(name) {
        switch (name) {
            case "propertyFactory":
                return PropertyFactory;
            case "shapePropertyFactory":
                return ShapePropertyFactory;
            case "matrix":
                return Matrix;
        }
    }

    lottie.play = animationManager.play;
    lottie.pause = animationManager.pause;
    lottie.setLocationHref = setLocationHref;
    lottie.togglePause = animationManager.togglePause;
    lottie.setSpeed = animationManager.setSpeed;
    lottie.setDirection = animationManager.setDirection;
    lottie.stop = animationManager.stop;
    lottie.searchAnimations = searchAnimations;
    lottie.registerAnimation = animationManager.registerAnimation;
    lottie.loadAnimation = loadAnimation;
    lottie.setSubframeRendering = setSubframeRendering;
    lottie.resize = animationManager.resize;
    //lottie.start = start;
    lottie.goToAndStop = animationManager.goToAndStop;
    lottie.destroy = animationManager.destroy;
    lottie.setQuality = setQuality;
    lottie.inBrowser = inBrowser;
    lottie.installPlugin = installPlugin;
    lottie.freeze = animationManager.freeze;
    lottie.unfreeze = animationManager.unfreeze;
    lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
    lottie.__getFactory = getFactory;
    lottie.version = '5.6.10';

    function checkReady() {
        if (document.readyState === "complete") {
            clearInterval(readyStateCheckInterval);
            searchAnimations();
        }
    }

    function getQueryVariable(variable) {
        var vars = queryString.split('&');
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split('=');
            if (decodeURIComponent(pair[0]) == variable) {
                return decodeURIComponent(pair[1]);
            }
        }
    }
    var standalone = '__[STANDALONE]__';
    var animationData = '__[ANIMATIONDATA]__';
    var renderer = '';
    if (standalone) {
        var scripts = document.getElementsByTagName('script');
        var index = scripts.length - 1;
        var myScript = scripts[index] || {
            src: ''
        };
        var queryString = myScript.src.replace(/^[^\?]+\??/, '');
        renderer = getQueryVariable('renderer');
    }
    var readyStateCheckInterval = setInterval(checkReady, 100);

    return lottie;
});

/***/ }),

/***/ "VxYX":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return firebase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__("vCxL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__firebase_util__ = __webpack_require__("8Kxm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_logger__ = __webpack_require__("TUpU");




/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {}, _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " + 'call Firebase App.initializeApp()', _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}", _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists", _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted", _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.', _a);
var ERROR_FACTORY = new __WEBPACK_IMPORTED_MODULE_1__firebase_util__["c" /* ErrorFactory */]('app', 'Firebase', ERRORS);

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An array to capture listeners before the true auth functions
// exist
var tokenListeners = [];
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */function () {
    function FirebaseAppImpl(options, config, firebase_) {
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.services_ = {};
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ = config.automaticDataCollectionEnabled || false;
        this.options_ = Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["l" /* deepCopy */])(options);
        this.INTERNAL = {
            getUid: function getUid() {
                return null;
            },
            getToken: function getToken() {
                return Promise.resolve(null);
            },
            addAuthTokenListener: function addAuthTokenListener(callback) {
                tokenListeners.push(callback);
                // Make sure callback is called, asynchronously, in the absence of the auth module
                setTimeout(function () {
                    return callback(null);
                }, 0);
            },
            removeAuthTokenListener: function removeAuthTokenListener(callback) {
                tokenListeners = tokenListeners.filter(function (listener) {
                    return listener !== callback;
                });
            }
        };
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function get() {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function set(val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function get() {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function get() {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: true,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        }).then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            var services = [];
            for (var _i = 0, _a = Object.keys(_this.services_); _i < _a.length; _i++) {
                var serviceKey = _a[_i];
                for (var _b = 0, _c = Object.keys(_this.services_[serviceKey]); _b < _c.length; _b++) {
                    var instanceKey = _c[_b];
                    services.push(_this.services_[serviceKey][instanceKey]);
                }
            }
            return Promise.all(services.filter(function (service) {
                return 'INTERNAL' in service;
            }).map(function (service) {
                return service.INTERNAL.delete();
            }));
        }).then(function () {
            _this.isDeleted_ = true;
            _this.services_ = {};
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) {
            instanceIdentifier = DEFAULT_ENTRY_NAME;
        }
        this.checkDestroyed_();
        if (!this.services_[name]) {
            this.services_[name] = {};
        }
        if (!this.services_[name][instanceIdentifier]) {
            /**
             * If a custom instance has been defined (i.e. not '[DEFAULT]')
             * then we will pass that instance on, otherwise we pass `null`
             */
            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;
            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
            this.services_[name][instanceIdentifier] = service;
        }
        return this.services_[name][instanceIdentifier];
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) {
            instanceIdentifier = DEFAULT_ENTRY_NAME;
        }
        if (this.services_[name] && this.services_[name][instanceIdentifier]) {
            delete this.services_[name][instanceIdentifier];
        }
    };
    /**
     * Callback function used to extend an App instance at the time
     * of service instance creation.
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    FirebaseAppImpl.prototype.extendApp = function (props) {
        var _this = this;
        // Copy the object onto the FirebaseAppImpl prototype
        Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["m" /* deepExtend */])(this, props);
        /**
         * If the app has overwritten the addAuthTokenListener stub, forward
         * the active token listeners on to the true fxn.
         *
         * TODO: This function is required due to our current module
         * structure. Once we are able to rely strictly upon a single module
         * implementation, this code should be refactored and Auth should
         * provide these stubs and the upgrade logic
         */
        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {
            tokenListeners.forEach(function (listener) {
                _this.INTERNAL.addAuthTokenListener(listener);
            });
            tokenListeners = [];
        }
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}();
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');

var version = "6.6.2";

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new __WEBPACK_IMPORTED_MODULE_2__firebase_logger__["b" /* Logger */]('@firebase/app');

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    var factories = {};
    var appHooks = {};
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version,
        INTERNAL: {
            registerService: registerService,
            removeApp: removeApp,
            factories: factories,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        var app = apps[name];
        callAppHooks(app, 'delete');
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["j" /* contains */])(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) {
            rawConfig = {};
        }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["j" /* contains */])(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        callAppHooks(app, 'create');
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) {
            return apps[name];
        });
    }
    /*
     * Register a Firebase Service.
     *
     * firebase.INTERNAL.registerService()
     *
     * TODO: Implement serviceProperties.
     */
    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
        if (allowMultipleInstances === void 0) {
            allowMultipleInstances = false;
        }
        // If re-registering a service that already exists, return existing service
        if (factories[name]) {
            logger.debug("There were multiple attempts to register service " + name + ".");
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return namespace[name];
        }
        // Capture the service factory for later service instantiation
        factories[name] = createService;
        // Capture the appHook, if passed
        if (appHook) {
            appHooks[name] = appHook;
            // Run the **new** app hook on all existing apps
            getApps().forEach(function (app) {
                appHook('create', app);
            });
        }
        // The Service namespace is an accessor function ...
        function serviceNamespace(appArg) {
            if (appArg === void 0) {
                appArg = app();
            }
            // @ts-ignore
            if (typeof appArg[name] !== 'function') {
                // Invalid argument.
                // This happens in the following case: firebase.storage('gs:/')
                throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                    appName: name
                });
            }
            // Forward service instance lookup to the FirebaseApp.
            // @ts-ignore
            return appArg[name]();
        }
        // ... and a container for service-level properties.
        if (serviceProperties !== undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["m" /* deepExtend */])(serviceNamespace, serviceProperties);
        }
        // Monkey-patch the serviceNamespace onto the firebase namespace
        // @ts-ignore
        namespace[name] = serviceNamespace;
        // Patch the FirebaseAppImpl prototype
        // @ts-ignore
        firebaseAppImpl.prototype[name] =
        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
        // option added to the no-explicit-any rule when ESlint releases it.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var serviceFxn = this._getService.bind(this, name);
            return serviceFxn.apply(this, allowMultipleInstances ? args : []);
        };
        return serviceNamespace;
    }
    function callAppHooks(app, eventName) {
        for (var _i = 0, _a = Object.keys(factories); _i < _a.length; _i++) {
            var serviceName = _a[_i];
            // Ignore virtual services
            var factoryName = useAsService(app, serviceName);
            if (factoryName === null) {
                return;
            }
            if (appHooks[factoryName]) {
                appHooks[factoryName](eventName, app);
            }
        }
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __assign */])({}, namespace.INTERNAL, { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: __WEBPACK_IMPORTED_MODULE_1__firebase_util__["k" /* createSubscribe */],
        ErrorFactory: __WEBPACK_IMPORTED_MODULE_1__firebase_util__["c" /* ErrorFactory */],
        deepExtend: __WEBPACK_IMPORTED_MODULE_1__firebase_util__["m" /* deepExtend */] });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["m" /* deepExtend */])(namespace, props);
    }
    return namespace;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if (Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["p" /* isBrowser */])() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var firebaseNamespace = createFirebaseNamespace();
var initializeApp = firebaseNamespace.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebaseNamespace.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if (Object(__WEBPACK_IMPORTED_MODULE_1__firebase_util__["s" /* isNode */])()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase = firebaseNamespace;

/* harmony default export */ __webpack_exports__["a"] = (firebase);

//# sourceMappingURL=index.esm.js.map

/***/ }),

/***/ "XUTr":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"dialog_body":"dialog_body__33Tyf","signout_dialog":"signout_dialog__1MICz","signin_confirm":"signin_confirm__1lF0Y","btn_container":"btn_container__1RM0E","btn_label":"btn_label__2Wr2N","google":"google__2hHDP","facebook":"facebook__3I3fD","twitter":"twitter__2XyAO","github":"github__29llI","cancel_btn":"cancel_btn__1O9sx","signout_btn":"signout_btn__29v2D","toolbar":"toolbar__3mfc2","menu_icon":"menu_icon__1BRa-","desktop_toolbar":"desktop_toolbar__101bi","signin_btn":"signin_btn__1BOwZ","drawer_toolbar":"drawer_toolbar__1VrbX","drawer_nav":"drawer_nav__K2TXA","active":"active__2hWDy","navbar":"navbar__2X9cA","hamburger":"hamburger__309eM","nav_item":"nav_item__3KeIu","line":"line__2i-JQ","cfpTitle":"cfpTitle__1KlZ3","cfpTitleMobile":"cfpTitleMobile__3WFGF","mobile_title":"mobile_title__1aQcX"};

/***/ }),

/***/ "ZAL5":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"hero":"hero__1Z8cY","hero_title":"hero_title__1jo1i","belt":"belt__3Q0u3","home_info":"home_info__2R1Mw","text":"text__KcKgR","stats":"stats__1a5tI","action_button":"action_button__2mQvm","button_holder":"button_holder__1i7WI","stat":"stat__1AFaM","number":"number__S-T2l","label":"label__2WshR","partners":"partners__JqXZZ","sponsor":"sponsor__2Xiqv","item":"item__3r_cP","video":"video__2EC34","action_button_2":"action_button_2__2z__w"};

/***/ }),

/***/ "ZMjw":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"footer":"footer__14P9B","footer_logo":"footer_logo__1TGSI","footer_link":"footer_link__1Xgw_"};

/***/ }),

/***/ "a81U":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "aqQ4":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "b9XL":
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "cNrW":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"speaker":"speaker__2B5wF","speakers":"speakers__2RqLq","speaker_item":"speaker_item__29CSE","speaker_profile_pic":"speaker_profile_pic__2P_Nr","profile_pic":"profile_pic__am2YC","badges":"badges__nxMoS","badge":"badge__1Jhst","badge_icon":"badge_icon__20Vg0","speaker_name":"speaker_name__1NEkb","speaker_title":"speaker_title__3KnKL","short_bio":"short_bio__22lTd","footer":"footer__1kxsv"};

/***/ }),

/***/ "d4H2":
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__("AkAO");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "dSNL":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__("uJAj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__component__ = __webpack_require__("EQDb");
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__foundation__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__component__["a"]; });
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */






/***/ }),

/***/ "dkia":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"dialog_header":"dialog_header__1eyIk","back":"back__LQ3Ks","header_text":"header_text__DuLJS","header_subtext":"header_subtext__1kiIV","dialog_body":"dialog_body__1AXIu","subtitle":"subtitle__2nAQ4","event_topic":"event_topic__3ZoS5","speaker":"speaker__1Cf7C","speaker_item":"speaker_item__39CAk","speaker_details":"speaker_details__2gF7g","speaker_thumbnail":"speaker_thumbnail__32u6G","speaker_name":"speaker_name__2vaLT","speaker_title":"speaker_title__appDG","speaker_arrow":"speaker_arrow__38Ji2","speaker_bio":"speaker_bio__T9REJ","schedule_event_topics":"schedule_event_topics__3hu_v","header_speaker_profile":"header_speaker_profile__eyyZs","dialog_footer":"dialog_footer__1IAA2","share":"share__cO1m-","fab":"fab__1Tic6","askQuestionBtn":"askQuestionBtn__1Fguo","dialog_container":"dialog_container__3c6lJ"};

/***/ }),

/***/ "enoJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function () {
  function toArray(arr) {
    return Array.prototype.slice.call(arr);
  }

  function promisifyRequest(request) {
    return new Promise(function (resolve, reject) {
      request.onsuccess = function () {
        resolve(request.result);
      };

      request.onerror = function () {
        reject(request.error);
      };
    });
  }

  function promisifyRequestCall(obj, method, args) {
    var request;
    var p = new Promise(function (resolve, reject) {
      request = obj[method].apply(obj, args);
      promisifyRequest(request).then(resolve, reject);
    });

    p.request = request;
    return p;
  }

  function promisifyCursorRequestCall(obj, method, args) {
    var p = promisifyRequestCall(obj, method, args);
    return p.then(function (value) {
      if (!value) return;
      return new Cursor(value, p.request);
    });
  }

  function proxyProperties(ProxyClass, targetProp, properties) {
    properties.forEach(function (prop) {
      Object.defineProperty(ProxyClass.prototype, prop, {
        get: function get() {
          return this[targetProp][prop];
        },
        set: function set(val) {
          this[targetProp][prop] = val;
        }
      });
    });
  }

  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function (prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function () {
        return promisifyRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function (prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function () {
        return this[targetProp][prop].apply(this[targetProp], arguments);
      };
    });
  }

  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function (prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function () {
        return promisifyCursorRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function Index(index) {
    this._index = index;
  }

  proxyProperties(Index, '_index', ['name', 'keyPath', 'multiEntry', 'unique']);

  proxyRequestMethods(Index, '_index', IDBIndex, ['get', 'getKey', 'getAll', 'getAllKeys', 'count']);

  proxyCursorRequestMethods(Index, '_index', IDBIndex, ['openCursor', 'openKeyCursor']);

  function Cursor(cursor, request) {
    this._cursor = cursor;
    this._request = request;
  }

  proxyProperties(Cursor, '_cursor', ['direction', 'key', 'primaryKey', 'value']);

  proxyRequestMethods(Cursor, '_cursor', IDBCursor, ['update', 'delete']);

  // proxy 'next' methods
  ['advance', 'continue', 'continuePrimaryKey'].forEach(function (methodName) {
    if (!(methodName in IDBCursor.prototype)) return;
    Cursor.prototype[methodName] = function () {
      var cursor = this;
      var args = arguments;
      return Promise.resolve().then(function () {
        cursor._cursor[methodName].apply(cursor._cursor, args);
        return promisifyRequest(cursor._request).then(function (value) {
          if (!value) return;
          return new Cursor(value, cursor._request);
        });
      });
    };
  });

  function ObjectStore(store) {
    this._store = store;
  }

  ObjectStore.prototype.createIndex = function () {
    return new Index(this._store.createIndex.apply(this._store, arguments));
  };

  ObjectStore.prototype.index = function () {
    return new Index(this._store.index.apply(this._store, arguments));
  };

  proxyProperties(ObjectStore, '_store', ['name', 'keyPath', 'indexNames', 'autoIncrement']);

  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, ['put', 'add', 'delete', 'clear', 'get', 'getAll', 'getKey', 'getAllKeys', 'count']);

  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, ['openCursor', 'openKeyCursor']);

  proxyMethods(ObjectStore, '_store', IDBObjectStore, ['deleteIndex']);

  function Transaction(idbTransaction) {
    this._tx = idbTransaction;
    this.complete = new Promise(function (resolve, reject) {
      idbTransaction.oncomplete = function () {
        resolve();
      };
      idbTransaction.onerror = function () {
        reject(idbTransaction.error);
      };
      idbTransaction.onabort = function () {
        reject(idbTransaction.error);
      };
    });
  }

  Transaction.prototype.objectStore = function () {
    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));
  };

  proxyProperties(Transaction, '_tx', ['objectStoreNames', 'mode']);

  proxyMethods(Transaction, '_tx', IDBTransaction, ['abort']);

  function UpgradeDB(db, oldVersion, transaction) {
    this._db = db;
    this.oldVersion = oldVersion;
    this.transaction = new Transaction(transaction);
  }

  UpgradeDB.prototype.createObjectStore = function () {
    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));
  };

  proxyProperties(UpgradeDB, '_db', ['name', 'version', 'objectStoreNames']);

  proxyMethods(UpgradeDB, '_db', IDBDatabase, ['deleteObjectStore', 'close']);

  function DB(db) {
    this._db = db;
  }

  DB.prototype.transaction = function () {
    return new Transaction(this._db.transaction.apply(this._db, arguments));
  };

  proxyProperties(DB, '_db', ['name', 'version', 'objectStoreNames']);

  proxyMethods(DB, '_db', IDBDatabase, ['close']);

  // Add cursor iterators
  // TODO: remove this once browsers do the right thing with promises
  ['openCursor', 'openKeyCursor'].forEach(function (funcName) {
    [ObjectStore, Index].forEach(function (Constructor) {
      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.
      if (!(funcName in Constructor.prototype)) return;

      Constructor.prototype[funcName.replace('open', 'iterate')] = function () {
        var args = toArray(arguments);
        var callback = args[args.length - 1];
        var nativeObject = this._store || this._index;
        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));
        request.onsuccess = function () {
          callback(request.result);
        };
      };
    });
  });

  // polyfill getAll
  [Index, ObjectStore].forEach(function (Constructor) {
    if (Constructor.prototype.getAll) return;
    Constructor.prototype.getAll = function (query, count) {
      var instance = this;
      var items = [];

      return new Promise(function (resolve) {
        instance.iterateCursor(query, function (cursor) {
          if (!cursor) {
            resolve(items);
            return;
          }
          items.push(cursor.value);

          if (count !== undefined && items.length == count) {
            resolve(items);
            return;
          }
          cursor.continue();
        });
      });
    };
  });

  var exp = {
    open: function open(name, version, upgradeCallback) {
      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);
      var request = p.request;

      if (request) {
        request.onupgradeneeded = function (event) {
          if (upgradeCallback) {
            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));
          }
        };
      }

      return p.then(function (db) {
        return new DB(db);
      });
    },
    delete: function _delete(name) {
      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);
    }
  };

  if (true) {
    module.exports = exp;
    module.exports.default = module.exports;
  } else {
    self.idb = exp;
  }
})();

/***/ }),

/***/ "fHKL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TopAppBar = exports.TopAppBarTitle = exports.TopAppBarIcon = exports.TopAppBarSection = exports.TopAppBarRow = void 0;

var _get2 = _interopRequireDefault(__webpack_require__("J5U+"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _typeof2 = _interopRequireDefault(__webpack_require__("b9XL"));

var _topAppBar = __webpack_require__("NFzA");

var _bindDecorator = __webpack_require__("gKs0");

var _preact = __webpack_require__("KM04");

var _MaterialComponent6 = _interopRequireDefault(__webpack_require__("uc5p"));

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var TopAppBarRow =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(TopAppBarRow, _MaterialComponent);

  function TopAppBarRow() {
    var _this;

    (0, _classCallCheck2.default)(this, TopAppBarRow);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarRow).apply(this, arguments));
    _this.componentName = 'top-app-bar__row';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(TopAppBarRow, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", _extends({}, props), this.props.children);
    }
  }]);
  return TopAppBarRow;
}(_MaterialComponent6.default);

exports.TopAppBarRow = TopAppBarRow;

var TopAppBarSection =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(TopAppBarSection, _MaterialComponent2);

  function TopAppBarSection() {
    var _this2;

    (0, _classCallCheck2.default)(this, TopAppBarSection);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarSection).apply(this, arguments));
    _this2.componentName = 'top-app-bar__section';
    _this2.mdcProps = ['align-start', 'align-end'];
    return _this2;
  }

  (0, _createClass2.default)(TopAppBarSection, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("section", _extends({}, props), props.children);
    }
  }]);
  return TopAppBarSection;
}(_MaterialComponent6.default);

exports.TopAppBarSection = TopAppBarSection;

var TopAppBarIcon =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(TopAppBarIcon, _MaterialComponent3);

  function TopAppBarIcon() {
    var _this3;

    (0, _classCallCheck2.default)(this, TopAppBarIcon);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarIcon).apply(this, arguments));
    _this3.componentName = 'top-app-bar__icon';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(TopAppBarIcon, [{
    key: "materialDom",
    value: function materialDom(props) {
      var className = props.navigation ? 'material-icons mdc-top-app-bar__navigation-icon' : 'material-icons';
      return (0, _preact.h)("a", _extends({
        className: className
      }, props), props.children);
    }
  }]);
  return TopAppBarIcon;
}(_MaterialComponent6.default);

exports.TopAppBarIcon = TopAppBarIcon;

var TopAppBarTitle =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(TopAppBarTitle, _MaterialComponent4);

  function TopAppBarTitle() {
    var _this4;

    (0, _classCallCheck2.default)(this, TopAppBarTitle);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarTitle).apply(this, arguments));
    _this4.componentName = 'top-app-bar__title';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(TopAppBarTitle, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", _extends({}, props), props.children);
    }
  }]);
  return TopAppBarTitle;
}(_MaterialComponent6.default);

exports.TopAppBarTitle = TopAppBarTitle;

var TopAppBar =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(TopAppBar, _MaterialComponent5);

  function TopAppBar() {
    var _this5;

    (0, _classCallCheck2.default)(this, TopAppBar);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBar).apply(this, arguments));
    _this5.componentName = 'top-app-bar';
    _this5.mdcProps = ['short', 'short-collapsed', 'fixed', 'prominent'];
    return _this5;
  }

  (0, _createClass2.default)(TopAppBar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TopAppBar.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        var comp = new _topAppBar.MDCTopAppBar(this.control);
        comp.listen('MDCTopAppBar:nav', this.onNav);
        this.MDComponent = comp;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TopAppBar.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCTopAppBar:nav', this.onNav);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onNav",
    value: function onNav(e) {
      if (this.props.onNav) {
        this.props.onNav(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", _extends({
        ref: this.setControlRef
      }, props), props.children);
    }
  }]);
  return TopAppBar;
}(_MaterialComponent6.default);

exports.TopAppBar = TopAppBar;

__decorate([_bindDecorator.bind], TopAppBar.prototype, "onNav", null);

var default_1 =
/*#__PURE__*/
function (_TopAppBar) {
  (0, _inherits2.default)(default_1, _TopAppBar);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(TopAppBar);

exports.default = default_1;
default_1.Section = TopAppBarSection;
default_1.Icon = TopAppBarIcon;
default_1.Title = TopAppBarTitle;
default_1.Row = TopAppBarRow;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "gKs0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var constants;
(function (constants) {
    constants.typeOfFunction = 'function';
    constants.boolTrue = true;
})(constants || (constants = {}));
function bind(target, propertyKey, descriptor) {
    if (!descriptor || typeof descriptor.value !== constants.typeOfFunction) {
        throw new TypeError("Only methods can be decorated with @bind. <" + propertyKey + "> is not a method!");
    }
    return {
        configurable: constants.boolTrue,
        get: function get() {
            var bound = descriptor.value.bind(this);
            // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.
            Object.defineProperty(this, propertyKey, {
                value: bound,
                configurable: constants.boolTrue,
                writable: constants.boolTrue
            });
            return bound;
        }
    };
}
exports.bind = bind;
exports.default = bind;

/***/ }),

/***/ "kvG9":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"faq":"faq__2W9QX","faq_item":"faq_item__sn-Vv","faq_title":"faq_title__1r5Mp","faq_content":"faq_content__QBIcC","faq_list":"faq_list__3WKcB"};

/***/ }),

/***/ "l262":
/***/ (function(module, exports) {

module.exports = function (module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function () {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function get() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function get() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};

/***/ }),

/***/ "mTzT":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"countdownContainer":"countdownContainer__3GKYu","countdown":"countdown__2ljL7","unitWrapper":"unitWrapper__2WYLN","digit":"digit__1tHWl","unitLabel":"unitLabel__17Mhk","blue":"blue__3ma8t","darkfill":"darkfill__3V_-J","lightfill":"lightfill__3Tn9f","darkstroke":"darkstroke__Ih762","lightstroke":"lightstroke__2_JM1","red":"red__2iNQn","yellow":"yellow__34his","green":"green__1Py6t"};

/***/ }),

/***/ "pln1":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "pv+l":
/***/ (function(module, exports) {

module.exports = function (originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function get() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function get() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};

/***/ }),

/***/ "rq4c":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "s3tW":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"schedule":"schedule__1aVD5","tabs":"tabs__3lO7Y","tab":"tab__37oYr","myio_info":"myio_info__1H_Jw","schedule_section":"schedule_section__1I6vX","schedule_content":"schedule_content__3CLwc","schedule_time":"schedule_time__1IwNg","schedule_events":"schedule_events__L8lEN","schedule_event":"schedule_event__3QDLd","schedule_event_title":"schedule_event_title__3w2jA","star_button":"star_button__3cBqK","star":"star__1XJd8","star_border":"star_border__Bwstp","schedule_event_details":"schedule_event_details__37dUc","schedule_event_meta":"schedule_event_meta__10biI","schedule_event_description":"schedule_event_description__3imRx","schedule_event_topics":"schedule_event_topics__3hKXc","slides":"slides__34aZV","slide":"slide__1ZkWv","footer":"footer__1Dzr-","track_bubble_blue":"track_bubble_blue__2gdF9"};

/***/ }),

/***/ "sEh6":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "sw5u":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Link = exports.Match = undefined;

var _extends = Object.assign || function (target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i];for (var key in source) {
			if (Object.prototype.hasOwnProperty.call(source, key)) {
				target[key] = source[key];
			}
		}
	}return target;
};

var _preact = __webpack_require__("KM04");

var _preactRouter = __webpack_require__("/QC5");

function _objectWithoutProperties(obj, keys) {
	var target = {};for (var i in obj) {
		if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
	}return target;
}

function _classCallCheck(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError("Cannot call a class as a function");
	}
}

function _possibleConstructorReturn(self, call) {
	if (!self) {
		throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	}return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
	if (typeof superClass !== "function" && superClass !== null) {
		throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Match = exports.Match = function (_Component) {
	_inherits(Match, _Component);

	function Match() {
		var _temp, _this, _ret;

		_classCallCheck(this, Match);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.update = function (url) {
			_this.nextUrl = url;
			_this.setState({});
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	Match.prototype.componentDidMount = function componentDidMount() {
		_preactRouter.subscribers.push(this.update);
	};

	Match.prototype.componentWillUnmount = function componentWillUnmount() {
		_preactRouter.subscribers.splice(_preactRouter.subscribers.indexOf(this.update) >>> 0, 1);
	};

	Match.prototype.render = function render(props) {
		var url = this.nextUrl || (0, _preactRouter.getCurrentUrl)(),
		    path = url.replace(/\?.+$/, '');
		this.nextUrl = null;
		return props.children[0] && props.children[0]({
			url: url,
			path: path,
			matches: path === props.path
		});
	};

	return Match;
}(_preact.Component);

var Link = function Link(_ref) {
	var activeClassName = _ref.activeClassName,
	    path = _ref.path,
	    props = _objectWithoutProperties(_ref, ['activeClassName', 'path']);

	return (0, _preact.h)(Match, { path: path || props.href }, function (_ref2) {
		var matches = _ref2.matches;
		return (0, _preact.h)(_preactRouter.Link, _extends({}, props, { 'class': [props.class || props.className, matches && activeClassName].filter(Boolean).join(' ') }));
	});
};

exports.Link = Link;
exports.default = Match;

Match.Link = Link;

/***/ }),

/***/ "u+vq":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "uJAj":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @template A
 */
var MDCFoundation = function () {
  _createClass(MDCFoundation, null, [{
    key: "cssClasses",

    /** @return enum{cssClasses} */
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports every
      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
      return {};
    }

    /** @return enum{strings} */

  }, {
    key: "strings",
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports all
      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
      return {};
    }

    /** @return enum{numbers} */

  }, {
    key: "numbers",
    get: function get() {
      // Classes extending MDCFoundation should implement this method to return an object which exports all
      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
      return {};
    }

    /** @return {!Object} */

  }, {
    key: "defaultAdapter",
    get: function get() {
      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
      // validation.
      return {};
    }

    /**
     * @param {A=} adapter
     */

  }]);

  function MDCFoundation() {
    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, MDCFoundation);

    /** @protected {!A} */
    this.adapter_ = adapter;
  }

  MDCFoundation.prototype.init = function init() {
    // Subclasses should override this method to perform initialization routines (registering events, etc.)
  };

  MDCFoundation.prototype.destroy = function destroy() {
    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
  };

  return MDCFoundation;
}();

/* harmony default export */ __webpack_exports__["a"] = (MDCFoundation);

/***/ }),

/***/ "uc5p":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MaterialComponent = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _typeof2 = _interopRequireDefault(__webpack_require__("b9XL"));

var _ripple = __webpack_require__("vkNc");

var _bindDecorator = __webpack_require__("gKs0");

var _preact = __webpack_require__("KM04");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var doNotRemoveProps = ['disabled'];
/**
 * Base class for every Material component in this package
 * NOTE: every component should add a ref by the name of `control` to its root dom for autoInit Properties
 *
 * @export
 * @class MaterialComponent
 * @extends {Component}
 */

var MaterialComponent =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(MaterialComponent, _Component);

  function MaterialComponent() {
    (0, _classCallCheck2.default)(this, MaterialComponent);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MaterialComponent).apply(this, arguments));
  }

  (0, _createClass2.default)(MaterialComponent, [{
    key: "render",
    value: function render(props) {
      if (!this.classText) {
        this.classText = this.buildClassName(props);
      } // Fetch a VNode


      var componentProps = props;
      var userDefinedClasses = componentProps.className || componentProps.class || ''; // We delete class props and add them later in the final
      // step so every component does not need to handle user specified classes.

      if (componentProps.class) {
        delete componentProps.class;
      }

      if (componentProps.className) {
        delete componentProps.className;
      }

      var element = this.materialDom(componentProps);
      var propName = 'attributes';

      if ('props' in element) {
        propName = 'props'; // @ts-ignore

        element.props = element.props || {};
      } else {
        element.attributes = element.attributes || {};
      } // @ts-ignore


      element[propName].className = "".concat(userDefinedClasses, " ").concat(this.getClassName(element)).split(' ').filter(function (value, index, self) {
        return self.indexOf(value) === index && value !== '';
      }) // Unique + exclude empty class names
      .join(' '); // Clean this shit of proxy attributes

      this.mdcProps.forEach(function (prop) {
        // TODO: Fix this better
        if (prop in doNotRemoveProps) {
          return;
        } // @ts-ignore


        delete element[propName][prop];
      });
      return element;
    }
    /** Attach the ripple effect */

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.ripple && this.control) {
        this.ripple = new _ripple.MDCRipple(this.control);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.MDComponent && this.mdcNotifyProps) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = this.mdcNotifyProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var prop = _step.value;

            if (this.props[prop] !== nextProps[prop]) {
              this.MDComponent[prop] = nextProps[prop];
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.mdcProps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _prop = _step2.value;

          if (this.props[_prop] !== nextProps[_prop]) {
            this.classText = this.buildClassName(nextProps);
            break;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.ripple) {
        this.ripple.destroy();
      }
    }
  }, {
    key: "afterComponentDidMount",
    value: function afterComponentDidMount() {
      if (this.MDComponent && this.mdcNotifyProps) {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = this.mdcNotifyProps[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var prop = _step3.value;
            this.MDComponent[prop] = this.props[prop];
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      }
    } // Shared setter for the root element ref

  }, {
    key: "setControlRef",
    value: function setControlRef(control) {
      this.control = control;
    }
    /** Build the className based on component names and mdc props */

  }, {
    key: "buildClassName",
    value: function buildClassName(props) {
      // Class name based on component name
      var classText = 'mdc-' + this.componentName; // Loop over mdcProps to turn them into classNames

      for (var propKey in props) {
        if (props.hasOwnProperty(propKey)) {
          var prop = props[propKey];

          if (typeof prop === 'boolean' && prop) {
            if (this.mdcProps.indexOf(propKey) !== -1) {
              classText += " mdc-".concat(this.componentName, "--").concat(propKey);
            }
          }
        }
      }

      return classText;
    }
    /** Returns the class name for element */

  }, {
    key: "getClassName",
    value: function getClassName(element) {
      if (!element) {
        return '';
      }

      var propName = 'attributes';

      if ('props' in element) {
        propName = 'props'; // @ts-ignore

        element.props = element.props || {};
      } else {
        element.attributes = element.attributes || {};
      } // @ts-ignore


      var attrs = element[propName] = element[propName] || {};
      var classText = this.classText;

      if (attrs.class) {
        classText += ' ' + attrs.class;
      }

      if (attrs.className && attrs.className !== attrs.class) {
        classText += ' ' + attrs.className;
      }

      return classText;
    }
  }]);
  return MaterialComponent;
}(_preact.Component);

exports.MaterialComponent = MaterialComponent;

__decorate([_bindDecorator.bind], MaterialComponent.prototype, "setControlRef", null);

var _default = MaterialComponent;
exports.default = _default;
//# sourceMappingURL=MaterialComponent.js.map

/***/ }),

/***/ "vCxL":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["c"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _assign; });
/* unused harmony export __rest */
/* unused harmony export __decorate */
/* unused harmony export __param */
/* unused harmony export __metadata */
/* harmony export (immutable) */ __webpack_exports__["b"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["d"] = __generator;
/* unused harmony export __exportStar */
/* harmony export (immutable) */ __webpack_exports__["g"] = __values;
/* harmony export (immutable) */ __webpack_exports__["e"] = __read;
/* harmony export (immutable) */ __webpack_exports__["f"] = __spread;
/* unused harmony export __spreadArrays */
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
        d.__proto__ = b;
    } || function (d, b) {
        for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
        }
    };
    return _extendStatics(d, b);
};

function __extends(d, b) {
    _extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
    _assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
        }
        return t;
    };
    return _assign.apply(this, arguments);
};


function __rest(s, e) {
    var t = {};
    for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) {
        decorator(target, key, paramIndex);
    };
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : new P(function (resolve) {
                resolve(result.value);
            }).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function sent() {
            if (t[0] & 1) throw t[1];return t[1];
        }, trys: [], ops: [] },
        f,
        y,
        t,
        g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
    }), g;
    function verb(n) {
        return function (v) {
            return step([n, v]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) {
            try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0:case 1:
                        t = op;break;
                    case 4:
                        _.label++;return { value: op[1], done: false };
                    case 5:
                        _.label++;y = op[1];op = [0];continue;
                    case 7:
                        op = _.ops.pop();_.trys.pop();continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                            _ = 0;continue;
                        }
                        if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                            _.label = op[1];break;
                        }
                        if (op[0] === 6 && _.label < t[1]) {
                            _.label = t[1];t = op;break;
                        }
                        if (t && _.label < t[2]) {
                            _.label = t[2];_.ops.push(op);break;
                        }
                        if (t[2]) _.ops.pop();
                        _.trys.pop();continue;
                }
                op = body.call(thisArg, _);
            } catch (e) {
                op = [6, e];y = 0;
            } finally {
                f = t = 0;
            }
        }if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) {
        if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator],
        i = 0;
    if (m) return m.call(o);
    return {
        next: function next() {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o),
        r,
        ar = [],
        e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
            ar.push(r.value);
        }
    } catch (error) {
        e = { error: error };
    } finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
            if (e) throw e.error;
        }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
    }return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
    }for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
            r[k] = a[j];
        }
    }return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []),
        i,
        q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function (v) {
            return new Promise(function (a, b) {
                q.push([n, v, a, b]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function () {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function (v) {
            return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
        } : f;
    }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator],
        i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function (v) {
            return new Promise(function (resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
            resolve({ value: v, done: d });
        }, reject);
    }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", { value: raw });
    } else {
        cooked.raw = raw;
    }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) {
        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    }result.default = mod;
    return result;
}

function __importDefault(mod) {
    return mod && mod.__esModule ? mod : { default: mod };
}

/***/ }),

/***/ "vkNc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var util_namespaceObject = {};
__webpack_require__.d(util_namespaceObject, "supportsCssVariables", function() { return supportsCssVariables; });
__webpack_require__.d(util_namespaceObject, "applyPassive", function() { return applyPassive; });
__webpack_require__.d(util_namespaceObject, "getMatchesProperty", function() { return getMatchesProperty; });
__webpack_require__.d(util_namespaceObject, "getNormalizedEventCoords", function() { return getNormalizedEventCoords; });

// EXTERNAL MODULE: ../node_modules/@material/base/component.js
var component = __webpack_require__("EQDb");

// CONCATENATED MODULE: ../node_modules/@material/ripple/adapter.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Ripple. Provides an interface for managing
 * - classes
 * - dom
 * - CSS variables
 * - position
 * - dimensions
 * - scroll position
 * - event handlers
 * - unbounded, active and disabled states
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
var MDCRippleAdapter = function () {
  function MDCRippleAdapter() {
    _classCallCheck(this, MDCRippleAdapter);
  }

  /** @return {boolean} */
  MDCRippleAdapter.prototype.browserSupportsCssVars = function browserSupportsCssVars() {};

  /** @return {boolean} */


  MDCRippleAdapter.prototype.isUnbounded = function isUnbounded() {};

  /** @return {boolean} */


  MDCRippleAdapter.prototype.isSurfaceActive = function isSurfaceActive() {};

  /** @return {boolean} */


  MDCRippleAdapter.prototype.isSurfaceDisabled = function isSurfaceDisabled() {};

  /** @param {string} className */


  MDCRippleAdapter.prototype.addClass = function addClass(className) {};

  /** @param {string} className */


  MDCRippleAdapter.prototype.removeClass = function removeClass(className) {};

  /** @param {!EventTarget} target */


  MDCRippleAdapter.prototype.containsEventTarget = function containsEventTarget(target) {};

  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.registerInteractionHandler = function registerInteractionHandler(evtType, handler) {};

  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.deregisterInteractionHandler = function deregisterInteractionHandler(evtType, handler) {};

  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.registerDocumentInteractionHandler = function registerDocumentInteractionHandler(evtType, handler) {};

  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.deregisterDocumentInteractionHandler = function deregisterDocumentInteractionHandler(evtType, handler) {};

  /**
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.registerResizeHandler = function registerResizeHandler(handler) {};

  /**
   * @param {!Function} handler
   */


  MDCRippleAdapter.prototype.deregisterResizeHandler = function deregisterResizeHandler(handler) {};

  /**
   * @param {string} varName
   * @param {?number|string} value
   */


  MDCRippleAdapter.prototype.updateCssVariable = function updateCssVariable(varName, value) {};

  /** @return {!ClientRect} */


  MDCRippleAdapter.prototype.computeBoundingRect = function computeBoundingRect() {};

  /** @return {{x: number, y: number}} */


  MDCRippleAdapter.prototype.getWindowPageOffset = function getWindowPageOffset() {};

  return MDCRippleAdapter;
}();

/* harmony default export */ var adapter = (MDCRippleAdapter);
// EXTERNAL MODULE: ../node_modules/@material/base/foundation.js
var foundation = __webpack_require__("uJAj");

// CONCATENATED MODULE: ../node_modules/@material/ripple/constants.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

var cssClasses = {
  // Ripple is a special case where the "root" component is really a "mixin" of sorts,
  // given that it's an 'upgrade' to an existing component. That being said it is the root
  // CSS class that all other CSS classes derive from.
  ROOT: 'mdc-ripple-upgraded',
  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
};

var strings = {
  VAR_LEFT: '--mdc-ripple-left',
  VAR_TOP: '--mdc-ripple-top',
  VAR_FG_SIZE: '--mdc-ripple-fg-size',
  VAR_FG_SCALE: '--mdc-ripple-fg-scale',
  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
};

var numbers = {
  PADDING: 10,
  INITIAL_ORIGIN_SCALE: 0.6,
  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
  TAP_DELAY_MS: 300 // Delay between touch and simulated mouse events on touch devices
};


// CONCATENATED MODULE: ../node_modules/@material/ripple/util.js
/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
 * @private {boolean|undefined}
 */
var supportsCssVariables_ = void 0;

/**
 * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
 * @private {boolean|undefined}
 */
var supportsPassive_ = void 0;

/**
 * @param {!Window} windowObj
 * @return {boolean}
 */
function detectEdgePseudoVarBug(windowObj) {
  // Detect versions of Edge with buggy var() support
  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
  var document = windowObj.document;
  var node = document.createElement('div');
  node.className = 'mdc-ripple-surface--test-edge-var-bug';
  document.body.appendChild(node);

  // The bug exists if ::before style ends up propagating to the parent element.
  // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
  // but Firefox is known to support CSS custom properties correctly.
  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397
  var computedStyle = windowObj.getComputedStyle(node);
  var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
  node.remove();
  return hasPseudoVarBug;
}

/**
 * @param {!Window} windowObj
 * @param {boolean=} forceRefresh
 * @return {boolean|undefined}
 */

function supportsCssVariables(windowObj) {
  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var supportsCssVariables = supportsCssVariables_;
  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
    return supportsCssVariables;
  }

  var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';
  if (!supportsFunctionPresent) {
    return;
  }

  var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');
  // See: https://bugs.webkit.org/show_bug.cgi?id=154669
  // See: README section on Safari
  var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
  } else {
    supportsCssVariables = false;
  }

  if (!forceRefresh) {
    supportsCssVariables_ = supportsCssVariables;
  }
  return supportsCssVariables;
}

//
/**
 * Determine whether the current browser supports passive event listeners, and if so, use them.
 * @param {!Window=} globalObj
 * @param {boolean=} forceRefresh
 * @return {boolean|{passive: boolean}}
 */
function applyPassive() {
  var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (supportsPassive_ === undefined || forceRefresh) {
    var isSupported = false;
    try {
      globalObj.document.addEventListener('test', null, { get passive() {
          isSupported = true;
        } });
    } catch (e) {}

    supportsPassive_ = isSupported;
  }

  return supportsPassive_ ? { passive: true } : false;
}

/**
 * @param {!Object} HTMLElementPrototype
 * @return {!Array<string>}
 */
function getMatchesProperty(HTMLElementPrototype) {
  return ['webkitMatchesSelector', 'msMatchesSelector', 'matches'].filter(function (p) {
    return p in HTMLElementPrototype;
  }).pop();
}

/**
 * @param {!Event} ev
 * @param {{x: number, y: number}} pageOffset
 * @param {!ClientRect} clientRect
 * @return {{x: number, y: number}}
 */
function getNormalizedEventCoords(ev, pageOffset, clientRect) {
  var x = pageOffset.x,
      y = pageOffset.y;

  var documentX = x + clientRect.left;
  var documentY = y + clientRect.top;

  var normalizedX = void 0;
  var normalizedY = void 0;
  // Determine touch point relative to the ripple container.
  if (ev.type === 'touchstart') {
    normalizedX = ev.changedTouches[0].pageX - documentX;
    normalizedY = ev.changedTouches[0].pageY - documentY;
  } else {
    normalizedX = ev.pageX - documentX;
    normalizedY = ev.pageY - documentY;
  }

  return { x: normalizedX, y: normalizedY };
}


// CONCATENATED MODULE: ../node_modules/@material/ripple/foundation.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */






/**
 * @typedef {{
 *   isActivated: (boolean|undefined),
 *   hasDeactivationUXRun: (boolean|undefined),
 *   wasActivatedByPointer: (boolean|undefined),
 *   wasElementMadeActive: (boolean|undefined),
 *   activationEvent: Event,
 *   isProgrammatic: (boolean|undefined)
 * }}
 */
var ActivationStateType = void 0;

/**
 * @typedef {{
 *   activate: (string|undefined),
 *   deactivate: (string|undefined),
 *   focus: (string|undefined),
 *   blur: (string|undefined)
 * }}
 */
var ListenerInfoType = void 0;

/**
 * @typedef {{
 *   activate: function(!Event),
 *   deactivate: function(!Event),
 *   focus: function(),
 *   blur: function()
 * }}
 */
var ListenersType = void 0;

/**
 * @typedef {{
 *   x: number,
 *   y: number
 * }}
 */
var PointType = void 0;

// Activation events registered on the root element of each instance for activation
var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];

// Deactivation events registered on documentElement when a pointer-related down event occurs
var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];

// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations
/** @type {!Array<!EventTarget>} */
var activatedTargets = [];

/**
 * @extends {MDCFoundation<!MDCRippleAdapter>}
 */

var foundation_MDCRippleFoundation = function (_MDCFoundation) {
  _inherits(MDCRippleFoundation, _MDCFoundation);

  _createClass(MDCRippleFoundation, null, [{
    key: 'cssClasses',
    get: function get() {
      return cssClasses;
    }
  }, {
    key: 'strings',
    get: function get() {
      return strings;
    }
  }, {
    key: 'numbers',
    get: function get() {
      return numbers;
    }
  }, {
    key: 'defaultAdapter',
    get: function get() {
      return {
        browserSupportsCssVars: function browserSupportsCssVars() /* boolean - cached */{},
        isUnbounded: function isUnbounded() /* boolean */{},
        isSurfaceActive: function isSurfaceActive() /* boolean */{},
        isSurfaceDisabled: function isSurfaceDisabled() /* boolean */{},
        addClass: function addClass() /* className: string */{},
        removeClass: function removeClass() /* className: string */{},
        containsEventTarget: function containsEventTarget() /* target: !EventTarget */{},
        registerInteractionHandler: function registerInteractionHandler() /* evtType: string, handler: EventListener */{},
        deregisterInteractionHandler: function deregisterInteractionHandler() /* evtType: string, handler: EventListener */{},
        registerDocumentInteractionHandler: function registerDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},
        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},
        registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
        deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
        updateCssVariable: function updateCssVariable() /* varName: string, value: string */{},
        computeBoundingRect: function computeBoundingRect() /* ClientRect */{},
        getWindowPageOffset: function getWindowPageOffset() /* {x: number, y: number} */{}
      };
    }
  }]);

  function MDCRippleFoundation(adapter) {
    foundation__classCallCheck(this, MDCRippleFoundation);

    /** @private {number} */
    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

    _this.layoutFrame_ = 0;

    /** @private {!ClientRect} */
    _this.frame_ = /** @type {!ClientRect} */{ width: 0, height: 0 };

    /** @private {!ActivationStateType} */
    _this.activationState_ = _this.defaultActivationState_();

    /** @private {number} */
    _this.initialSize_ = 0;

    /** @private {number} */
    _this.maxRadius_ = 0;

    /** @private {function(!Event)} */
    _this.activateHandler_ = function (e) {
      return _this.activate_(e);
    };

    /** @private {function(!Event)} */
    _this.deactivateHandler_ = function (e) {
      return _this.deactivate_(e);
    };

    /** @private {function(?Event=)} */
    _this.focusHandler_ = function () {
      return _this.handleFocus();
    };

    /** @private {function(?Event=)} */
    _this.blurHandler_ = function () {
      return _this.handleBlur();
    };

    /** @private {!Function} */
    _this.resizeHandler_ = function () {
      return _this.layout();
    };

    /** @private {{left: number, top:number}} */
    _this.unboundedCoords_ = {
      left: 0,
      top: 0
    };

    /** @private {number} */
    _this.fgScale_ = 0;

    /** @private {number} */
    _this.activationTimer_ = 0;

    /** @private {number} */
    _this.fgDeactivationRemovalTimer_ = 0;

    /** @private {boolean} */
    _this.activationAnimationHasEnded_ = false;

    /** @private {!Function} */
    _this.activationTimerCallback_ = function () {
      _this.activationAnimationHasEnded_ = true;
      _this.runDeactivationUXLogicIfReady_();
    };

    /** @private {?Event} */
    _this.previousActivationEvent_ = null;
    return _this;
  }

  /**
   * We compute this property so that we are not querying information about the client
   * until the point in time where the foundation requests it. This prevents scenarios where
   * client-side feature-detection may happen too early, such as when components are rendered on the server
   * and then initialized at mount time on the client.
   * @return {boolean}
   * @private
   */


  MDCRippleFoundation.prototype.supportsPressRipple_ = function supportsPressRipple_() {
    return this.adapter_.browserSupportsCssVars();
  };

  /**
   * @return {!ActivationStateType}
   */


  MDCRippleFoundation.prototype.defaultActivationState_ = function defaultActivationState_() {
    return {
      isActivated: false,
      hasDeactivationUXRun: false,
      wasActivatedByPointer: false,
      wasElementMadeActive: false,
      activationEvent: null,
      isProgrammatic: false
    };
  };

  /** @override */


  MDCRippleFoundation.prototype.init = function init() {
    var _this2 = this;

    var supportsPressRipple = this.supportsPressRipple_();

    this.registerRootHandlers_(supportsPressRipple);

    if (supportsPressRipple) {
      var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
          ROOT = _MDCRippleFoundation$.ROOT,
          UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;

      requestAnimationFrame(function () {
        _this2.adapter_.addClass(ROOT);
        if (_this2.adapter_.isUnbounded()) {
          _this2.adapter_.addClass(UNBOUNDED);
          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple
          _this2.layoutInternal_();
        }
      });
    }
  };

  /** @override */


  MDCRippleFoundation.prototype.destroy = function destroy() {
    var _this3 = this;

    if (this.supportsPressRipple_()) {
      if (this.activationTimer_) {
        clearTimeout(this.activationTimer_);
        this.activationTimer_ = 0;
        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
      }

      if (this.fgDeactivationRemovalTimer_) {
        clearTimeout(this.fgDeactivationRemovalTimer_);
        this.fgDeactivationRemovalTimer_ = 0;
        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
      }

      var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
          ROOT = _MDCRippleFoundation$2.ROOT,
          UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;

      requestAnimationFrame(function () {
        _this3.adapter_.removeClass(ROOT);
        _this3.adapter_.removeClass(UNBOUNDED);
        _this3.removeCssVars_();
      });
    }

    this.deregisterRootHandlers_();
    this.deregisterDeactivationHandlers_();
  };

  /**
   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
   * @private
   */


  MDCRippleFoundation.prototype.registerRootHandlers_ = function registerRootHandlers_(supportsPressRipple) {
    var _this4 = this;

    if (supportsPressRipple) {
      ACTIVATION_EVENT_TYPES.forEach(function (type) {
        _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
      });
      if (this.adapter_.isUnbounded()) {
        this.adapter_.registerResizeHandler(this.resizeHandler_);
      }
    }

    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
  };

  /**
   * @param {!Event} e
   * @private
   */


  MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function registerDeactivationHandlers_(e) {
    var _this5 = this;

    if (e.type === 'keydown') {
      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
    } else {
      POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
        _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
      });
    }
  };

  /** @private */


  MDCRippleFoundation.prototype.deregisterRootHandlers_ = function deregisterRootHandlers_() {
    var _this6 = this;

    ACTIVATION_EVENT_TYPES.forEach(function (type) {
      _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
    });
    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

    if (this.adapter_.isUnbounded()) {
      this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    }
  };

  /** @private */


  MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function deregisterDeactivationHandlers_() {
    var _this7 = this;

    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
    POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
      _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
    });
  };

  /** @private */


  MDCRippleFoundation.prototype.removeCssVars_ = function removeCssVars_() {
    var _this8 = this;

    var strings = MDCRippleFoundation.strings;

    Object.keys(strings).forEach(function (k) {
      if (k.indexOf('VAR_') === 0) {
        _this8.adapter_.updateCssVariable(strings[k], null);
      }
    });
  };

  /**
   * @param {?Event} e
   * @private
   */


  MDCRippleFoundation.prototype.activate_ = function activate_(e) {
    var _this9 = this;

    if (this.adapter_.isSurfaceDisabled()) {
      return;
    }

    var activationState = this.activationState_;
    if (activationState.isActivated) {
      return;
    }

    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction
    var previousActivationEvent = this.previousActivationEvent_;
    var isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;
    if (isSameInteraction) {
      return;
    }

    activationState.isActivated = true;
    activationState.isProgrammatic = e === null;
    activationState.activationEvent = e;
    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown';

    var hasActivatedChild = e && activatedTargets.length > 0 && activatedTargets.some(function (target) {
      return _this9.adapter_.containsEventTarget(target);
    });
    if (hasActivatedChild) {
      // Immediately reset activation state, while preserving logic that prevents touch follow-on events
      this.resetActivationState_();
      return;
    }

    if (e) {
      activatedTargets.push( /** @type {!EventTarget} */e.target);
      this.registerDeactivationHandlers_(e);
    }

    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);
    if (activationState.wasElementMadeActive) {
      this.animateActivation_();
    }

    requestAnimationFrame(function () {
      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
      activatedTargets = [];

      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {
        // If space was pressed, try again within an rAF call to detect :active, because different UAs report
        // active states inconsistently when they're called within event handling code:
        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
        // variable is set within a rAF callback for a submit button interaction (#2241).
        activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);
        if (activationState.wasElementMadeActive) {
          _this9.animateActivation_();
        }
      }

      if (!activationState.wasElementMadeActive) {
        // Reset activation state immediately if element was not made active.
        _this9.activationState_ = _this9.defaultActivationState_();
      }
    });
  };

  /**
   * @param {?Event} e
   * @private
   */


  MDCRippleFoundation.prototype.checkElementMadeActive_ = function checkElementMadeActive_(e) {
    return e && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
  };

  /**
   * @param {?Event=} event Optional event containing position information.
   */


  MDCRippleFoundation.prototype.activate = function activate() {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    this.activate_(event);
  };

  /** @private */


  MDCRippleFoundation.prototype.animateActivation_ = function animateActivation_() {
    var _this10 = this;

    var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
        VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
        VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
    var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
        FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
        FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
    var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;


    this.layoutInternal_();

    var translateStart = '';
    var translateEnd = '';

    if (!this.adapter_.isUnbounded()) {
      var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
          startPoint = _getFgTranslationCoor.startPoint,
          endPoint = _getFgTranslationCoor.endPoint;

      translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
      translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
    }

    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);
    // Cancel any ongoing activation/deactivation animations
    clearTimeout(this.activationTimer_);
    clearTimeout(this.fgDeactivationRemovalTimer_);
    this.rmBoundedActivationClasses_();
    this.adapter_.removeClass(FG_DEACTIVATION);

    // Force layout in order to re-trigger the animation.
    this.adapter_.computeBoundingRect();
    this.adapter_.addClass(FG_ACTIVATION);
    this.activationTimer_ = setTimeout(function () {
      return _this10.activationTimerCallback_();
    }, DEACTIVATION_TIMEOUT_MS);
  };

  /**
   * @private
   * @return {{startPoint: PointType, endPoint: PointType}}
   */


  MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function getFgTranslationCoordinates_() {
    var _activationState_ = this.activationState_,
        activationEvent = _activationState_.activationEvent,
        wasActivatedByPointer = _activationState_.wasActivatedByPointer;


    var startPoint = void 0;
    if (wasActivatedByPointer) {
      startPoint = getNormalizedEventCoords(
      /** @type {!Event} */activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
    } else {
      startPoint = {
        x: this.frame_.width / 2,
        y: this.frame_.height / 2
      };
    }
    // Center the element around the start point.
    startPoint = {
      x: startPoint.x - this.initialSize_ / 2,
      y: startPoint.y - this.initialSize_ / 2
    };

    var endPoint = {
      x: this.frame_.width / 2 - this.initialSize_ / 2,
      y: this.frame_.height / 2 - this.initialSize_ / 2
    };

    return { startPoint: startPoint, endPoint: endPoint };
  };

  /** @private */


  MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function runDeactivationUXLogicIfReady_() {
    var _this11 = this;

    // This method is called both when a pointing device is released, and when the activation animation ends.
    // The deactivation animation should only run after both of those occur.
    var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
    var _activationState_2 = this.activationState_,
        hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
        isActivated = _activationState_2.isActivated;

    var activationHasEnded = hasDeactivationUXRun || !isActivated;

    if (activationHasEnded && this.activationAnimationHasEnded_) {
      this.rmBoundedActivationClasses_();
      this.adapter_.addClass(FG_DEACTIVATION);
      this.fgDeactivationRemovalTimer_ = setTimeout(function () {
        _this11.adapter_.removeClass(FG_DEACTIVATION);
      }, numbers.FG_DEACTIVATION_MS);
    }
  };

  /** @private */


  MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function rmBoundedActivationClasses_() {
    var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;

    this.adapter_.removeClass(FG_ACTIVATION);
    this.activationAnimationHasEnded_ = false;
    this.adapter_.computeBoundingRect();
  };

  MDCRippleFoundation.prototype.resetActivationState_ = function resetActivationState_() {
    var _this12 = this;

    this.previousActivationEvent_ = this.activationState_.activationEvent;
    this.activationState_ = this.defaultActivationState_();
    // Touch devices may fire additional events for the same interaction within a short time.
    // Store the previous event until it's safe to assume that subsequent events are for new interactions.
    setTimeout(function () {
      return _this12.previousActivationEvent_ = null;
    }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
  };

  /**
   * @param {?Event} e
   * @private
   */


  MDCRippleFoundation.prototype.deactivate_ = function deactivate_(e) {
    var _this13 = this;

    var activationState = this.activationState_;
    // This can happen in scenarios such as when you have a keyup event that blurs the element.
    if (!activationState.isActivated) {
      return;
    }

    var state = /** @type {!ActivationStateType} */_extends({}, activationState);

    if (activationState.isProgrammatic) {
      var evtObject = null;
      requestAnimationFrame(function () {
        return _this13.animateDeactivation_(evtObject, state);
      });
      this.resetActivationState_();
    } else {
      this.deregisterDeactivationHandlers_();
      requestAnimationFrame(function () {
        _this13.activationState_.hasDeactivationUXRun = true;
        _this13.animateDeactivation_(e, state);
        _this13.resetActivationState_();
      });
    }
  };

  /**
   * @param {?Event=} event Optional event containing position information.
   */


  MDCRippleFoundation.prototype.deactivate = function deactivate() {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    this.deactivate_(event);
  };

  /**
   * @param {Event} e
   * @param {!ActivationStateType} options
   * @private
   */


  MDCRippleFoundation.prototype.animateDeactivation_ = function animateDeactivation_(e, _ref) {
    var wasActivatedByPointer = _ref.wasActivatedByPointer,
        wasElementMadeActive = _ref.wasElementMadeActive;

    if (wasActivatedByPointer || wasElementMadeActive) {
      this.runDeactivationUXLogicIfReady_();
    }
  };

  MDCRippleFoundation.prototype.layout = function layout() {
    var _this14 = this;

    if (this.layoutFrame_) {
      cancelAnimationFrame(this.layoutFrame_);
    }
    this.layoutFrame_ = requestAnimationFrame(function () {
      _this14.layoutInternal_();
      _this14.layoutFrame_ = 0;
    });
  };

  /** @private */


  MDCRippleFoundation.prototype.layoutInternal_ = function layoutInternal_() {
    var _this15 = this;

    this.frame_ = this.adapter_.computeBoundingRect();
    var maxDim = Math.max(this.frame_.height, this.frame_.width);

    // Surface diameter is treated differently for unbounded vs. bounded ripples.
    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
    // `overflow: hidden`.
    var getBoundedRadius = function getBoundedRadius() {
      var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
      return hypotenuse + MDCRippleFoundation.numbers.PADDING;
    };

    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();

    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform
    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;
    this.fgScale_ = this.maxRadius_ / this.initialSize_;

    this.updateLayoutCssVars_();
  };

  /** @private */


  MDCRippleFoundation.prototype.updateLayoutCssVars_ = function updateLayoutCssVars_() {
    var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
        VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
        VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
        VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
        VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;


    this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

    if (this.adapter_.isUnbounded()) {
      this.unboundedCoords_ = {
        left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
        top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
      };

      this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
      this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
    }
  };

  /** @param {boolean} unbounded */


  MDCRippleFoundation.prototype.setUnbounded = function setUnbounded(unbounded) {
    var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

    if (unbounded) {
      this.adapter_.addClass(UNBOUNDED);
    } else {
      this.adapter_.removeClass(UNBOUNDED);
    }
  };

  MDCRippleFoundation.prototype.handleFocus = function handleFocus() {
    var _this16 = this;

    requestAnimationFrame(function () {
      return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
    });
  };

  MDCRippleFoundation.prototype.handleBlur = function handleBlur() {
    var _this17 = this;

    requestAnimationFrame(function () {
      return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
    });
  };

  return MDCRippleFoundation;
}(foundation["a" /* default */]);

/* harmony default export */ var ripple_foundation = (foundation_MDCRippleFoundation);
// CONCATENATED MODULE: ../node_modules/@material/ripple/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MDCRipple", function() { return ripple_MDCRipple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RippleCapableSurface", function() { return RippleCapableSurface; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MDCRippleFoundation", function() { return ripple_foundation; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "util", function() { return util_namespaceObject; });
var ripple__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function ripple__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ripple__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function ripple__inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */






/**
 * @extends MDCComponent<!MDCRippleFoundation>
 */

var ripple_MDCRipple = function (_MDCComponent) {
  ripple__inherits(MDCRipple, _MDCComponent);

  /** @param {...?} args */
  function MDCRipple() {
    ripple__classCallCheck(this, MDCRipple);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    /** @type {boolean} */
    var _this = ripple__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));

    _this.disabled = false;

    /** @private {boolean} */
    _this.unbounded_;
    return _this;
  }

  /**
   * @param {!Element} root
   * @param {{isUnbounded: (boolean|undefined)}=} options
   * @return {!MDCRipple}
   */


  MDCRipple.attachTo = function attachTo(root) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$isUnbounded = _ref.isUnbounded,
        isUnbounded = _ref$isUnbounded === undefined ? undefined : _ref$isUnbounded;

    var ripple = new MDCRipple(root);
    // Only override unbounded behavior if option is explicitly specified
    if (isUnbounded !== undefined) {
      ripple.unbounded = /** @type {boolean} */isUnbounded;
    }
    return ripple;
  };

  /**
   * @param {!RippleCapableSurface} instance
   * @return {!MDCRippleAdapter}
   */


  MDCRipple.createAdapter = function createAdapter(instance) {
    var MATCHES = getMatchesProperty(HTMLElement.prototype);

    return {
      browserSupportsCssVars: function browserSupportsCssVars() {
        return supportsCssVariables(window);
      },
      isUnbounded: function isUnbounded() {
        return instance.unbounded;
      },
      isSurfaceActive: function isSurfaceActive() {
        return instance.root_[MATCHES](':active');
      },
      isSurfaceDisabled: function isSurfaceDisabled() {
        return instance.disabled;
      },
      addClass: function addClass(className) {
        return instance.root_.classList.add(className);
      },
      removeClass: function removeClass(className) {
        return instance.root_.classList.remove(className);
      },
      containsEventTarget: function containsEventTarget(target) {
        return instance.root_.contains(target);
      },
      registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
        return instance.root_.addEventListener(evtType, handler, applyPassive());
      },
      deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
        return instance.root_.removeEventListener(evtType, handler, applyPassive());
      },
      registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
        return document.documentElement.addEventListener(evtType, handler, applyPassive());
      },
      deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
        return document.documentElement.removeEventListener(evtType, handler, applyPassive());
      },
      registerResizeHandler: function registerResizeHandler(handler) {
        return window.addEventListener('resize', handler);
      },
      deregisterResizeHandler: function deregisterResizeHandler(handler) {
        return window.removeEventListener('resize', handler);
      },
      updateCssVariable: function updateCssVariable(varName, value) {
        return instance.root_.style.setProperty(varName, value);
      },
      computeBoundingRect: function computeBoundingRect() {
        return instance.root_.getBoundingClientRect();
      },
      getWindowPageOffset: function getWindowPageOffset() {
        return { x: window.pageXOffset, y: window.pageYOffset };
      }
    };
  };

  /** @return {boolean} */


  /**
   * Closure Compiler throws an access control error when directly accessing a
   * protected or private property inside a getter/setter, like unbounded above.
   * By accessing the protected property inside a method, we solve that problem.
   * That's why this function exists.
   * @private
   */
  MDCRipple.prototype.setUnbounded_ = function setUnbounded_() {
    this.foundation_.setUnbounded(this.unbounded_);
  };

  MDCRipple.prototype.activate = function activate() {
    this.foundation_.activate();
  };

  MDCRipple.prototype.deactivate = function deactivate() {
    this.foundation_.deactivate();
  };

  MDCRipple.prototype.layout = function layout() {
    this.foundation_.layout();
  };

  /**
   * @return {!MDCRippleFoundation}
   * @override
   */


  MDCRipple.prototype.getDefaultFoundation = function getDefaultFoundation() {
    return new ripple_foundation(MDCRipple.createAdapter(this));
  };

  /** @override */


  MDCRipple.prototype.initialSyncWithDOM = function initialSyncWithDOM() {
    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
  };

  ripple__createClass(MDCRipple, [{
    key: 'unbounded',
    get: function get() {
      return this.unbounded_;
    }

    /** @param {boolean} unbounded */
    ,
    set: function set(unbounded) {
      this.unbounded_ = Boolean(unbounded);
      this.setUnbounded_();
    }
  }]);

  return MDCRipple;
}(component["a" /* default */]);

/**
 * See Material Design spec for more details on when to use ripples.
 * https://material.io/guidelines/motion/choreography.html#choreography-creation
 * @record
 */


var RippleCapableSurface = function RippleCapableSurface() {
  ripple__classCallCheck(this, RippleCapableSurface);
};

/** @protected {!Element} */


RippleCapableSurface.prototype.root_;

/**
 * Whether or not the ripple bleeds out of the bounds of the element.
 * @type {boolean|undefined}
 */
RippleCapableSurface.prototype.unbounded;

/**
 * Whether or not the ripple is attached to a disabled component.
 * @type {boolean|undefined}
 */
RippleCapableSurface.prototype.disabled;



/***/ }),

/***/ "wVGV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__("Asjh");

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/***/ }),

/***/ "xxi1":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"main":"main__3MSlA","errorMessage":"errorMessage__3X7Px"};

/***/ }),

/***/ "yH7v":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"tabs":"tabs__wy0k6","tab":"tab__3c40k","line":"line__290FP","attending":"attending__1Vw7x","attending_item":"attending_item__Av8wp","attending_title":"attending_title__1uepx","attending_content":"attending_content__11-BM","attending_list":"attending_list__FmHPF","hero":"hero__1oekB","belt":"belt___Pqzu","footer":"footer__H5vsT"};

/***/ }),

/***/ "ySUw":
/***/ (function(module, exports, __webpack_require__) {

var tabbable = __webpack_require__("TO+D");

var listeningFocusTrap = null;

function focusTrap(element, userOptions) {
  var tabbableNodes = [];
  var firstTabbableNode = null;
  var lastTabbableNode = null;
  var nodeFocusedBeforeActivation = null;
  var active = false;
  var paused = false;
  var tabEvent = null;

  var container = typeof element === 'string' ? document.querySelector(element) : element;

  var config = userOptions || {};
  config.returnFocusOnDeactivate = userOptions && userOptions.returnFocusOnDeactivate !== undefined ? userOptions.returnFocusOnDeactivate : true;
  config.escapeDeactivates = userOptions && userOptions.escapeDeactivates !== undefined ? userOptions.escapeDeactivates : true;

  var trap = {
    activate: activate,
    deactivate: deactivate,
    pause: pause,
    unpause: unpause
  };

  return trap;

  function activate(activateOptions) {
    if (active) return;

    var defaultedActivateOptions = {
      onActivate: activateOptions && activateOptions.onActivate !== undefined ? activateOptions.onActivate : config.onActivate
    };

    active = true;
    paused = false;
    nodeFocusedBeforeActivation = document.activeElement;

    if (defaultedActivateOptions.onActivate) {
      defaultedActivateOptions.onActivate();
    }

    addListeners();
    return trap;
  }

  function deactivate(deactivateOptions) {
    if (!active) return;

    var defaultedDeactivateOptions = {
      returnFocus: deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate,
      onDeactivate: deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate
    };

    removeListeners();

    if (defaultedDeactivateOptions.onDeactivate) {
      defaultedDeactivateOptions.onDeactivate();
    }

    if (defaultedDeactivateOptions.returnFocus) {
      setTimeout(function () {
        tryFocus(nodeFocusedBeforeActivation);
      }, 0);
    }

    active = false;
    paused = false;
    return this;
  }

  function pause() {
    if (paused || !active) return;
    paused = true;
    removeListeners();
  }

  function unpause() {
    if (!paused || !active) return;
    paused = false;
    addListeners();
  }

  function addListeners() {
    if (!active) return;

    // There can be only one listening focus trap at a time
    if (listeningFocusTrap) {
      listeningFocusTrap.pause();
    }
    listeningFocusTrap = trap;

    updateTabbableNodes();
    // Ensure that the focused element doesn't capture the event that caused the focus trap activation
    setTimeout(function () {
      tryFocus(firstFocusNode());
    }, 0);
    document.addEventListener('focus', checkFocus, true);
    document.addEventListener('click', checkClick, true);
    document.addEventListener('mousedown', checkPointerDown, true);
    document.addEventListener('touchstart', checkPointerDown, true);
    document.addEventListener('keydown', checkKey, true);

    return trap;
  }

  function removeListeners() {
    if (!active || listeningFocusTrap !== trap) return;

    document.removeEventListener('focus', checkFocus, true);
    document.removeEventListener('click', checkClick, true);
    document.removeEventListener('mousedown', checkPointerDown, true);
    document.removeEventListener('touchstart', checkPointerDown, true);
    document.removeEventListener('keydown', checkKey, true);

    listeningFocusTrap = null;

    return trap;
  }

  function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    var node = optionValue;
    if (!optionValue) {
      return null;
    }
    if (typeof optionValue === 'string') {
      node = document.querySelector(optionValue);
      if (!node) {
        throw new Error('`' + optionName + '` refers to no known node');
      }
    }
    if (typeof optionValue === 'function') {
      node = optionValue();
      if (!node) {
        throw new Error('`' + optionName + '` did not return a node');
      }
    }
    return node;
  }

  function firstFocusNode() {
    var node;
    if (getNodeForOption('initialFocus') !== null) {
      node = getNodeForOption('initialFocus');
    } else if (container.contains(document.activeElement)) {
      node = document.activeElement;
    } else {
      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');
    }

    if (!node) {
      throw new Error('You can\'t have a focus-trap without at least one focusable element');
    }

    return node;
  }

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event
  function checkPointerDown(e) {
    if (config.clickOutsideDeactivates && !container.contains(e.target)) {
      deactivate({ returnFocus: false });
    }
  }

  function checkClick(e) {
    if (config.clickOutsideDeactivates) return;
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
  }

  function checkFocus(e) {
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
    // Checking for a blur method here resolves a Firefox issue (#15)
    if (typeof e.target.blur === 'function') e.target.blur();

    if (tabEvent) {
      readjustFocus(tabEvent);
    }
  }

  function checkKey(e) {
    if (e.key === 'Tab' || e.keyCode === 9) {
      handleTab(e);
    }

    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
      deactivate();
    }
  }

  function handleTab(e) {
    updateTabbableNodes();

    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {
      return tabEvent = e;
    }

    e.preventDefault();
    var currentFocusIndex = tabbableNodes.indexOf(e.target);

    if (e.shiftKey) {
      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {
        return tryFocus(lastTabbableNode);
      }
      return tryFocus(tabbableNodes[currentFocusIndex - 1]);
    }

    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);

    tryFocus(tabbableNodes[currentFocusIndex + 1]);
  }

  function updateTabbableNodes() {
    tabbableNodes = tabbable(container);
    firstTabbableNode = tabbableNodes[0];
    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];
  }

  function readjustFocus(e) {
    if (e.shiftKey) return tryFocus(lastTabbableNode);

    tryFocus(firstTabbableNode);
  }
}

function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
}

function tryFocus(node) {
  if (!node || !node.focus) return;
  if (node === document.activeElement) return;

  node.focus();
  if (node.tagName.toLowerCase() === 'input') {
    node.select();
  }
}

module.exports = focusTrap;

/***/ }),

/***/ "ynRT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _interopRequireDefault = __webpack_require__("SpGf");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Drawer = exports.DrawerItem = exports.DrawerContent = exports.DrawerHeader = void 0;

var _get2 = _interopRequireDefault(__webpack_require__("J5U+"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__("0fcM"));

var _createClass2 = _interopRequireDefault(__webpack_require__("P8NW"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("0421"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("UJE0"));

var _inherits2 = _interopRequireDefault(__webpack_require__("d4H2"));

var _typeof2 = _interopRequireDefault(__webpack_require__("b9XL"));

var _drawer = __webpack_require__("EyEO");

var _bindDecorator = __webpack_require__("gKs0");

var _preact = __webpack_require__("KM04");

var _MaterialComponent4 = _interopRequireDefault(__webpack_require__("uc5p"));

var _List = __webpack_require__("E7XR");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var DrawerHeader =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(DrawerHeader, _MaterialComponent);

  function DrawerHeader() {
    var _this;

    (0, _classCallCheck2.default)(this, DrawerHeader);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerHeader).apply(this, arguments));
    _this.componentName = 'drawer__header';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(DrawerHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", _extends({
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-drawer__header-content"
      }, props.children));
    }
  }]);
  return DrawerHeader;
}(_MaterialComponent4.default);

exports.DrawerHeader = DrawerHeader;

var DrawerContent =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(DrawerContent, _MaterialComponent2);

  function DrawerContent() {
    var _this2;

    (0, _classCallCheck2.default)(this, DrawerContent);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerContent).apply(this, arguments));
    _this2.componentName = 'drawer__content';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(DrawerContent, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", {
        class: "mdc-drawer__content"
      }, (0, _preact.h)("nav", _extends({
        className: "mdc-list",
        ref: this.setControlRef
      }, props), props.children));
    }
  }]);
  return DrawerContent;
}(_MaterialComponent4.default);

exports.DrawerContent = DrawerContent;

var DrawerItem =
/*#__PURE__*/
function (_ListLinkItem) {
  (0, _inherits2.default)(DrawerItem, _ListLinkItem);

  function DrawerItem() {
    (0, _classCallCheck2.default)(this, DrawerItem);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerItem).apply(this, arguments));
  }

  (0, _createClass2.default)(DrawerItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      var returnedNode = (0, _get2.default)((0, _getPrototypeOf2.default)(DrawerItem.prototype), "materialDom", this).call(this, props);
      /* Logic to add selected class */

      if (props.selected) {
        // @ts-ignore
        (returnedNode.props || returnedNode.attributes).className = 'mdc-list-item--activated';
      }

      return returnedNode;
    }
  }]);
  return DrawerItem;
}(_List.ListLinkItem);

exports.DrawerItem = DrawerItem;

var Drawer =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(Drawer, _MaterialComponent3);

  function Drawer() {
    var _this3;

    (0, _classCallCheck2.default)(this, Drawer);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Drawer).apply(this, arguments));
    _this3.componentName = 'drawer-container';
    _this3.mdcProps = [];
    _this3.mdcNotifyProps = ['open'];
    return _this3;
  }

  (0, _createClass2.default)(Drawer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Drawer.prototype), "componentDidMount", this).call(this);

      if (this.control && (this.props.modal || this.props.dismissible)) {
        this.MDComponent = new _drawer.MDCDrawer(this.control);
        this.MDComponent.listen('MDCDrawer:opened', this.onOpen);
        this.MDComponent.listen('MDCDrawer:closed', this.onClose);
      }
    }
  }, {
    key: "onOpen",
    value: function onOpen(e) {
      if (this.props.onOpen) {
        this.props.onOpen(e);
      }
    }
  }, {
    key: "onClose",
    value: function onClose(e) {
      if (this.props.onClose) {
        this.props.onClose(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      var classes = ['mdc-drawer']; // cant use mdcProps cuz classes need to be on the inner child and not on root level

      if (props.modal) {
        classes.push('mdc-drawer--modal');
      } else if (props.dismissible) {
        classes.push('mdc-drawer--dismissible');
      }

      return (0, _preact.h)("div", null, (0, _preact.h)("aside", _extends({
        class: classes.join(' '),
        ref: this.setControlRef
      }, props), props.children), props.modal && (0, _preact.h)("div", {
        class: "mdc-drawer-scrim"
      }));
    }
  }]);
  return Drawer;
}(_MaterialComponent4.default);

exports.Drawer = Drawer;
Drawer.DrawerContent = DrawerContent;
Drawer.DrawerHeader = DrawerHeader;
Drawer.DrawerItem = DrawerItem;

__decorate([_bindDecorator.bind], Drawer.prototype, "onOpen", null);

__decorate([_bindDecorator.bind], Drawer.prototype, "onClose", null);

var default_1 =
/*#__PURE__*/
function (_Drawer) {
  (0, _inherits2.default)(default_1, _Drawer);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Drawer);

exports.default = default_1;
default_1.DrawerContent = DrawerContent;
default_1.DrawerHeader = DrawerHeader;
default_1.DrawerItem = DrawerItem;
//# sourceMappingURL=index.js.map

/***/ })

/******/ });
//# sourceMappingURL=ssr-bundle.js.map