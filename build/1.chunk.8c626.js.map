{"version":3,"sources":["webpack:///1.chunk.8c626.js","webpack:///../node_modules/@firebase/installations/dist/index.esm.js","webpack:///../node_modules/firebase/performance/dist/index.esm.js","webpack:///../node_modules/@firebase/performance/dist/index.cjs.js","webpack:///../node_modules/@firebase/installations/node_modules/idb/build/idb.js"],"names":["webpackJsonp","AYOo","module","__webpack_exports__","__webpack_require__","isServerError","error","FirebaseError","code","includes","extractAppConfig","app","options","ERROR_FACTORY","create","appName","name","_a","projectId","apiKey","appId","getInstallationsEndpoint","INSTALLATIONS_API_URL","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","requestName","__awaiter","this","responseJson","errorData","__generator","label","json","sent","serverCode","serverMessage","message","serverStatus","status","getHeaders","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","result","responseExpiresIn","Number","replace","INTERNAL_AUTH_VERSION","createInstallation","fid","endpoint","body","request","responseValue","registeredInstallationEntry","_b","authVersion","sdkVersion","PACKAGE_VERSION","method","JSON","stringify","fetch","ok","registrationStatus","authToken","sleep","ms","Promise","resolve","setTimeout","bufferToBase64UrlSafe","array","btoa","String","fromCharCode","apply","__spread","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","encode","VALID_FID_PATTERN","test","INVALID_FID","substr","getDbPromise","dbPromise","openDb","DATABASE_NAME","DATABASE_VERSION","upgradeDB","oldVersion","createObjectStore","OBJECT_STORE_NAME","set","value","key","db","tx","getKey","transaction","objectStore","put","complete","remove","delete","update","updateFn","store","oldValue","newValue","get","undefined","getInstallationEntry","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","hasInstallationRequestTimedOut","navigator","onLine","reject","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","e_1","trys","push","updateInstallationRequest","PENDING_TIMEOUT_MS","generateAuthToken","completedAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","__assign","updatedInstallationEntry","isAuthTokenExpired","TOKEN_EXPIRATION_BUFFER","inProgressAuthToken","requestTime","getId","catch","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","deleteInstallation$1","registerInstallations","instance","INTERNAL","registerService","ERROR_DESCRIPTION_MAP","ErrorFactory","firebase","JTUh","TugV","exports","setupApi","window","windowInstance","getIidPromise","iidPromise","SettingsService","getInstance","firebaseAppInstance","installations","then","iidVal","iid","getIid","getAuthTokenPromise","authTokenPromise","getServiceWorkerStatus","Api","serviceWorker","controller","getVisibilityState","document","visibilityState","VisibilityState","VISIBLE","HIDDEN","PRERENDER","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","length","MAX_ATTRIBUTE_NAME_LENGTH","RESERVED_ATTRIBUTE_PREFIXES","some","prefix","startsWith","match","ATTRIBUTE_FORMAT_REGEX","isValidCustomAttributeValue","MAX_ATTRIBUTE_VALUE_LENGTH","getConfig","config","getStoredConfig","processConfig","getRemoteConfig","storeConfig","localStorage","expiryString","getItem","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","configValid","configStringified","CONFIG_LOCAL_STORAGE_KEY","parse","setItem","configTimeToLive","getProjectId","configEndPoint","getApiKey","Request","Authorization","FIS_AUTH_PREFIX","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","SDK_VERSION","sdk_version","REMOTE_CONFIG_SDK_VERSION","consoleLogger","info","COULD_NOT_GET_CONFIG_MSG","settingsServiceInstance","entries","loggingEnabled","fpr_enabled","SECONDARY_CONFIGS","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","expiry","samplingRate","Math","random","getInitializationPromise","initializationStatus","initializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","addEventListener","handler_1","removeEventListener","processQueue","timeOffset","remainingTries","queue","DEFAULT_SEND_INTERVAL_MS","staged","slice","log_event","map","evt","source_extension_json","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","DEFAULT_REMAINING_TRIES","concat","addToQueue","ccHandler","serializer","args","_i","arguments","getLogger","logger","ccLogger","logger$1","Logger","logHandler","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","log","logNetworkRequest","networkRequest","url","split","resource","resourceType","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","Object","keys","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","getUrl","service_worker_status","visibility_state","effective_connection_type","application_process_state","obj","isValidMetricName","traceName","MAX_METRIC_NAME_LENGTH","OOB_TRACE_PAGE_LOAD_PREFIX","oobMetrics","indexOf","RESERVED_AUTO_PREFIX","createNetworkRequestEntry","performanceEntry","responseStart","timeOrigin","getTimeOrigin","floor","startTime","responseEnd","transferSize","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","api","resources","getEntriesByType","resources_1","setupObserver","navigationTimings","paintTimings","onFirstInputDelay","timeoutId_1","Trace","createOobTrace","FID_WAIT_TIME_MS","clearTimeout","measures","measures_1","createUserTimingTrace","measure","measureName","substring","TRACE_MEASURE_PREFIX","registerPerformance","DEFAULT_ENTRY_NAME","PerformanceController","defineProperty","ex","require","tslib_1","util","apiInstance","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","performance","PerformanceObserver","windowLocation","location","cookieEnabled","perfMetrics","prototype","href","mark","mark1","mark2","type","getEntriesByName","timing","navigationStart","entryType","callback","list","getEntries","observe","entryTypes","RegExp","logLevel","LogLevel","INFO","traceMeasureName","state","randomId","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","start","stop","record","duration","attributes","metrics","metric","incrementMetric","counter","num","putMetric","customMetricName","getMetric","putAttribute","attr","isValidName","isValidValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","firstInputDelay","route","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","val","enumerable","configurable","pMz5","global","factory","toArray","arr","Array","call","promisifyRequest","onsuccess","onerror","promisifyRequestCall","p","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","nativeObject","getAll","query","count","items","iterateCursor","continue"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCuDA,SAASC,GAAcC,GACnB,MAAQA,aAAiBC,kBACrBD,EAAME,KAAKC,SAAS,kBAmB5B,QAASC,GAAiBC,GACtB,IAAKA,IAAQA,EAAIC,QACb,KAAMC,IAAcC,OAAO,4BAE/B,IAAIC,GAAUJ,EAAIK,KACdC,EAAKN,EAAIC,QAASM,EAAYD,EAAGC,UAAWC,EAASF,EAAGE,OAAQC,EAAQH,EAAGG,KAC/E,MAAKL,GAAYG,GAAcC,GAAWC,GACtC,KAAMP,IAAcC,OAAO,4BAE/B,QAASC,QAASA,EAASG,UAAWA,EAAWC,OAAQA,EAAQC,MAAOA,GAmB5E,QAASC,GAAyBJ,GAE9B,MAAOK,IAAwB,aADfL,EAAGC,UACuC,iBAE9D,QAASK,GAAiCC,GACtC,OACIC,MAAOD,EAASC,MAChBC,cAAe,EACfC,UAAWC,EAAkCJ,EAASG,WACtDE,aAAcC,KAAKC,OAG3B,QAASC,GAAqBC,EAAaT,GACvC,MAAOU,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIC,GAAcC,CAClB,OAAOC,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAAG,OAAQ,EAAaf,EAASgB,OACtC,KAAK,GAGD,MAFAJ,GAAenB,EAAGwB,OAClBJ,EAAYD,EAAa9B,OACjB,EAAcO,GAAcC,OAAO,kBACnCmB,YAAaA,EACbS,WAAYL,EAAU7B,KACtBmC,cAAeN,EAAUO,QACzBC,aAAcR,EAAUS,eAMpD,QAASC,GAAW9B,GAChB,GAAIE,GAASF,EAAGE,MAChB,OAAO,IAAI6B,UACP,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkB9B,IAG1B,QAAS+B,GAAmBC,EAAWlC,GACnC,GAAImC,GAAenC,EAAGmC,aAClBC,EAAUN,EAAWI,EAEzB,OADAE,GAAQC,OAAO,gBAAiBC,EAAuBH,IAChDC,EAOX,QAASG,GAAmBC,GACxB,MAAOvB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIuB,EACJ,OAAOpB,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAAG,OAAQ,EAAakB,IAC7B,KAAK,GAED,MADAC,GAASzC,EAAGwB,OACRiB,EAAOZ,QAAU,KAAOY,EAAOZ,OAAS,KAEhC,EAAcW,MAElB,EAAcC,QAK1C,QAAS9B,GAAkC+B,GAEvC,MAAOC,QAAOD,EAAkBE,QAAQ,IAAK,QAEjD,QAASN,GAAuBH,GAC5B,MAAOU,IAAwB,IAAMV,EAmBzC,QAASW,GAAmBZ,EAAWlC,GACnC,GAAI+C,GAAM/C,EAAG+C,GACb,OAAO9B,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI8B,GAAUZ,EAASa,EAAMC,EAAS3C,EAAU4C,EAAeC,CAC/D,OAAO/B,uBAAYH,KAAM,SAAUmC,GAC/B,OAAQA,EAAG/B,OACP,IAAK,GAcD,MAbA0B,GAAW5C,EAAyB8B,GACpCE,EAAUN,EAAWI,GACrBe,GACIF,IAAKA,EACLO,YAAaT,GACb1C,MAAO+B,EAAU/B,MACjBoD,WAAYC,IAEhBN,GACIO,OAAQ,OACRrB,QAASA,EACTa,KAAMS,KAAKC,UAAUV,KAEjB,EAAaV,EAAmB,WAAc,MAAOqB,OAAMZ,EAAUE,KACjF,KAAK,GAED,MADA3C,GAAW8C,EAAG7B,OACTjB,EAASsD,IACN,EAAatD,EAASgB,SADJ,EAAa,EAE3C,KAAK,GAQD,MAPA4B,GAAgBE,EAAG7B,OACnB4B,GACIL,IAAKI,EAAcJ,KAAOA,EAC1Be,mBAAoB,EACpB3B,aAAcgB,EAAchB,aAC5B4B,UAAWzD,EAAiC6C,EAAcY,aAEtD,EAAcX,EAC1B,KAAK,GAAG,OAAQ,EAAarC,EAAqB,sBAAuBR,GACzE,KAAK,GAAG,KAAM8C,GAAG7B,YAuBjC,QAASwC,GAAMC,GACX,MAAO,IAAIC,SAAQ,SAAUC,GACzBC,WAAWD,EAASF,KAoB5B,QAASI,GAAsBC,GAE3B,MADUC,MAAKC,OAAOC,aAAaC,MAAMF,OAAQG,mBAASL,KAC/C1B,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAyBlD,QAASgC,KACL,IAGI,GAAIC,GAAe,GAAIC,YAAW,KACnBC,KAAKC,QAAUD,KAAKE,UAC1BC,gBAAgBL,GAEzBA,EAAa,GAAK,IAAOA,EAAa,GAAK,EAC3C,IAAI9B,GAAMoC,EAAON,EACjB,OAAOO,IAAkBC,KAAKtC,GAAOA,EAAMuC,GAE/C,MAAOtF,GAEH,MAAOsF,KAIf,QAASH,GAAON,GAIZ,MAHgBR,GAAsBQ,GAGrBU,OAAO,EAAG,IAuB/B,QAASC,KAcL,MAbKC,MACDA,GAAYC,iBAAOC,GAAeC,GAAkB,SAAUC,GAM1D,OAAQA,EAAUC,YACd,IAAK,GACDD,EAAUE,kBAAkBC,QAIrCP,GAGX,QAASQ,GAAI/D,EAAWgE,GACpB,MAAOjF,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIiF,GAAKC,EAAIC,CACb,OAAOhF,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADA6E,GAAMG,EAAOpE,IACL,EAAasD,IACzB,KAAK,GAGD,MAFAY,GAAKpG,EAAGwB,OACR6E,EAAKD,EAAGG,YAAYP,GAAmB,cAC/B,EAAaK,EAAGG,YAAYR,IAAmBS,IAAIP,EAAOC,GACtE,KAAK,GAED,MADAnG,GAAGwB,QACK,EAAa6E,EAAGK,SAC5B,KAAK,GAED,MADA1G,GAAGwB,QACK,EAAc0E,QAM1C,QAASS,GAAOzE,GACZ,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIiF,GAAKC,EAAIC,CACb,OAAOhF,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADA6E,GAAMG,EAAOpE,IACL,EAAasD,IACzB,KAAK,GAGD,MAFAY,GAAKpG,EAAGwB,OACR6E,EAAKD,EAAGG,YAAYP,GAAmB,cAC/B,EAAaK,EAAGG,YAAYR,IAAmBY,OAAOT,GAClE,KAAK,GAED,MADAnG,GAAGwB,QACK,EAAa6E,EAAGK,SAC5B,KAAK,GAED,MADA1G,GAAGwB,QACK,QAW5B,QAASqF,GAAO3E,EAAW4E,GACvB,MAAO7F,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIiF,GAAKC,EAAIC,EAAIU,EAAOC,EAAUC,CAClC,OAAO5F,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADA6E,GAAMG,EAAOpE,IACL,EAAasD,IACzB,KAAK,GAID,MAHAY,GAAKpG,EAAGwB,OACR6E,EAAKD,EAAGG,YAAYP,GAAmB,aACvCe,EAAQV,EAAGG,YAAYR,KACf,EAAae,EAAMG,IAAIf,GACnC,KAAK,GAGD,MAFAa,GAAWhH,EAAGwB,OACdyF,EAAWH,EAASE,GAChBC,IAAaD,GACL,EAAcC,OAEPE,KAAbF,GAAiC,EAAa,IAC5C,EAAaF,EAAMH,OAAOT,GACtC,KAAK,GAED,MADAnG,GAAGwB,QACK,EAAa,EACzB,KAAK,GAAG,OAAQ,EAAauF,EAAMN,IAAIQ,EAAUd,GACjD,KAAK,GACDnG,EAAGwB,OACHxB,EAAGsB,MAAQ,CACf,KAAK,GAAG,OAAQ,EAAa+E,EAAGK,SAChC,KAAK,GAED,MADA1G,GAAGwB,QACK,EAAcyF,QAK1C,QAASX,GAAOpE,GACZ,MAAOA,GAAUpC,QAAU,IAAMoC,EAAU/B,MAuB/C,QAASiH,GAAqBlF,GAC1B,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAImG,GAAqBC,EAAmBtH,CAC5C,OAAOqB,uBAAYH,KAAM,SAAUmC,GAC/B,OAAQA,EAAG/B,OACP,IAAK,GAAG,OAAQ,EAAauF,EAAO3E,EAAW,SAAUqF,GACjD,GAAID,GAAoBE,EAAgCD,GACpDE,EAAmBC,EAA+BxF,EAAWoF,EAEjE,OADAD,GAAsBI,EAAiBJ,oBAChCI,EAAiBH,oBAEhC,KAAK,GAED,MADAA,GAAoBjE,EAAG7B,OACjB8F,EAAkBvE,MAAQuC,IAAsB,EAAa,IACnEtF,MACQ,EAAaqH,GACzB,KAAK,GAEL,OAAQ,GAAerH,EAAGsH,kBAAoBjE,EAAG7B,OAAQxB,GACzD,KAAK,GAAG,OAAQ,GACRsH,kBAAmBA,EACnBD,oBAAqBA,SAM7C,QAASG,GAAgCD,GACrC,GAAII,GAAQJ,IACRxE,IAAK6B,IACLd,mBAAoB,EAExB,OAAI8D,GAA+BD,IAE3B5E,IAAK4E,EAAM5E,IACXe,mBAAoB,GAGrB6D,EAMX,QAASD,GAA+BxF,EAAWoF,GAC/C,GAA6C,IAAzCA,EAAkBxD,mBAA4C,CAC9D,IAAK+D,UAAUC,OAAQ,CAGnB,OACIR,kBAAmBA,EACnBD,oBAH+BnD,QAAQ6D,OAAOnI,GAAcC,OAAO,iBAO3E,GAAImI,IACAjF,IAAKuE,EAAkBvE,IACvBe,mBAAoB,EACpBmE,iBAAkBpH,KAAKC,MAG3B,QAASwG,kBAAmBU,EAAiBX,oBADnBa,EAAqBhG,EAAW8F,IAGzD,MAA6C,KAAzCV,EAAkBxD,oBAEnBwD,kBAAmBA,EACnBD,oBAAqBc,EAAyBjG,KAIzCoF,kBAAmBA,GAIpC,QAASY,GAAqBhG,EAAWoF,GACrC,MAAOrG,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIkC,GAA6BgF,CACjC,OAAO/G,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADAtB,GAAGqI,KAAKC,MAAM,EAAG,EAAJ,CAAS,KACd,EAAaxF,EAAmBZ,EAAWoF,GACvD,KAAK,GAED,MADAlE,GAA8BpD,EAAGwB,QACzB,EAAcyE,EAAI/D,EAAWkB,GACzC,KAAK,GAED,MADAgF,GAAMpI,EAAGwB,OACHpC,EAAcgJ,IAA2B,MAAnBA,EAAI3G,YAGxB,EAAakF,EAAOzE,KAHiC,EAAa,EAI9E,KAAK,GAID,MADAlC,GAAGwB,QACK,EAAa,EACzB,KAAK,GAEL,OAAQ,EAAayE,EAAI/D,GACjBa,IAAKuE,EAAkBvE,IACvBe,mBAAoB,IAE5B,KAAK,GAED9D,EAAGwB,OACHxB,EAAGsB,MAAQ,CACf,KAAK,GAAG,KAAM8G,EACd,KAAK,GAAG,OAAQ,QAMhC,QAASD,GAAyBjG,GAC9B,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIyG,EACJ,OAAOtG,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAAG,OAAQ,EAAaiH,EAA0BrG,GACvD,KAAK,GACDyF,EAAQ3H,EAAGwB,OACXxB,EAAGsB,MAAQ,CACf,KAAK,GACD,MAAmC,KAA7BqG,EAAM7D,oBAAqD,EAAa,IAEtE,EAAaE,EAAM,KAC/B,KAAK,GAGD,MADAhE,GAAGwB,QACK,EAAa+G,EAA0BrG,GACnD,KAAK,GAED,MADAyF,GAAQ3H,EAAGwB,QACH,EAAa,EACzB,KAAK,GACD,GAAiC,IAA7BmG,EAAM7D,mBACN,KAAMlE,IAAcC,OAAO,6BAE/B,QAAQ,EAAc8H,QAa1C,QAASY,GAA0BrG,GAC/B,MAAO2E,GAAO3E,EAAW,SAAUqF,GAC/B,IAAKA,EACD,KAAM3H,IAAcC,OAAO,yBAE/B,OAAI+H,GAA+BL,IAE3BxE,IAAKwE,EAASxE,IACde,mBAAoB,GAGrByD,IAGf,QAASK,GAA+BN,GACpC,MAAiD,KAAzCA,EAAkBxD,oBACtBwD,EAAkBW,iBAAmBO,GAAqB3H,KAAKC,MAmBvE,QAAS2H,GAAkBvG,EAAWoF,GAClC,MAAOrG,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI8B,GAAUZ,EAASa,EAAMC,EAAS3C,EAAU4C,EAAeuF,CAC/D,OAAOrH,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAaD,MAZA0B,GAAW2F,EAA6BzG,EAAWoF,GACnDlF,EAAUH,EAAmBC,EAAWoF,GACxCrE,GACI2F,cACIrF,WAAYC,KAGpBN,GACIO,OAAQ,OACRrB,QAASA,EACTa,KAAMS,KAAKC,UAAUV,KAEjB,EAAaV,EAAmB,WAAc,MAAOqB,OAAMZ,EAAUE,KACjF,KAAK,GAED,MADA3C,GAAWP,EAAGwB,OACTjB,EAASsD,IACN,EAAatD,EAASgB,SADJ,EAAa,EAE3C,KAAK,GAGD,MAFA4B,GAAgBnD,EAAGwB,OACnBkH,EAAqBpI,EAAiC6C,IAC9C,EAAcuF,EAC1B,KAAK,GAAG,OAAQ,EAAa3H,EAAqB,sBAAuBR,GACzE,KAAK,GAAG,KAAMP,GAAGwB,YAKjC,QAASmH,GAA6BzG,EAAWlC,GAC7C,GAAI+C,GAAM/C,EAAG+C,GACb,OAAO3C,GAAyB8B,GAAa,IAAMa,EAAM,uBAyB7D,QAAS8F,GAAiB3G,GACtB,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI4H,GAAcnB,EAAO5D,EAAW/D,CACpC,OAAOqB,uBAAYH,KAAM,SAAUmC,GAC/B,OAAQA,EAAG/B,OACP,IAAK,GAAG,OAAQ,EAAauF,EAAO3E,EAAW,SAAUqF,GACjD,IAAKwB,EAAkBxB,GACnB,KAAM3H,IAAcC,OAAO,iBAE/B,IAAImJ,GAAezB,EAASxD,SAC5B,IAAIkF,EAAiBD,GAEjB,MAAOzB,EAEN,IAAmC,IAA/ByB,EAAavI,cAGlB,MADAqI,GAAeI,EAA0BhH,GAClCqF,CAIP,KAAKM,UAAUC,OACX,KAAMlI,IAAcC,OAAO,cAE/B,IAAImI,GAAkBmB,EAAoC5B,EAE1D,OADAuB,GAAeM,EAAyBlH,EAAW8F,GAC5CA,IAGnB,KAAK,GAED,MADAL,GAAQtE,EAAG7B,OACNsH,GACG,EAAaA,IADM,EAAa,EAE5C,KAAK,GAED,MADA9I,GAAKqD,EAAG7B,QACA,EAAa,EACzB,KAAK,GACDxB,EAAK2H,EAAM5D,UACXV,EAAG/B,MAAQ,CACf,KAAK,GAED,MADAyC,GAAY/D,GACJ,EAAc+D,EAAUvD,YAQpD,QAAS0I,GAA0BhH,GAC/B,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIyG,GAAO5D,CACX,OAAO1C,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAAG,OAAQ,EAAa+H,EAAuBnH,GACpD,KAAK,GACDyF,EAAQ3H,EAAGwB,OACXxB,EAAGsB,MAAQ,CACf,KAAK,GACD,MAAwC,KAAlCqG,EAAM5D,UAAUtD,eAAgD,EAAa,IAE3E,EAAauD,EAAM,KAC/B,KAAK,GAGD,MADAhE,GAAGwB,QACK,EAAa6H,EAAuBnH,GAChD,KAAK,GAED,MADAyF,GAAQ3H,EAAGwB,QACH,EAAa,EACzB,KAAK,GAED,GADAuC,EAAY4D,EAAM5D,UACc,IAA5BA,EAAUtD,cACV,KAAMb,IAAcC,OAAO,wBAG3B,QAAQ,EAAckE,QAe9C,QAASsF,GAAuBnH,GAC5B,MAAO2E,GAAO3E,EAAW,SAAUqF,GAC/B,IAAKwB,EAAkBxB,GACnB,KAAM3H,IAAcC,OAAO,iBAG/B,OAAIyJ,GADe/B,EAASxD,WAEjBwF,sBAAahC,GAAYxD,WAAatD,cAAe,KAEzD8G,IAGf,QAAS6B,GAAyBlH,EAAWoF,GACzC,MAAOrG,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI6C,GAAWyF,EAA0BpB,EAAKoB,CAC9C,OAAOnI,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADAtB,GAAGqI,KAAKC,MAAM,EAAG,EAAJ,CAAS,KACd,EAAaG,EAAkBvG,EAAWoF,GACtD,KAAK,GAGD,MAFAvD,GAAY/D,EAAGwB,OACfgI,EAA2BD,sBAAajC,GAAqBvD,UAAWA,KAChE,EAAakC,EAAI/D,EAAWsH,GACxC,KAAK,GAED,MADAxJ,GAAGwB,QACK,EAAcuC,EAC1B,KAAK,GAED,MADAqE,GAAMpI,EAAGwB,QACHpC,EAAcgJ,IAA4B,MAAnBA,EAAI3G,YAAyC,MAAnB2G,EAAI3G,YAA8B,EAAa,IAG9F,EAAakF,EAAOzE,GAChC,KAAK,GAID,MADAlC,GAAGwB,QACK,EAAa,EACzB,KAAK,GAED,MADAgI,GAA2BD,sBAAajC,GAAqBvD,WAAatD,cAAe,MACjF,EAAawF,EAAI/D,EAAWsH,GACxC,KAAK,GACDxJ,EAAGwB,OACHxB,EAAGsB,MAAQ,CACf,KAAK,GAAG,KAAM8G,EACd,KAAK,GAAG,OAAQ,QAKhC,QAASW,GAAkBzB,GACvB,WAA8BH,KAAtBG,GACqC,IAAzCA,EAAkBxD,mBAE1B,QAASmF,GAAiBlF,GACtB,MAAoC,KAA5BA,EAAUtD,gBACbgJ,EAAmB1F,GAE5B,QAAS0F,GAAmB1F,GACxB,GAAIjD,GAAMD,KAAKC,KACf,OAAQA,GAAMiD,EAAUnD,cACpBmD,EAAUnD,aAAemD,EAAUrD,UAAYI,EAAM4I,GAG7D,QAASP,GAAoC5B,GACzC,GAAIoC,IACAlJ,cAAe,EACfmJ,YAAa/I,KAAKC,MAEtB,OAAOyI,uBAAahC,GAAYxD,UAAW4F,IAE/C,QAASL,GAA4BvF,GACjC,MAAoC,KAA5BA,EAAUtD,eACdsD,EAAU6F,YAAcpB,GAAqB3H,KAAKC,MAmB1D,QAAS+I,GAAMnK,GACX,MAAOuB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIgB,GAAWlC,EAAIsH,EAAmBD,CACtC,OAAOhG,uBAAYH,KAAM,SAAUmC,GAC/B,OAAQA,EAAG/B,OACP,IAAK,GAED,MADAY,GAAYzC,EAAiBC,IACrB,EAAa0H,EAAqBlF,GAC9C,KAAK,GAWD,MAVAlC,GAAKqD,EAAG7B,OAAQ8F,EAAoBtH,EAAGsH,kBAAmBD,EAAsBrH,EAAGqH,oBAC/EA,GAEAA,EAAoByC,MAAM,cAEe,IAAzCxC,EAAkBxD,oBAGlB+E,EAAiB3G,GAAW4H,MAAM,eAE9B,EAAcxC,EAAkBvE,UAsB5D,QAASgH,GAASrK,GACd,MAAOuB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIgB,EACJ,OAAOb,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADAY,GAAYzC,EAAiBC,IACrB,EAAasK,EAAiC9H,GAC1D,KAAK,GAID,MAHAlC,GAAGwB,QAGK,EAAcqH,EAAiB3G,SAK3D,QAAS8H,GAAiC9H,GACtC,MAAOjB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIlB,GAAIsH,EAAmBD,CAC3B,OAAOhG,uBAAYH,KAAM,SAAUmC,GAC/B,OAAQA,EAAG/B,OACP,IAAK,GAAG,OAAQ,EAAa8F,EAAqBlF,GAClD,KAAK,GAED,MADAlC,GAAKqD,EAAG7B,OAAQ8F,EAAoBtH,EAAGsH,kBAAmBD,EAAsBrH,EAAGqH,oBAC9EA,GAEG,EAAaA,IAFa,EAAa,EAGnD,KAAK,GAGD,MADAhE,GAAG7B,QACK,EAAa,EACzB,KAAK,GACD,GAA6C,IAAzC8F,EAAkBxD,mBAElB,KAAMlE,IAAcC,OAAO,6BAE/BwD,GAAG/B,MAAQ,CACf,KAAK,GAAG,OAAQ,QAsBhC,QAAS2I,GAAmB/H,EAAWoF,GACnC,MAAOrG,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAI8B,GAAUZ,EAASc,EAAS3C,CAChC,OAAOc,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAOD,MANA0B,GAAWkH,EAAkBhI,EAAWoF,GACxClF,EAAUH,EAAmBC,EAAWoF,GACxCpE,GACIO,OAAQ,SACRrB,QAASA,IAEL,EAAaG,EAAmB,WAAc,MAAOqB,OAAMZ,EAAUE,KACjF,KAAK,GAED,MADA3C,GAAWP,EAAGwB,OACRjB,EAASsD,IAAY,EAAa,IAChC,EAAa9C,EAAqB,sBAAuBR,GACrE,KAAK,GAAG,KAAMP,GAAGwB,MACjB,KAAK,GAAG,OAAQ,QAKhC,QAAS0I,GAAkBhI,EAAWlC,GAClC,GAAI+C,GAAM/C,EAAG+C,GACb,OAAO3C,GAAyB8B,GAAa,IAAMa,EAmBvD,QAASoH,GAAqBzK,GAC1B,MAAOuB,qBAAUC,SAAM,OAAQ,GAAQ,WACnC,GAAIgB,GAAWyF,CACf,OAAOtG,uBAAYH,KAAM,SAAUlB,GAC/B,OAAQA,EAAGsB,OACP,IAAK,GAED,MADAY,GAAYzC,EAAiBC,IACrB,EAAamH,EAAO3E,EAAW,SAAUqF,GACzC,IAAIA,GAA4C,IAAhCA,EAASzD,mBAIzB,MAAOyD,KAEnB,KAAK,GAED,KADAI,EAAQ3H,EAAGwB,QACC,OAAQ,EAAa,EACjC,IAAmC,IAA7BmG,EAAM7D,mBAA6C,OAAQ,EAAa,EAE9E,MAAMlE,IAAcC,OAAO,8BAC/B,KAAK,GACD,GAAmC,IAA7B8H,EAAM7D,mBAA2C,OAAQ,EAAa,EAC5E,IAAM+D,UAAUC,OAAQ,OAAQ,EAAa,EAC7C,MAAMlI,IAAcC,OAAO,cAC/B,KAAK,GAAG,OAAQ,EAAaoK,EAAmB/H,EAAWyF,GAC3D,KAAK,GAED,MADA3H,GAAGwB,QACK,EAAamF,EAAOzE,GAChC,KAAK,GACDlC,EAAGwB,OACHxB,EAAGsB,MAAQ,CACf,KAAK,GAAG,OAAQ,QAsBhC,QAAS8I,GAAsBC,GAY3BA,EAASC,SAASC,gBAXM,gBACJ,SAAU7K,GAG1B,MADAD,GAAiBC,IAEbA,IAAKA,EACLmK,MAAO,WAAc,MAAOA,GAAMnK,IAClCqK,SAAU,WAAc,MAAOA,GAASrK,IACxCkH,OAAQ,WAAc,MAAOuD,GAAqBzK,OA1lC9D,wGA+CIM,GA/CJ,kEAuBIwI,IAvBJ,OAuByB,KACrBhF,GAAkB,UAClBX,GAAwB,SACxBxC,GAAwB,kDACxBqJ,GAA0B,KAqB1Bc,IAAyBxK,KACzBA,EAAG,6BAA+D,oCAClEA,EAAG,8BAAiE,4CACpEA,EAAG,yBAAuD,iCAC1DA,EAAG,kBAAyC,2CAC5CA,EAAG,0BAAyD,mCAC5DA,EAAG,kBAAyC,6FAC5CA,EAAG,eAAmC,kDACtCA,EAAG,+BAAmE,2EACtEA,GACAJ,GAAgB,GAAI6K,gBA9BV,gBACK,gBA6ByCD,IAmPxDpF,GAAoB,oBACpBE,GAAc,GA8CdK,GAAgB,kCAChBC,GAAmB,EACnBI,GAAoB,+BACpBP,GAAY,IAgwBhB2E,GAAsBM,MDuChBC,KACA,SAAU1L,EAAQC,EAAqBC,GAE7C,YEzoCA,0EFkpCMyL,KACA,SAAU3L,EAAQ4L,EAAS1L,GAEjC,YGj+BA,SAAS2L,GAASC,GACdC,EAAiBD,EA6FrB,QAASE,KACL,GAAIC,GAAaC,GAAgBC,cAC5BC,oBAAoBC,gBACpBzB,OAKL,OAHAqB,GAAWK,KAAK,SAAUC,GACtBC,EAAMD,IAEHN,EAGX,QAASQ,KACL,MAAOD,GAEX,QAASE,KACL,GAAIC,GAAmBT,GAAgBC,cAClCC,oBAAoBC,gBACpBvB,UAIL,OAFA6B,GAAiBL,KAAK,cAEfK,EA+BX,QAASC,KACL,GAAIhE,GAAYiE,GAAIV,cAAcvD,SAClC,OAAI,iBAAmBA,GACfA,EAAUkE,cAAcC,WACjB,EAGA,EAIJ,EAGf,QAASC,KAGL,OAFeH,GAAIV,cAAcc,SACFC,iBAE3B,IAAK,UACD,MAAOC,GAAgBC,OAC3B,KAAK,SACD,MAAOD,GAAgBE,MAC3B,KAAK,YACD,MAAOF,GAAgBG,SAC3B,SACI,MAAOH,GAAgBI,SAGnC,QAASC,KACL,GAAI5E,GAAYiE,GAAIV,cAAcvD,UAE9B6E,EAAsB7E,EAAU8E,UAEpC,QADoBD,GAAuBA,EAAoBE,eAE3D,IAAK,UACD,MAAO,EACX,KAAK,KACD,MAAO,EACX,KAAK,KACD,MAAO,EACX,KAAK,KACD,MAAO,EACX,SACI,MAAO,IAGnB,QAASC,GAA2B9M,GAChC,QAAoB,IAAhBA,EAAK+M,QAAgB/M,EAAK+M,OAASC,OAGXC,GAA4BC,KAAK,SAAUC,GACnE,MAAOnN,GAAKoN,WAAWD,QAEQnN,EAAKqN,MAAMC,KAElD,QAASC,GAA4BpH,GACjC,MAAwB,KAAjBA,EAAM4G,QAAgB5G,EAAM4G,QAAUS,GA6CjD,QAASC,GAAU/B,GACf,GAAIgC,GAASC,GACb,OAAID,IACAE,EAAcF,GACPvJ,QAAQC,WAEZyJ,EAAgBnC,GAClBF,KAAK,SAAUkC,GAAU,MAAOE,GAAcF,KAC9ClC,KAAK,SAAUkC,GAAU,MAAOI,GAAYJ,IACkB,cAEvE,QAASC,KACL,GAAII,GAAehC,GAAIV,cAAc0C,aACjCC,EAAeD,EAAaE,QAAQC,GACxC,IAAKF,GAAiBG,EAAYH,GAAlC,CAGA,GAAII,GAAoBL,EAAaE,QAAQI,GAC7C,IAAKD,EAGL,IAEI,MADqBzK,MAAK2K,MAAMF,GAGpC,MAAOnO,GACH,SAGR,QAAS6N,GAAYJ,GACjB,GAAKA,EAAL,CAGA,GAAIK,GAAehC,GAAIV,cAAc0C,YACrCA,GAAaQ,QAAQF,GAA0B1K,KAAKC,UAAU8J,IAC9DK,EAAaQ,QAAQL,GAAiCzJ,OAAO3D,KAAKC,MACb,GAAjDqK,GAAgBC,cAAcmD,iBAAwB,GAAK,OAGnE,QAASX,GAAgBnC,GAErB,MAAOE,KACFJ,KAAK,SAAUxH,GAChB,GAAI9D,GAAYkL,GAAgBC,cAAcoD,eAC1CC,EAAiB,2DAA6DxO,EAAY,kCAAoCkL,GAAgBC,cAAcsD,YAC5JxL,EAAU,GAAIyL,SAAQF,GACtBhL,OAAQ,OACRrB,SACIwM,cAAeC,GAAkB,IAAM9K,GAG3Cd,KAAMS,KAAKC,WACPmL,gBAAiBrD,EACjBsD,sBAAuBhL,EACvBiL,OAAQ7D,GAAgBC,cAAc6D,WACtCC,YAAaC,GACbC,YAAaC,MAIrB,OAAOzL,OAAMV,GAASqI,KAAK,SAAUhL,GACjC,GAAIA,EAASsD,GACT,MAAOtD,GAASgB,MAGpB,MAAM3B,IAAcC,OAAO,0BAG9BiK,MAAM,WACPwF,GAAcC,KAAKC,MAS3B,QAAS7B,GAAcF,GACnB,IAAKA,EACD,MAAOA,EAEX,IAAIgC,GAA0BtE,GAAgBC,cAC1CsE,EAAUjC,EAAOiC,WA0BrB,OAvBID,GAAwBE,mBAFAxI,KAAxBuI,EAAQE,YAG4B,SAAhCpL,OAAOkL,EAAQE,aAKsBC,GAAkBF,eAE3DD,EAAQI,iBACRL,EAAwBM,UAAYpN,OAAO+M,EAAQI,iBAEnDJ,EAAQM,uBACRP,EAAwBQ,eAAiBP,EAAQM,0BAEA7I,KAAjDuI,EAAQQ,uCACRT,EAAwBU,4BAA8BxN,OAAO+M,EAAQQ,2CAE9B/I,KAAvCuI,EAAQU,6BACRX,EAAwBY,mBAAqB1N,OAAO+M,EAAQU,6BAGhEX,EAAwBa,sBAAwBC,EAAuBd,EAAwBY,oBAC/FZ,EAAwBe,wBAA0BD,EAAuBd,EAAwBU,6BAC1F1C,EAEX,QAASS,GAAYuC,GACjB,MAAO9N,QAAO8N,GAAU5P,KAAKC,MAEjC,QAASyP,GAAuBG,GAC5B,MAAOC,MAAKC,UAAYF,EAqB5B,QAASG,KAGL,MAFAC,IAAuB,EACvBC,GAAwBA,IAAyBC,IAGrD,QAASC,KACL,MAAgC,KAAzBH,GAEX,QAASE,KACL,MAAOE,KACF3F,KAAK,WAAc,MAAON,OAC1BM,KAAK,SAAUE,GAAO,MAAO+B,GAAU/B,KACvCF,KAAK,WAAc,MAAO4F,MAAiC,WAAc,MAAOA,OAMzF,QAASD,KACL,GAAIhF,GAAWJ,GAAIV,cAAcc,QACjC,OAAO,IAAIhI,SAAQ,SAAUC,GACzB,GAAI+H,GAAoC,aAAxBA,EAASkF,WAA2B,CAOhDlF,EAASmF,iBAAiB,mBANV,QAAZC,KAC4B,aAAxBpF,EAASkF,aACTlF,EAASqF,oBAAoB,mBAAoBD,GACjDnN,WAMRA,OAIZ,QAASgN,KACLL,GAAuB,EA0B3B,QAASU,GAAaC,GAClBrN,WAAW,WAEP,GAAuB,IAAnBsN,GAAJ,CAIA,IAAKC,GAAM7E,OACP,MAAO0E,GAAaI,GAGxB,IAAIC,GAASF,GAAMG,OACnBH,MAGA,IAAII,GAAYF,EAAOG,IAAI,SAAUC,GAAO,OACxCC,sBAAuBD,EAAItQ,QAC3BwQ,cAAe3N,OAAOyN,EAAIG,cAE1BC,GACAC,gBAAiB9N,OAAO3D,KAAKC,OAC7ByR,aACIC,YAAa,EACbC,mBAEJC,WAAYvH,GAAgBC,cAAc2E,UAC1CgC,UAAWA,EAGfnO,OAAMuH,GAAgBC,cAAc6E,gBAChCxM,OAAQ,OACRR,KAAMS,KAAKC,UAAU0O,KAEpB9G,KAAK,SAAUoH,GAIhB,MAHKA,GAAI9O,IACLyL,GAAcC,KAAK,oCAEhBoD,EAAIpR,SAEVgK,KAAK,SAAUoH,GAChB,GAAIC,GAAOjQ,OAAOgQ,EAAIE,0BAElBC,EAAgBC,MAAMH,GACpBhB,GACAjB,KAAKqC,IAAIpB,GAA0BgB,EACzClB,IAAiBuB,GAEjBzB,EAAasB,KAEZhJ,MAAM,WAKP6H,GAAQE,EAAOqB,OAAOvB,IACtBD,KACApC,GAAcC,KAAK,eAAiBmC,GAAiB,KACrDF,EAAaI,QAElBH,GAGP,QAAS0B,GAAWlB,GAChB,IAAKA,EAAIG,YAAcH,EAAItQ,QACvB,KAAM/B,IAAcC,OAAO,iBAG/B8R,IAAQA,GAAMuB,QAAQjB,IAG1B,QAASmB,GAETC,GAGI,MAAO,YAEH,IAAK,GADDC,MACKC,EAAK,EAAGA,EAAKC,UAAU1G,OAAQyG,IACpCD,EAAKC,EAAK,GAAKC,UAAUD,EAG7BJ,IACIxR,QAFU0R,EAAW3O,UAAM,GAAQ4O,GAGnClB,UAAWvR,KAAKC,SAwB5B,QAAS2S,KACL,GAAIC,GACA,MAAOA,GAEX,IAAIC,GAAWP,EAAUC,EAGzB,OAFAK,IAAS,GAAIE,GAASC,OAAO,4BAC7BH,GAAOI,WAAaH,EACbD,GAEX,QAASK,GAASC,GACd,GAAIC,GAAkB9I,GAAgBC,eAEjC6I,EAAgBC,wBAA0BF,EAAMG,SAIhDF,EAAgBG,uBAA0BJ,EAAMG,SAIhDrI,GAAIV,cAAciJ,0BAInBL,EAAMG,QAAUlI,MAAyBG,EAAgBC,SAGxD4H,EAAgBtE,gBAChBsE,EAAgB3D,wBAGjBW,IACAqD,EAAaN,GAKbnD,IAA2BtF,KAAK,WAAc,MAAO+I,GAAaN,IAAW,WAAc,MAAOM,GAAaN,OAGvH,QAASM,GAAaN,GACdtI,KACAtH,WAAW,WAAc,MAAOqP,KAAYc,IAAIP,EAAO,IAAmB,GAGlF,QAASQ,GAAkBC,GACvB,GAAIR,GAAkB9I,GAAgBC,aAEjC6I,GAAgBC,wBAIjBO,EAAeC,MAAQT,EAAgBhE,eAAe0E,MAAM,KAAK,IAGhEV,EAAgBtE,gBAChBsE,EAAgBzD,yBAGrBpM,WAAW,WAAc,MAAOqP,KAAYc,IAAIE,EAAgB,IAA4B,GAEhG,QAASpB,GAAWuB,EAAUC,GAC1B,MAAqB,KAAjBA,EACOC,EAAwBF,GAE5BG,EAAeH,GAE1B,QAASE,GAAwBL,GAC7B,GAAIO,IACAN,IAAKD,EAAeC,IACpBO,YAAaR,EAAeS,YAAc,EAC1CC,mBAAoB,IACpBC,uBAAwBX,EAAeY,qBACvCC,qBAAsBb,EAAec,YACrCC,8BAA+Bf,EAAegB,0BAC9CC,8BAA+BjB,EAAekB,2BAE9CC,GACAC,iBAAkBC,IAClBC,uBAAwBf,EAE5B,OAAOtR,MAAKC,UAAUiS,GAE1B,QAASb,GAAef,GACpB,GAAIgC,IACAjW,KAAMiU,EAAMjU,KACZkW,QAASjC,EAAMG,OACfmB,qBAAsBtB,EAAMuB,YAC5BW,YAAalC,EAAMmC,WAEoB,KAAvCC,OAAOC,KAAKrC,EAAMsC,UAAUxJ,SAC5BkJ,EAAYM,SAAWC,EAAuBvC,EAAMsC,UAExD,IAAIE,GAAmBxC,EAAMyC,eACgB,KAAzCL,OAAOC,KAAKG,GAAkB1J,SAC9BkJ,EAAYU,kBAAoBH,EAAuBC,GAE3D,IAAIZ,IACAC,iBAAkBC,IAClBa,aAAcX,EAElB,OAAOtS,MAAKC,UAAUiS,GAE1B,QAASE,KACL,OACIc,cAAezL,GAAgBC,cAAc6D,WAC7CH,gBAAiBpD,IACjBmL,cACIzH,YAAaD,GACb2H,SAAUhL,GAAIV,cAAc2L,SAC5BC,sBAAuBnL,IACvBoL,iBAAkBhL,IAClBiL,0BAA2BzK,KAE/B0K,0BAA2B,GAGnC,QAASZ,GAAuBa,GAE5B,MADWhB,QAAOC,KAAKe,GACXpF,IAAI,SAAU7L,GAAO,OAAUA,IAAKA,EAAKD,MAAOkR,EAAIjR,MA8BpE,QAASkR,GAAkBtX,EAAMuX,GAC7B,QAAoB,IAAhBvX,EAAK+M,QAAgB/M,EAAK+M,OAASyK,MAG9BD,GACLA,EAAUnK,WAAWqK,KACrBC,GAAWC,QAAQ3X,IAAS,IAC3BA,EAAKoN,WAAWwK,KAgQzB,QAASC,GAA0BjQ,GAC/B,GAAIkQ,GAAmBlQ,CACvB,IAAKkQ,OAAuD1Q,KAAnC0Q,EAAiBC,cAA1C,CAGA,GAAIC,GAAajM,GAAIV,cAAc4M,gBAC/BzC,EAAc5E,KAAKsH,MAAkD,KAA3CJ,EAAiBK,UAAYH,IACvDtC,EAA4BoC,EAAiBC,cAC3CnH,KAAKsH,MAAsE,KAA/DJ,EAAiBC,cAAgBD,EAAiBK,gBAC9D/Q,GACFwO,EAA4BhF,KAAKsH,MAAoE,KAA7DJ,EAAiBM,YAAcN,EAAiBK,WAU5F1D,IANIE,IAFMmD,EAAiB9X,MAAQ8X,EAAiB9X,KAAK4U,MAAM,KAAK,GAGhEU,qBAAsBwC,EAAiBO,aACvC7C,YAAaA,EACbE,0BAA2BA,EAC3BE,0BAA2BA,KAsBnC,QAAS0C,KAEA3M,MAKLtH,WAAW,WAAc,MAAOkU,MAAqB,GACrDlU,WAAW,WAAc,MAAOmU,MAA2B,GAC3DnU,WAAW,WAAc,MAAOoU,MAA4B,IAEhE,QAASD,KAGL,IAAK,GAFDE,GAAM3M,GAAIV,cACVsN,EAAYD,EAAIE,iBAAiB,YAC5BpF,EAAK,EAAGqF,EAAcF,EAAWnF,EAAKqF,EAAY9L,OAAQyG,IAAM,CAErEqE,EADegB,EAAYrF,IAG/BkF,EAAII,cAAc,WAAYjB,GAElC,QAASU,KACL,GAAIG,GAAM3M,GAAIV,cACV0N,EAAoBL,EAAIE,iBAAiB,cACzCI,EAAeN,EAAIE,iBAAiB,QAGxC,IAAIF,EAAIO,kBAAmB,CAGvB,GAAIC,GAAc7U,WAAW,WACzB8U,GAAMC,eAAeL,EAAmBC,GACxCE,MAAc9R,IACfiS,GACHX,GAAIO,kBAAkB,SAAUjW,GACxBkW,IACAI,aAAaJ,GACbC,GAAMC,eAAeL,EAAmBC,EAAchW,UAK9DmW,IAAMC,eAAeL,EAAmBC,GAGhD,QAASP,KAIL,IAAK,GAHDC,GAAM3M,GAAIV,cAEVkO,EAAWb,EAAIE,iBAAiB,WAC3BpF,EAAK,EAAGgG,EAAaD,EAAU/F,EAAKgG,EAAWzM,OAAQyG,IAAM,CAElEiG,EADcD,EAAWhG,IAI7BkF,EAAII,cAAc,UAAWW,GAEjC,QAASA,GAAsBC,GAC3B,GAAIC,GAAcD,EAAQ1Z,IAEtB2Z,GAAYC,UAAU,EAAGC,GAAqB9M,UAC9C8M,IAGJV,GAAMM,sBAAsBE,GAwEhC,QAASG,GAAoBxP,GAczBA,EAASC,SAASC,gBAAgB,cAbd,SAAU7K,GAC1B,GAAIA,EAAIK,OAAS+Z,GACb,KAAMla,IAAcC,OAAO,iBAE/B,IAAsB,mBAAXkL,QACP,KAAMnL,IAAcC,OAAO,YAI/B,OAFAiL,GAASC,QACTI,GAAgBC,cAAcC,oBAAsB3L,EAC7C,GAAIqa,IAAsBra,QA9yCzC0W,OAAO4D,eAAenP,EAAS,cAAgB3E,OAAO,GAItD,IAAIwE,GAFJ,SAA0BuP,GAAM,MAAQA,IAAqB,gBAAPA,IAAoB,WAAaA,GAAMA,EAAA,QAAgBA,GAE9EC,EAAQ,SACnCC,EAAUD,EAAQ,QAClBE,EAAOF,EAAQ,OACnBA,GAAQ,OACR,IAqDIla,GAiCAqa,EACArP,EAuGAyE,EAyEAhE,EAyCAW,EAhTAwH,EAAWsG,EAAQ,QAoBnB/K,GAlBU,SAoBVmL,GAA0B,sBAE1BC,GAAyB,qBAEzBX,GAAuB,wBAEvBpC,GAA6B,OAI7BpJ,GAA2B,+BAC3BH,GAAkC,qCAqBlCzD,IAAyBxK,KACzBA,EAAG,iBAA8C,yCACjDA,EAAG,iBAA8C,qCACjDA,EAAG,aAA+B,2BAClCA,EAAG,aAA+B,2BAClCA,EAAG,iBAAuC,+BAC1CA,EAAG,cAAiC,4BACpCA,EAAG,kBAAyC,sCAC5CA,EAAG,kBAAyC,4EAC5CA,EAAG,sBAAwC,wBAC3CA,EAAG,0BAAyD,8CAC5DA,EAAG,2BAA2D,gDAC9DA,EAAG,+BAAkE,oDACrEA,GACAJ,GAAgB,GAAIwa,GAAK3P,aAlCf,cACK,cAiC8CD,IAuB7DsB,GAAqB,WACrB,QAASA,GAAIf,GACT,IAAKA,EACD,KAAMnL,IAAcC,OAAO,YAE/BqB,MAAKsZ,YAAczP,EAAOyP,YAC1BtZ,KAAKuZ,oBAAsB1P,EAAO0P,oBAClCvZ,KAAKwZ,eAAiB3P,EAAO4P,SAC7BzZ,KAAK2G,UAAYkD,EAAOlD,UACxB3G,KAAKgL,SAAWnB,EAAOmB,SACnBhL,KAAK2G,WAAa3G,KAAK2G,UAAU+S,gBAEjC1Z,KAAK4M,aAAe/C,EAAO+C,cAE3B/C,EAAO8P,aAAe9P,EAAO8P,YAAY7B,oBACzC9X,KAAK8X,kBAAoBjO,EAAO8P,YAAY7B,mBA8DpD,MA3DAlN,GAAIgP,UAAU/D,OAAS,WAEnB,MAAO7V,MAAKwZ,eAAeK,KAAKpG,MAAM,KAAK,IAE/C7I,EAAIgP,UAAUE,KAAO,SAAUjb,GACtBmB,KAAKsZ,aAAgBtZ,KAAKsZ,YAAYQ,MAG3C9Z,KAAKsZ,YAAYQ,KAAKjb,IAE1B+L,EAAIgP,UAAUrB,QAAU,SAAUC,EAAauB,EAAOC,GAC7Cha,KAAKsZ,aAAgBtZ,KAAKsZ,YAAYf,SAG3CvY,KAAKsZ,YAAYf,QAAQC,EAAauB,EAAOC,IAEjDpP,EAAIgP,UAAUnC,iBAAmB,SAAUwC,GACvC,MAAKja,MAAKsZ,aAAgBtZ,KAAKsZ,YAAY7B,iBAGpCzX,KAAKsZ,YAAY7B,iBAAiBwC,OAE7CrP,EAAIgP,UAAUM,iBAAmB,SAAUrb,GACvC,MAAKmB,MAAKsZ,aAAgBtZ,KAAKsZ,YAAYY,iBAGpCla,KAAKsZ,YAAYY,iBAAiBrb,OAE7C+L,EAAIgP,UAAU9C,cAAgB,WAE1B,MAAQ9W,MAAKsZ,cACRtZ,KAAKsZ,YAAYzC,YAAc7W,KAAKsZ,YAAYa,OAAOC,kBAEhExP,EAAIgP,UAAUzG,sBAAwB,WAClC,SAAIzQ,OAASM,SAAWhD,KAAK2G,WAAa3G,KAAK2G,UAAU+S,gBAK7D9O,EAAIgP,UAAUjC,cAAgB,SAAU0C,EAAWC,GAC/C,GAAKta,KAAKuZ,oBAAV,CAGe,GAAIvZ,MAAKuZ,oBAAoB,SAAUgB,GAClD,IAAK,GAAIlI,GAAK,EAAGvT,EAAKyb,EAAKC,aAAcnI,EAAKvT,EAAG8M,OAAQyG,IAAM,CAG3DiI,EAFYxb,EAAGuT,OAMdoI,SAAUC,YAAaL,OAEpCzP,EAAIV,YAAc,WAId,WAHoBjE,KAAhBkT,IACAA,EAAc,GAAIvO,GAAId,IAEnBqP,GAEJvO,KAuBPX,GAAiC,WACjC,QAASA,KAELjK,KAAKgT,wBAAyB,EAE9BhT,KAAKkT,uBAAwB,EAE7BlT,KAAKyO,gBAAiB,EAEtBzO,KAAKmP,mBAAqB,EAC1BnP,KAAKiP,4BAA8B,EAEnCjP,KAAK+O,eAAiB,oEACtB/O,KAAK6O,UAAY,IAEjB7O,KAAKoP,uBAAwB,EAC7BpP,KAAKsP,yBAA0B,EAE/BtP,KAAKqN,iBAAmB,GAmC5B,MAjCApD,GAAgB2P,UAAU7L,SAAW,WACjC,GAAI9O,GAAQe,KAAKmK,qBACbnK,KAAKmK,oBAAoB1L,SACzBuB,KAAKmK,oBAAoB1L,QAAQQ,KACrC,KAAKA,EACD,KAAMP,IAAcC,OAAO,YAE/B,OAAOM,IAEXgL,EAAgB2P,UAAUtM,aAAe,WACrC,GAAIvO,GAAYiB,KAAKmK,qBACjBnK,KAAKmK,oBAAoB1L,SACzBuB,KAAKmK,oBAAoB1L,QAAQM,SACrC,KAAKA,EACD,KAAML,IAAcC,OAAO,gBAE/B,OAAOI,IAEXkL,EAAgB2P,UAAUpM,UAAY,WAClC,GAAIxO,GAASgB,KAAKmK,qBACdnK,KAAKmK,oBAAoB1L,SACzBuB,KAAKmK,oBAAoB1L,QAAQO,MACrC,KAAKA,EACD,KAAMN,IAAcC,OAAO,aAE/B,OAAOK,IAEXiL,EAAgBC,YAAc,WAI1B,WAHgCjE,KAA5BsI,IACAA,EAA0B,GAAItE,IAE3BsE,GAEJtE,MA6DX,SAAWiB,GACPA,EAAgBA,EAAA,QAA6B,GAAK,UAClDA,EAAgBA,EAAA,QAA6B,GAAK,UAClDA,EAAgBA,EAAA,OAA4B,GAAK,SACjDA,EAAgBA,EAAA,UAA+B,GAAK,YACpDA,EAAgBA,EAAA,SAA8B,GAAK,YACpDA,IAAoBA,MACvB,IAAIY,KAA+B,YAAa,UAAW,OACvDK,GAAyB,GAAIwO,QAAO,kBACpC9O,GAA4B,GAC5BQ,GAA6B,IA4E7B+B,GAAgB,GAAIsE,GAASC,OApWd,cAqWnBvE,IAAcwM,SAAWlI,EAASmI,SAASC,IAkB3C,IA8IIjL,IA9IA1B,GAA4B,QAG5BQ,IACAF,gBAAgB,GAEhBd,GAAkB,8BAuClBW,GAA2B,mDAgG3BsB,GAAuB,EAyDvBc,GAA2B,IAG3BqB,GAA0B,EAC1BvB,GAAiBuB,GAEjBtB,KA8DJH,GAnEiC,KA+GjC,IAAIkC,IA4IA6D,GAAyB,IACzBI,GAAuB,IACvBF,IAj0B2B,MACW,OACL,QAk2BjCyB,GAAuB,WAQvB,QAASA,GAAMnZ,EAAMoU,EAAQ8H,OACV,KAAX9H,IAAqBA,GAAS,GAClCjT,KAAKnB,KAAOA,EACZmB,KAAKiT,OAASA,EACdjT,KAAKgb,MAAQ,EACbhb,KAAKsV,oBACLtV,KAAKoV,YACLpV,KAAKuX,IAAM3M,GAAIV,cACflK,KAAKib,SAAWxL,KAAKsH,MAAsB,IAAhBtH,KAAKC,UAC3B1P,KAAKiT,SACNjT,KAAKkb,eAAiB9B,GAA0B,IAAMpZ,KAAKib,SAAW,IAAMjb,KAAKnB,KACjFmB,KAAKmb,cAAgB9B,GAAyB,IAAMrZ,KAAKib,SAAW,IAAMjb,KAAKnB,KAC/EmB,KAAKob,aACDL,GACIrC,GAAuB,IAAM1Y,KAAKib,SAAW,IAAMjb,KAAKnB,KAC5Dkc,GAGA/a,KAAKqb,yBAgMjB,MAzLArD,GAAM4B,UAAU0B,MAAQ,WACpB,GAAmB,IAAftb,KAAKgb,MACL,KAAMtc,IAAcC,OAAO,iBACvByX,UAAWpW,KAAKnB,MAGxBmB,MAAKuX,IAAIuC,KAAK9Z,KAAKkb,gBACnBlb,KAAKgb,MAAQ,GAMjBhD,EAAM4B,UAAU2B,KAAO,WACnB,GAAmB,IAAfvb,KAAKgb,MACL,KAAMtc,IAAcC,OAAO,iBACvByX,UAAWpW,KAAKnB,MAGxBmB,MAAKgb,MAAQ,EACbhb,KAAKuX,IAAIuC,KAAK9Z,KAAKmb,eACnBnb,KAAKuX,IAAIgB,QAAQvY,KAAKob,aAAcpb,KAAKkb,eAAgBlb,KAAKmb,eAC9Dnb,KAAKqb,wBACLxI,EAAS7S,OASbgY,EAAM4B,UAAU4B,OAAS,SAAUxE,EAAWyE,EAAUhd,GAMpD,GALAuB,KAAKiV,WAAaxF,KAAKsH,MAAiB,IAAX0E,GAC7Bzb,KAAKqU,YAAc5E,KAAKsH,MAAkB,IAAZC,GAC1BvY,GAAWA,EAAQid,aACnB1b,KAAKsV,iBAAmB2D,EAAQ5Q,YAAa5J,EAAQid,aAErDjd,GAAWA,EAAQkd,QACnB,IAAK,GAAItJ,GAAK,EAAGvT,EAAKoW,OAAOC,KAAK1W,EAAQkd,SAAUtJ,EAAKvT,EAAG8M,OAAQyG,IAAM,CACtE,GAAIuJ,GAAS9c,EAAGuT,EACXR,OAAMpQ,OAAOhD,EAAQkd,QAAQC,OAC9B5b,KAAKoV,SAASwG,GAAUna,OAAOgO,KAAKsH,MAAMtY,EAAQkd,QAAQC,MAItE/I,EAAS7S,OAQbgY,EAAM4B,UAAUiC,gBAAkB,SAAUC,EAASC,OACrC,KAARA,IAAkBA,EAAM,OACG9V,KAA3BjG,KAAKoV,SAAS0G,IACd9b,KAAKgc,UAAUF,EAAS,GAE5B9b,KAAKoV,SAAS0G,IAAYC,GAQ9B/D,EAAM4B,UAAUoC,UAAY,SAAUF,EAASC,GAC3C,IAAI5F,EAAkB2F,EAAS9b,KAAKnB,MAIhC,KAAMH,IAAcC,OAAO,+BACvBsd,iBAAkBH,GAJtB9b,MAAKoV,SAAS0G,GAAWC,GAajC/D,EAAM4B,UAAUsC,UAAY,SAAUJ,GAClC,MAAO9b,MAAKoV,SAAS0G,IAAY,GAOrC9D,EAAM4B,UAAUuC,aAAe,SAAUC,EAAMpX,GAC3C,GAAIqX,GAAc1Q,EAA2ByQ,GACzCE,EAAelQ,EAA4BpH,EAC/C,IAAIqX,GAAeC,EAEf,YADAtc,KAAKsV,iBAAiB8G,GAAQpX,EAIlC,KAAKqX,EACD,KAAM3d,IAAcC,OAAO,0BACvB4d,cAAeH,GAGvB,KAAKE,EACD,KAAM5d,IAAcC,OAAO,2BACvB6d,eAAgBxX,KAQ5BgT,EAAM4B,UAAU6C,aAAe,SAAUL,GACrC,MAAOpc,MAAKsV,iBAAiB8G,IAEjCpE,EAAM4B,UAAU8C,gBAAkB,SAAUN,OACJnW,KAAhCjG,KAAKsV,iBAAiB8G,UAGnBpc,MAAKsV,iBAAiB8G,IAEjCpE,EAAM4B,UAAUrE,cAAgB,WAC5B,MAAO0D,GAAQ5Q,YAAarI,KAAKsV,mBAErC0C,EAAM4B,UAAU+C,aAAe,SAAU3F,GACrChX,KAAKqU,YAAc2C,GAEvBgB,EAAM4B,UAAUgD,YAAc,SAAUnB,GACpCzb,KAAKiV,WAAawG,GAMtBzD,EAAM4B,UAAUyB,sBAAwB,WACpC,GAAIwB,GAAqB7c,KAAKuX,IAAI2C,iBAAiBla,KAAKob,cACpD0B,EAAmBD,GAAsBA,EAAmB,EAC5DC,KACA9c,KAAKiV,WAAaxF,KAAKsH,MAAkC,IAA5B+F,EAAiBrB,UAC9Czb,KAAKqU,YAAc5E,KAAKsH,MAAgE,KAAzD+F,EAAiB9F,UAAYhX,KAAKuX,IAAIT,oBAS7EkB,EAAMC,eAAiB,SAAUL,EAAmBC,EAAckF,GAC9D,GAAIC,GAAQpS,GAAIV,cAAc2L,QAC9B,IAAKmH,EAAL,CAGA,GAAIlK,GAAQ,GAAIkF,GAAM1B,GAA6B0G,GAAO,EAE1DlK,GAAM6J,aADalN,KAAKsH,MAA0C,IAApCnM,GAAIV,cAAc4M,kBAG5Cc,GAAqBA,EAAkB,KACvC9E,EAAM8J,YAAYnN,KAAKsH,MAAsC,IAAhCa,EAAkB,GAAG6D,WAClD3I,EAAMkJ,UAAU,iBAAkBvM,KAAKsH,MAA4C,IAAtCa,EAAkB,GAAGqF,iBAClEnK,EAAMkJ,UAAU,2BAA4BvM,KAAKsH,MAAsD,IAAhDa,EAAkB,GAAGsF,2BAC5EpK,EAAMkJ,UAAU,eAAgBvM,KAAKsH,MAA0C,IAApCa,EAAkB,GAAGuF,eAIpE,IAAItF,EAAc,CACd,GAAIuF,GAAavF,EAAawF,KAAK,SAAUC,GAAe,MAH9C,gBAGqDA,EAAYze,MAC3Eue,IAAcA,EAAWpG,WACzBlE,EAAMkJ,UA9iCS,MA8iC2BvM,KAAKsH,MAA6B,IAAvBqG,EAAWpG,WAEpE,IAAIuG,GAAuB1F,EAAawF,KAAK,SAAUC,GAAe,MAN7C,2BAMoDA,EAAYze,MACrF0e,IAAwBA,EAAqBvG,WAC7ClE,EAAMkJ,UAjjCoB,OAijC2BvM,KAAKsH,MAAuC,IAAjCwG,EAAqBvG,YAErF+F,GACAjK,EAAMkJ,UAnjCe,OAmjC2BvM,KAAKsH,MAAwB,IAAlBgG,IAGnElK,EAASC,KAEbkF,EAAMM,sBAAwB,SAAUE,GAEpC3F,EADY,GAAImF,GAAMQ,GAAa,EAAOA,KAGvCR,KA0DPE,GAAmB,IAkFnBW,GAAuC,WACvC,QAASA,GAAsBra,GAC3BwB,KAAKxB,IAAMA,EACPoM,GAAIV,cAAciJ,wBAClBxD,IAA2BtF,KAAK8M,EAAmBA,GAGnD/I,GAAcC,KAAK,0GA0B3B,MAvBAwK,GAAsBe,UAAU9G,MAAQ,SAAUjU,GAC9C,MAAO,IAAImZ,IAAMnZ,IAErBqW,OAAO4D,eAAeD,EAAsBe,UAAW,0BACnD5T,IAAK,WACD,MAAOiE,IAAgBC,cAAc8I,wBAEzCjO,IAAK,SAAUyY,GACXvT,GAAgBC,cAAc8I,uBAAyBwK,GAE3DC,YAAY,EACZC,cAAc,IAElBxI,OAAO4D,eAAeD,EAAsBe,UAAW,yBACnD5T,IAAK,WACD,MAAOiE,IAAgBC,cAAcgJ,uBAEzCnO,IAAK,SAAUyY,GACXvT,GAAgBC,cAAcgJ,sBAAwBsK,GAE1DC,YAAY,EACZC,cAAc,IAEX7E,KAmBPD,GAAqB,WAiBzBD,GAAoBnP,GAEpBG,EAAQgP,oBAAsBA,GHqoCxBgF,KACA,SAAU5f,EAAQ4L,II97EvB,SAAUiU,EAAQC,GAC8CA,EAAQlU,IAGvE3J,EAAM,SAAU2J,GAAW,YAE3B,SAASmU,GAAQC,GACf,MAAOC,OAAMpE,UAAUhJ,MAAMqN,KAAKF,GAGpC,QAASG,GAAiBlc,GACxB,MAAO,IAAIgB,SAAQ,SAASC,EAAS4D,GACnC7E,EAAQmc,UAAY,WAClBlb,EAAQjB,EAAQT,SAGlBS,EAAQoc,QAAU,WAChBvX,EAAO7E,EAAQ7D,UAKrB,QAASkgB,GAAqBnI,EAAK3T,EAAQ6P,GACzC,GAAIpQ,GACAsc,EAAI,GAAItb,SAAQ,SAASC,EAAS4D,GACpC7E,EAAUkU,EAAI3T,GAAQiB,MAAM0S,EAAK9D,GACjC8L,EAAiBlc,GAASqI,KAAKpH,EAAS4D,IAI1C,OADAyX,GAAEtc,QAAUA,EACLsc,EAGT,QAASC,GAA2BrI,EAAK3T,EAAQ6P,GAC/C,GAAIkM,GAAID,EAAqBnI,EAAK3T,EAAQ6P,EAC1C,OAAOkM,GAAEjU,KAAK,SAASrF,GACrB,GAAKA,EACL,MAAO,IAAIwZ,GAAOxZ,EAAOsZ,EAAEtc,WAI/B,QAASyc,GAAgBC,EAAYC,EAAYC,GAC/CA,EAAWC,QAAQ,SAASC,GAC1B5J,OAAO4D,eAAe4F,EAAW9E,UAAWkF,GAC1C9Y,IAAK,WACH,MAAOhG,MAAK2e,GAAYG,IAE1B/Z,IAAK,SAASyY,GACZxd,KAAK2e,GAAYG,GAAQtB,OAMjC,QAASuB,GAAoBL,EAAYC,EAAYK,EAAaJ,GAChEA,EAAWC,QAAQ,SAASC,GACpBA,IAAQE,GAAYpF,YAC1B8E,EAAW9E,UAAUkF,GAAQ,WAC3B,MAAOT,GAAqBre,KAAK2e,GAAaG,EAAMxM,eAK1D,QAAS2M,GAAaP,EAAYC,EAAYK,EAAaJ,GACzDA,EAAWC,QAAQ,SAASC,GACpBA,IAAQE,GAAYpF,YAC1B8E,EAAW9E,UAAUkF,GAAQ,WAC3B,MAAO9e,MAAK2e,GAAYG,GAAMtb,MAAMxD,KAAK2e,GAAarM,eAK5D,QAAS4M,GAA0BR,EAAYC,EAAYK,EAAaJ,GACtEA,EAAWC,QAAQ,SAASC,GACpBA,IAAQE,GAAYpF,YAC1B8E,EAAW9E,UAAUkF,GAAQ,WAC3B,MAAOP,GAA2Bve,KAAK2e,GAAaG,EAAMxM,eAKhE,QAAS6M,GAAMC,GACbpf,KAAKqf,OAASD,EAuBhB,QAASZ,GAAOc,EAAQtd,GACtBhC,KAAKuf,QAAUD,EACftf,KAAKwf,SAAWxd,EA+BlB,QAASyd,GAAY5Z,GACnB7F,KAAK0f,OAAS7Z,EAuChB,QAAS8Z,GAAYC,GACnB5f,KAAK6f,IAAMD,EACX5f,KAAKwF,SAAW,GAAIxC,SAAQ,SAASC,EAAS4D,GAC5C+Y,EAAeE,WAAa,WAC1B7c,KAEF2c,EAAexB,QAAU,WACvBvX,EAAO+Y,EAAezhB,QAExByhB,EAAeG,QAAU,WACvBlZ,EAAO+Y,EAAezhB,UAkB5B,QAAS6hB,GAAU9a,EAAIN,EAAYS,GACjCrF,KAAKigB,IAAM/a,EACXlF,KAAK4E,WAAaA,EAClB5E,KAAKqF,YAAc,GAAIsa,GAAYta,GAkBrC,QAAS6a,GAAGhb,GACVlF,KAAKigB,IAAM/a,EA6Db,QAASV,GAAO3F,EAAMshB,EAASC,GAC7B,GAAI9B,GAAID,EAAqBgC,UAAW,QAASxhB,EAAMshB,IACnDne,EAAUsc,EAAEtc,OAUhB,OARIA,KACFA,EAAQse,gBAAkB,SAASC,GAC7BH,GACFA,EAAgB,GAAIJ,GAAUhe,EAAQT,OAAQgf,EAAM3b,WAAY5C,EAAQqD,gBAKvEiZ,EAAEjU,KAAK,SAASnF,GACrB,MAAO,IAAIgb,GAAGhb,KAIlB,QAASsb,GAAS3hB,GAChB,MAAOwf,GAAqBgC,UAAW,kBAAmBxhB,IA9N5D4f,EAAgBU,EAAO,UACrB,OACA,UACA,aACA,WAGFJ,EAAoBI,EAAO,SAAUsB,UACnC,MACA,SACA,SACA,aACA,UAGFvB,EAA0BC,EAAO,SAAUsB,UACzC,aACA,kBAQFhC,EAAgBD,EAAQ,WACtB,YACA,MACA,aACA,UAGFO,EAAoBP,EAAQ,UAAWkC,WACrC,SACA,YAID,UAAW,WAAY,sBAAsB7B,QAAQ,SAAS8B,GACvDA,IAAcD,WAAU9G,YAC9B4E,EAAO5E,UAAU+G,GAAc,WAC7B,GAAIrB,GAAStf,KACToS,EAAOE,SACX,OAAOtP,SAAQC,UAAUoH,KAAK,WAE5B,MADAiV,GAAOC,QAAQoB,GAAYnd,MAAM8b,EAAOC,QAASnN,GAC1C8L,EAAiBoB,EAAOE,UAAUnV,KAAK,SAASrF,GACrD,GAAKA,EACL,MAAO,IAAIwZ,GAAOxZ,EAAOsa,EAAOE,kBAUxCC,EAAY7F,UAAUgH,YAAc,WAClC,MAAO,IAAIzB,GAAMnf,KAAK0f,OAAOkB,YAAYpd,MAAMxD,KAAK0f,OAAQpN,aAG9DmN,EAAY7F,UAAUwF,MAAQ,WAC5B,MAAO,IAAID,GAAMnf,KAAK0f,OAAON,MAAM5b,MAAMxD,KAAK0f,OAAQpN,aAGxDmM,EAAgBgB,EAAa,UAC3B,OACA,UACA,aACA,kBAGFV,EAAoBU,EAAa,SAAUoB,gBACzC,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGF3B,EAA0BO,EAAa,SAAUoB,gBAC/C,aACA,kBAGF5B,EAAaQ,EAAa,SAAUoB,gBAClC,gBAkBFlB,EAAY/F,UAAUtU,YAAc,WAClC,MAAO,IAAIma,GAAYzf,KAAK6f,IAAIva,YAAY9B,MAAMxD,KAAK6f,IAAKvN,aAG9DmM,EAAgBkB,EAAa,OAC3B,mBACA,SAGFV,EAAaU,EAAa,MAAOmB,gBAC/B,UASFd,EAAUpG,UAAU/U,kBAAoB,WACtC,MAAO,IAAI4a,GAAYzf,KAAKigB,IAAIpb,kBAAkBrB,MAAMxD,KAAKigB,IAAK3N,aAGpEmM,EAAgBuB,EAAW,OACzB,OACA,UACA,qBAGFf,EAAae,EAAW,MAAOe,aAC7B,oBACA,UAOFb,EAAGtG,UAAUvU,YAAc,WACzB,MAAO,IAAIsa,GAAY3f,KAAKigB,IAAI5a,YAAY7B,MAAMxD,KAAKigB,IAAK3N,aAG9DmM,EAAgByB,EAAI,OAClB,OACA,UACA,qBAGFjB,EAAaiB,EAAI,MAAOa,aACtB,WAKD,aAAc,iBAAiBlC,QAAQ,SAASmC,IAC9CvB,EAAaN,GAAON,QAAQ,SAASG,GAE9BgC,IAAYhC,GAAYpF,YAE9BoF,EAAYpF,UAAUoH,EAAStf,QAAQ,OAAQ,YAAc,WAC3D,GAAI0Q,GAAO0L,EAAQxL,WACfgI,EAAWlI,EAAKA,EAAKxG,OAAS,GAC9BqV,EAAejhB,KAAK0f,QAAU1f,KAAKqf,OACnCrd,EAAUif,EAAaD,GAAUxd,MAAMyd,EAAc7O,EAAKxB,MAAM,GAAI,GACxE5O,GAAQmc,UAAY,WAClB7D,EAAStY,EAAQT,gBAOxB4d,EAAOM,GAAaZ,QAAQ,SAASG,GAChCA,EAAYpF,UAAUsH,SAC1BlC,EAAYpF,UAAUsH,OAAS,SAASC,EAAOC,GAC7C,GAAIjY,GAAWnJ,KACXqhB,IAEJ,OAAO,IAAIre,SAAQ,SAASC,GAC1BkG,EAASmY,cAAcH,EAAO,SAAS7B,GACrC,MAAKA,IAIL+B,EAAMja,KAAKkY,EAAOta,WAEJiB,KAAVmb,GAAuBC,EAAMzV,QAAUwV,MACzCne,GAAQoe,OAGV/B,GAAOiC,gBATLte,GAAQoe,WAoClB1X,EAAQnF,OAASA,EACjBmF,EAAQ6W,SAAWA,EAEnBtL,OAAO4D,eAAenP,EAAS,cAAgB3E,OAAO","file":"1.chunk.8c626.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ \"AYOo\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerInstallations\", function() { return registerInstallations; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(\"dP58\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_app__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(\"vCxL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_util__ = __webpack_require__(\"58xA\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebase_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__firebase_util__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_idb__ = __webpack_require__(\"pMz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_idb___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_idb__);\n\n\n\n\n\nvar version = \"0.2.7\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = \"w:\" + version;\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration values.', _a[\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */] = 'Could not register Firebase Installation.', _a[\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */] = 'Could not generate Auth Token.', _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.', _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.', _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"', _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.', _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\", _a);\nvar ERROR_FACTORY = new __WEBPACK_IMPORTED_MODULE_2__firebase_util__[\"ErrorFactory\"](SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n    return error instanceof __WEBPACK_IMPORTED_MODULE_2__firebase_util__[\"FirebaseError\"] && error.code.includes(\"request-failed\" /* REQUEST_FAILED */);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\n    }\n    var appName = app.name;\n    var _a = app.options,\n        projectId = _a.projectId,\n        apiKey = _a.apiKey,\n        appId = _a.appId;\n    if (!appName || !projectId || !apiKey || !appId) {\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\n    }\n    return { appName: appName, projectId: projectId, apiKey: apiKey, appId: appId };\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getInstallationsEndpoint(_a) {\n    var projectId = _a.projectId;\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n    return {\n        token: response.token,\n        requestStatus: 2 /* COMPLETED */\n        , expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n        creationTime: Date.now()\n    };\n}\nfunction getErrorFromResponse(requestName, response) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var responseJson, errorData;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [4 /*yield*/, response.json()];\n                case 1:\n                    responseJson = _a.sent();\n                    errorData = responseJson.error;\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\n                        requestName: requestName,\n                        serverCode: errorData.code,\n                        serverMessage: errorData.message,\n                        serverStatus: errorData.status\n                    })];\n            }\n        });\n    });\n}\nfunction getHeaders(_a) {\n    var apiKey = _a.apiKey;\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\nfunction getHeadersWithAuth(appConfig, _a) {\n    var refreshToken = _a.refreshToken;\n    var headers = getHeaders(appConfig);\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\n    return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\nfunction retryIfServerError(fn) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var result;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [4 /*yield*/, fn()];\n                case 1:\n                    result = _a.sent();\n                    if (result.status >= 500 && result.status < 600) {\n                        // Internal Server Error. Retry request.\n                        return [2 /*return*/, fn()];\n                    }\n                    return [2 /*return*/, result];\n            }\n        });\n    });\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n    // This works because the server will never respond with fractions of a second.\n    return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createInstallation(appConfig, _a) {\n    var fid = _a.fid;\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    endpoint = getInstallationsEndpoint(appConfig);\n                    headers = getHeaders(appConfig);\n                    body = {\n                        fid: fid,\n                        authVersion: INTERNAL_AUTH_VERSION,\n                        appId: appConfig.appId,\n                        sdkVersion: PACKAGE_VERSION\n                    };\n                    request = {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(body)\n                    };\n                    return [4 /*yield*/, retryIfServerError(function () {\n                        return fetch(endpoint, request);\n                    })];\n                case 1:\n                    response = _b.sent();\n                    if (!response.ok) return [3 /*break*/, 3];\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    responseValue = _b.sent();\n                    registeredInstallationEntry = {\n                        fid: responseValue.fid || fid,\n                        registrationStatus: 2 /* COMPLETED */\n                        , refreshToken: responseValue.refreshToken,\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n                    };\n                    return [2 /*return*/, registeredInstallationEntry];\n                case 3:\n                    return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\n                case 4:\n                    throw _b.sent();\n            }\n        });\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction bufferToBase64UrlSafe(array) {\n    var b64 = btoa(String.fromCharCode.apply(String, Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__spread\"])(array)));\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nvar INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\nfunction generateFid() {\n    try {\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n        // bytes. our implementation generates a 17 byte array instead.\n        var fidByteArray = new Uint8Array(17);\n        var crypto_1 = self.crypto || self.msCrypto;\n        crypto_1.getRandomValues(fidByteArray);\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\n        fidByteArray[0] = 112 + fidByteArray[0] % 16;\n        var fid = encode(fidByteArray);\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n    } catch (_a) {\n        // FID generation errored\n        return INVALID_FID;\n    }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\n    // Remove the 23rd character that was added because of the extra 4 bits at the\n    // end of our 17 byte array, and the '=' padding.\n    return b64String.substr(0, 22);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DATABASE_NAME = 'firebase-installations-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = Object(__WEBPACK_IMPORTED_MODULE_3_idb__[\"openDb\"])(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\n            // We don't use 'break' in this switch statement, the fall-through\n            // behavior is what we want, because if there are multiple versions between\n            // the old version and the current version, we want ALL the migrations\n            // that correspond to those versions to run, not only the last one.\n            // eslint-disable-next-line default-case\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction set(appConfig, value) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var key, db, tx;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, getDbPromise()];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, tx.complete];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/, value];\n            }\n        });\n    });\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction remove(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var key, db, tx;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, getDbPromise()];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, tx.complete];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\nfunction update(appConfig, updateFn) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var key, db, tx, store, oldValue, newValue;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, getDbPromise()];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    store = tx.objectStore(OBJECT_STORE_NAME);\n                    return [4 /*yield*/, store.get(key)];\n                case 2:\n                    oldValue = _a.sent();\n                    newValue = updateFn(oldValue);\n                    if (newValue === oldValue) {\n                        return [2 /*return*/, newValue];\n                    }\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, store.delete(key)];\n                case 3:\n                    _a.sent();\n                    return [3 /*break*/, 6];\n                case 4:\n                    return [4 /*yield*/, store.put(newValue, key)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6:\n                    return [4 /*yield*/, tx.complete];\n                case 7:\n                    _a.sent();\n                    return [2 /*return*/, newValue];\n            }\n        });\n    });\n}\nfunction getKey(appConfig) {\n    return appConfig.appName + \"!\" + appConfig.appId;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\nfunction getInstallationEntry(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var registrationPromise, installationEntry, _a;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\n                        registrationPromise = entryWithPromise.registrationPromise;\n                        return entryWithPromise.installationEntry;\n                    })];\n                case 1:\n                    installationEntry = _b.sent();\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\n                    _a = {};\n                    return [4 /*yield*/, registrationPromise];\n                case 2:\n                    // FID generation failed. Waiting for the FID from the server.\n                    return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\n                case 3:\n                    return [2 /*return*/, {\n                        installationEntry: installationEntry,\n                        registrationPromise: registrationPromise\n                    }];\n            }\n        });\n    });\n}\nfunction updateOrCreateInstallationEntry(oldEntry) {\n    var entry = oldEntry || {\n        fid: generateFid(),\n        registrationStatus: 0 /* NOT_STARTED */\n    };\n    if (hasInstallationRequestTimedOut(entry)) {\n        return {\n            fid: entry.fid,\n            registrationStatus: 0 /* NOT_STARTED */\n        };\n    }\n    return entry;\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the registration\r\n * and return an InProgressInstallationEntry.\r\n */\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\n            if (!navigator.onLine) {\n                // Registration required but app is offline.\n                var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\n                return {\n                    installationEntry: installationEntry,\n                    registrationPromise: registrationPromiseWithError\n                };\n            }\n            // Try registering. Change status to IN_PROGRESS.\n            var inProgressEntry = {\n                fid: installationEntry.fid,\n                registrationStatus: 1 /* IN_PROGRESS */\n                , registrationTime: Date.now()\n            };\n            var registrationPromise = registerInstallation(appConfig, inProgressEntry);\n            return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\n        } else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\n            return {\n                installationEntry: installationEntry,\n                registrationPromise: waitUntilFidRegistration(appConfig)\n            };\n        } else {\n        return { installationEntry: installationEntry };\n    }\n}\n/** This will be executed only once for each new Firebase Installation. */\nfunction registerInstallation(appConfig, installationEntry) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var registeredInstallationEntry, e_1;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2,, 7]);\n                    return [4 /*yield*/, createInstallation(appConfig, installationEntry)];\n                case 1:\n                    registeredInstallationEntry = _a.sent();\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\n                case 2:\n                    e_1 = _a.sent();\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\n                    // Server returned a \"FID can not be used\" error.\n                    // Generate a new ID next time.\n                    return [4 /*yield*/, remove(appConfig)];\n                case 3:\n                    // Server returned a \"FID can not be used\" error.\n                    // Generate a new ID next time.\n                    _a.sent();\n                    return [3 /*break*/, 6];\n                case 4:\n                    // Registration failed. Set FID as not registered.\n                    return [4 /*yield*/, set(appConfig, {\n                        fid: installationEntry.fid,\n                        registrationStatus: 0 /* NOT_STARTED */\n                    })];\n                case 5:\n                    // Registration failed. Set FID as not registered.\n                    _a.sent();\n                    _a.label = 6;\n                case 6:\n                    throw e_1;\n                case 7:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/** Call if FID registration is pending. */\nfunction waitUntilFidRegistration(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var entry;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\n                case 1:\n                    entry = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\n                    // createInstallation request still in progress.\n                    return [4 /*yield*/, sleep(100)];\n                case 3:\n                    // createInstallation request still in progress.\n                    _a.sent();\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\n                case 4:\n                    entry = _a.sent();\n                    return [3 /*break*/, 2];\n                case 5:\n                    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\n                            throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\n                        }\n                    return [2 /*return*/, entry];\n            }\n        });\n    });\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateInstallationRequest(appConfig) {\n    return update(appConfig, function (oldEntry) {\n        if (!oldEntry) {\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\n        }\n        if (hasInstallationRequestTimedOut(oldEntry)) {\n            return {\n                fid: oldEntry.fid,\n                registrationStatus: 0 /* NOT_STARTED */\n            };\n        }\n        return oldEntry;\n    });\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n    return installationEntry.registrationStatus === 1 /* IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction generateAuthToken(appConfig, installationEntry) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var endpoint, headers, body, request, response, responseValue, completedAuthToken;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\n                    body = {\n                        installation: {\n                            sdkVersion: PACKAGE_VERSION\n                        }\n                    };\n                    request = {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(body)\n                    };\n                    return [4 /*yield*/, retryIfServerError(function () {\n                        return fetch(endpoint, request);\n                    })];\n                case 1:\n                    response = _a.sent();\n                    if (!response.ok) return [3 /*break*/, 3];\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    responseValue = _a.sent();\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n                    return [2 /*return*/, completedAuthToken];\n                case 3:\n                    return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\n                case 4:\n                    throw _a.sent();\n            }\n        });\n    });\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\n    var fid = _a.fid;\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\nfunction refreshAuthToken(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var tokenPromise, entry, authToken, _a;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                        if (!isEntryRegistered(oldEntry)) {\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n                        }\n                        var oldAuthToken = oldEntry.authToken;\n                        if (isAuthTokenValid(oldAuthToken)) {\n                            // There is a valid token in the DB.\n                            return oldEntry;\n                        } else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\n                                // There already is a token request in progress.\n                                tokenPromise = waitUntilAuthTokenRequest(appConfig);\n                                return oldEntry;\n                            } else {\n                            // No token or token expired.\n                            if (!navigator.onLine) {\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n                            }\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n                            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n                            return inProgressEntry;\n                        }\n                    })];\n                case 1:\n                    entry = _b.sent();\n                    if (!tokenPromise) return [3 /*break*/, 3];\n                    return [4 /*yield*/, tokenPromise];\n                case 2:\n                    _a = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    _a = entry.authToken;\n                    _b.label = 4;\n                case 4:\n                    authToken = _a;\n                    return [2 /*return*/, authToken.token];\n            }\n        });\n    });\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n */\nfunction waitUntilAuthTokenRequest(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var entry, authToken;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\n                case 1:\n                    entry = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\n                    // generateAuthToken still in progress.\n                    return [4 /*yield*/, sleep(100)];\n                case 3:\n                    // generateAuthToken still in progress.\n                    _a.sent();\n                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\n                case 4:\n                    entry = _a.sent();\n                    return [3 /*break*/, 2];\n                case 5:\n                    authToken = entry.authToken;\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\n                            throw ERROR_FACTORY.create(\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */);\n                        } else {\n                        return [2 /*return*/, authToken];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateAuthTokenRequest(appConfig) {\n    return update(appConfig, function (oldEntry) {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n        }\n        var oldAuthToken = oldEntry.authToken;\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__assign\"])({}, oldEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\n        }\n        return oldEntry;\n    });\n}\nfunction fetchAuthTokenFromServer(appConfig, installationEntry) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3,, 8]);\n                    return [4 /*yield*/, generateAuthToken(appConfig, installationEntry)];\n                case 1:\n                    authToken = _a.sent();\n                    updatedInstallationEntry = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__assign\"])({}, installationEntry, { authToken: authToken });\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, authToken];\n                case 3:\n                    e_1 = _a.sent();\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n                    // Generate a new ID next time.\n                    return [4 /*yield*/, remove(appConfig)];\n                case 4:\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n                    // Generate a new ID next time.\n                    _a.sent();\n                    return [3 /*break*/, 7];\n                case 5:\n                    updatedInstallationEntry = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__assign\"])({}, installationEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\n                case 6:\n                    _a.sent();\n                    _a.label = 7;\n                case 7:\n                    throw e_1;\n                case 8:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction isEntryRegistered(installationEntry) {\n    return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* COMPLETED */;\n}\nfunction isAuthTokenValid(authToken) {\n    return authToken.requestStatus === 2 /* COMPLETED */ && !isAuthTokenExpired(authToken);\n}\nfunction isAuthTokenExpired(authToken) {\n    var now = Date.now();\n    return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n    var inProgressAuthToken = {\n        requestStatus: 1 /* IN_PROGRESS */\n        , requestTime: Date.now()\n    };\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__assign\"])({}, oldEntry, { authToken: inProgressAuthToken });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n    return authToken.requestStatus === 1 /* IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getId(app) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var appConfig, _a, installationEntry, registrationPromise;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\n                case 1:\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n                    if (registrationPromise) {\n                        // Suppress registration errors as they are not a problem for getId.\n                        registrationPromise.catch(function () {});\n                    }\n                    if (installationEntry.registrationStatus === 2 /* COMPLETED */) {\n                            // If the installation is already registered, update the authentication\n                            // token if needed. Suppress errors as they are not relevant to getId.\n                            refreshAuthToken(appConfig).catch(function () {});\n                        }\n                    return [2 /*return*/, installationEntry.fid];\n            }\n        });\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getToken(app) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var appConfig;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, completeInstallationRegistration(appConfig)];\n                case 1:\n                    _a.sent();\n                    // At this point we either have a Registered Installation in the DB, or we've\n                    // already thrown an error.\n                    return [2 /*return*/, refreshAuthToken(appConfig)];\n            }\n        });\n    });\n}\nfunction completeInstallationRegistration(appConfig) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var _a, installationEntry, registrationPromise;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\n                case 1:\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n                    if (!registrationPromise) return [3 /*break*/, 3];\n                    // A createInstallation request is in progress. Wait until it finishes.\n                    return [4 /*yield*/, registrationPromise];\n                case 2:\n                    // A createInstallation request is in progress. Wait until it finishes.\n                    _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    if (installationEntry.registrationStatus !== 2 /* COMPLETED */) {\n                            // Installation ID can't be registered.\n                            throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\n                        }\n                    _b.label = 4;\n                case 4:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction deleteInstallation(appConfig, installationEntry) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var endpoint, headers, request, response;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\n                    request = {\n                        method: 'DELETE',\n                        headers: headers\n                    };\n                    return [4 /*yield*/, retryIfServerError(function () {\n                        return fetch(endpoint, request);\n                    })];\n                case 1:\n                    response = _a.sent();\n                    if (!!response.ok) return [3 /*break*/, 3];\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\n                case 2:\n                    throw _a.sent();\n                case 3:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getDeleteEndpoint(appConfig, _a) {\n    var fid = _a.fid;\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction deleteInstallation$1(app) {\n    return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__awaiter\"])(this, void 0, void 0, function () {\n        var appConfig, entry;\n        return Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"__generator\"])(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                        if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\n                                // Delete the unregistered entry without sending a deleteInstallation request.\n                                return undefined;\n                            }\n                        return oldEntry;\n                    })];\n                case 1:\n                    entry = _a.sent();\n                    if (!entry) return [3 /*break*/, 6];\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\n                    // Can't delete while trying to register.\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\n                case 2:\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n                case 3:\n                    return [4 /*yield*/, deleteInstallation(appConfig, entry)];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, remove(appConfig)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerInstallations(instance) {\n    var installationsName = 'installations';\n    var factoryMethod = function factoryMethod(app) {\n        // Throws if app isn't configured properly.\n        extractAppConfig(app);\n        return {\n            app: app,\n            getId: function getId() {\n                return _getId(app);\n            },\n            getToken: function getToken() {\n                return _getToken(app);\n            },\n            delete: function _delete() {\n                return deleteInstallation$1(app);\n            }\n        };\n    };\n    instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\nregisterInstallations(__WEBPACK_IMPORTED_MODULE_0__firebase_app___default.a);\n\n\n//# sourceMappingURL=index.esm.js.map\n\n/***/ }),\n\n/***/ \"JTUh\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_performance__ = __webpack_require__(\"TugV\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_performance___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_performance__);\n\n//# sourceMappingURL=index.esm.js.map\n\n/***/ }),\n\n/***/ \"TugV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault(ex) {\n    return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(__webpack_require__(\"dP58\"));\nvar tslib_1 = __webpack_require__(\"vCxL\");\nvar util = __webpack_require__(\"58xA\");\n__webpack_require__(\"AYOo\");\nvar logger$1 = __webpack_require__(\"TUpU\");\n\nvar version = \"0.2.19\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.', _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.', _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.', _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.', _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.', _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.', _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event', _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok', _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid', _a);\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by set methods.\r\n */\nvar Api = /** @class */function () {\n    function Api(window) {\n        if (!window) {\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\n        }\n        this.performance = window.performance;\n        this.PerformanceObserver = window.PerformanceObserver;\n        this.windowLocation = window.location;\n        this.navigator = window.navigator;\n        this.document = window.document;\n        if (this.navigator && this.navigator.cookieEnabled) {\n            // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n            this.localStorage = window.localStorage;\n        }\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n        }\n    }\n    Api.prototype.getUrl = function () {\n        // Do not capture the string query part of url.\n        return this.windowLocation.href.split('?')[0];\n    };\n    Api.prototype.mark = function (name) {\n        if (!this.performance || !this.performance.mark) {\n            return;\n        }\n        this.performance.mark(name);\n    };\n    Api.prototype.measure = function (measureName, mark1, mark2) {\n        if (!this.performance || !this.performance.measure) {\n            return;\n        }\n        this.performance.measure(measureName, mark1, mark2);\n    };\n    Api.prototype.getEntriesByType = function (type) {\n        if (!this.performance || !this.performance.getEntriesByType) {\n            return [];\n        }\n        return this.performance.getEntriesByType(type);\n    };\n    Api.prototype.getEntriesByName = function (name) {\n        if (!this.performance || !this.performance.getEntriesByName) {\n            return [];\n        }\n        return this.performance.getEntriesByName(name);\n    };\n    Api.prototype.getTimeOrigin = function () {\n        // Polyfill the time origin with performance.timing.navigationStart.\n        return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n    };\n    Api.prototype.requiredApisAvailable = function () {\n        if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n            return true;\n        }\n        return false;\n    };\n    Api.prototype.setupObserver = function (entryType, callback) {\n        if (!this.PerformanceObserver) {\n            return;\n        }\n        var observer = new this.PerformanceObserver(function (list) {\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n                var entry = _a[_i];\n                // `entry` is a PerformanceEntry instance.\n                callback(entry);\n            }\n        });\n        // Start observing the entry types you care about.\n        observer.observe({ entryTypes: [entryType] });\n    };\n    Api.getInstance = function () {\n        if (apiInstance === undefined) {\n            apiInstance = new Api(windowInstance);\n        }\n        return apiInstance;\n    };\n    return Api;\n}();\nfunction setupApi(window) {\n    windowInstance = window;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar settingsServiceInstance;\nvar SettingsService = /** @class */function () {\n    function SettingsService() {\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n        this.instrumentationEnabled = true;\n        // The variable which controls logging of custom traces.\n        this.dataCollectionEnabled = true;\n        // Configuration flags set through remote config.\n        this.loggingEnabled = false;\n        // Sampling rate between 0 and 1.\n        this.tracesSamplingRate = 1;\n        this.networkRequestsSamplingRate = 1;\n        // Address of logging service.\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n        this.logSource = 462;\n        // Flags which control per session logging of traces and network requests.\n        this.logTraceAfterSampling = false;\n        this.logNetworkAfterSampling = false;\n        // TTL of config retrieved from remote config in hours.\n        this.configTimeToLive = 12;\n    }\n    SettingsService.prototype.getAppId = function () {\n        var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n        if (!appId) {\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\n        }\n        return appId;\n    };\n    SettingsService.prototype.getProjectId = function () {\n        var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n        if (!projectId) {\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\n        }\n        return projectId;\n    };\n    SettingsService.prototype.getApiKey = function () {\n        var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n        if (!apiKey) {\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\n        }\n        return apiKey;\n    };\n    SettingsService.getInstance = function () {\n        if (settingsServiceInstance === undefined) {\n            settingsServiceInstance = new SettingsService();\n        }\n        return settingsServiceInstance;\n    };\n    return SettingsService;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar iid;\nfunction getIidPromise() {\n    var iidPromise = SettingsService.getInstance().firebaseAppInstance.installations().getId();\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    iidPromise.then(function (iidVal) {\n        iid = iidVal;\n    });\n    return iidPromise;\n}\n// This method should be used after the iid is retrieved by getIidPromise method.\nfunction getIid() {\n    return iid;\n}\nfunction getAuthTokenPromise() {\n    var authTokenPromise = SettingsService.getInstance().firebaseAppInstance.installations().getToken();\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    authTokenPromise.then(function (authTokenVal) {});\n    return authTokenPromise;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VisibilityState;\n(function (VisibilityState) {\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n    VisibilityState[VisibilityState[\"PRERENDER\"] = 3] = \"PRERENDER\";\n    VisibilityState[VisibilityState[\"UNLOADED\"] = 4] = \"UNLOADED\";\n})(VisibilityState || (VisibilityState = {}));\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\nfunction getServiceWorkerStatus() {\n    var navigator = Api.getInstance().navigator;\n    if ('serviceWorker' in navigator) {\n        if (navigator.serviceWorker.controller) {\n            return 2 /* CONTROLLED */;\n        } else {\n                return 3 /* UNCONTROLLED */;\n            }\n    } else {\n            return 1 /* UNSUPPORTED */;\n        }\n}\nfunction getVisibilityState() {\n    var document = Api.getInstance().document;\n    var visibilityState = document.visibilityState;\n    switch (visibilityState) {\n        case 'visible':\n            return VisibilityState.VISIBLE;\n        case 'hidden':\n            return VisibilityState.HIDDEN;\n        case 'prerender':\n            return VisibilityState.PRERENDER;\n        default:\n            return VisibilityState.UNKNOWN;\n    }\n}\nfunction getEffectiveConnectionType() {\n    var navigator = Api.getInstance().navigator;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var navigatorConnection = navigator.connection;\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n    switch (effectiveType) {\n        case 'slow-2g':\n            return 1 /* CONNECTION_SLOW_2G */;\n        case '2g':\n            return 2 /* CONNECTION_2G */;\n        case '3g':\n            return 3 /* CONNECTION_3G */;\n        case '4g':\n            return 4 /* CONNECTION_4G */;\n        default:\n            return 0 /* UNKNOWN */;\n    }\n}\nfunction isValidCustomAttributeName(name) {\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n        return false;\n    }\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n        return name.startsWith(prefix);\n    });\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\nfunction isValidCustomAttributeValue(value) {\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nvar SECONDARY_CONFIGS = {\n    loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\nfunction getConfig(iid) {\n    var config = getStoredConfig();\n    if (config) {\n        processConfig(config);\n        return Promise.resolve();\n    }\n    return getRemoteConfig(iid).then(function (config) {\n        return processConfig(config);\n    }).then(function (config) {\n        return storeConfig(config);\n    },\n    /** Do nothing for error, use defaults set in settings service. */function () {});\n}\nfunction getStoredConfig() {\n    var localStorage = Api.getInstance().localStorage;\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n    if (!expiryString || !configValid(expiryString)) {\n        return;\n    }\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n    if (!configStringified) {\n        return;\n    }\n    try {\n        var configResponse = JSON.parse(configStringified);\n        return configResponse;\n    } catch (_a) {\n        return;\n    }\n}\nfunction storeConfig(config) {\n    if (!config) {\n        return;\n    }\n    var localStorage = Api.getInstance().localStorage;\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\nfunction getRemoteConfig(iid) {\n    // Perf needs auth token only to retrieve remote config.\n    return getAuthTokenPromise().then(function (authToken) {\n        var projectId = SettingsService.getInstance().getProjectId();\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n        var request = new Request(configEndPoint, {\n            method: 'POST',\n            headers: {\n                Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n            },\n            /* eslint-disable camelcase */\n            body: JSON.stringify({\n                app_instance_id: iid,\n                app_instance_id_token: authToken,\n                app_id: SettingsService.getInstance().getAppId(),\n                app_version: SDK_VERSION,\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\n            })\n            /* eslint-enable camelcase */\n        });\n        return fetch(request).then(function (response) {\n            if (response.ok) {\n                return response.json();\n            }\n            // In case response is not ok. This will be caught by catch.\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\n        });\n    }).catch(function () {\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n        return undefined;\n    });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\nfunction processConfig(config) {\n    if (!config) {\n        return config;\n    }\n    var settingsServiceInstance = SettingsService.getInstance();\n    var entries = config.entries || {};\n    if (entries.fpr_enabled !== undefined) {\n        // TODO: Change the assignment of loggingEnabled once the received type is known.\n        settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n    } else {\n        // Config retrieved successfully, but there is no fpr_enabled in template.\n        // Use secondary configs value.\n        settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n    }\n    if (entries.fpr_log_source) {\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n    }\n    if (entries.fpr_log_endpoint_url) {\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n    }\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n    }\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n    }\n    // Set the per session trace and network logging flags.\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n    return config;\n}\nfunction configValid(expiry) {\n    return Number(expiry) > Date.now();\n}\nfunction shouldLogAfterSampling(samplingRate) {\n    return Math.random() <= samplingRate;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar initializationStatus = 1 /* notInitialized */;\nvar initializationPromise;\nfunction getInitializationPromise() {\n    initializationStatus = 2 /* initializationPending */;\n    initializationPromise = initializationPromise || initializePerf();\n    return initializationPromise;\n}\nfunction isPerfInitialized() {\n    return initializationStatus === 3 /* initialized */;\n}\nfunction initializePerf() {\n    return getDocumentReadyComplete().then(function () {\n        return getIidPromise();\n    }).then(function (iid) {\n        return getConfig(iid);\n    }).then(function () {\n        return changeInitializationStatus();\n    }, function () {\n        return changeInitializationStatus();\n    });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\nfunction getDocumentReadyComplete() {\n    var document = Api.getInstance().document;\n    return new Promise(function (resolve) {\n        if (document && document.readyState !== 'complete') {\n            var handler_1 = function handler_1() {\n                if (document.readyState === 'complete') {\n                    document.removeEventListener('readystatechange', handler_1);\n                    resolve();\n                }\n            };\n            document.addEventListener('readystatechange', handler_1);\n        } else {\n            resolve();\n        }\n    });\n}\nfunction changeInitializationStatus() {\n    initializationStatus = 3 /* initialized */;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nvar DEFAULT_REMAINING_TRIES = 3;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\nvar queue = [];\nfunction processQueue(timeOffset) {\n    setTimeout(function () {\n        // If there is no remainingTries left, stop retrying.\n        if (remainingTries === 0) {\n            return;\n        }\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n        if (!queue.length) {\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\n        }\n        // Capture a snapshot of the queue and empty the \"official queue\".\n        var staged = queue.slice();\n        queue = [];\n        /* eslint-disable camelcase */\n        // We will pass the JSON serialized event to the backend.\n        var log_event = staged.map(function (evt) {\n            return {\n                source_extension_json: evt.message,\n                event_time_ms: String(evt.eventTime)\n            };\n        });\n        var data = {\n            request_time_ms: String(Date.now()),\n            client_info: {\n                client_type: 1,\n                js_client_info: {}\n            },\n            log_source: SettingsService.getInstance().logSource,\n            log_event: log_event\n        };\n        /* eslint-enable camelcase */\n        fetch(SettingsService.getInstance().logEndPointUrl, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        }).then(function (res) {\n            if (!res.ok) {\n                consoleLogger.info('Call to Firebase backend failed.');\n            }\n            return res.json();\n        }).then(function (res) {\n            var wait = Number(res.next_request_wait_millis);\n            // Find the next call wait time from the response.\n            var requestOffset = isNaN(wait) ? DEFAULT_SEND_INTERVAL_MS : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n            remainingTries = DEFAULT_REMAINING_TRIES;\n            // Schedule the next process.\n            processQueue(requestOffset);\n        }).catch(function () {\n            /**\r\n             * If the request fails for some reason, add the events that were attempted\r\n             * back to the primary queue to retry later.\r\n             */\n            queue = staged.concat(queue);\n            remainingTries--;\n            consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n            processQueue(DEFAULT_SEND_INTERVAL_MS);\n        });\n    }, timeOffset);\n}\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\nfunction addToQueue(evt) {\n    if (!evt.eventTime || !evt.message) {\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\n    }\n    // Add the new event to the queue.\n    queue = queue.concat([evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\nfunction ccHandler(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n    // The underscores for loggerInstance and level parameters are added to avoid the\n    // noUnusedParameters related error.\n    return function (_loggerInstance, _level) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var message = serializer.apply(void 0, args);\n        addToQueue({\n            message: message,\n            eventTime: Date.now()\n        });\n    };\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/* eslint-enble camelcase */\nvar logger;\n// This method is not called before initialization.\nfunction getLogger() {\n    if (logger) {\n        return logger;\n    }\n    var ccLogger = ccHandler(serializer);\n    logger = new logger$1.Logger('@firebase/performance/cc');\n    logger.logHandler = ccLogger;\n    return logger;\n}\nfunction logTrace(trace) {\n    var settingsService = SettingsService.getInstance();\n    // Do not log if trace is auto generated and instrumentation is disabled.\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\n        return;\n    }\n    // Do not log if trace is custom and data collection is disabled.\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n        return;\n    }\n    // Do not log if required apis are not available.\n    if (!Api.getInstance().requiredApisAvailable()) {\n        return;\n    }\n    // Only log the page load auto traces if page is visible.\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n        return;\n    }\n    if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n        return;\n    }\n    if (isPerfInitialized()) {\n        sendTraceLog(trace);\n    } else {\n        // Custom traces can be used before the initialization but logging\n        // should wait until after.\n        getInitializationPromise().then(function () {\n            return sendTraceLog(trace);\n        }, function () {\n            return sendTraceLog(trace);\n        });\n    }\n}\nfunction sendTraceLog(trace) {\n    if (getIid()) {\n        setTimeout(function () {\n            return getLogger().log(trace, 1 /* Trace */);\n        }, 0);\n    }\n}\nfunction logNetworkRequest(networkRequest) {\n    var settingsService = SettingsService.getInstance();\n    // Do not log network requests if instrumentation is disabled.\n    if (!settingsService.instrumentationEnabled) {\n        return;\n    }\n    // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n    if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n        return;\n    }\n    if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n        return;\n    }\n    setTimeout(function () {\n        return getLogger().log(networkRequest, 0 /* NetworkRequest */);\n    }, 0);\n}\nfunction serializer(resource, resourceType) {\n    if (resourceType === 0 /* NetworkRequest */) {\n            return serializeNetworkRequest(resource);\n        }\n    return serializeTrace(resource);\n}\nfunction serializeNetworkRequest(networkRequest) {\n    var networkRequestMetric = {\n        url: networkRequest.url,\n        http_method: networkRequest.httpMethod || 0,\n        http_response_code: 200,\n        response_payload_bytes: networkRequest.responsePayloadBytes,\n        client_start_time_us: networkRequest.startTimeUs,\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n    };\n    var perfMetric = {\n        application_info: getApplicationInfo(),\n        network_request_metric: networkRequestMetric\n    };\n    return JSON.stringify(perfMetric);\n}\nfunction serializeTrace(trace) {\n    var traceMetric = {\n        name: trace.name,\n        is_auto: trace.isAuto,\n        client_start_time_us: trace.startTimeUs,\n        duration_us: trace.durationUs\n    };\n    if (Object.keys(trace.counters).length !== 0) {\n        traceMetric.counters = convertToKeyValueArray(trace.counters);\n    }\n    var customAttributes = trace.getAttributes();\n    if (Object.keys(customAttributes).length !== 0) {\n        traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n    }\n    var perfMetric = {\n        application_info: getApplicationInfo(),\n        trace_metric: traceMetric\n    };\n    return JSON.stringify(perfMetric);\n}\nfunction getApplicationInfo() {\n    return {\n        google_app_id: SettingsService.getInstance().getAppId(),\n        app_instance_id: getIid(),\n        web_app_info: {\n            sdk_version: SDK_VERSION,\n            page_url: Api.getInstance().getUrl(),\n            service_worker_status: getServiceWorkerStatus(),\n            visibility_state: getVisibilityState(),\n            effective_connection_type: getEffectiveConnectionType()\n        },\n        application_process_state: 0\n    };\n}\nfunction convertToKeyValueArray(obj) {\n    var keys = Object.keys(obj);\n    return keys.map(function (key) {\n        return { key: key, value: obj[key] };\n    });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\nfunction isValidMetricName(name, traceName) {\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n        return false;\n    }\n    return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Trace = /** @class */function () {\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\n    function Trace(name, isAuto, traceMeasureName) {\n        if (isAuto === void 0) {\n            isAuto = false;\n        }\n        this.name = name;\n        this.isAuto = isAuto;\n        this.state = 1 /* UNINITIALIZED */;\n        this.customAttributes = {};\n        this.counters = {};\n        this.api = Api.getInstance();\n        this.randomId = Math.floor(Math.random() * 1000000);\n        if (!this.isAuto) {\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n            this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n            if (traceMeasureName) {\n                // For the case of direct user timing traces, no start stop will happen. The measure object\n                // is already available.\n                this.calculateTraceMetrics();\n            }\n        }\n    }\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\n    Trace.prototype.start = function () {\n        if (this.state !== 1 /* UNINITIALIZED */) {\n                throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\n                    traceName: this.name\n                });\n            }\n        this.api.mark(this.traceStartMark);\n        this.state = 2 /* RUNNING */;\n    };\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\n    Trace.prototype.stop = function () {\n        if (this.state !== 2 /* RUNNING */) {\n                throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\n                    traceName: this.name\n                });\n            }\n        this.state = 3 /* TERMINATED */;\n        this.api.mark(this.traceStopMark);\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n        this.calculateTraceMetrics();\n        logTrace(this);\n    };\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\n    Trace.prototype.record = function (startTime, duration, options) {\n        this.durationUs = Math.floor(duration * 1000);\n        this.startTimeUs = Math.floor(startTime * 1000);\n        if (options && options.attributes) {\n            this.customAttributes = tslib_1.__assign({}, options.attributes);\n        }\n        if (options && options.metrics) {\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n                var metric = _a[_i];\n                if (!isNaN(Number(options.metrics[metric]))) {\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n                }\n            }\n        }\n        logTrace(this);\n    };\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\n    Trace.prototype.incrementMetric = function (counter, num) {\n        if (num === void 0) {\n            num = 1;\n        }\n        if (this.counters[counter] === undefined) {\n            this.putMetric(counter, 0);\n        }\n        this.counters[counter] += num;\n    };\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\n    Trace.prototype.putMetric = function (counter, num) {\n        if (isValidMetricName(counter, this.name)) {\n            this.counters[counter] = num;\n        } else {\n            throw ERROR_FACTORY.create(\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\n                customMetricName: counter\n            });\n        }\n    };\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\n    Trace.prototype.getMetric = function (counter) {\n        return this.counters[counter] || 0;\n    };\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\n    Trace.prototype.putAttribute = function (attr, value) {\n        var isValidName = isValidCustomAttributeName(attr);\n        var isValidValue = isValidCustomAttributeValue(value);\n        if (isValidName && isValidValue) {\n            this.customAttributes[attr] = value;\n            return;\n        }\n        // Throw appropriate error when the attribute name or value is invalid.\n        if (!isValidName) {\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\n                attributeName: attr\n            });\n        }\n        if (!isValidValue) {\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\n                attributeValue: value\n            });\n        }\n    };\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\n    Trace.prototype.getAttribute = function (attr) {\n        return this.customAttributes[attr];\n    };\n    Trace.prototype.removeAttribute = function (attr) {\n        if (this.customAttributes[attr] === undefined) {\n            return;\n        }\n        delete this.customAttributes[attr];\n    };\n    Trace.prototype.getAttributes = function () {\n        return tslib_1.__assign({}, this.customAttributes);\n    };\n    Trace.prototype.setStartTime = function (startTime) {\n        this.startTimeUs = startTime;\n    };\n    Trace.prototype.setDuration = function (duration) {\n        this.durationUs = duration;\n    };\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\n    Trace.prototype.calculateTraceMetrics = function () {\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n        if (perfMeasureEntry) {\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n        }\n    };\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n        var route = Api.getInstance().getUrl();\n        if (!route) {\n            return;\n        }\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n        trace.setStartTime(timeOriginUs);\n        // navigationTimings includes only one element.\n        if (navigationTimings && navigationTimings[0]) {\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n        }\n        var FIRST_PAINT = 'first-paint';\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n        if (paintTimings) {\n            var firstPaint = paintTimings.find(function (paintObject) {\n                return paintObject.name === FIRST_PAINT;\n            });\n            if (firstPaint && firstPaint.startTime) {\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n            }\n            var firstContentfulPaint = paintTimings.find(function (paintObject) {\n                return paintObject.name === FIRST_CONTENTFUL_PAINT;\n            });\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n            }\n            if (firstInputDelay) {\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n            }\n        }\n        logTrace(trace);\n    };\n    Trace.createUserTimingTrace = function (measureName) {\n        var trace = new Trace(measureName, false, measureName);\n        logTrace(trace);\n    };\n    return Trace;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createNetworkRequestEntry(entry) {\n    var performanceEntry = entry;\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\n        return;\n    }\n    var timeOrigin = Api.getInstance().getTimeOrigin();\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n    var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\n    // Remove the query params from logged network request url.\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n    var networkRequest = {\n        url: url,\n        responsePayloadBytes: performanceEntry.transferSize,\n        startTimeUs: startTimeUs,\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n        timeToResponseCompletedUs: timeToResponseCompletedUs\n    };\n    logNetworkRequest(networkRequest);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FID_WAIT_TIME_MS = 5000;\nfunction setupOobResources() {\n    // Do not initialize unless iid is available.\n    if (!getIid()) {\n        return;\n    }\n    // The load event might not have fired yet, and that means performance navigation timing\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\n    setTimeout(function () {\n        return setupOobTraces();\n    }, 0);\n    setTimeout(function () {\n        return setupNetworkRequests();\n    }, 0);\n    setTimeout(function () {\n        return setupUserTimingTraces();\n    }, 0);\n}\nfunction setupNetworkRequests() {\n    var api = Api.getInstance();\n    var resources = api.getEntriesByType('resource');\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n        var resource = resources_1[_i];\n        createNetworkRequestEntry(resource);\n    }\n    api.setupObserver('resource', createNetworkRequestEntry);\n}\nfunction setupOobTraces() {\n    var api = Api.getInstance();\n    var navigationTimings = api.getEntriesByType('navigation');\n    var paintTimings = api.getEntriesByType('paint');\n    // If First Input Desly polyfill is added to the page, report the fid value.\n    // https://github.com/GoogleChromeLabs/first-input-delay\n    if (api.onFirstInputDelay) {\n        // If the fid call back is not called for certain time, continue without it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var timeoutId_1 = setTimeout(function () {\n            Trace.createOobTrace(navigationTimings, paintTimings);\n            timeoutId_1 = undefined;\n        }, FID_WAIT_TIME_MS);\n        api.onFirstInputDelay(function (fid) {\n            if (timeoutId_1) {\n                clearTimeout(timeoutId_1);\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\n            }\n        });\n    } else {\n        Trace.createOobTrace(navigationTimings, paintTimings);\n    }\n}\nfunction setupUserTimingTraces() {\n    var api = Api.getInstance();\n    // Run through the measure performance entries collected up to this point.\n    var measures = api.getEntriesByType('measure');\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n        var measure = measures_1[_i];\n        createUserTimingTrace(measure);\n    }\n    // Setup an observer to capture the measures from this point on.\n    api.setupObserver('measure', createUserTimingTrace);\n}\nfunction createUserTimingTrace(measure) {\n    var measureName = measure.name;\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n        return;\n    }\n    Trace.createUserTimingTrace(measureName);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PerformanceController = /** @class */function () {\n    function PerformanceController(app) {\n        this.app = app;\n        if (Api.getInstance().requiredApisAvailable()) {\n            getInitializationPromise().then(setupOobResources, setupOobResources);\n        } else {\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n        }\n    }\n    PerformanceController.prototype.trace = function (name) {\n        return new Trace(name);\n    };\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n        get: function get() {\n            return SettingsService.getInstance().instrumentationEnabled;\n        },\n        set: function set(val) {\n            SettingsService.getInstance().instrumentationEnabled = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n        get: function get() {\n            return SettingsService.getInstance().dataCollectionEnabled;\n        },\n        set: function set(val) {\n            SettingsService.getInstance().dataCollectionEnabled = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PerformanceController;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nfunction registerPerformance(instance) {\n    var factoryMethod = function factoryMethod(app) {\n        if (app.name !== DEFAULT_ENTRY_NAME) {\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\n        }\n        if (typeof window === 'undefined') {\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\n        }\n        setupApi(window);\n        SettingsService.getInstance().firebaseAppInstance = app;\n        return new PerformanceController(app);\n    };\n    // Register performance with firebase-app.\n    var namespaceExports = {};\n    instance.INTERNAL.registerService('performance', factoryMethod, namespaceExports);\n}\nregisterPerformance(firebase);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n\n/***/ }),\n\n/***/ \"pMz5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.idb = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function (resolve, reject) {\n      request.onsuccess = function () {\n        resolve(request.result);\n      };\n\n      request.onerror = function () {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function (resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function (value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function (prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function get() {\n          return this[targetProp][prop];\n        },\n        set: function set(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function (prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function () {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', ['name', 'keyPath', 'multiEntry', 'unique']);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, ['get', 'getKey', 'getAll', 'getAllKeys', 'count']);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, ['openCursor', 'openKeyCursor']);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', ['direction', 'key', 'primaryKey', 'value']);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, ['update', 'delete']);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function (methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function () {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function () {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function (value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function () {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function () {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', ['name', 'keyPath', 'indexNames', 'autoIncrement']);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, ['put', 'add', 'delete', 'clear', 'get', 'getAll', 'getKey', 'getAllKeys', 'count']);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, ['openCursor', 'openKeyCursor']);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, ['deleteIndex']);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function (resolve, reject) {\n      idbTransaction.oncomplete = function () {\n        resolve();\n      };\n      idbTransaction.onerror = function () {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function () {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function () {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', ['objectStoreNames', 'mode']);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, ['abort']);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function () {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', ['name', 'version', 'objectStoreNames']);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, ['deleteObjectStore', 'close']);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function () {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', ['name', 'version', 'objectStoreNames']);\n\n  proxyMethods(DB, '_db', IDBDatabase, ['close']);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function (funcName) {\n    [ObjectStore, Index].forEach(function (Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function () {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function () {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function (Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function (query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function (resolve) {\n        instance.iterateCursor(query, function (cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function (event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function (db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.chunk.8c626.js","import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spread, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar version = \"0.2.7\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration values.',\r\n    _a[\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */] = 'Could not register Firebase Installation.',\r\n    _a[\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */] = 'Could not generate Auth Token.',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\r\n    }\r\n    var appName = app.name;\r\n    var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n    if (!appName || !projectId || !apiKey || !appId) {\r\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\r\n    }\r\n    return { appName: appName, projectId: projectId, apiKey: apiKey, appId: appId };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallation(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (newValue === oldValue) {\r\n                        return [2 /*return*/, newValue];\r\n                    }\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the registration\r\n * and return an InProgressInstallationEntry.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallation(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                        throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\r\n                    }\r\n                    return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        if (hasInstallationRequestTimedOut(oldEntry)) {\r\n            return {\r\n                fid: oldEntry.fid,\r\n                registrationStatus: 0 /* NOT_STARTED */\r\n            };\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthToken(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _a.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _a.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(appConfig);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n */\r\nfunction waitUntilAuthTokenRequest(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        throw ERROR_FACTORY.create(\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */);\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign({}, oldEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthToken(appConfig, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign({}, installationEntry, { authToken: authToken });\r\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign({}, installationEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign({}, oldEntry, { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        // Suppress registration errors as they are not a problem for getId.\r\n                        registrationPromise.catch(function () { });\r\n                    }\r\n                    if (installationEntry.registrationStatus === 2 /* COMPLETED */) {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed. Suppress errors as they are not relevant to getId.\r\n                        refreshAuthToken(appConfig).catch(function () { });\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, completeInstallationRegistration(appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    // At this point we either have a Registered Installation in the DB, or we've\r\n                    // already thrown an error.\r\n                    return [2 /*return*/, refreshAuthToken(appConfig)];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    if (installationEntry.registrationStatus !== 2 /* COMPLETED */) {\r\n                        // Installation ID can't be registered.\r\n                        throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\r\n                    }\r\n                    _b.label = 4;\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation$1(app) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = extractAppConfig(app);\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallation(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    var factoryMethod = function (app) {\r\n        // Throws if app isn't configured properly.\r\n        extractAppConfig(app);\r\n        return {\r\n            app: app,\r\n            getId: function () { return getId(app); },\r\n            getToken: function () { return getToken(app); },\r\n            delete: function () { return deleteInstallation$1(app); }\r\n        };\r\n    };\r\n    instance.INTERNAL.registerService(installationsName, factoryMethod);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@firebase/installations/dist/index.esm.js","import '@firebase/performance';\n//# sourceMappingURL=index.esm.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/firebase/performance/dist/index.esm.js","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\nrequire('@firebase/installations');\nvar logger$1 = require('@firebase/logger');\n\nvar version = \"0.2.19\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n    VisibilityState[VisibilityState[\"PRERENDER\"] = 3] = \"PRERENDER\";\r\n    VisibilityState[VisibilityState[\"UNLOADED\"] = 4] = \"UNLOADED\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        case 'prerender':\r\n            return VisibilityState.PRERENDER;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar SECONDARY_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(function (config) { return processConfig(config); })\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */ function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    if (!config) {\r\n        return;\r\n    }\r\n    var localStorage = Api.getInstance().localStorage;\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: FIS_AUTH_PREFIX + \" \" + authToken\r\n            },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        // Capture a snapshot of the queue and empty the \"official queue\".\r\n        var staged = queue.slice();\r\n        queue = [];\r\n        /* eslint-disable camelcase */\r\n        // We will pass the JSON serialized event to the backend.\r\n        var log_event = staged.map(function (evt) { return ({\r\n            source_extension_json: evt.message,\r\n            event_time_ms: String(evt.eventTime)\r\n        }); });\r\n        var data = {\r\n            request_time_ms: String(Date.now()),\r\n            client_info: {\r\n                client_type: 1,\r\n                js_client_info: {}\r\n            },\r\n            log_source: SettingsService.getInstance().logSource,\r\n            log_event: log_event\r\n        };\r\n        /* eslint-enable camelcase */\r\n        fetch(SettingsService.getInstance().logEndPointUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(function (res) {\r\n            if (!res.ok) {\r\n                consoleLogger.info('Call to Firebase backend failed.');\r\n            }\r\n            return res.json();\r\n        })\r\n            .then(function (res) {\r\n            var wait = Number(res.next_request_wait_millis);\r\n            // Find the next call wait time from the response.\r\n            var requestOffset = isNaN(wait)\r\n                ? DEFAULT_SEND_INTERVAL_MS\r\n                : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\r\n            remainingTries = DEFAULT_REMAINING_TRIES;\r\n            // Schedule the next process.\r\n            processQueue(requestOffset);\r\n        })\r\n            .catch(function () {\r\n            /**\r\n             * If the request fails for some reason, add the events that were attempted\r\n             * back to the primary queue to retry later.\r\n             */\r\n            queue = staged.concat(queue);\r\n            remainingTries--;\r\n            consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n            processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        });\r\n    }, timeOffset);\r\n}\r\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = queue.concat([evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction ccHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    // The underscores for loggerInstance and level parameters are added to avoid the\r\n    // noUnusedParameters related error.\r\n    return function (_loggerInstance, _level) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction getLogger() {\r\n    if (logger) {\r\n        return logger;\r\n    }\r\n    var ccLogger = ccHandler(serializer);\r\n    logger = new logger$1.Logger('@firebase/performance/cc');\r\n    logger.logHandler = ccLogger;\r\n    return logger;\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (getIid()) {\r\n        setTimeout(function () { return getLogger().log(trace, 1 /* Trace */); }, 0);\r\n    }\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\r\n    if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return getLogger().log(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = convertToKeyValueArray(trace.counters);\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\r\nfunction convertToKeyValueArray(obj) {\r\n    var keys = Object.keys(obj);\r\n    return keys.map(function (key) { return ({ key: key, value: obj[key] }); });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib_1.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, num) {\r\n        if (num === void 0) { num = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, 0);\r\n        }\r\n        this.counters[counter] += num;\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, num) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = num;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib_1.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            getInitializationPromise().then(setupOobResources, setupOobResources);\r\n        }\r\n        else {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    var namespaceExports = {};\r\n    instance.INTERNAL.registerService('performance', factoryMethod, namespaceExports);\r\n}\r\nregisterPerformance(firebase);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@firebase/performance/dist/index.cjs.js","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@firebase/installations/node_modules/idb/build/idb.js"],"sourceRoot":""}